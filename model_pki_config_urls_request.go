/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// PkiConfigUrlsRequest struct for PkiConfigUrlsRequest
type PkiConfigUrlsRequest struct {
	// Comma-separated list of URLs to be used for the CRL distribution points attribute. See also RFC 5280 Section 4.2.1.13.
	CrlDistributionPoints []string `json:"crl_distribution_points,omitempty"`
	// Comma-separated list of URLs to be used for the issuing certificate attribute. See also RFC 5280 Section 4.2.2.1.
	IssuingCertificates []string `json:"issuing_certificates,omitempty"`
	// Comma-separated list of URLs to be used for the OCSP servers attribute. See also RFC 5280 Section 4.2.2.1.
	OcspServers []string `json:"ocsp_servers,omitempty"`
}

// NewPkiConfigUrlsRequest instantiates a new PkiConfigUrlsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiConfigUrlsRequest() *PkiConfigUrlsRequest {
	this := PkiConfigUrlsRequest{}
	return &this
}

// NewPkiConfigUrlsRequestWithDefaults instantiates a new PkiConfigUrlsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiConfigUrlsRequestWithDefaults() *PkiConfigUrlsRequest {
	this := PkiConfigUrlsRequest{}
	return &this
}

// GetCrlDistributionPoints returns the CrlDistributionPoints field value if set, zero value otherwise.
func (o *PkiConfigUrlsRequest) GetCrlDistributionPoints() []string {
	if o == nil || o.CrlDistributionPoints == nil {
		var ret []string
		return ret
	}
	return o.CrlDistributionPoints
}

// GetCrlDistributionPointsOk returns a tuple with the CrlDistributionPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiConfigUrlsRequest) GetCrlDistributionPointsOk() ([]string, bool) {
	if o == nil || o.CrlDistributionPoints == nil {
		return nil, false
	}
	return o.CrlDistributionPoints, true
}

// HasCrlDistributionPoints returns a boolean if a field has been set.
func (o *PkiConfigUrlsRequest) HasCrlDistributionPoints() bool {
	if o != nil && o.CrlDistributionPoints != nil {
		return true
	}

	return false
}

// SetCrlDistributionPoints gets a reference to the given []string and assigns it to the CrlDistributionPoints field.
func (o *PkiConfigUrlsRequest) SetCrlDistributionPoints(v []string) {
	o.CrlDistributionPoints = v
}

// GetIssuingCertificates returns the IssuingCertificates field value if set, zero value otherwise.
func (o *PkiConfigUrlsRequest) GetIssuingCertificates() []string {
	if o == nil || o.IssuingCertificates == nil {
		var ret []string
		return ret
	}
	return o.IssuingCertificates
}

// GetIssuingCertificatesOk returns a tuple with the IssuingCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiConfigUrlsRequest) GetIssuingCertificatesOk() ([]string, bool) {
	if o == nil || o.IssuingCertificates == nil {
		return nil, false
	}
	return o.IssuingCertificates, true
}

// HasIssuingCertificates returns a boolean if a field has been set.
func (o *PkiConfigUrlsRequest) HasIssuingCertificates() bool {
	if o != nil && o.IssuingCertificates != nil {
		return true
	}

	return false
}

// SetIssuingCertificates gets a reference to the given []string and assigns it to the IssuingCertificates field.
func (o *PkiConfigUrlsRequest) SetIssuingCertificates(v []string) {
	o.IssuingCertificates = v
}

// GetOcspServers returns the OcspServers field value if set, zero value otherwise.
func (o *PkiConfigUrlsRequest) GetOcspServers() []string {
	if o == nil || o.OcspServers == nil {
		var ret []string
		return ret
	}
	return o.OcspServers
}

// GetOcspServersOk returns a tuple with the OcspServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiConfigUrlsRequest) GetOcspServersOk() ([]string, bool) {
	if o == nil || o.OcspServers == nil {
		return nil, false
	}
	return o.OcspServers, true
}

// HasOcspServers returns a boolean if a field has been set.
func (o *PkiConfigUrlsRequest) HasOcspServers() bool {
	if o != nil && o.OcspServers != nil {
		return true
	}

	return false
}

// SetOcspServers gets a reference to the given []string and assigns it to the OcspServers field.
func (o *PkiConfigUrlsRequest) SetOcspServers(v []string) {
	o.OcspServers = v
}

func (o PkiConfigUrlsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CrlDistributionPoints != nil {
		toSerialize["crl_distribution_points"] = o.CrlDistributionPoints
	}
	if o.IssuingCertificates != nil {
		toSerialize["issuing_certificates"] = o.IssuingCertificates
	}
	if o.OcspServers != nil {
		toSerialize["ocsp_servers"] = o.OcspServers
	}
	return json.Marshal(toSerialize)
}

type NullablePkiConfigUrlsRequest struct {
	value *PkiConfigUrlsRequest
	isSet bool
}

func (v NullablePkiConfigUrlsRequest) Get() *PkiConfigUrlsRequest {
	return v.value
}

func (v *NullablePkiConfigUrlsRequest) Set(val *PkiConfigUrlsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiConfigUrlsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiConfigUrlsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiConfigUrlsRequest(val *PkiConfigUrlsRequest) *NullablePkiConfigUrlsRequest {
	return &NullablePkiConfigUrlsRequest{value: val, isSet: true}
}

func (v NullablePkiConfigUrlsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiConfigUrlsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


