/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// IdentityOidcConfigRequest struct for IdentityOidcConfigRequest
type IdentityOidcConfigRequest struct {
	// Issuer URL to be used in the iss claim of the token. If not set, Vault's app_addr will be used.
	Issuer *string `json:"issuer,omitempty"`
}

// NewIdentityOidcConfigRequest instantiates a new IdentityOidcConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcConfigRequest() *IdentityOidcConfigRequest {
	this := IdentityOidcConfigRequest{}
	return &this
}

// NewIdentityOidcConfigRequestWithDefaults instantiates a new IdentityOidcConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcConfigRequestWithDefaults() *IdentityOidcConfigRequest {
	this := IdentityOidcConfigRequest{}
	return &this
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *IdentityOidcConfigRequest) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcConfigRequest) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *IdentityOidcConfigRequest) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *IdentityOidcConfigRequest) SetIssuer(v string) {
	o.Issuer = &v
}

func (o IdentityOidcConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcConfigRequest struct {
	value *IdentityOidcConfigRequest
	isSet bool
}

func (v NullableIdentityOidcConfigRequest) Get() *IdentityOidcConfigRequest {
	return v.value
}

func (v *NullableIdentityOidcConfigRequest) Set(val *IdentityOidcConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcConfigRequest(val *IdentityOidcConfigRequest) *NullableIdentityOidcConfigRequest {
	return &NullableIdentityOidcConfigRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


