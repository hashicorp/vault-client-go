/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// GcpkmsVerifyRequest struct for GcpkmsVerifyRequest
type GcpkmsVerifyRequest struct {
	// Digest to verify. This digest must use the same SHA algorithm as the underlying Cloud KMS key. The digest must be the base64-encoded binary value. This field is required.
	Digest *string `json:"digest,omitempty"`
	// Integer version of the crypto key version to use for verification. This field is required.
	KeyVersion *int32 `json:"key_version,omitempty"`
	// Base64-encoded signature to use for verification. This field is required.
	Signature *string `json:"signature,omitempty"`
}

// NewGcpkmsVerifyRequest instantiates a new GcpkmsVerifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsVerifyRequest() *GcpkmsVerifyRequest {
	this := GcpkmsVerifyRequest{}
	return &this
}

// NewGcpkmsVerifyRequestWithDefaults instantiates a new GcpkmsVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsVerifyRequestWithDefaults() *GcpkmsVerifyRequest {
	this := GcpkmsVerifyRequest{}
	return &this
}

// GetDigest returns the Digest field value if set, zero value otherwise.
func (o *GcpkmsVerifyRequest) GetDigest() string {
	if o == nil || o.Digest == nil {
		var ret string
		return ret
	}
	return *o.Digest
}

// GetDigestOk returns a tuple with the Digest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsVerifyRequest) GetDigestOk() (*string, bool) {
	if o == nil || o.Digest == nil {
		return nil, false
	}
	return o.Digest, true
}

// HasDigest returns a boolean if a field has been set.
func (o *GcpkmsVerifyRequest) HasDigest() bool {
	if o != nil && o.Digest != nil {
		return true
	}

	return false
}

// SetDigest gets a reference to the given string and assigns it to the Digest field.
func (o *GcpkmsVerifyRequest) SetDigest(v string) {
	o.Digest = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *GcpkmsVerifyRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsVerifyRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *GcpkmsVerifyRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *GcpkmsVerifyRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *GcpkmsVerifyRequest) GetSignature() string {
	if o == nil || o.Signature == nil {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsVerifyRequest) GetSignatureOk() (*string, bool) {
	if o == nil || o.Signature == nil {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *GcpkmsVerifyRequest) HasSignature() bool {
	if o != nil && o.Signature != nil {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *GcpkmsVerifyRequest) SetSignature(v string) {
	o.Signature = &v
}

func (o GcpkmsVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Digest != nil {
		toSerialize["digest"] = o.Digest
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	if o.Signature != nil {
		toSerialize["signature"] = o.Signature
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsVerifyRequest struct {
	value *GcpkmsVerifyRequest
	isSet bool
}

func (v NullableGcpkmsVerifyRequest) Get() *GcpkmsVerifyRequest {
	return v.value
}

func (v *NullableGcpkmsVerifyRequest) Set(val *GcpkmsVerifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsVerifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsVerifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsVerifyRequest(val *GcpkmsVerifyRequest) *NullableGcpkmsVerifyRequest {
	return &NullableGcpkmsVerifyRequest{value: val, isSet: true}
}

func (v NullableGcpkmsVerifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsVerifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


