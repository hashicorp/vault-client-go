/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// TerraformConfigRequest struct for TerraformConfigRequest
type TerraformConfigRequest struct {
	// The address to access Terraform Cloud or Enterprise. Default is \"https://app.terraform.io\".
	Address *string `json:"address,omitempty"`
	// The base path for the Terraform Cloud or Enterprise API. Default is \"/api/v2/\".
	BasePath *string `json:"base_path,omitempty"`
	// The token to access Terraform Cloud
	Token string `json:"token"`
}

// NewTerraformConfigRequest instantiates a new TerraformConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerraformConfigRequest(token string) *TerraformConfigRequest {
	this := TerraformConfigRequest{}
	var address string = "https://app.terraform.io"
	this.Address = &address
	var basePath string = "/api/v2/"
	this.BasePath = &basePath
	this.Token = token
	return &this
}

// NewTerraformConfigRequestWithDefaults instantiates a new TerraformConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerraformConfigRequestWithDefaults() *TerraformConfigRequest {
	this := TerraformConfigRequest{}
	var address string = "https://app.terraform.io"
	this.Address = &address
	var basePath string = "/api/v2/"
	this.BasePath = &basePath
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *TerraformConfigRequest) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformConfigRequest) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *TerraformConfigRequest) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *TerraformConfigRequest) SetAddress(v string) {
	o.Address = &v
}

// GetBasePath returns the BasePath field value if set, zero value otherwise.
func (o *TerraformConfigRequest) GetBasePath() string {
	if o == nil || o.BasePath == nil {
		var ret string
		return ret
	}
	return *o.BasePath
}

// GetBasePathOk returns a tuple with the BasePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformConfigRequest) GetBasePathOk() (*string, bool) {
	if o == nil || o.BasePath == nil {
		return nil, false
	}
	return o.BasePath, true
}

// HasBasePath returns a boolean if a field has been set.
func (o *TerraformConfigRequest) HasBasePath() bool {
	if o != nil && o.BasePath != nil {
		return true
	}

	return false
}

// SetBasePath gets a reference to the given string and assigns it to the BasePath field.
func (o *TerraformConfigRequest) SetBasePath(v string) {
	o.BasePath = &v
}

// GetToken returns the Token field value
func (o *TerraformConfigRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *TerraformConfigRequest) GetTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *TerraformConfigRequest) SetToken(v string) {
	o.Token = v
}

func (o TerraformConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.BasePath != nil {
		toSerialize["base_path"] = o.BasePath
	}
	if true {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableTerraformConfigRequest struct {
	value *TerraformConfigRequest
	isSet bool
}

func (v NullableTerraformConfigRequest) Get() *TerraformConfigRequest {
	return v.value
}

func (v *NullableTerraformConfigRequest) Set(val *TerraformConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTerraformConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTerraformConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerraformConfigRequest(val *TerraformConfigRequest) *NullableTerraformConfigRequest {
	return &NullableTerraformConfigRequest{value: val, isSet: true}
}

func (v NullableTerraformConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerraformConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


