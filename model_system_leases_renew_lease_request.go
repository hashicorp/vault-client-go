/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// SystemLeasesRenewLeaseRequest struct for SystemLeasesRenewLeaseRequest
type SystemLeasesRenewLeaseRequest struct {
	// The desired increment in seconds to the lease
	Increment *int32 `json:"increment,omitempty"`
	// The lease identifier to renew. This is included with a lease.
	LeaseId *string `json:"lease_id,omitempty"`
}

// NewSystemLeasesRenewLeaseRequest instantiates a new SystemLeasesRenewLeaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemLeasesRenewLeaseRequest() *SystemLeasesRenewLeaseRequest {
	this := SystemLeasesRenewLeaseRequest{}
	return &this
}

// NewSystemLeasesRenewLeaseRequestWithDefaults instantiates a new SystemLeasesRenewLeaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemLeasesRenewLeaseRequestWithDefaults() *SystemLeasesRenewLeaseRequest {
	this := SystemLeasesRenewLeaseRequest{}
	return &this
}

// GetIncrement returns the Increment field value if set, zero value otherwise.
func (o *SystemLeasesRenewLeaseRequest) GetIncrement() int32 {
	if o == nil || o.Increment == nil {
		var ret int32
		return ret
	}
	return *o.Increment
}

// GetIncrementOk returns a tuple with the Increment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRenewLeaseRequest) GetIncrementOk() (*int32, bool) {
	if o == nil || o.Increment == nil {
		return nil, false
	}
	return o.Increment, true
}

// HasIncrement returns a boolean if a field has been set.
func (o *SystemLeasesRenewLeaseRequest) HasIncrement() bool {
	if o != nil && o.Increment != nil {
		return true
	}

	return false
}

// SetIncrement gets a reference to the given int32 and assigns it to the Increment field.
func (o *SystemLeasesRenewLeaseRequest) SetIncrement(v int32) {
	o.Increment = &v
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *SystemLeasesRenewLeaseRequest) GetLeaseId() string {
	if o == nil || o.LeaseId == nil {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRenewLeaseRequest) GetLeaseIdOk() (*string, bool) {
	if o == nil || o.LeaseId == nil {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *SystemLeasesRenewLeaseRequest) HasLeaseId() bool {
	if o != nil && o.LeaseId != nil {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *SystemLeasesRenewLeaseRequest) SetLeaseId(v string) {
	o.LeaseId = &v
}

func (o SystemLeasesRenewLeaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Increment != nil {
		toSerialize["increment"] = o.Increment
	}
	if o.LeaseId != nil {
		toSerialize["lease_id"] = o.LeaseId
	}
	return json.Marshal(toSerialize)
}

type NullableSystemLeasesRenewLeaseRequest struct {
	value *SystemLeasesRenewLeaseRequest
	isSet bool
}

func (v NullableSystemLeasesRenewLeaseRequest) Get() *SystemLeasesRenewLeaseRequest {
	return v.value
}

func (v *NullableSystemLeasesRenewLeaseRequest) Set(val *SystemLeasesRenewLeaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemLeasesRenewLeaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemLeasesRenewLeaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemLeasesRenewLeaseRequest(val *SystemLeasesRenewLeaseRequest) *NullableSystemLeasesRenewLeaseRequest {
	return &NullableSystemLeasesRenewLeaseRequest{value: val, isSet: true}
}

func (v NullableSystemLeasesRenewLeaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemLeasesRenewLeaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


