/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// ApproleRoleBindSecretIdRequest struct for ApproleRoleBindSecretIdRequest
type ApproleRoleBindSecretIdRequest struct {
	// Impose secret_id to be presented when logging in using this role.
	BindSecretId *bool `json:"bind_secret_id,omitempty"`
}

// NewApproleRoleBindSecretIdRequest instantiates a new ApproleRoleBindSecretIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleBindSecretIdRequest() *ApproleRoleBindSecretIdRequest {
	this := ApproleRoleBindSecretIdRequest{}
	var bindSecretId bool = true
	this.BindSecretId = &bindSecretId
	return &this
}

// NewApproleRoleBindSecretIdRequestWithDefaults instantiates a new ApproleRoleBindSecretIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleBindSecretIdRequestWithDefaults() *ApproleRoleBindSecretIdRequest {
	this := ApproleRoleBindSecretIdRequest{}
	var bindSecretId bool = true
	this.BindSecretId = &bindSecretId
	return &this
}

// GetBindSecretId returns the BindSecretId field value if set, zero value otherwise.
func (o *ApproleRoleBindSecretIdRequest) GetBindSecretId() bool {
	if o == nil || o.BindSecretId == nil {
		var ret bool
		return ret
	}
	return *o.BindSecretId
}

// GetBindSecretIdOk returns a tuple with the BindSecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleBindSecretIdRequest) GetBindSecretIdOk() (*bool, bool) {
	if o == nil || o.BindSecretId == nil {
		return nil, false
	}
	return o.BindSecretId, true
}

// HasBindSecretId returns a boolean if a field has been set.
func (o *ApproleRoleBindSecretIdRequest) HasBindSecretId() bool {
	if o != nil && o.BindSecretId != nil {
		return true
	}

	return false
}

// SetBindSecretId gets a reference to the given bool and assigns it to the BindSecretId field.
func (o *ApproleRoleBindSecretIdRequest) SetBindSecretId(v bool) {
	o.BindSecretId = &v
}

func (o ApproleRoleBindSecretIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BindSecretId != nil {
		toSerialize["bind_secret_id"] = o.BindSecretId
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleBindSecretIdRequest struct {
	value *ApproleRoleBindSecretIdRequest
	isSet bool
}

func (v NullableApproleRoleBindSecretIdRequest) Get() *ApproleRoleBindSecretIdRequest {
	return v.value
}

func (v *NullableApproleRoleBindSecretIdRequest) Set(val *ApproleRoleBindSecretIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleBindSecretIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleBindSecretIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleBindSecretIdRequest(val *ApproleRoleBindSecretIdRequest) *NullableApproleRoleBindSecretIdRequest {
	return &NullableApproleRoleBindSecretIdRequest{value: val, isSet: true}
}

func (v NullableApproleRoleBindSecretIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleBindSecretIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


