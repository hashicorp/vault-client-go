/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// PkiJsonRequest struct for PkiJsonRequest
type PkiJsonRequest struct {
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName *string `json:"issuer_name,omitempty"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef *string `json:"issuer_ref,omitempty"`
	// Behavior of leaf's NotAfter fields: \"err\" to error if the computed NotAfter date exceeds that of this issuer; \"truncate\" to silently truncate to that of this issuer; or \"permit\" to allow this issuance to succeed (with NotAfter exceeding that of an issuer). Note that not all values will results in certificates that can be validated through the entire validity period. It is suggested to use \"truncate\" for intermediate CAs and \"permit\" only for root CAs.
	LeafNotAfterBehavior *string `json:"leaf_not_after_behavior,omitempty"`
	// Chain of issuer references to use to build this issuer's computed CAChain field, when non-empty.
	ManualChain []string `json:"manual_chain,omitempty"`
	// Comma-separated list (or string slice) of usages for this issuer; valid values are \"read-only\", \"issuing-certificates\", and \"crl-signing\". Multiple values may be specified. Read-only is implicit and always set.
	Usage []string `json:"usage,omitempty"`
}

// NewPkiJsonRequest instantiates a new PkiJsonRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiJsonRequest() *PkiJsonRequest {
	this := PkiJsonRequest{}
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var leafNotAfterBehavior string = "err"
	this.LeafNotAfterBehavior = &leafNotAfterBehavior
	return &this
}

// NewPkiJsonRequestWithDefaults instantiates a new PkiJsonRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiJsonRequestWithDefaults() *PkiJsonRequest {
	this := PkiJsonRequest{}
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var leafNotAfterBehavior string = "err"
	this.LeafNotAfterBehavior = &leafNotAfterBehavior
	return &this
}

// GetIssuerName returns the IssuerName field value if set, zero value otherwise.
func (o *PkiJsonRequest) GetIssuerName() string {
	if o == nil || o.IssuerName == nil {
		var ret string
		return ret
	}
	return *o.IssuerName
}

// GetIssuerNameOk returns a tuple with the IssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiJsonRequest) GetIssuerNameOk() (*string, bool) {
	if o == nil || o.IssuerName == nil {
		return nil, false
	}
	return o.IssuerName, true
}

// HasIssuerName returns a boolean if a field has been set.
func (o *PkiJsonRequest) HasIssuerName() bool {
	if o != nil && o.IssuerName != nil {
		return true
	}

	return false
}

// SetIssuerName gets a reference to the given string and assigns it to the IssuerName field.
func (o *PkiJsonRequest) SetIssuerName(v string) {
	o.IssuerName = &v
}

// GetIssuerRef returns the IssuerRef field value if set, zero value otherwise.
func (o *PkiJsonRequest) GetIssuerRef() string {
	if o == nil || o.IssuerRef == nil {
		var ret string
		return ret
	}
	return *o.IssuerRef
}

// GetIssuerRefOk returns a tuple with the IssuerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiJsonRequest) GetIssuerRefOk() (*string, bool) {
	if o == nil || o.IssuerRef == nil {
		return nil, false
	}
	return o.IssuerRef, true
}

// HasIssuerRef returns a boolean if a field has been set.
func (o *PkiJsonRequest) HasIssuerRef() bool {
	if o != nil && o.IssuerRef != nil {
		return true
	}

	return false
}

// SetIssuerRef gets a reference to the given string and assigns it to the IssuerRef field.
func (o *PkiJsonRequest) SetIssuerRef(v string) {
	o.IssuerRef = &v
}

// GetLeafNotAfterBehavior returns the LeafNotAfterBehavior field value if set, zero value otherwise.
func (o *PkiJsonRequest) GetLeafNotAfterBehavior() string {
	if o == nil || o.LeafNotAfterBehavior == nil {
		var ret string
		return ret
	}
	return *o.LeafNotAfterBehavior
}

// GetLeafNotAfterBehaviorOk returns a tuple with the LeafNotAfterBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiJsonRequest) GetLeafNotAfterBehaviorOk() (*string, bool) {
	if o == nil || o.LeafNotAfterBehavior == nil {
		return nil, false
	}
	return o.LeafNotAfterBehavior, true
}

// HasLeafNotAfterBehavior returns a boolean if a field has been set.
func (o *PkiJsonRequest) HasLeafNotAfterBehavior() bool {
	if o != nil && o.LeafNotAfterBehavior != nil {
		return true
	}

	return false
}

// SetLeafNotAfterBehavior gets a reference to the given string and assigns it to the LeafNotAfterBehavior field.
func (o *PkiJsonRequest) SetLeafNotAfterBehavior(v string) {
	o.LeafNotAfterBehavior = &v
}

// GetManualChain returns the ManualChain field value if set, zero value otherwise.
func (o *PkiJsonRequest) GetManualChain() []string {
	if o == nil || o.ManualChain == nil {
		var ret []string
		return ret
	}
	return o.ManualChain
}

// GetManualChainOk returns a tuple with the ManualChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiJsonRequest) GetManualChainOk() ([]string, bool) {
	if o == nil || o.ManualChain == nil {
		return nil, false
	}
	return o.ManualChain, true
}

// HasManualChain returns a boolean if a field has been set.
func (o *PkiJsonRequest) HasManualChain() bool {
	if o != nil && o.ManualChain != nil {
		return true
	}

	return false
}

// SetManualChain gets a reference to the given []string and assigns it to the ManualChain field.
func (o *PkiJsonRequest) SetManualChain(v []string) {
	o.ManualChain = v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *PkiJsonRequest) GetUsage() []string {
	if o == nil || o.Usage == nil {
		var ret []string
		return ret
	}
	return o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiJsonRequest) GetUsageOk() ([]string, bool) {
	if o == nil || o.Usage == nil {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *PkiJsonRequest) HasUsage() bool {
	if o != nil && o.Usage != nil {
		return true
	}

	return false
}

// SetUsage gets a reference to the given []string and assigns it to the Usage field.
func (o *PkiJsonRequest) SetUsage(v []string) {
	o.Usage = v
}

func (o PkiJsonRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IssuerName != nil {
		toSerialize["issuer_name"] = o.IssuerName
	}
	if o.IssuerRef != nil {
		toSerialize["issuer_ref"] = o.IssuerRef
	}
	if o.LeafNotAfterBehavior != nil {
		toSerialize["leaf_not_after_behavior"] = o.LeafNotAfterBehavior
	}
	if o.ManualChain != nil {
		toSerialize["manual_chain"] = o.ManualChain
	}
	if o.Usage != nil {
		toSerialize["usage"] = o.Usage
	}
	return json.Marshal(toSerialize)
}

type NullablePkiJsonRequest struct {
	value *PkiJsonRequest
	isSet bool
}

func (v NullablePkiJsonRequest) Get() *PkiJsonRequest {
	return v.value
}

func (v *NullablePkiJsonRequest) Set(val *PkiJsonRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiJsonRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiJsonRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiJsonRequest(val *PkiJsonRequest) *NullablePkiJsonRequest {
	return &NullablePkiJsonRequest{value: val, isSet: true}
}

func (v NullablePkiJsonRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiJsonRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


