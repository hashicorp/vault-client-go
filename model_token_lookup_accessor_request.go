/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// TokenLookupAccessorRequest struct for TokenLookupAccessorRequest
type TokenLookupAccessorRequest struct {
	// Accessor of the token to look up (request body)
	Accessor *string `json:"accessor,omitempty"`
}

// NewTokenLookupAccessorRequest instantiates a new TokenLookupAccessorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenLookupAccessorRequest() *TokenLookupAccessorRequest {
	this := TokenLookupAccessorRequest{}
	return &this
}

// NewTokenLookupAccessorRequestWithDefaults instantiates a new TokenLookupAccessorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenLookupAccessorRequestWithDefaults() *TokenLookupAccessorRequest {
	this := TokenLookupAccessorRequest{}
	return &this
}

// GetAccessor returns the Accessor field value if set, zero value otherwise.
func (o *TokenLookupAccessorRequest) GetAccessor() string {
	if o == nil || o.Accessor == nil {
		var ret string
		return ret
	}
	return *o.Accessor
}

// GetAccessorOk returns a tuple with the Accessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenLookupAccessorRequest) GetAccessorOk() (*string, bool) {
	if o == nil || o.Accessor == nil {
		return nil, false
	}
	return o.Accessor, true
}

// HasAccessor returns a boolean if a field has been set.
func (o *TokenLookupAccessorRequest) HasAccessor() bool {
	if o != nil && o.Accessor != nil {
		return true
	}

	return false
}

// SetAccessor gets a reference to the given string and assigns it to the Accessor field.
func (o *TokenLookupAccessorRequest) SetAccessor(v string) {
	o.Accessor = &v
}

func (o TokenLookupAccessorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accessor != nil {
		toSerialize["accessor"] = o.Accessor
	}
	return json.Marshal(toSerialize)
}

type NullableTokenLookupAccessorRequest struct {
	value *TokenLookupAccessorRequest
	isSet bool
}

func (v NullableTokenLookupAccessorRequest) Get() *TokenLookupAccessorRequest {
	return v.value
}

func (v *NullableTokenLookupAccessorRequest) Set(val *TokenLookupAccessorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenLookupAccessorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenLookupAccessorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenLookupAccessorRequest(val *TokenLookupAccessorRequest) *NullableTokenLookupAccessorRequest {
	return &NullableTokenLookupAccessorRequest{value: val, isSet: true}
}

func (v NullableTokenLookupAccessorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenLookupAccessorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


