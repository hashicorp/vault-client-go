/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// TotpKeysRequest struct for TotpKeysRequest
type TotpKeysRequest struct {
	// The name of the account associated with the key. Required if generate is true.
	AccountName *string `json:"account_name,omitempty"`
	// The hashing algorithm used to generate the TOTP token. Options include SHA1, SHA256 and SHA512.
	Algorithm *string `json:"algorithm,omitempty"`
	// The number of digits in the generated TOTP token. This value can either be 6 or 8.
	Digits *int32 `json:"digits,omitempty"`
	// Determines if a QR code and url are returned upon generating a key. Only used if generate is true.
	Exported *bool `json:"exported,omitempty"`
	// Determines if a key should be generated by Vault or if a key is being passed from another service.
	Generate *bool `json:"generate,omitempty"`
	// The name of the key's issuing organization. Required if generate is true.
	Issuer *string `json:"issuer,omitempty"`
	// The shared master key used to generate a TOTP token. Only used if generate is false.
	Key *string `json:"key,omitempty"`
	// Determines the size in bytes of the generated key. Only used if generate is true.
	KeySize *int32 `json:"key_size,omitempty"`
	// The length of time used to generate a counter for the TOTP token calculation.
	Period *int32 `json:"period,omitempty"`
	// The pixel size of the generated square QR code. Only used if generate is true and exported is true. If this value is 0, a QR code will not be returned.
	QrSize *int32 `json:"qr_size,omitempty"`
	// The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1. Only used if generate is true.
	Skew *int32 `json:"skew,omitempty"`
	// A TOTP url string containing all of the parameters for key setup. Only used if generate is false.
	Url *string `json:"url,omitempty"`
}

// NewTotpKeysRequest instantiates a new TotpKeysRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTotpKeysRequest() *TotpKeysRequest {
	this := TotpKeysRequest{}
	var algorithm string = "SHA1"
	this.Algorithm = &algorithm
	var digits int32 = 6
	this.Digits = &digits
	var exported bool = true
	this.Exported = &exported
	var generate bool = false
	this.Generate = &generate
	var keySize int32 = 20
	this.KeySize = &keySize
	var period int32 = 30
	this.Period = &period
	var qrSize int32 = 200
	this.QrSize = &qrSize
	var skew int32 = 1
	this.Skew = &skew
	return &this
}

// NewTotpKeysRequestWithDefaults instantiates a new TotpKeysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTotpKeysRequestWithDefaults() *TotpKeysRequest {
	this := TotpKeysRequest{}
	var algorithm string = "SHA1"
	this.Algorithm = &algorithm
	var digits int32 = 6
	this.Digits = &digits
	var exported bool = true
	this.Exported = &exported
	var generate bool = false
	this.Generate = &generate
	var keySize int32 = 20
	this.KeySize = &keySize
	var period int32 = 30
	this.Period = &period
	var qrSize int32 = 200
	this.QrSize = &qrSize
	var skew int32 = 1
	this.Skew = &skew
	return &this
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetAccountName() string {
	if o == nil || o.AccountName == nil {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetAccountNameOk() (*string, bool) {
	if o == nil || o.AccountName == nil {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasAccountName() bool {
	if o != nil && o.AccountName != nil {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *TotpKeysRequest) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *TotpKeysRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetDigits returns the Digits field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetDigits() int32 {
	if o == nil || o.Digits == nil {
		var ret int32
		return ret
	}
	return *o.Digits
}

// GetDigitsOk returns a tuple with the Digits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetDigitsOk() (*int32, bool) {
	if o == nil || o.Digits == nil {
		return nil, false
	}
	return o.Digits, true
}

// HasDigits returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasDigits() bool {
	if o != nil && o.Digits != nil {
		return true
	}

	return false
}

// SetDigits gets a reference to the given int32 and assigns it to the Digits field.
func (o *TotpKeysRequest) SetDigits(v int32) {
	o.Digits = &v
}

// GetExported returns the Exported field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetExported() bool {
	if o == nil || o.Exported == nil {
		var ret bool
		return ret
	}
	return *o.Exported
}

// GetExportedOk returns a tuple with the Exported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetExportedOk() (*bool, bool) {
	if o == nil || o.Exported == nil {
		return nil, false
	}
	return o.Exported, true
}

// HasExported returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasExported() bool {
	if o != nil && o.Exported != nil {
		return true
	}

	return false
}

// SetExported gets a reference to the given bool and assigns it to the Exported field.
func (o *TotpKeysRequest) SetExported(v bool) {
	o.Exported = &v
}

// GetGenerate returns the Generate field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetGenerate() bool {
	if o == nil || o.Generate == nil {
		var ret bool
		return ret
	}
	return *o.Generate
}

// GetGenerateOk returns a tuple with the Generate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetGenerateOk() (*bool, bool) {
	if o == nil || o.Generate == nil {
		return nil, false
	}
	return o.Generate, true
}

// HasGenerate returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasGenerate() bool {
	if o != nil && o.Generate != nil {
		return true
	}

	return false
}

// SetGenerate gets a reference to the given bool and assigns it to the Generate field.
func (o *TotpKeysRequest) SetGenerate(v bool) {
	o.Generate = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *TotpKeysRequest) SetIssuer(v string) {
	o.Issuer = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *TotpKeysRequest) SetKey(v string) {
	o.Key = &v
}

// GetKeySize returns the KeySize field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetKeySize() int32 {
	if o == nil || o.KeySize == nil {
		var ret int32
		return ret
	}
	return *o.KeySize
}

// GetKeySizeOk returns a tuple with the KeySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetKeySizeOk() (*int32, bool) {
	if o == nil || o.KeySize == nil {
		return nil, false
	}
	return o.KeySize, true
}

// HasKeySize returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasKeySize() bool {
	if o != nil && o.KeySize != nil {
		return true
	}

	return false
}

// SetKeySize gets a reference to the given int32 and assigns it to the KeySize field.
func (o *TotpKeysRequest) SetKeySize(v int32) {
	o.KeySize = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
func (o *TotpKeysRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetQrSize returns the QrSize field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetQrSize() int32 {
	if o == nil || o.QrSize == nil {
		var ret int32
		return ret
	}
	return *o.QrSize
}

// GetQrSizeOk returns a tuple with the QrSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetQrSizeOk() (*int32, bool) {
	if o == nil || o.QrSize == nil {
		return nil, false
	}
	return o.QrSize, true
}

// HasQrSize returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasQrSize() bool {
	if o != nil && o.QrSize != nil {
		return true
	}

	return false
}

// SetQrSize gets a reference to the given int32 and assigns it to the QrSize field.
func (o *TotpKeysRequest) SetQrSize(v int32) {
	o.QrSize = &v
}

// GetSkew returns the Skew field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetSkew() int32 {
	if o == nil || o.Skew == nil {
		var ret int32
		return ret
	}
	return *o.Skew
}

// GetSkewOk returns a tuple with the Skew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetSkewOk() (*int32, bool) {
	if o == nil || o.Skew == nil {
		return nil, false
	}
	return o.Skew, true
}

// HasSkew returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasSkew() bool {
	if o != nil && o.Skew != nil {
		return true
	}

	return false
}

// SetSkew gets a reference to the given int32 and assigns it to the Skew field.
func (o *TotpKeysRequest) SetSkew(v int32) {
	o.Skew = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *TotpKeysRequest) SetUrl(v string) {
	o.Url = &v
}

func (o TotpKeysRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountName != nil {
		toSerialize["account_name"] = o.AccountName
	}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.Digits != nil {
		toSerialize["digits"] = o.Digits
	}
	if o.Exported != nil {
		toSerialize["exported"] = o.Exported
	}
	if o.Generate != nil {
		toSerialize["generate"] = o.Generate
	}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.KeySize != nil {
		toSerialize["key_size"] = o.KeySize
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.QrSize != nil {
		toSerialize["qr_size"] = o.QrSize
	}
	if o.Skew != nil {
		toSerialize["skew"] = o.Skew
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableTotpKeysRequest struct {
	value *TotpKeysRequest
	isSet bool
}

func (v NullableTotpKeysRequest) Get() *TotpKeysRequest {
	return v.value
}

func (v *NullableTotpKeysRequest) Set(val *TotpKeysRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTotpKeysRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTotpKeysRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTotpKeysRequest(val *TotpKeysRequest) *NullableTotpKeysRequest {
	return &NullableTotpKeysRequest{value: val, isSet: true}
}

func (v NullableTotpKeysRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTotpKeysRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


