/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.11.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// LdapDuoConfigRequest struct for LdapDuoConfigRequest
type LdapDuoConfigRequest struct {
	// A string of URL-encoded key/value pairs that provides additional context about the authentication attempt in the Duo Mobile app
	PushInfo *string `json:"push_info,omitempty"`
	// User agent to connect to Duo (default \"\")
	UserAgent *string `json:"user_agent,omitempty"`
	// Format string given auth method username as argument to create Duo username (default '%s')
	UsernameFormat *string `json:"username_format,omitempty"`
}

// NewLdapDuoConfigRequest instantiates a new LdapDuoConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapDuoConfigRequest() *LdapDuoConfigRequest {
	this := LdapDuoConfigRequest{}
	return &this
}

// NewLdapDuoConfigRequestWithDefaults instantiates a new LdapDuoConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapDuoConfigRequestWithDefaults() *LdapDuoConfigRequest {
	this := LdapDuoConfigRequest{}
	return &this
}

// GetPushInfo returns the PushInfo field value if set, zero value otherwise.
func (o *LdapDuoConfigRequest) GetPushInfo() string {
	if o == nil || o.PushInfo == nil {
		var ret string
		return ret
	}
	return *o.PushInfo
}

// GetPushInfoOk returns a tuple with the PushInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapDuoConfigRequest) GetPushInfoOk() (*string, bool) {
	if o == nil || o.PushInfo == nil {
		return nil, false
	}
	return o.PushInfo, true
}

// HasPushInfo returns a boolean if a field has been set.
func (o *LdapDuoConfigRequest) HasPushInfo() bool {
	if o != nil && o.PushInfo != nil {
		return true
	}

	return false
}

// SetPushInfo gets a reference to the given string and assigns it to the PushInfo field.
func (o *LdapDuoConfigRequest) SetPushInfo(v string) {
	o.PushInfo = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *LdapDuoConfigRequest) GetUserAgent() string {
	if o == nil || o.UserAgent == nil {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapDuoConfigRequest) GetUserAgentOk() (*string, bool) {
	if o == nil || o.UserAgent == nil {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *LdapDuoConfigRequest) HasUserAgent() bool {
	if o != nil && o.UserAgent != nil {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *LdapDuoConfigRequest) SetUserAgent(v string) {
	o.UserAgent = &v
}

// GetUsernameFormat returns the UsernameFormat field value if set, zero value otherwise.
func (o *LdapDuoConfigRequest) GetUsernameFormat() string {
	if o == nil || o.UsernameFormat == nil {
		var ret string
		return ret
	}
	return *o.UsernameFormat
}

// GetUsernameFormatOk returns a tuple with the UsernameFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapDuoConfigRequest) GetUsernameFormatOk() (*string, bool) {
	if o == nil || o.UsernameFormat == nil {
		return nil, false
	}
	return o.UsernameFormat, true
}

// HasUsernameFormat returns a boolean if a field has been set.
func (o *LdapDuoConfigRequest) HasUsernameFormat() bool {
	if o != nil && o.UsernameFormat != nil {
		return true
	}

	return false
}

// SetUsernameFormat gets a reference to the given string and assigns it to the UsernameFormat field.
func (o *LdapDuoConfigRequest) SetUsernameFormat(v string) {
	o.UsernameFormat = &v
}

func (o LdapDuoConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PushInfo != nil {
		toSerialize["push_info"] = o.PushInfo
	}
	if o.UserAgent != nil {
		toSerialize["user_agent"] = o.UserAgent
	}
	if o.UsernameFormat != nil {
		toSerialize["username_format"] = o.UsernameFormat
	}
	return json.Marshal(toSerialize)
}

type NullableLdapDuoConfigRequest struct {
	value *LdapDuoConfigRequest
	isSet bool
}

func (v NullableLdapDuoConfigRequest) Get() *LdapDuoConfigRequest {
	return v.value
}

func (v *NullableLdapDuoConfigRequest) Set(val *LdapDuoConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapDuoConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapDuoConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapDuoConfigRequest(val *LdapDuoConfigRequest) *NullableLdapDuoConfigRequest {
	return &NullableLdapDuoConfigRequest{value: val, isSet: true}
}

func (v NullableLdapDuoConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapDuoConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


