/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// OidcRoleRequest struct for OidcRoleRequest
type OidcRoleRequest struct {
	// Comma-separated list of allowed values for redirect_uri
	AllowedRedirectUris []string `json:"allowed_redirect_uris,omitempty"`
	// Comma-separated list of 'aud' claims that are valid for login; any match is sufficient
	BoundAudiences []string `json:"bound_audiences,omitempty"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs,omitempty"`
	// Map of claims/values which must match for login
	BoundClaims map[string]interface{} `json:"bound_claims,omitempty"`
	// How to interpret values in the map of claims/values (which must match for login): allowed values are 'string' or 'glob'
	BoundClaimsType *string `json:"bound_claims_type,omitempty"`
	// The 'sub' claim that is valid for login. Optional.
	BoundSubject *string `json:"bound_subject,omitempty"`
	// Mappings of claims (key) that will be copied to a metadata field (value)
	ClaimMappings map[string]interface{} `json:"claim_mappings,omitempty"`
	// Duration in seconds of leeway when validating all claims to account for clock skew. Defaults to 60 (1 minute) if set to 0 and can be disabled if set to -1.
	ClockSkewLeeway *int32 `json:"clock_skew_leeway,omitempty"`
	// Duration in seconds of leeway when validating expiration of a token to account for clock skew. Defaults to 150 (2.5 minutes) if set to 0 and can be disabled if set to -1.
	ExpirationLeeway *int32 `json:"expiration_leeway,omitempty"`
	// The claim to use for the Identity group alias names
	GroupsClaim *string `json:"groups_claim,omitempty"`
	// Specifies the allowable elapsed time in seconds since the last time the user was actively authenticated.
	MaxAge *int32 `json:"max_age,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Duration in seconds of leeway when validating not before values of a token to account for clock skew. Defaults to 150 (2.5 minutes) if set to 0 and can be disabled if set to -1.
	NotBeforeLeeway *int32 `json:"not_before_leeway,omitempty"`
	// Use \"token_num_uses\" instead. If this and \"token_num_uses\" are both specified, only \"token_num_uses\" will be used.
	// Deprecated
	NumUses *int32 `json:"num_uses,omitempty"`
	// Comma-separated list of OIDC scopes
	OidcScopes []string `json:"oidc_scopes,omitempty"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Type of the role, either 'jwt' or 'oidc'.
	RoleType *string `json:"role_type,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
	// The claim to use for the Identity entity alias name
	UserClaim *string `json:"user_claim,omitempty"`
	// If true, the user_claim value will use JSON pointer syntax for referencing claims.
	UserClaimJsonPointer *bool `json:"user_claim_json_pointer,omitempty"`
	// Log received OIDC tokens and claims when debug-level logging is active. Not recommended in production since sensitive information may be present in OIDC responses.
	VerboseOidcLogging *bool `json:"verbose_oidc_logging,omitempty"`
}

// NewOidcRoleRequest instantiates a new OidcRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcRoleRequest() *OidcRoleRequest {
	this := OidcRoleRequest{}
	var boundClaimsType string = "string"
	this.BoundClaimsType = &boundClaimsType
	var expirationLeeway int32 = 150
	this.ExpirationLeeway = &expirationLeeway
	var notBeforeLeeway int32 = 150
	this.NotBeforeLeeway = &notBeforeLeeway
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewOidcRoleRequestWithDefaults instantiates a new OidcRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcRoleRequestWithDefaults() *OidcRoleRequest {
	this := OidcRoleRequest{}
	var boundClaimsType string = "string"
	this.BoundClaimsType = &boundClaimsType
	var expirationLeeway int32 = 150
	this.ExpirationLeeway = &expirationLeeway
	var notBeforeLeeway int32 = 150
	this.NotBeforeLeeway = &notBeforeLeeway
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetAllowedRedirectUris returns the AllowedRedirectUris field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetAllowedRedirectUris() []string {
	if o == nil || o.AllowedRedirectUris == nil {
		var ret []string
		return ret
	}
	return o.AllowedRedirectUris
}

// GetAllowedRedirectUrisOk returns a tuple with the AllowedRedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetAllowedRedirectUrisOk() ([]string, bool) {
	if o == nil || o.AllowedRedirectUris == nil {
		return nil, false
	}
	return o.AllowedRedirectUris, true
}

// HasAllowedRedirectUris returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasAllowedRedirectUris() bool {
	if o != nil && o.AllowedRedirectUris != nil {
		return true
	}

	return false
}

// SetAllowedRedirectUris gets a reference to the given []string and assigns it to the AllowedRedirectUris field.
func (o *OidcRoleRequest) SetAllowedRedirectUris(v []string) {
	o.AllowedRedirectUris = v
}

// GetBoundAudiences returns the BoundAudiences field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetBoundAudiences() []string {
	if o == nil || o.BoundAudiences == nil {
		var ret []string
		return ret
	}
	return o.BoundAudiences
}

// GetBoundAudiencesOk returns a tuple with the BoundAudiences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetBoundAudiencesOk() ([]string, bool) {
	if o == nil || o.BoundAudiences == nil {
		return nil, false
	}
	return o.BoundAudiences, true
}

// HasBoundAudiences returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasBoundAudiences() bool {
	if o != nil && o.BoundAudiences != nil {
		return true
	}

	return false
}

// SetBoundAudiences gets a reference to the given []string and assigns it to the BoundAudiences field.
func (o *OidcRoleRequest) SetBoundAudiences(v []string) {
	o.BoundAudiences = v
}

// GetBoundCidrs returns the BoundCidrs field value if set, zero value otherwise.
// Deprecated
func (o *OidcRoleRequest) GetBoundCidrs() []string {
	if o == nil || o.BoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrs
}

// GetBoundCidrsOk returns a tuple with the BoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OidcRoleRequest) GetBoundCidrsOk() ([]string, bool) {
	if o == nil || o.BoundCidrs == nil {
		return nil, false
	}
	return o.BoundCidrs, true
}

// HasBoundCidrs returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasBoundCidrs() bool {
	if o != nil && o.BoundCidrs != nil {
		return true
	}

	return false
}

// SetBoundCidrs gets a reference to the given []string and assigns it to the BoundCidrs field.
// Deprecated
func (o *OidcRoleRequest) SetBoundCidrs(v []string) {
	o.BoundCidrs = v
}

// GetBoundClaims returns the BoundClaims field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetBoundClaims() map[string]interface{} {
	if o == nil || o.BoundClaims == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.BoundClaims
}

// GetBoundClaimsOk returns a tuple with the BoundClaims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetBoundClaimsOk() (map[string]interface{}, bool) {
	if o == nil || o.BoundClaims == nil {
		return nil, false
	}
	return o.BoundClaims, true
}

// HasBoundClaims returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasBoundClaims() bool {
	if o != nil && o.BoundClaims != nil {
		return true
	}

	return false
}

// SetBoundClaims gets a reference to the given map[string]interface{} and assigns it to the BoundClaims field.
func (o *OidcRoleRequest) SetBoundClaims(v map[string]interface{}) {
	o.BoundClaims = v
}

// GetBoundClaimsType returns the BoundClaimsType field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetBoundClaimsType() string {
	if o == nil || o.BoundClaimsType == nil {
		var ret string
		return ret
	}
	return *o.BoundClaimsType
}

// GetBoundClaimsTypeOk returns a tuple with the BoundClaimsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetBoundClaimsTypeOk() (*string, bool) {
	if o == nil || o.BoundClaimsType == nil {
		return nil, false
	}
	return o.BoundClaimsType, true
}

// HasBoundClaimsType returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasBoundClaimsType() bool {
	if o != nil && o.BoundClaimsType != nil {
		return true
	}

	return false
}

// SetBoundClaimsType gets a reference to the given string and assigns it to the BoundClaimsType field.
func (o *OidcRoleRequest) SetBoundClaimsType(v string) {
	o.BoundClaimsType = &v
}

// GetBoundSubject returns the BoundSubject field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetBoundSubject() string {
	if o == nil || o.BoundSubject == nil {
		var ret string
		return ret
	}
	return *o.BoundSubject
}

// GetBoundSubjectOk returns a tuple with the BoundSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetBoundSubjectOk() (*string, bool) {
	if o == nil || o.BoundSubject == nil {
		return nil, false
	}
	return o.BoundSubject, true
}

// HasBoundSubject returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasBoundSubject() bool {
	if o != nil && o.BoundSubject != nil {
		return true
	}

	return false
}

// SetBoundSubject gets a reference to the given string and assigns it to the BoundSubject field.
func (o *OidcRoleRequest) SetBoundSubject(v string) {
	o.BoundSubject = &v
}

// GetClaimMappings returns the ClaimMappings field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetClaimMappings() map[string]interface{} {
	if o == nil || o.ClaimMappings == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ClaimMappings
}

// GetClaimMappingsOk returns a tuple with the ClaimMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetClaimMappingsOk() (map[string]interface{}, bool) {
	if o == nil || o.ClaimMappings == nil {
		return nil, false
	}
	return o.ClaimMappings, true
}

// HasClaimMappings returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasClaimMappings() bool {
	if o != nil && o.ClaimMappings != nil {
		return true
	}

	return false
}

// SetClaimMappings gets a reference to the given map[string]interface{} and assigns it to the ClaimMappings field.
func (o *OidcRoleRequest) SetClaimMappings(v map[string]interface{}) {
	o.ClaimMappings = v
}

// GetClockSkewLeeway returns the ClockSkewLeeway field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetClockSkewLeeway() int32 {
	if o == nil || o.ClockSkewLeeway == nil {
		var ret int32
		return ret
	}
	return *o.ClockSkewLeeway
}

// GetClockSkewLeewayOk returns a tuple with the ClockSkewLeeway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetClockSkewLeewayOk() (*int32, bool) {
	if o == nil || o.ClockSkewLeeway == nil {
		return nil, false
	}
	return o.ClockSkewLeeway, true
}

// HasClockSkewLeeway returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasClockSkewLeeway() bool {
	if o != nil && o.ClockSkewLeeway != nil {
		return true
	}

	return false
}

// SetClockSkewLeeway gets a reference to the given int32 and assigns it to the ClockSkewLeeway field.
func (o *OidcRoleRequest) SetClockSkewLeeway(v int32) {
	o.ClockSkewLeeway = &v
}

// GetExpirationLeeway returns the ExpirationLeeway field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetExpirationLeeway() int32 {
	if o == nil || o.ExpirationLeeway == nil {
		var ret int32
		return ret
	}
	return *o.ExpirationLeeway
}

// GetExpirationLeewayOk returns a tuple with the ExpirationLeeway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetExpirationLeewayOk() (*int32, bool) {
	if o == nil || o.ExpirationLeeway == nil {
		return nil, false
	}
	return o.ExpirationLeeway, true
}

// HasExpirationLeeway returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasExpirationLeeway() bool {
	if o != nil && o.ExpirationLeeway != nil {
		return true
	}

	return false
}

// SetExpirationLeeway gets a reference to the given int32 and assigns it to the ExpirationLeeway field.
func (o *OidcRoleRequest) SetExpirationLeeway(v int32) {
	o.ExpirationLeeway = &v
}

// GetGroupsClaim returns the GroupsClaim field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetGroupsClaim() string {
	if o == nil || o.GroupsClaim == nil {
		var ret string
		return ret
	}
	return *o.GroupsClaim
}

// GetGroupsClaimOk returns a tuple with the GroupsClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetGroupsClaimOk() (*string, bool) {
	if o == nil || o.GroupsClaim == nil {
		return nil, false
	}
	return o.GroupsClaim, true
}

// HasGroupsClaim returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasGroupsClaim() bool {
	if o != nil && o.GroupsClaim != nil {
		return true
	}

	return false
}

// SetGroupsClaim gets a reference to the given string and assigns it to the GroupsClaim field.
func (o *OidcRoleRequest) SetGroupsClaim(v string) {
	o.GroupsClaim = &v
}

// GetMaxAge returns the MaxAge field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetMaxAge() int32 {
	if o == nil || o.MaxAge == nil {
		var ret int32
		return ret
	}
	return *o.MaxAge
}

// GetMaxAgeOk returns a tuple with the MaxAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetMaxAgeOk() (*int32, bool) {
	if o == nil || o.MaxAge == nil {
		return nil, false
	}
	return o.MaxAge, true
}

// HasMaxAge returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasMaxAge() bool {
	if o != nil && o.MaxAge != nil {
		return true
	}

	return false
}

// SetMaxAge gets a reference to the given int32 and assigns it to the MaxAge field.
func (o *OidcRoleRequest) SetMaxAge(v int32) {
	o.MaxAge = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *OidcRoleRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OidcRoleRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *OidcRoleRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetNotBeforeLeeway returns the NotBeforeLeeway field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetNotBeforeLeeway() int32 {
	if o == nil || o.NotBeforeLeeway == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeLeeway
}

// GetNotBeforeLeewayOk returns a tuple with the NotBeforeLeeway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetNotBeforeLeewayOk() (*int32, bool) {
	if o == nil || o.NotBeforeLeeway == nil {
		return nil, false
	}
	return o.NotBeforeLeeway, true
}

// HasNotBeforeLeeway returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasNotBeforeLeeway() bool {
	if o != nil && o.NotBeforeLeeway != nil {
		return true
	}

	return false
}

// SetNotBeforeLeeway gets a reference to the given int32 and assigns it to the NotBeforeLeeway field.
func (o *OidcRoleRequest) SetNotBeforeLeeway(v int32) {
	o.NotBeforeLeeway = &v
}

// GetNumUses returns the NumUses field value if set, zero value otherwise.
// Deprecated
func (o *OidcRoleRequest) GetNumUses() int32 {
	if o == nil || o.NumUses == nil {
		var ret int32
		return ret
	}
	return *o.NumUses
}

// GetNumUsesOk returns a tuple with the NumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OidcRoleRequest) GetNumUsesOk() (*int32, bool) {
	if o == nil || o.NumUses == nil {
		return nil, false
	}
	return o.NumUses, true
}

// HasNumUses returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasNumUses() bool {
	if o != nil && o.NumUses != nil {
		return true
	}

	return false
}

// SetNumUses gets a reference to the given int32 and assigns it to the NumUses field.
// Deprecated
func (o *OidcRoleRequest) SetNumUses(v int32) {
	o.NumUses = &v
}

// GetOidcScopes returns the OidcScopes field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetOidcScopes() []string {
	if o == nil || o.OidcScopes == nil {
		var ret []string
		return ret
	}
	return o.OidcScopes
}

// GetOidcScopesOk returns a tuple with the OidcScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetOidcScopesOk() ([]string, bool) {
	if o == nil || o.OidcScopes == nil {
		return nil, false
	}
	return o.OidcScopes, true
}

// HasOidcScopes returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasOidcScopes() bool {
	if o != nil && o.OidcScopes != nil {
		return true
	}

	return false
}

// SetOidcScopes gets a reference to the given []string and assigns it to the OidcScopes field.
func (o *OidcRoleRequest) SetOidcScopes(v []string) {
	o.OidcScopes = v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *OidcRoleRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OidcRoleRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *OidcRoleRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *OidcRoleRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OidcRoleRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *OidcRoleRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetRoleType returns the RoleType field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetRoleType() string {
	if o == nil || o.RoleType == nil {
		var ret string
		return ret
	}
	return *o.RoleType
}

// GetRoleTypeOk returns a tuple with the RoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetRoleTypeOk() (*string, bool) {
	if o == nil || o.RoleType == nil {
		return nil, false
	}
	return o.RoleType, true
}

// HasRoleType returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasRoleType() bool {
	if o != nil && o.RoleType != nil {
		return true
	}

	return false
}

// SetRoleType gets a reference to the given string and assigns it to the RoleType field.
func (o *OidcRoleRequest) SetRoleType(v string) {
	o.RoleType = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *OidcRoleRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *OidcRoleRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *OidcRoleRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *OidcRoleRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *OidcRoleRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *OidcRoleRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *OidcRoleRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *OidcRoleRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *OidcRoleRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *OidcRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OidcRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *OidcRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUserClaim returns the UserClaim field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetUserClaim() string {
	if o == nil || o.UserClaim == nil {
		var ret string
		return ret
	}
	return *o.UserClaim
}

// GetUserClaimOk returns a tuple with the UserClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetUserClaimOk() (*string, bool) {
	if o == nil || o.UserClaim == nil {
		return nil, false
	}
	return o.UserClaim, true
}

// HasUserClaim returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasUserClaim() bool {
	if o != nil && o.UserClaim != nil {
		return true
	}

	return false
}

// SetUserClaim gets a reference to the given string and assigns it to the UserClaim field.
func (o *OidcRoleRequest) SetUserClaim(v string) {
	o.UserClaim = &v
}

// GetUserClaimJsonPointer returns the UserClaimJsonPointer field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetUserClaimJsonPointer() bool {
	if o == nil || o.UserClaimJsonPointer == nil {
		var ret bool
		return ret
	}
	return *o.UserClaimJsonPointer
}

// GetUserClaimJsonPointerOk returns a tuple with the UserClaimJsonPointer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetUserClaimJsonPointerOk() (*bool, bool) {
	if o == nil || o.UserClaimJsonPointer == nil {
		return nil, false
	}
	return o.UserClaimJsonPointer, true
}

// HasUserClaimJsonPointer returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasUserClaimJsonPointer() bool {
	if o != nil && o.UserClaimJsonPointer != nil {
		return true
	}

	return false
}

// SetUserClaimJsonPointer gets a reference to the given bool and assigns it to the UserClaimJsonPointer field.
func (o *OidcRoleRequest) SetUserClaimJsonPointer(v bool) {
	o.UserClaimJsonPointer = &v
}

// GetVerboseOidcLogging returns the VerboseOidcLogging field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetVerboseOidcLogging() bool {
	if o == nil || o.VerboseOidcLogging == nil {
		var ret bool
		return ret
	}
	return *o.VerboseOidcLogging
}

// GetVerboseOidcLoggingOk returns a tuple with the VerboseOidcLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetVerboseOidcLoggingOk() (*bool, bool) {
	if o == nil || o.VerboseOidcLogging == nil {
		return nil, false
	}
	return o.VerboseOidcLogging, true
}

// HasVerboseOidcLogging returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasVerboseOidcLogging() bool {
	if o != nil && o.VerboseOidcLogging != nil {
		return true
	}

	return false
}

// SetVerboseOidcLogging gets a reference to the given bool and assigns it to the VerboseOidcLogging field.
func (o *OidcRoleRequest) SetVerboseOidcLogging(v bool) {
	o.VerboseOidcLogging = &v
}

func (o OidcRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedRedirectUris != nil {
		toSerialize["allowed_redirect_uris"] = o.AllowedRedirectUris
	}
	if o.BoundAudiences != nil {
		toSerialize["bound_audiences"] = o.BoundAudiences
	}
	if o.BoundCidrs != nil {
		toSerialize["bound_cidrs"] = o.BoundCidrs
	}
	if o.BoundClaims != nil {
		toSerialize["bound_claims"] = o.BoundClaims
	}
	if o.BoundClaimsType != nil {
		toSerialize["bound_claims_type"] = o.BoundClaimsType
	}
	if o.BoundSubject != nil {
		toSerialize["bound_subject"] = o.BoundSubject
	}
	if o.ClaimMappings != nil {
		toSerialize["claim_mappings"] = o.ClaimMappings
	}
	if o.ClockSkewLeeway != nil {
		toSerialize["clock_skew_leeway"] = o.ClockSkewLeeway
	}
	if o.ExpirationLeeway != nil {
		toSerialize["expiration_leeway"] = o.ExpirationLeeway
	}
	if o.GroupsClaim != nil {
		toSerialize["groups_claim"] = o.GroupsClaim
	}
	if o.MaxAge != nil {
		toSerialize["max_age"] = o.MaxAge
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.NotBeforeLeeway != nil {
		toSerialize["not_before_leeway"] = o.NotBeforeLeeway
	}
	if o.NumUses != nil {
		toSerialize["num_uses"] = o.NumUses
	}
	if o.OidcScopes != nil {
		toSerialize["oidc_scopes"] = o.OidcScopes
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.RoleType != nil {
		toSerialize["role_type"] = o.RoleType
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UserClaim != nil {
		toSerialize["user_claim"] = o.UserClaim
	}
	if o.UserClaimJsonPointer != nil {
		toSerialize["user_claim_json_pointer"] = o.UserClaimJsonPointer
	}
	if o.VerboseOidcLogging != nil {
		toSerialize["verbose_oidc_logging"] = o.VerboseOidcLogging
	}
	return json.Marshal(toSerialize)
}

type NullableOidcRoleRequest struct {
	value *OidcRoleRequest
	isSet bool
}

func (v NullableOidcRoleRequest) Get() *OidcRoleRequest {
	return v.value
}

func (v *NullableOidcRoleRequest) Set(val *OidcRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcRoleRequest(val *OidcRoleRequest) *NullableOidcRoleRequest {
	return &NullableOidcRoleRequest{value: val, isSet: true}
}

func (v NullableOidcRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


