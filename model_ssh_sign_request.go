/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// SshSignRequest struct for SshSignRequest
type SshSignRequest struct {
	// Type of certificate to be created; either \"user\" or \"host\".
	CertType *string `json:"cert_type,omitempty"`
	// Critical options that the certificate should be signed for.
	CriticalOptions map[string]interface{} `json:"critical_options,omitempty"`
	// Extensions that the certificate should be signed for.
	Extensions map[string]interface{} `json:"extensions,omitempty"`
	// Key id that the created certificate should have. If not specified, the display name of the token will be used.
	KeyId *string `json:"key_id,omitempty"`
	// SSH public key that should be signed.
	PublicKey *string `json:"public_key,omitempty"`
	// The requested Time To Live for the SSH certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be later than the role max TTL.
	Ttl *int32 `json:"ttl,omitempty"`
	// Valid principals, either usernames or hostnames, that the certificate should be signed for.
	ValidPrincipals *string `json:"valid_principals,omitempty"`
}

// NewSshSignRequest instantiates a new SshSignRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshSignRequest() *SshSignRequest {
	this := SshSignRequest{}
	var certType string = "user"
	this.CertType = &certType
	return &this
}

// NewSshSignRequestWithDefaults instantiates a new SshSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshSignRequestWithDefaults() *SshSignRequest {
	this := SshSignRequest{}
	var certType string = "user"
	this.CertType = &certType
	return &this
}

// GetCertType returns the CertType field value if set, zero value otherwise.
func (o *SshSignRequest) GetCertType() string {
	if o == nil || o.CertType == nil {
		var ret string
		return ret
	}
	return *o.CertType
}

// GetCertTypeOk returns a tuple with the CertType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetCertTypeOk() (*string, bool) {
	if o == nil || o.CertType == nil {
		return nil, false
	}
	return o.CertType, true
}

// HasCertType returns a boolean if a field has been set.
func (o *SshSignRequest) HasCertType() bool {
	if o != nil && o.CertType != nil {
		return true
	}

	return false
}

// SetCertType gets a reference to the given string and assigns it to the CertType field.
func (o *SshSignRequest) SetCertType(v string) {
	o.CertType = &v
}

// GetCriticalOptions returns the CriticalOptions field value if set, zero value otherwise.
func (o *SshSignRequest) GetCriticalOptions() map[string]interface{} {
	if o == nil || o.CriticalOptions == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CriticalOptions
}

// GetCriticalOptionsOk returns a tuple with the CriticalOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetCriticalOptionsOk() (map[string]interface{}, bool) {
	if o == nil || o.CriticalOptions == nil {
		return nil, false
	}
	return o.CriticalOptions, true
}

// HasCriticalOptions returns a boolean if a field has been set.
func (o *SshSignRequest) HasCriticalOptions() bool {
	if o != nil && o.CriticalOptions != nil {
		return true
	}

	return false
}

// SetCriticalOptions gets a reference to the given map[string]interface{} and assigns it to the CriticalOptions field.
func (o *SshSignRequest) SetCriticalOptions(v map[string]interface{}) {
	o.CriticalOptions = v
}

// GetExtensions returns the Extensions field value if set, zero value otherwise.
func (o *SshSignRequest) GetExtensions() map[string]interface{} {
	if o == nil || o.Extensions == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetExtensionsOk() (map[string]interface{}, bool) {
	if o == nil || o.Extensions == nil {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *SshSignRequest) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given map[string]interface{} and assigns it to the Extensions field.
func (o *SshSignRequest) SetExtensions(v map[string]interface{}) {
	o.Extensions = v
}

// GetKeyId returns the KeyId field value if set, zero value otherwise.
func (o *SshSignRequest) GetKeyId() string {
	if o == nil || o.KeyId == nil {
		var ret string
		return ret
	}
	return *o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetKeyIdOk() (*string, bool) {
	if o == nil || o.KeyId == nil {
		return nil, false
	}
	return o.KeyId, true
}

// HasKeyId returns a boolean if a field has been set.
func (o *SshSignRequest) HasKeyId() bool {
	if o != nil && o.KeyId != nil {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given string and assigns it to the KeyId field.
func (o *SshSignRequest) SetKeyId(v string) {
	o.KeyId = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *SshSignRequest) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetPublicKeyOk() (*string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *SshSignRequest) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *SshSignRequest) SetPublicKey(v string) {
	o.PublicKey = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *SshSignRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *SshSignRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *SshSignRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetValidPrincipals returns the ValidPrincipals field value if set, zero value otherwise.
func (o *SshSignRequest) GetValidPrincipals() string {
	if o == nil || o.ValidPrincipals == nil {
		var ret string
		return ret
	}
	return *o.ValidPrincipals
}

// GetValidPrincipalsOk returns a tuple with the ValidPrincipals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetValidPrincipalsOk() (*string, bool) {
	if o == nil || o.ValidPrincipals == nil {
		return nil, false
	}
	return o.ValidPrincipals, true
}

// HasValidPrincipals returns a boolean if a field has been set.
func (o *SshSignRequest) HasValidPrincipals() bool {
	if o != nil && o.ValidPrincipals != nil {
		return true
	}

	return false
}

// SetValidPrincipals gets a reference to the given string and assigns it to the ValidPrincipals field.
func (o *SshSignRequest) SetValidPrincipals(v string) {
	o.ValidPrincipals = &v
}

func (o SshSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CertType != nil {
		toSerialize["cert_type"] = o.CertType
	}
	if o.CriticalOptions != nil {
		toSerialize["critical_options"] = o.CriticalOptions
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.KeyId != nil {
		toSerialize["key_id"] = o.KeyId
	}
	if o.PublicKey != nil {
		toSerialize["public_key"] = o.PublicKey
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.ValidPrincipals != nil {
		toSerialize["valid_principals"] = o.ValidPrincipals
	}
	return json.Marshal(toSerialize)
}

type NullableSshSignRequest struct {
	value *SshSignRequest
	isSet bool
}

func (v NullableSshSignRequest) Get() *SshSignRequest {
	return v.value
}

func (v *NullableSshSignRequest) Set(val *SshSignRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshSignRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshSignRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshSignRequest(val *SshSignRequest) *NullableSshSignRequest {
	return &NullableSshSignRequest{value: val, isSet: true}
}

func (v NullableSshSignRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshSignRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


