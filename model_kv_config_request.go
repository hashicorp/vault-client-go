/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// KvConfigRequest struct for KvConfigRequest
type KvConfigRequest struct {
	// If true, the backend will require the cas parameter to be set for each write
	CasRequired *bool `json:"cas_required,omitempty"`
	// If set, the length of time before a version is deleted. A negative duration disables the use of delete_version_after on all keys. A zero duration clears the current setting. Accepts a Go duration format string.
	DeleteVersionAfter *int32 `json:"delete_version_after,omitempty"`
	// The number of versions to keep for each key. Defaults to 10
	MaxVersions *int32 `json:"max_versions,omitempty"`
}

// NewKvConfigRequest instantiates a new KvConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKvConfigRequest() *KvConfigRequest {
	this := KvConfigRequest{}
	return &this
}

// NewKvConfigRequestWithDefaults instantiates a new KvConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKvConfigRequestWithDefaults() *KvConfigRequest {
	this := KvConfigRequest{}
	return &this
}

// GetCasRequired returns the CasRequired field value if set, zero value otherwise.
func (o *KvConfigRequest) GetCasRequired() bool {
	if o == nil || o.CasRequired == nil {
		var ret bool
		return ret
	}
	return *o.CasRequired
}

// GetCasRequiredOk returns a tuple with the CasRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvConfigRequest) GetCasRequiredOk() (*bool, bool) {
	if o == nil || o.CasRequired == nil {
		return nil, false
	}
	return o.CasRequired, true
}

// HasCasRequired returns a boolean if a field has been set.
func (o *KvConfigRequest) HasCasRequired() bool {
	if o != nil && o.CasRequired != nil {
		return true
	}

	return false
}

// SetCasRequired gets a reference to the given bool and assigns it to the CasRequired field.
func (o *KvConfigRequest) SetCasRequired(v bool) {
	o.CasRequired = &v
}

// GetDeleteVersionAfter returns the DeleteVersionAfter field value if set, zero value otherwise.
func (o *KvConfigRequest) GetDeleteVersionAfter() int32 {
	if o == nil || o.DeleteVersionAfter == nil {
		var ret int32
		return ret
	}
	return *o.DeleteVersionAfter
}

// GetDeleteVersionAfterOk returns a tuple with the DeleteVersionAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvConfigRequest) GetDeleteVersionAfterOk() (*int32, bool) {
	if o == nil || o.DeleteVersionAfter == nil {
		return nil, false
	}
	return o.DeleteVersionAfter, true
}

// HasDeleteVersionAfter returns a boolean if a field has been set.
func (o *KvConfigRequest) HasDeleteVersionAfter() bool {
	if o != nil && o.DeleteVersionAfter != nil {
		return true
	}

	return false
}

// SetDeleteVersionAfter gets a reference to the given int32 and assigns it to the DeleteVersionAfter field.
func (o *KvConfigRequest) SetDeleteVersionAfter(v int32) {
	o.DeleteVersionAfter = &v
}

// GetMaxVersions returns the MaxVersions field value if set, zero value otherwise.
func (o *KvConfigRequest) GetMaxVersions() int32 {
	if o == nil || o.MaxVersions == nil {
		var ret int32
		return ret
	}
	return *o.MaxVersions
}

// GetMaxVersionsOk returns a tuple with the MaxVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvConfigRequest) GetMaxVersionsOk() (*int32, bool) {
	if o == nil || o.MaxVersions == nil {
		return nil, false
	}
	return o.MaxVersions, true
}

// HasMaxVersions returns a boolean if a field has been set.
func (o *KvConfigRequest) HasMaxVersions() bool {
	if o != nil && o.MaxVersions != nil {
		return true
	}

	return false
}

// SetMaxVersions gets a reference to the given int32 and assigns it to the MaxVersions field.
func (o *KvConfigRequest) SetMaxVersions(v int32) {
	o.MaxVersions = &v
}

func (o KvConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CasRequired != nil {
		toSerialize["cas_required"] = o.CasRequired
	}
	if o.DeleteVersionAfter != nil {
		toSerialize["delete_version_after"] = o.DeleteVersionAfter
	}
	if o.MaxVersions != nil {
		toSerialize["max_versions"] = o.MaxVersions
	}
	return json.Marshal(toSerialize)
}

type NullableKvConfigRequest struct {
	value *KvConfigRequest
	isSet bool
}

func (v NullableKvConfigRequest) Get() *KvConfigRequest {
	return v.value
}

func (v *NullableKvConfigRequest) Set(val *KvConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKvConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKvConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKvConfigRequest(val *KvConfigRequest) *NullableKvConfigRequest {
	return &NullableKvConfigRequest{value: val, isSet: true}
}

func (v NullableKvConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKvConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


