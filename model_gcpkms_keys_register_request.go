/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// GcpkmsKeysRegisterRequest struct for GcpkmsKeysRegisterRequest
type GcpkmsKeysRegisterRequest struct {
	// Full resource ID of the crypto key including the project, location, key ring, and crypto key like \"projects/%s/locations/%s/keyRings/%s/cryptoKeys/%s\". This crypto key must already exist in Google Cloud KMS unless verify is set to \"false\".
	CryptoKey *string `json:"crypto_key,omitempty"`
	// Verify that the given Google Cloud KMS crypto key exists and is accessible before creating the storage entry in Vault. Set this to \"false\" if the key will not exist at creation time.
	Verify *bool `json:"verify,omitempty"`
}

// NewGcpkmsKeysRegisterRequest instantiates a new GcpkmsKeysRegisterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsKeysRegisterRequest() *GcpkmsKeysRegisterRequest {
	this := GcpkmsKeysRegisterRequest{}
	var verify bool = true
	this.Verify = &verify
	return &this
}

// NewGcpkmsKeysRegisterRequestWithDefaults instantiates a new GcpkmsKeysRegisterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsKeysRegisterRequestWithDefaults() *GcpkmsKeysRegisterRequest {
	this := GcpkmsKeysRegisterRequest{}
	var verify bool = true
	this.Verify = &verify
	return &this
}

// GetCryptoKey returns the CryptoKey field value if set, zero value otherwise.
func (o *GcpkmsKeysRegisterRequest) GetCryptoKey() string {
	if o == nil || o.CryptoKey == nil {
		var ret string
		return ret
	}
	return *o.CryptoKey
}

// GetCryptoKeyOk returns a tuple with the CryptoKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysRegisterRequest) GetCryptoKeyOk() (*string, bool) {
	if o == nil || o.CryptoKey == nil {
		return nil, false
	}
	return o.CryptoKey, true
}

// HasCryptoKey returns a boolean if a field has been set.
func (o *GcpkmsKeysRegisterRequest) HasCryptoKey() bool {
	if o != nil && o.CryptoKey != nil {
		return true
	}

	return false
}

// SetCryptoKey gets a reference to the given string and assigns it to the CryptoKey field.
func (o *GcpkmsKeysRegisterRequest) SetCryptoKey(v string) {
	o.CryptoKey = &v
}

// GetVerify returns the Verify field value if set, zero value otherwise.
func (o *GcpkmsKeysRegisterRequest) GetVerify() bool {
	if o == nil || o.Verify == nil {
		var ret bool
		return ret
	}
	return *o.Verify
}

// GetVerifyOk returns a tuple with the Verify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysRegisterRequest) GetVerifyOk() (*bool, bool) {
	if o == nil || o.Verify == nil {
		return nil, false
	}
	return o.Verify, true
}

// HasVerify returns a boolean if a field has been set.
func (o *GcpkmsKeysRegisterRequest) HasVerify() bool {
	if o != nil && o.Verify != nil {
		return true
	}

	return false
}

// SetVerify gets a reference to the given bool and assigns it to the Verify field.
func (o *GcpkmsKeysRegisterRequest) SetVerify(v bool) {
	o.Verify = &v
}

func (o GcpkmsKeysRegisterRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CryptoKey != nil {
		toSerialize["crypto_key"] = o.CryptoKey
	}
	if o.Verify != nil {
		toSerialize["verify"] = o.Verify
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsKeysRegisterRequest struct {
	value *GcpkmsKeysRegisterRequest
	isSet bool
}

func (v NullableGcpkmsKeysRegisterRequest) Get() *GcpkmsKeysRegisterRequest {
	return v.value
}

func (v *NullableGcpkmsKeysRegisterRequest) Set(val *GcpkmsKeysRegisterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsKeysRegisterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsKeysRegisterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsKeysRegisterRequest(val *GcpkmsKeysRegisterRequest) *NullableGcpkmsKeysRegisterRequest {
	return &NullableGcpkmsKeysRegisterRequest{value: val, isSet: true}
}

func (v NullableGcpkmsKeysRegisterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsKeysRegisterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


