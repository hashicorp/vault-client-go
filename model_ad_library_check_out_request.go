/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// AdLibraryCheckOutRequest struct for AdLibraryCheckOutRequest
type AdLibraryCheckOutRequest struct {
	// The length of time before the check-out will expire, in seconds.
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewAdLibraryCheckOutRequest instantiates a new AdLibraryCheckOutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdLibraryCheckOutRequest() *AdLibraryCheckOutRequest {
	this := AdLibraryCheckOutRequest{}
	return &this
}

// NewAdLibraryCheckOutRequestWithDefaults instantiates a new AdLibraryCheckOutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdLibraryCheckOutRequestWithDefaults() *AdLibraryCheckOutRequest {
	this := AdLibraryCheckOutRequest{}
	return &this
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *AdLibraryCheckOutRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdLibraryCheckOutRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AdLibraryCheckOutRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *AdLibraryCheckOutRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o AdLibraryCheckOutRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableAdLibraryCheckOutRequest struct {
	value *AdLibraryCheckOutRequest
	isSet bool
}

func (v NullableAdLibraryCheckOutRequest) Get() *AdLibraryCheckOutRequest {
	return v.value
}

func (v *NullableAdLibraryCheckOutRequest) Set(val *AdLibraryCheckOutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAdLibraryCheckOutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAdLibraryCheckOutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdLibraryCheckOutRequest(val *AdLibraryCheckOutRequest) *NullableAdLibraryCheckOutRequest {
	return &NullableAdLibraryCheckOutRequest{value: val, isSet: true}
}

func (v NullableAdLibraryCheckOutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdLibraryCheckOutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


