/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// ApproleRoleSecretIdBoundCidrsRequest struct for ApproleRoleSecretIdBoundCidrsRequest
type ApproleRoleSecretIdBoundCidrsRequest struct {
	// Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.
	SecretIdBoundCidrs []string `json:"secret_id_bound_cidrs,omitempty"`
}

// NewApproleRoleSecretIdBoundCidrsRequest instantiates a new ApproleRoleSecretIdBoundCidrsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleSecretIdBoundCidrsRequest() *ApproleRoleSecretIdBoundCidrsRequest {
	this := ApproleRoleSecretIdBoundCidrsRequest{}
	return &this
}

// NewApproleRoleSecretIdBoundCidrsRequestWithDefaults instantiates a new ApproleRoleSecretIdBoundCidrsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleSecretIdBoundCidrsRequestWithDefaults() *ApproleRoleSecretIdBoundCidrsRequest {
	this := ApproleRoleSecretIdBoundCidrsRequest{}
	return &this
}

// GetSecretIdBoundCidrs returns the SecretIdBoundCidrs field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdBoundCidrsRequest) GetSecretIdBoundCidrs() []string {
	if o == nil || o.SecretIdBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.SecretIdBoundCidrs
}

// GetSecretIdBoundCidrsOk returns a tuple with the SecretIdBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdBoundCidrsRequest) GetSecretIdBoundCidrsOk() ([]string, bool) {
	if o == nil || o.SecretIdBoundCidrs == nil {
		return nil, false
	}
	return o.SecretIdBoundCidrs, true
}

// HasSecretIdBoundCidrs returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdBoundCidrsRequest) HasSecretIdBoundCidrs() bool {
	if o != nil && o.SecretIdBoundCidrs != nil {
		return true
	}

	return false
}

// SetSecretIdBoundCidrs gets a reference to the given []string and assigns it to the SecretIdBoundCidrs field.
func (o *ApproleRoleSecretIdBoundCidrsRequest) SetSecretIdBoundCidrs(v []string) {
	o.SecretIdBoundCidrs = v
}

func (o ApproleRoleSecretIdBoundCidrsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretIdBoundCidrs != nil {
		toSerialize["secret_id_bound_cidrs"] = o.SecretIdBoundCidrs
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleSecretIdBoundCidrsRequest struct {
	value *ApproleRoleSecretIdBoundCidrsRequest
	isSet bool
}

func (v NullableApproleRoleSecretIdBoundCidrsRequest) Get() *ApproleRoleSecretIdBoundCidrsRequest {
	return v.value
}

func (v *NullableApproleRoleSecretIdBoundCidrsRequest) Set(val *ApproleRoleSecretIdBoundCidrsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleSecretIdBoundCidrsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleSecretIdBoundCidrsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleSecretIdBoundCidrsRequest(val *ApproleRoleSecretIdBoundCidrsRequest) *NullableApproleRoleSecretIdBoundCidrsRequest {
	return &NullableApproleRoleSecretIdBoundCidrsRequest{value: val, isSet: true}
}

func (v NullableApproleRoleSecretIdBoundCidrsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleSecretIdBoundCidrsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


