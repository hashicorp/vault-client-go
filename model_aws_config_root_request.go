/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// AwsConfigRootRequest struct for AwsConfigRootRequest
type AwsConfigRootRequest struct {
	// Access key with permission to create new keys.
	AccessKey *string `json:"access_key,omitempty"`
	// Endpoint to custom IAM server URL
	IamEndpoint *string `json:"iam_endpoint,omitempty"`
	// Maximum number of retries for recoverable exceptions of AWS APIs
	MaxRetries *int32 `json:"max_retries,omitempty"`
	// Region for API calls.
	Region *string `json:"region,omitempty"`
	// Secret key with permission to create new keys.
	SecretKey *string `json:"secret_key,omitempty"`
	// Endpoint to custom STS server URL
	StsEndpoint *string `json:"sts_endpoint,omitempty"`
	// Template to generate custom IAM usernames
	UsernameTemplate *string `json:"username_template,omitempty"`
}

// NewAwsConfigRootRequest instantiates a new AwsConfigRootRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigRootRequest() *AwsConfigRootRequest {
	this := AwsConfigRootRequest{}
	var maxRetries int32 = -1
	this.MaxRetries = &maxRetries
	return &this
}

// NewAwsConfigRootRequestWithDefaults instantiates a new AwsConfigRootRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigRootRequestWithDefaults() *AwsConfigRootRequest {
	this := AwsConfigRootRequest{}
	var maxRetries int32 = -1
	this.MaxRetries = &maxRetries
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetAccessKey() string {
	if o == nil || o.AccessKey == nil {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetAccessKeyOk() (*string, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *AwsConfigRootRequest) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetIamEndpoint returns the IamEndpoint field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetIamEndpoint() string {
	if o == nil || o.IamEndpoint == nil {
		var ret string
		return ret
	}
	return *o.IamEndpoint
}

// GetIamEndpointOk returns a tuple with the IamEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetIamEndpointOk() (*string, bool) {
	if o == nil || o.IamEndpoint == nil {
		return nil, false
	}
	return o.IamEndpoint, true
}

// HasIamEndpoint returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasIamEndpoint() bool {
	if o != nil && o.IamEndpoint != nil {
		return true
	}

	return false
}

// SetIamEndpoint gets a reference to the given string and assigns it to the IamEndpoint field.
func (o *AwsConfigRootRequest) SetIamEndpoint(v string) {
	o.IamEndpoint = &v
}

// GetMaxRetries returns the MaxRetries field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetMaxRetries() int32 {
	if o == nil || o.MaxRetries == nil {
		var ret int32
		return ret
	}
	return *o.MaxRetries
}

// GetMaxRetriesOk returns a tuple with the MaxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetMaxRetriesOk() (*int32, bool) {
	if o == nil || o.MaxRetries == nil {
		return nil, false
	}
	return o.MaxRetries, true
}

// HasMaxRetries returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasMaxRetries() bool {
	if o != nil && o.MaxRetries != nil {
		return true
	}

	return false
}

// SetMaxRetries gets a reference to the given int32 and assigns it to the MaxRetries field.
func (o *AwsConfigRootRequest) SetMaxRetries(v int32) {
	o.MaxRetries = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AwsConfigRootRequest) SetRegion(v string) {
	o.Region = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *AwsConfigRootRequest) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetStsEndpoint returns the StsEndpoint field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetStsEndpoint() string {
	if o == nil || o.StsEndpoint == nil {
		var ret string
		return ret
	}
	return *o.StsEndpoint
}

// GetStsEndpointOk returns a tuple with the StsEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetStsEndpointOk() (*string, bool) {
	if o == nil || o.StsEndpoint == nil {
		return nil, false
	}
	return o.StsEndpoint, true
}

// HasStsEndpoint returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasStsEndpoint() bool {
	if o != nil && o.StsEndpoint != nil {
		return true
	}

	return false
}

// SetStsEndpoint gets a reference to the given string and assigns it to the StsEndpoint field.
func (o *AwsConfigRootRequest) SetStsEndpoint(v string) {
	o.StsEndpoint = &v
}

// GetUsernameTemplate returns the UsernameTemplate field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetUsernameTemplate() string {
	if o == nil || o.UsernameTemplate == nil {
		var ret string
		return ret
	}
	return *o.UsernameTemplate
}

// GetUsernameTemplateOk returns a tuple with the UsernameTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetUsernameTemplateOk() (*string, bool) {
	if o == nil || o.UsernameTemplate == nil {
		return nil, false
	}
	return o.UsernameTemplate, true
}

// HasUsernameTemplate returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasUsernameTemplate() bool {
	if o != nil && o.UsernameTemplate != nil {
		return true
	}

	return false
}

// SetUsernameTemplate gets a reference to the given string and assigns it to the UsernameTemplate field.
func (o *AwsConfigRootRequest) SetUsernameTemplate(v string) {
	o.UsernameTemplate = &v
}

func (o AwsConfigRootRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["access_key"] = o.AccessKey
	}
	if o.IamEndpoint != nil {
		toSerialize["iam_endpoint"] = o.IamEndpoint
	}
	if o.MaxRetries != nil {
		toSerialize["max_retries"] = o.MaxRetries
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.SecretKey != nil {
		toSerialize["secret_key"] = o.SecretKey
	}
	if o.StsEndpoint != nil {
		toSerialize["sts_endpoint"] = o.StsEndpoint
	}
	if o.UsernameTemplate != nil {
		toSerialize["username_template"] = o.UsernameTemplate
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigRootRequest struct {
	value *AwsConfigRootRequest
	isSet bool
}

func (v NullableAwsConfigRootRequest) Get() *AwsConfigRootRequest {
	return v.value
}

func (v *NullableAwsConfigRootRequest) Set(val *AwsConfigRootRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigRootRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigRootRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigRootRequest(val *AwsConfigRootRequest) *NullableAwsConfigRootRequest {
	return &NullableAwsConfigRootRequest{value: val, isSet: true}
}

func (v NullableAwsConfigRootRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigRootRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


