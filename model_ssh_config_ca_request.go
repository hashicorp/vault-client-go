/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// SshConfigCaRequest struct for SshConfigCaRequest
type SshConfigCaRequest struct {
	// Generate SSH key pair internally rather than use the private_key and public_key fields.
	GenerateSigningKey *bool `json:"generate_signing_key,omitempty"`
	// Specifies the desired key bits when generating variable-length keys (such as when key_type=\"ssh-rsa\") or which NIST P-curve to use when key_type=\"ec\" (256, 384, or 521).
	KeyBits *int32 `json:"key_bits,omitempty"`
	// Specifies the desired key type when generating; could be a OpenSSH key type identifier (ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, ecdsa-sha2-nistp521, or ssh-ed25519) or an algorithm (rsa, ec, ed25519).
	KeyType *string `json:"key_type,omitempty"`
	// Private half of the SSH key that will be used to sign certificates.
	PrivateKey *string `json:"private_key,omitempty"`
	// Public half of the SSH key that will be used to sign certificates.
	PublicKey *string `json:"public_key,omitempty"`
}

// NewSshConfigCaRequest instantiates a new SshConfigCaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshConfigCaRequest() *SshConfigCaRequest {
	this := SshConfigCaRequest{}
	var generateSigningKey bool = true
	this.GenerateSigningKey = &generateSigningKey
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyType string = "ssh-rsa"
	this.KeyType = &keyType
	return &this
}

// NewSshConfigCaRequestWithDefaults instantiates a new SshConfigCaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshConfigCaRequestWithDefaults() *SshConfigCaRequest {
	this := SshConfigCaRequest{}
	var generateSigningKey bool = true
	this.GenerateSigningKey = &generateSigningKey
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyType string = "ssh-rsa"
	this.KeyType = &keyType
	return &this
}

// GetGenerateSigningKey returns the GenerateSigningKey field value if set, zero value otherwise.
func (o *SshConfigCaRequest) GetGenerateSigningKey() bool {
	if o == nil || o.GenerateSigningKey == nil {
		var ret bool
		return ret
	}
	return *o.GenerateSigningKey
}

// GetGenerateSigningKeyOk returns a tuple with the GenerateSigningKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshConfigCaRequest) GetGenerateSigningKeyOk() (*bool, bool) {
	if o == nil || o.GenerateSigningKey == nil {
		return nil, false
	}
	return o.GenerateSigningKey, true
}

// HasGenerateSigningKey returns a boolean if a field has been set.
func (o *SshConfigCaRequest) HasGenerateSigningKey() bool {
	if o != nil && o.GenerateSigningKey != nil {
		return true
	}

	return false
}

// SetGenerateSigningKey gets a reference to the given bool and assigns it to the GenerateSigningKey field.
func (o *SshConfigCaRequest) SetGenerateSigningKey(v bool) {
	o.GenerateSigningKey = &v
}

// GetKeyBits returns the KeyBits field value if set, zero value otherwise.
func (o *SshConfigCaRequest) GetKeyBits() int32 {
	if o == nil || o.KeyBits == nil {
		var ret int32
		return ret
	}
	return *o.KeyBits
}

// GetKeyBitsOk returns a tuple with the KeyBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshConfigCaRequest) GetKeyBitsOk() (*int32, bool) {
	if o == nil || o.KeyBits == nil {
		return nil, false
	}
	return o.KeyBits, true
}

// HasKeyBits returns a boolean if a field has been set.
func (o *SshConfigCaRequest) HasKeyBits() bool {
	if o != nil && o.KeyBits != nil {
		return true
	}

	return false
}

// SetKeyBits gets a reference to the given int32 and assigns it to the KeyBits field.
func (o *SshConfigCaRequest) SetKeyBits(v int32) {
	o.KeyBits = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *SshConfigCaRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshConfigCaRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *SshConfigCaRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *SshConfigCaRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *SshConfigCaRequest) GetPrivateKey() string {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshConfigCaRequest) GetPrivateKeyOk() (*string, bool) {
	if o == nil || o.PrivateKey == nil {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *SshConfigCaRequest) HasPrivateKey() bool {
	if o != nil && o.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *SshConfigCaRequest) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *SshConfigCaRequest) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshConfigCaRequest) GetPublicKeyOk() (*string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *SshConfigCaRequest) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *SshConfigCaRequest) SetPublicKey(v string) {
	o.PublicKey = &v
}

func (o SshConfigCaRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GenerateSigningKey != nil {
		toSerialize["generate_signing_key"] = o.GenerateSigningKey
	}
	if o.KeyBits != nil {
		toSerialize["key_bits"] = o.KeyBits
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.PrivateKey != nil {
		toSerialize["private_key"] = o.PrivateKey
	}
	if o.PublicKey != nil {
		toSerialize["public_key"] = o.PublicKey
	}
	return json.Marshal(toSerialize)
}

type NullableSshConfigCaRequest struct {
	value *SshConfigCaRequest
	isSet bool
}

func (v NullableSshConfigCaRequest) Get() *SshConfigCaRequest {
	return v.value
}

func (v *NullableSshConfigCaRequest) Set(val *SshConfigCaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshConfigCaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshConfigCaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshConfigCaRequest(val *SshConfigCaRequest) *NullableSshConfigCaRequest {
	return &NullableSshConfigCaRequest{value: val, isSet: true}
}

func (v NullableSshConfigCaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshConfigCaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


