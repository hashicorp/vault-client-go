/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// GcpStaticAccountRequest struct for GcpStaticAccountRequest
type GcpStaticAccountRequest struct {
	// Bindings configuration string.
	Bindings *string `json:"bindings,omitempty"`
	// Type of secret generated for this account. Cannot be updated. Defaults to \"access_token\"
	SecretType *string `json:"secret_type,omitempty"`
	// Required. Email of the GCP service account to manage. Cannot be updated.
	ServiceAccountEmail *string `json:"service_account_email,omitempty"`
	// List of OAuth scopes to assign to access tokens generated under this account. Ignored if \"secret_type\" is not \"\"access_token\"\"
	TokenScopes []string `json:"token_scopes,omitempty"`
}

// NewGcpStaticAccountRequest instantiates a new GcpStaticAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpStaticAccountRequest() *GcpStaticAccountRequest {
	this := GcpStaticAccountRequest{}
	var secretType string = "access_token"
	this.SecretType = &secretType
	return &this
}

// NewGcpStaticAccountRequestWithDefaults instantiates a new GcpStaticAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpStaticAccountRequestWithDefaults() *GcpStaticAccountRequest {
	this := GcpStaticAccountRequest{}
	var secretType string = "access_token"
	this.SecretType = &secretType
	return &this
}

// GetBindings returns the Bindings field value if set, zero value otherwise.
func (o *GcpStaticAccountRequest) GetBindings() string {
	if o == nil || o.Bindings == nil {
		var ret string
		return ret
	}
	return *o.Bindings
}

// GetBindingsOk returns a tuple with the Bindings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpStaticAccountRequest) GetBindingsOk() (*string, bool) {
	if o == nil || o.Bindings == nil {
		return nil, false
	}
	return o.Bindings, true
}

// HasBindings returns a boolean if a field has been set.
func (o *GcpStaticAccountRequest) HasBindings() bool {
	if o != nil && o.Bindings != nil {
		return true
	}

	return false
}

// SetBindings gets a reference to the given string and assigns it to the Bindings field.
func (o *GcpStaticAccountRequest) SetBindings(v string) {
	o.Bindings = &v
}

// GetSecretType returns the SecretType field value if set, zero value otherwise.
func (o *GcpStaticAccountRequest) GetSecretType() string {
	if o == nil || o.SecretType == nil {
		var ret string
		return ret
	}
	return *o.SecretType
}

// GetSecretTypeOk returns a tuple with the SecretType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpStaticAccountRequest) GetSecretTypeOk() (*string, bool) {
	if o == nil || o.SecretType == nil {
		return nil, false
	}
	return o.SecretType, true
}

// HasSecretType returns a boolean if a field has been set.
func (o *GcpStaticAccountRequest) HasSecretType() bool {
	if o != nil && o.SecretType != nil {
		return true
	}

	return false
}

// SetSecretType gets a reference to the given string and assigns it to the SecretType field.
func (o *GcpStaticAccountRequest) SetSecretType(v string) {
	o.SecretType = &v
}

// GetServiceAccountEmail returns the ServiceAccountEmail field value if set, zero value otherwise.
func (o *GcpStaticAccountRequest) GetServiceAccountEmail() string {
	if o == nil || o.ServiceAccountEmail == nil {
		var ret string
		return ret
	}
	return *o.ServiceAccountEmail
}

// GetServiceAccountEmailOk returns a tuple with the ServiceAccountEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpStaticAccountRequest) GetServiceAccountEmailOk() (*string, bool) {
	if o == nil || o.ServiceAccountEmail == nil {
		return nil, false
	}
	return o.ServiceAccountEmail, true
}

// HasServiceAccountEmail returns a boolean if a field has been set.
func (o *GcpStaticAccountRequest) HasServiceAccountEmail() bool {
	if o != nil && o.ServiceAccountEmail != nil {
		return true
	}

	return false
}

// SetServiceAccountEmail gets a reference to the given string and assigns it to the ServiceAccountEmail field.
func (o *GcpStaticAccountRequest) SetServiceAccountEmail(v string) {
	o.ServiceAccountEmail = &v
}

// GetTokenScopes returns the TokenScopes field value if set, zero value otherwise.
func (o *GcpStaticAccountRequest) GetTokenScopes() []string {
	if o == nil || o.TokenScopes == nil {
		var ret []string
		return ret
	}
	return o.TokenScopes
}

// GetTokenScopesOk returns a tuple with the TokenScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpStaticAccountRequest) GetTokenScopesOk() ([]string, bool) {
	if o == nil || o.TokenScopes == nil {
		return nil, false
	}
	return o.TokenScopes, true
}

// HasTokenScopes returns a boolean if a field has been set.
func (o *GcpStaticAccountRequest) HasTokenScopes() bool {
	if o != nil && o.TokenScopes != nil {
		return true
	}

	return false
}

// SetTokenScopes gets a reference to the given []string and assigns it to the TokenScopes field.
func (o *GcpStaticAccountRequest) SetTokenScopes(v []string) {
	o.TokenScopes = v
}

func (o GcpStaticAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bindings != nil {
		toSerialize["bindings"] = o.Bindings
	}
	if o.SecretType != nil {
		toSerialize["secret_type"] = o.SecretType
	}
	if o.ServiceAccountEmail != nil {
		toSerialize["service_account_email"] = o.ServiceAccountEmail
	}
	if o.TokenScopes != nil {
		toSerialize["token_scopes"] = o.TokenScopes
	}
	return json.Marshal(toSerialize)
}

type NullableGcpStaticAccountRequest struct {
	value *GcpStaticAccountRequest
	isSet bool
}

func (v NullableGcpStaticAccountRequest) Get() *GcpStaticAccountRequest {
	return v.value
}

func (v *NullableGcpStaticAccountRequest) Set(val *GcpStaticAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpStaticAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpStaticAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpStaticAccountRequest(val *GcpStaticAccountRequest) *NullableGcpStaticAccountRequest {
	return &NullableGcpStaticAccountRequest{value: val, isSet: true}
}

func (v NullableGcpStaticAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpStaticAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


