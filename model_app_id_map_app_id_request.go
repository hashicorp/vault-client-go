/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// AppIdMapAppIdRequest struct for AppIdMapAppIdRequest
type AppIdMapAppIdRequest struct {
	// A name to map to this app ID for logs.
	DisplayName *string `json:"display_name,omitempty"`
	// Policies for the app ID.
	Value *string `json:"value,omitempty"`
}

// NewAppIdMapAppIdRequest instantiates a new AppIdMapAppIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppIdMapAppIdRequest() *AppIdMapAppIdRequest {
	this := AppIdMapAppIdRequest{}
	return &this
}

// NewAppIdMapAppIdRequestWithDefaults instantiates a new AppIdMapAppIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppIdMapAppIdRequestWithDefaults() *AppIdMapAppIdRequest {
	this := AppIdMapAppIdRequest{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AppIdMapAppIdRequest) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppIdMapAppIdRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AppIdMapAppIdRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AppIdMapAppIdRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AppIdMapAppIdRequest) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppIdMapAppIdRequest) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AppIdMapAppIdRequest) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AppIdMapAppIdRequest) SetValue(v string) {
	o.Value = &v
}

func (o AppIdMapAppIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableAppIdMapAppIdRequest struct {
	value *AppIdMapAppIdRequest
	isSet bool
}

func (v NullableAppIdMapAppIdRequest) Get() *AppIdMapAppIdRequest {
	return v.value
}

func (v *NullableAppIdMapAppIdRequest) Set(val *AppIdMapAppIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAppIdMapAppIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAppIdMapAppIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppIdMapAppIdRequest(val *AppIdMapAppIdRequest) *NullableAppIdMapAppIdRequest {
	return &NullableAppIdMapAppIdRequest{value: val, isSet: true}
}

func (v NullableAppIdMapAppIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppIdMapAppIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


