/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// GcpkmsEncryptRequest struct for GcpkmsEncryptRequest
type GcpkmsEncryptRequest struct {
	// Optional base64-encoded data that, if specified, must also be provided to decrypt this payload.
	AdditionalAuthenticatedData *string `json:"additional_authenticated_data,omitempty"`
	// Integer version of the crypto key version to use for encryption. If unspecified, this defaults to the latest active crypto key version.
	KeyVersion *int32 `json:"key_version,omitempty"`
	// Plaintext value to be encrypted. This can be a string or binary, but the size is limited. See the Google Cloud KMS documentation for information on size limitations by key types.
	Plaintext *string `json:"plaintext,omitempty"`
}

// NewGcpkmsEncryptRequest instantiates a new GcpkmsEncryptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsEncryptRequest() *GcpkmsEncryptRequest {
	this := GcpkmsEncryptRequest{}
	return &this
}

// NewGcpkmsEncryptRequestWithDefaults instantiates a new GcpkmsEncryptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsEncryptRequestWithDefaults() *GcpkmsEncryptRequest {
	this := GcpkmsEncryptRequest{}
	return &this
}

// GetAdditionalAuthenticatedData returns the AdditionalAuthenticatedData field value if set, zero value otherwise.
func (o *GcpkmsEncryptRequest) GetAdditionalAuthenticatedData() string {
	if o == nil || o.AdditionalAuthenticatedData == nil {
		var ret string
		return ret
	}
	return *o.AdditionalAuthenticatedData
}

// GetAdditionalAuthenticatedDataOk returns a tuple with the AdditionalAuthenticatedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsEncryptRequest) GetAdditionalAuthenticatedDataOk() (*string, bool) {
	if o == nil || o.AdditionalAuthenticatedData == nil {
		return nil, false
	}
	return o.AdditionalAuthenticatedData, true
}

// HasAdditionalAuthenticatedData returns a boolean if a field has been set.
func (o *GcpkmsEncryptRequest) HasAdditionalAuthenticatedData() bool {
	if o != nil && o.AdditionalAuthenticatedData != nil {
		return true
	}

	return false
}

// SetAdditionalAuthenticatedData gets a reference to the given string and assigns it to the AdditionalAuthenticatedData field.
func (o *GcpkmsEncryptRequest) SetAdditionalAuthenticatedData(v string) {
	o.AdditionalAuthenticatedData = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *GcpkmsEncryptRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsEncryptRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *GcpkmsEncryptRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *GcpkmsEncryptRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

// GetPlaintext returns the Plaintext field value if set, zero value otherwise.
func (o *GcpkmsEncryptRequest) GetPlaintext() string {
	if o == nil || o.Plaintext == nil {
		var ret string
		return ret
	}
	return *o.Plaintext
}

// GetPlaintextOk returns a tuple with the Plaintext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsEncryptRequest) GetPlaintextOk() (*string, bool) {
	if o == nil || o.Plaintext == nil {
		return nil, false
	}
	return o.Plaintext, true
}

// HasPlaintext returns a boolean if a field has been set.
func (o *GcpkmsEncryptRequest) HasPlaintext() bool {
	if o != nil && o.Plaintext != nil {
		return true
	}

	return false
}

// SetPlaintext gets a reference to the given string and assigns it to the Plaintext field.
func (o *GcpkmsEncryptRequest) SetPlaintext(v string) {
	o.Plaintext = &v
}

func (o GcpkmsEncryptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalAuthenticatedData != nil {
		toSerialize["additional_authenticated_data"] = o.AdditionalAuthenticatedData
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	if o.Plaintext != nil {
		toSerialize["plaintext"] = o.Plaintext
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsEncryptRequest struct {
	value *GcpkmsEncryptRequest
	isSet bool
}

func (v NullableGcpkmsEncryptRequest) Get() *GcpkmsEncryptRequest {
	return v.value
}

func (v *NullableGcpkmsEncryptRequest) Set(val *GcpkmsEncryptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsEncryptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsEncryptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsEncryptRequest(val *GcpkmsEncryptRequest) *NullableGcpkmsEncryptRequest {
	return &NullableGcpkmsEncryptRequest{value: val, isSet: true}
}

func (v NullableGcpkmsEncryptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsEncryptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


