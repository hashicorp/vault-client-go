/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// SystemPoliciesAclRequest struct for SystemPoliciesAclRequest
type SystemPoliciesAclRequest struct {
	// The rules of the policy.
	Policy *string `json:"policy,omitempty"`
}

// NewSystemPoliciesAclRequest instantiates a new SystemPoliciesAclRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemPoliciesAclRequest() *SystemPoliciesAclRequest {
	this := SystemPoliciesAclRequest{}
	return &this
}

// NewSystemPoliciesAclRequestWithDefaults instantiates a new SystemPoliciesAclRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemPoliciesAclRequestWithDefaults() *SystemPoliciesAclRequest {
	this := SystemPoliciesAclRequest{}
	return &this
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *SystemPoliciesAclRequest) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPoliciesAclRequest) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *SystemPoliciesAclRequest) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *SystemPoliciesAclRequest) SetPolicy(v string) {
	o.Policy = &v
}

func (o SystemPoliciesAclRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	return json.Marshal(toSerialize)
}

type NullableSystemPoliciesAclRequest struct {
	value *SystemPoliciesAclRequest
	isSet bool
}

func (v NullableSystemPoliciesAclRequest) Get() *SystemPoliciesAclRequest {
	return v.value
}

func (v *NullableSystemPoliciesAclRequest) Set(val *SystemPoliciesAclRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemPoliciesAclRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemPoliciesAclRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemPoliciesAclRequest(val *SystemPoliciesAclRequest) *NullableSystemPoliciesAclRequest {
	return &NullableSystemPoliciesAclRequest{value: val, isSet: true}
}

func (v NullableSystemPoliciesAclRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemPoliciesAclRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


