/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// IdentityOidcProviderAuthorizeRequest struct for IdentityOidcProviderAuthorizeRequest
type IdentityOidcProviderAuthorizeRequest struct {
	// The ID of the requesting client.
	ClientId string `json:"client_id"`
	// The code challenge derived from the code verifier.
	CodeChallenge *string `json:"code_challenge,omitempty"`
	// The method that was used to derive the code challenge. The following methods are supported: 'S256', 'plain'. Defaults to 'plain'.
	CodeChallengeMethod *string `json:"code_challenge_method,omitempty"`
	// The allowable elapsed time in seconds since the last time the end-user was actively authenticated.
	MaxAge *int32 `json:"max_age,omitempty"`
	// The value that will be returned in the ID token nonce claim after a token exchange.
	Nonce *string `json:"nonce,omitempty"`
	// The redirection URI to which the response will be sent.
	RedirectUri string `json:"redirect_uri"`
	// The OIDC authentication flow to be used. The following response types are supported: 'code'
	ResponseType string `json:"response_type"`
	// A space-delimited, case-sensitive list of scopes to be requested. The 'openid' scope is required.
	Scope string `json:"scope"`
	// The value used to maintain state between the authentication request and client.
	State string `json:"state"`
}

// NewIdentityOidcProviderAuthorizeRequest instantiates a new IdentityOidcProviderAuthorizeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcProviderAuthorizeRequest(clientId string, redirectUri string, responseType string, scope string, state string) *IdentityOidcProviderAuthorizeRequest {
	this := IdentityOidcProviderAuthorizeRequest{}
	this.ClientId = clientId
	var codeChallengeMethod string = "plain"
	this.CodeChallengeMethod = &codeChallengeMethod
	this.RedirectUri = redirectUri
	this.ResponseType = responseType
	this.Scope = scope
	this.State = state
	return &this
}

// NewIdentityOidcProviderAuthorizeRequestWithDefaults instantiates a new IdentityOidcProviderAuthorizeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcProviderAuthorizeRequestWithDefaults() *IdentityOidcProviderAuthorizeRequest {
	this := IdentityOidcProviderAuthorizeRequest{}
	var codeChallengeMethod string = "plain"
	this.CodeChallengeMethod = &codeChallengeMethod
	return &this
}

// GetClientId returns the ClientId field value
func (o *IdentityOidcProviderAuthorizeRequest) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *IdentityOidcProviderAuthorizeRequest) SetClientId(v string) {
	o.ClientId = v
}

// GetCodeChallenge returns the CodeChallenge field value if set, zero value otherwise.
func (o *IdentityOidcProviderAuthorizeRequest) GetCodeChallenge() string {
	if o == nil || o.CodeChallenge == nil {
		var ret string
		return ret
	}
	return *o.CodeChallenge
}

// GetCodeChallengeOk returns a tuple with the CodeChallenge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetCodeChallengeOk() (*string, bool) {
	if o == nil || o.CodeChallenge == nil {
		return nil, false
	}
	return o.CodeChallenge, true
}

// HasCodeChallenge returns a boolean if a field has been set.
func (o *IdentityOidcProviderAuthorizeRequest) HasCodeChallenge() bool {
	if o != nil && o.CodeChallenge != nil {
		return true
	}

	return false
}

// SetCodeChallenge gets a reference to the given string and assigns it to the CodeChallenge field.
func (o *IdentityOidcProviderAuthorizeRequest) SetCodeChallenge(v string) {
	o.CodeChallenge = &v
}

// GetCodeChallengeMethod returns the CodeChallengeMethod field value if set, zero value otherwise.
func (o *IdentityOidcProviderAuthorizeRequest) GetCodeChallengeMethod() string {
	if o == nil || o.CodeChallengeMethod == nil {
		var ret string
		return ret
	}
	return *o.CodeChallengeMethod
}

// GetCodeChallengeMethodOk returns a tuple with the CodeChallengeMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetCodeChallengeMethodOk() (*string, bool) {
	if o == nil || o.CodeChallengeMethod == nil {
		return nil, false
	}
	return o.CodeChallengeMethod, true
}

// HasCodeChallengeMethod returns a boolean if a field has been set.
func (o *IdentityOidcProviderAuthorizeRequest) HasCodeChallengeMethod() bool {
	if o != nil && o.CodeChallengeMethod != nil {
		return true
	}

	return false
}

// SetCodeChallengeMethod gets a reference to the given string and assigns it to the CodeChallengeMethod field.
func (o *IdentityOidcProviderAuthorizeRequest) SetCodeChallengeMethod(v string) {
	o.CodeChallengeMethod = &v
}

// GetMaxAge returns the MaxAge field value if set, zero value otherwise.
func (o *IdentityOidcProviderAuthorizeRequest) GetMaxAge() int32 {
	if o == nil || o.MaxAge == nil {
		var ret int32
		return ret
	}
	return *o.MaxAge
}

// GetMaxAgeOk returns a tuple with the MaxAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetMaxAgeOk() (*int32, bool) {
	if o == nil || o.MaxAge == nil {
		return nil, false
	}
	return o.MaxAge, true
}

// HasMaxAge returns a boolean if a field has been set.
func (o *IdentityOidcProviderAuthorizeRequest) HasMaxAge() bool {
	if o != nil && o.MaxAge != nil {
		return true
	}

	return false
}

// SetMaxAge gets a reference to the given int32 and assigns it to the MaxAge field.
func (o *IdentityOidcProviderAuthorizeRequest) SetMaxAge(v int32) {
	o.MaxAge = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *IdentityOidcProviderAuthorizeRequest) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *IdentityOidcProviderAuthorizeRequest) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *IdentityOidcProviderAuthorizeRequest) SetNonce(v string) {
	o.Nonce = &v
}

// GetRedirectUri returns the RedirectUri field value
func (o *IdentityOidcProviderAuthorizeRequest) GetRedirectUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetRedirectUriOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RedirectUri, true
}

// SetRedirectUri sets field value
func (o *IdentityOidcProviderAuthorizeRequest) SetRedirectUri(v string) {
	o.RedirectUri = v
}

// GetResponseType returns the ResponseType field value
func (o *IdentityOidcProviderAuthorizeRequest) GetResponseType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseType
}

// GetResponseTypeOk returns a tuple with the ResponseType field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetResponseTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResponseType, true
}

// SetResponseType sets field value
func (o *IdentityOidcProviderAuthorizeRequest) SetResponseType(v string) {
	o.ResponseType = v
}

// GetScope returns the Scope field value
func (o *IdentityOidcProviderAuthorizeRequest) GetScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetScopeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *IdentityOidcProviderAuthorizeRequest) SetScope(v string) {
	o.Scope = v
}

// GetState returns the State field value
func (o *IdentityOidcProviderAuthorizeRequest) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *IdentityOidcProviderAuthorizeRequest) SetState(v string) {
	o.State = v
}

func (o IdentityOidcProviderAuthorizeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["client_id"] = o.ClientId
	}
	if o.CodeChallenge != nil {
		toSerialize["code_challenge"] = o.CodeChallenge
	}
	if o.CodeChallengeMethod != nil {
		toSerialize["code_challenge_method"] = o.CodeChallengeMethod
	}
	if o.MaxAge != nil {
		toSerialize["max_age"] = o.MaxAge
	}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	if true {
		toSerialize["redirect_uri"] = o.RedirectUri
	}
	if true {
		toSerialize["response_type"] = o.ResponseType
	}
	if true {
		toSerialize["scope"] = o.Scope
	}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcProviderAuthorizeRequest struct {
	value *IdentityOidcProviderAuthorizeRequest
	isSet bool
}

func (v NullableIdentityOidcProviderAuthorizeRequest) Get() *IdentityOidcProviderAuthorizeRequest {
	return v.value
}

func (v *NullableIdentityOidcProviderAuthorizeRequest) Set(val *IdentityOidcProviderAuthorizeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcProviderAuthorizeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcProviderAuthorizeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcProviderAuthorizeRequest(val *IdentityOidcProviderAuthorizeRequest) *NullableIdentityOidcProviderAuthorizeRequest {
	return &NullableIdentityOidcProviderAuthorizeRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcProviderAuthorizeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcProviderAuthorizeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


