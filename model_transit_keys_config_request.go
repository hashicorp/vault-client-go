/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// TransitKeysConfigRequest struct for TransitKeysConfigRequest
type TransitKeysConfigRequest struct {
	// Enables taking a backup of the named key in plaintext format. Once set, this cannot be disabled.
	AllowPlaintextBackup *bool `json:"allow_plaintext_backup,omitempty"`
	// Amount of time the key should live before being automatically rotated. A value of 0 disables automatic rotation for the key.
	AutoRotatePeriod *int32 `json:"auto_rotate_period,omitempty"`
	// Whether to allow deletion of the key
	DeletionAllowed *bool `json:"deletion_allowed,omitempty"`
	// Enables export of the key. Once set, this cannot be disabled.
	Exportable *bool `json:"exportable,omitempty"`
	// If set, the minimum version of the key allowed to be decrypted. For signing keys, the minimum version allowed to be used for verification.
	MinDecryptionVersion *int32 `json:"min_decryption_version,omitempty"`
	// If set, the minimum version of the key allowed to be used for encryption; or for signing keys, to be used for signing. If set to zero, only the latest version of the key is allowed.
	MinEncryptionVersion *int32 `json:"min_encryption_version,omitempty"`
}

// NewTransitKeysConfigRequest instantiates a new TransitKeysConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitKeysConfigRequest() *TransitKeysConfigRequest {
	this := TransitKeysConfigRequest{}
	return &this
}

// NewTransitKeysConfigRequestWithDefaults instantiates a new TransitKeysConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitKeysConfigRequestWithDefaults() *TransitKeysConfigRequest {
	this := TransitKeysConfigRequest{}
	return &this
}

// GetAllowPlaintextBackup returns the AllowPlaintextBackup field value if set, zero value otherwise.
func (o *TransitKeysConfigRequest) GetAllowPlaintextBackup() bool {
	if o == nil || o.AllowPlaintextBackup == nil {
		var ret bool
		return ret
	}
	return *o.AllowPlaintextBackup
}

// GetAllowPlaintextBackupOk returns a tuple with the AllowPlaintextBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysConfigRequest) GetAllowPlaintextBackupOk() (*bool, bool) {
	if o == nil || o.AllowPlaintextBackup == nil {
		return nil, false
	}
	return o.AllowPlaintextBackup, true
}

// HasAllowPlaintextBackup returns a boolean if a field has been set.
func (o *TransitKeysConfigRequest) HasAllowPlaintextBackup() bool {
	if o != nil && o.AllowPlaintextBackup != nil {
		return true
	}

	return false
}

// SetAllowPlaintextBackup gets a reference to the given bool and assigns it to the AllowPlaintextBackup field.
func (o *TransitKeysConfigRequest) SetAllowPlaintextBackup(v bool) {
	o.AllowPlaintextBackup = &v
}

// GetAutoRotatePeriod returns the AutoRotatePeriod field value if set, zero value otherwise.
func (o *TransitKeysConfigRequest) GetAutoRotatePeriod() int32 {
	if o == nil || o.AutoRotatePeriod == nil {
		var ret int32
		return ret
	}
	return *o.AutoRotatePeriod
}

// GetAutoRotatePeriodOk returns a tuple with the AutoRotatePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysConfigRequest) GetAutoRotatePeriodOk() (*int32, bool) {
	if o == nil || o.AutoRotatePeriod == nil {
		return nil, false
	}
	return o.AutoRotatePeriod, true
}

// HasAutoRotatePeriod returns a boolean if a field has been set.
func (o *TransitKeysConfigRequest) HasAutoRotatePeriod() bool {
	if o != nil && o.AutoRotatePeriod != nil {
		return true
	}

	return false
}

// SetAutoRotatePeriod gets a reference to the given int32 and assigns it to the AutoRotatePeriod field.
func (o *TransitKeysConfigRequest) SetAutoRotatePeriod(v int32) {
	o.AutoRotatePeriod = &v
}

// GetDeletionAllowed returns the DeletionAllowed field value if set, zero value otherwise.
func (o *TransitKeysConfigRequest) GetDeletionAllowed() bool {
	if o == nil || o.DeletionAllowed == nil {
		var ret bool
		return ret
	}
	return *o.DeletionAllowed
}

// GetDeletionAllowedOk returns a tuple with the DeletionAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysConfigRequest) GetDeletionAllowedOk() (*bool, bool) {
	if o == nil || o.DeletionAllowed == nil {
		return nil, false
	}
	return o.DeletionAllowed, true
}

// HasDeletionAllowed returns a boolean if a field has been set.
func (o *TransitKeysConfigRequest) HasDeletionAllowed() bool {
	if o != nil && o.DeletionAllowed != nil {
		return true
	}

	return false
}

// SetDeletionAllowed gets a reference to the given bool and assigns it to the DeletionAllowed field.
func (o *TransitKeysConfigRequest) SetDeletionAllowed(v bool) {
	o.DeletionAllowed = &v
}

// GetExportable returns the Exportable field value if set, zero value otherwise.
func (o *TransitKeysConfigRequest) GetExportable() bool {
	if o == nil || o.Exportable == nil {
		var ret bool
		return ret
	}
	return *o.Exportable
}

// GetExportableOk returns a tuple with the Exportable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysConfigRequest) GetExportableOk() (*bool, bool) {
	if o == nil || o.Exportable == nil {
		return nil, false
	}
	return o.Exportable, true
}

// HasExportable returns a boolean if a field has been set.
func (o *TransitKeysConfigRequest) HasExportable() bool {
	if o != nil && o.Exportable != nil {
		return true
	}

	return false
}

// SetExportable gets a reference to the given bool and assigns it to the Exportable field.
func (o *TransitKeysConfigRequest) SetExportable(v bool) {
	o.Exportable = &v
}

// GetMinDecryptionVersion returns the MinDecryptionVersion field value if set, zero value otherwise.
func (o *TransitKeysConfigRequest) GetMinDecryptionVersion() int32 {
	if o == nil || o.MinDecryptionVersion == nil {
		var ret int32
		return ret
	}
	return *o.MinDecryptionVersion
}

// GetMinDecryptionVersionOk returns a tuple with the MinDecryptionVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysConfigRequest) GetMinDecryptionVersionOk() (*int32, bool) {
	if o == nil || o.MinDecryptionVersion == nil {
		return nil, false
	}
	return o.MinDecryptionVersion, true
}

// HasMinDecryptionVersion returns a boolean if a field has been set.
func (o *TransitKeysConfigRequest) HasMinDecryptionVersion() bool {
	if o != nil && o.MinDecryptionVersion != nil {
		return true
	}

	return false
}

// SetMinDecryptionVersion gets a reference to the given int32 and assigns it to the MinDecryptionVersion field.
func (o *TransitKeysConfigRequest) SetMinDecryptionVersion(v int32) {
	o.MinDecryptionVersion = &v
}

// GetMinEncryptionVersion returns the MinEncryptionVersion field value if set, zero value otherwise.
func (o *TransitKeysConfigRequest) GetMinEncryptionVersion() int32 {
	if o == nil || o.MinEncryptionVersion == nil {
		var ret int32
		return ret
	}
	return *o.MinEncryptionVersion
}

// GetMinEncryptionVersionOk returns a tuple with the MinEncryptionVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysConfigRequest) GetMinEncryptionVersionOk() (*int32, bool) {
	if o == nil || o.MinEncryptionVersion == nil {
		return nil, false
	}
	return o.MinEncryptionVersion, true
}

// HasMinEncryptionVersion returns a boolean if a field has been set.
func (o *TransitKeysConfigRequest) HasMinEncryptionVersion() bool {
	if o != nil && o.MinEncryptionVersion != nil {
		return true
	}

	return false
}

// SetMinEncryptionVersion gets a reference to the given int32 and assigns it to the MinEncryptionVersion field.
func (o *TransitKeysConfigRequest) SetMinEncryptionVersion(v int32) {
	o.MinEncryptionVersion = &v
}

func (o TransitKeysConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowPlaintextBackup != nil {
		toSerialize["allow_plaintext_backup"] = o.AllowPlaintextBackup
	}
	if o.AutoRotatePeriod != nil {
		toSerialize["auto_rotate_period"] = o.AutoRotatePeriod
	}
	if o.DeletionAllowed != nil {
		toSerialize["deletion_allowed"] = o.DeletionAllowed
	}
	if o.Exportable != nil {
		toSerialize["exportable"] = o.Exportable
	}
	if o.MinDecryptionVersion != nil {
		toSerialize["min_decryption_version"] = o.MinDecryptionVersion
	}
	if o.MinEncryptionVersion != nil {
		toSerialize["min_encryption_version"] = o.MinEncryptionVersion
	}
	return json.Marshal(toSerialize)
}

type NullableTransitKeysConfigRequest struct {
	value *TransitKeysConfigRequest
	isSet bool
}

func (v NullableTransitKeysConfigRequest) Get() *TransitKeysConfigRequest {
	return v.value
}

func (v *NullableTransitKeysConfigRequest) Set(val *TransitKeysConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitKeysConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitKeysConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitKeysConfigRequest(val *TransitKeysConfigRequest) *NullableTransitKeysConfigRequest {
	return &NullableTransitKeysConfigRequest{value: val, isSet: true}
}

func (v NullableTransitKeysConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitKeysConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


