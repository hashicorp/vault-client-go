/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// OciConfigRequest struct for OciConfigRequest
type OciConfigRequest struct {
	// The tenancy id of the account.
	HomeTenancyId *string `json:"home_tenancy_id,omitempty"`
}

// NewOciConfigRequest instantiates a new OciConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOciConfigRequest() *OciConfigRequest {
	this := OciConfigRequest{}
	return &this
}

// NewOciConfigRequestWithDefaults instantiates a new OciConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOciConfigRequestWithDefaults() *OciConfigRequest {
	this := OciConfigRequest{}
	return &this
}

// GetHomeTenancyId returns the HomeTenancyId field value if set, zero value otherwise.
func (o *OciConfigRequest) GetHomeTenancyId() string {
	if o == nil || o.HomeTenancyId == nil {
		var ret string
		return ret
	}
	return *o.HomeTenancyId
}

// GetHomeTenancyIdOk returns a tuple with the HomeTenancyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciConfigRequest) GetHomeTenancyIdOk() (*string, bool) {
	if o == nil || o.HomeTenancyId == nil {
		return nil, false
	}
	return o.HomeTenancyId, true
}

// HasHomeTenancyId returns a boolean if a field has been set.
func (o *OciConfigRequest) HasHomeTenancyId() bool {
	if o != nil && o.HomeTenancyId != nil {
		return true
	}

	return false
}

// SetHomeTenancyId gets a reference to the given string and assigns it to the HomeTenancyId field.
func (o *OciConfigRequest) SetHomeTenancyId(v string) {
	o.HomeTenancyId = &v
}

func (o OciConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HomeTenancyId != nil {
		toSerialize["home_tenancy_id"] = o.HomeTenancyId
	}
	return json.Marshal(toSerialize)
}

type NullableOciConfigRequest struct {
	value *OciConfigRequest
	isSet bool
}

func (v NullableOciConfigRequest) Get() *OciConfigRequest {
	return v.value
}

func (v *NullableOciConfigRequest) Set(val *OciConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOciConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOciConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOciConfigRequest(val *OciConfigRequest) *NullableOciConfigRequest {
	return &NullableOciConfigRequest{value: val, isSet: true}
}

func (v NullableOciConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOciConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


