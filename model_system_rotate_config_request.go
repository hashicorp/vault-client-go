/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// SystemRotateConfigRequest struct for SystemRotateConfigRequest
type SystemRotateConfigRequest struct {
	// Whether automatic rotation is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// How long after installation of an active key term that the key will be automatically rotated.
	Interval *int32 `json:"interval,omitempty"`
	// The number of encryption operations performed before the barrier key is automatically rotated.
	MaxOperations *int64 `json:"max_operations,omitempty"`
}

// NewSystemRotateConfigRequest instantiates a new SystemRotateConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRotateConfigRequest() *SystemRotateConfigRequest {
	this := SystemRotateConfigRequest{}
	return &this
}

// NewSystemRotateConfigRequestWithDefaults instantiates a new SystemRotateConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRotateConfigRequestWithDefaults() *SystemRotateConfigRequest {
	this := SystemRotateConfigRequest{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *SystemRotateConfigRequest) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRotateConfigRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *SystemRotateConfigRequest) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *SystemRotateConfigRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *SystemRotateConfigRequest) GetInterval() int32 {
	if o == nil || o.Interval == nil {
		var ret int32
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRotateConfigRequest) GetIntervalOk() (*int32, bool) {
	if o == nil || o.Interval == nil {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *SystemRotateConfigRequest) HasInterval() bool {
	if o != nil && o.Interval != nil {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int32 and assigns it to the Interval field.
func (o *SystemRotateConfigRequest) SetInterval(v int32) {
	o.Interval = &v
}

// GetMaxOperations returns the MaxOperations field value if set, zero value otherwise.
func (o *SystemRotateConfigRequest) GetMaxOperations() int64 {
	if o == nil || o.MaxOperations == nil {
		var ret int64
		return ret
	}
	return *o.MaxOperations
}

// GetMaxOperationsOk returns a tuple with the MaxOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRotateConfigRequest) GetMaxOperationsOk() (*int64, bool) {
	if o == nil || o.MaxOperations == nil {
		return nil, false
	}
	return o.MaxOperations, true
}

// HasMaxOperations returns a boolean if a field has been set.
func (o *SystemRotateConfigRequest) HasMaxOperations() bool {
	if o != nil && o.MaxOperations != nil {
		return true
	}

	return false
}

// SetMaxOperations gets a reference to the given int64 and assigns it to the MaxOperations field.
func (o *SystemRotateConfigRequest) SetMaxOperations(v int64) {
	o.MaxOperations = &v
}

func (o SystemRotateConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Interval != nil {
		toSerialize["interval"] = o.Interval
	}
	if o.MaxOperations != nil {
		toSerialize["max_operations"] = o.MaxOperations
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRotateConfigRequest struct {
	value *SystemRotateConfigRequest
	isSet bool
}

func (v NullableSystemRotateConfigRequest) Get() *SystemRotateConfigRequest {
	return v.value
}

func (v *NullableSystemRotateConfigRequest) Set(val *SystemRotateConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRotateConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRotateConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRotateConfigRequest(val *SystemRotateConfigRequest) *NullableSystemRotateConfigRequest {
	return &NullableSystemRotateConfigRequest{value: val, isSet: true}
}

func (v NullableSystemRotateConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRotateConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


