# {{cut classname "Api"}}{{#with description}}

{{.}}{{/with}}

Method | HTTP request | Description
------------- | ------------- | -------------
{{#with operations ~}}
{{#each operation ~}}
{{#>partial_filter_operation}}[**{{operationId}}**]({{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{#if summary}}{{summary}}{{/if}}
{{/partial_filter_operation}}
{{~/each ~}}
{{/with ~}}

{{#with operations}}
{{#each operation ~}}
{{#>partial_filter_operation}}## {{{operationId}}}

{{#if summary}}{{{summary}}}{{/if}}{{#if notes}}

{{{unescapedNotes}}}{{/if}}

### Example

```go
package main

import (
	"context"
	"log"
	"os"

	"github.com/hashicorp/vault-client-go"{{#each bodyParams}}{{#if isModel}}
	"github.com/hashicorp/vault-client-go/schema"{{/if}}{{/each}}
)

func main() {
	client, err := vault.New(
		vault.WithAddress("http://127.0.0.1:8200"),
	)
	if err != nil {
		log.Fatal(err)
	}
{{! Oddly, vendorExtensions.x-go-example seems to only be available within allParams,
	and not within pathParams, queryParams, etc. }}
{{~#each allParams}}
{{~#if (or
		(and isPathParam (not (endsWith baseName "_mount_path")))
		(and isQueryParam (neq baseName "list"))
)}}
	{{paramName}} := {{{vendorExtensions.x-go-example}}} // {{{dataType}}} | {{#if description}}{{{description}}}{{/if}}{{#with defaultValue}} (defaults to {{{.}}}){{/with}}
{{~/if}}
{{~/each}}
	resp, err := client.{{cut classname "Api"}}.{{operationId}}(
		context.Background(),
{{~#each pathParams}}{{#not (endsWith baseName "_mount_path")}}
		{{paramName}},
{{~/not}}{{/each}}
{{~#each bodyParams}}
		{{#if isModel}}schema.{{/if}}{{dataType}}{ /* populate request parameters */ },
{{~/each}}
{{~#each queryParams}}{{#neq baseName "list"}}
		{{paramName}},
{{~/neq}}{{/each}}
		vault.WithToken("my-token"),
{{~#each pathParams}}{{#endsWith baseName "_mount_path"}}
		vault.WithMountPath({{#with defaultValue}}{{{.}}}{{/with}}),
{{~/endsWith}}{{/each}}
	)
	if err != nil {
		log.Fatal(err)
	}

	log.Println(resp.Data)
}
```

### Path Parameters

{{#unless allParams}}This endpoint does not require any parameters.{{/unless}}{{#each pathParams}}{{#if @last}}
Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
**ctx** | **context.Context** | context for request cancellation {{/if}}{{/each}}{{#each pathParams}}{{#endsWith baseName "_mount_path"}}{{else}}
**{{paramName}}** | {{#unless isPrimitiveType}}{{#unless isFile}}[{{/unless}}{{/unless}}**{{dataType}}**{{#unless isPrimitiveType}}{{#unless isFile}}]({{baseType}}.md){{/unless}}{{/unless}} | {{#if description}}{{description}}{{/if}} | {{#with defaultValue}}[default to {{.}}]{{/with}}{{/endsWith}}{{/each}}

### Other Parameters

{{#each allParams}}{{#if @last}}
Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------{{/if}}{{/each}}{{#each allParams}}
{{#unless isPathParam}} **{{paramName}}** | {{#if isContainer}}{{#if isArray}}{{#with items}}{{#unless isPrimitiveType}}{{#unless isFile}}[{{/unless}}{{/unless}}**[]{{dataType}}**{{#unless isPrimitiveType}}{{#unless isFile}}]({{#unless baseType}}{{dataType}}{{/unless}}{{baseType}}.md){{/unless}}{{/unless}}{{/with}}{{/if}}{{#if isMap}}{{#with items}}{{#unless isPrimitiveType}}{{#unless isFile}}[{{/unless}}{{/unless}}**map[string]{{dataType}}**{{#unless isPrimitiveType}}{{#unless isFile}}]({{#unless baseType}}{{dataType}}{{/unless}}{{baseType}}.md){{/unless}}{{/unless}}{{/with}}{{/if}}{{/if}}{{#unless isContainer}}{{#unless isPrimitiveType}}{{#unless isFile}}[{{/unless}}{{/unless}}**{{dataType}}**{{#unless isPrimitiveType}}{{#unless isFile}}]({{#unless baseType}}{{dataType}}{{/unless}}{{baseType}}.md){{/unless}}{{/unless}}{{/unless}} | {{#if description}}{{description}}{{/if}} | {{#with defaultValue}}[default to {{.}}]{{/with}}{{/unless}}{{/each}}

{{#with returnType}}{{#with returnTypeIsPrimitive}}**{{{returnType}}}**{{/with}}{{#unless returnTypeIsPrimitive}}[**{{{returnType}}}**]({{returnBaseType}}.md){{/unless}}{{/with}}{{#unless returnType}} (empty response body){{/unless}}

[[Back to top]](#)
[[Back to README]](../README.md)

{{/partial_filter_operation}}
{{~/each ~}}
{{/with ~}}
