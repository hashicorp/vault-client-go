/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// OktaGroupsRequest struct for OktaGroupsRequest
type OktaGroupsRequest struct {
	// Comma-separated list of policies associated to the group.
	Policies []string `json:"policies,omitempty"`
}

// NewOktaGroupsRequest instantiates a new OktaGroupsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOktaGroupsRequest() *OktaGroupsRequest {
	this := OktaGroupsRequest{}
	return &this
}

// NewOktaGroupsRequestWithDefaults instantiates a new OktaGroupsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOktaGroupsRequestWithDefaults() *OktaGroupsRequest {
	this := OktaGroupsRequest{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *OktaGroupsRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaGroupsRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *OktaGroupsRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *OktaGroupsRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o OktaGroupsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableOktaGroupsRequest struct {
	value *OktaGroupsRequest
	isSet bool
}

func (v NullableOktaGroupsRequest) Get() *OktaGroupsRequest {
	return v.value
}

func (v *NullableOktaGroupsRequest) Set(val *OktaGroupsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOktaGroupsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOktaGroupsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOktaGroupsRequest(val *OktaGroupsRequest) *NullableOktaGroupsRequest {
	return &NullableOktaGroupsRequest{value: val, isSet: true}
}

func (v NullableOktaGroupsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOktaGroupsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


