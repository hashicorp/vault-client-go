// Code generated with OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// RadiusWriteConfigRequest struct for RadiusWriteConfigRequest
type RadiusWriteConfigRequest struct {
	// Number of seconds before connect times out (default: 10)
	DialTimeout int32 `json:"dial_timeout"`

	// RADIUS server host
	Host string `json:"host"`

	// RADIUS NAS Identifier field (optional)
	NasIdentifier string `json:"nas_identifier"`

	// RADIUS NAS port field (default: 10)
	NasPort int32 `json:"nas_port"`

	// RADIUS server port (default: 1812)
	Port int32 `json:"port"`

	// Number of seconds before response times out (default: 10)
	ReadTimeout int32 `json:"read_timeout"`

	// Secret shared with the RADIUS server
	Secret string `json:"secret"`

	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`

	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`

	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`

	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`

	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`

	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`

	// Comma-separated list of policies. This will apply to all tokens generated by this auth method, in addition to any configured for specific users.
	TokenPolicies []string `json:"token_policies"`

	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`

	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`

	// Comma-separated list of policies to grant upon successful RADIUS authentication of an unregisted user (default: empty)
	UnregisteredUserPolicies string `json:"unregistered_user_policies"`
}

// NewRadiusWriteConfigRequestWithDefaults instantiates a new RadiusWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadiusWriteConfigRequestWithDefaults() *RadiusWriteConfigRequest {
	var this RadiusWriteConfigRequest

	this.DialTimeout = 10
	this.NasIdentifier = ""
	this.NasPort = 10
	this.Port = 1812
	this.ReadTimeout = 10
	this.TokenType = "default-service"
	this.UnregisteredUserPolicies = ""

	return &this
}

func (o RadiusWriteConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(o)
}
