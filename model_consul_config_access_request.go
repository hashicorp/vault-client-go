/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// ConsulConfigAccessRequest struct for ConsulConfigAccessRequest
type ConsulConfigAccessRequest struct {
	// Consul server address
	Address *string `json:"address,omitempty"`
	// CA certificate to use when verifying Consul server certificate, must be x509 PEM encoded.
	CaCert *string `json:"ca_cert,omitempty"`
	// Client certificate used for Consul's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_key.
	ClientCert *string `json:"client_cert,omitempty"`
	// Client key used for Consul's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_cert.
	ClientKey *string `json:"client_key,omitempty"`
	// URI scheme for the Consul address
	Scheme *string `json:"scheme,omitempty"`
	// Token for API calls
	Token *string `json:"token,omitempty"`
}

// NewConsulConfigAccessRequest instantiates a new ConsulConfigAccessRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsulConfigAccessRequest() *ConsulConfigAccessRequest {
	this := ConsulConfigAccessRequest{}
	var scheme string = "http"
	this.Scheme = &scheme
	return &this
}

// NewConsulConfigAccessRequestWithDefaults instantiates a new ConsulConfigAccessRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsulConfigAccessRequestWithDefaults() *ConsulConfigAccessRequest {
	this := ConsulConfigAccessRequest{}
	var scheme string = "http"
	this.Scheme = &scheme
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ConsulConfigAccessRequest) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulConfigAccessRequest) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ConsulConfigAccessRequest) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ConsulConfigAccessRequest) SetAddress(v string) {
	o.Address = &v
}

// GetCaCert returns the CaCert field value if set, zero value otherwise.
func (o *ConsulConfigAccessRequest) GetCaCert() string {
	if o == nil || o.CaCert == nil {
		var ret string
		return ret
	}
	return *o.CaCert
}

// GetCaCertOk returns a tuple with the CaCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulConfigAccessRequest) GetCaCertOk() (*string, bool) {
	if o == nil || o.CaCert == nil {
		return nil, false
	}
	return o.CaCert, true
}

// HasCaCert returns a boolean if a field has been set.
func (o *ConsulConfigAccessRequest) HasCaCert() bool {
	if o != nil && o.CaCert != nil {
		return true
	}

	return false
}

// SetCaCert gets a reference to the given string and assigns it to the CaCert field.
func (o *ConsulConfigAccessRequest) SetCaCert(v string) {
	o.CaCert = &v
}

// GetClientCert returns the ClientCert field value if set, zero value otherwise.
func (o *ConsulConfigAccessRequest) GetClientCert() string {
	if o == nil || o.ClientCert == nil {
		var ret string
		return ret
	}
	return *o.ClientCert
}

// GetClientCertOk returns a tuple with the ClientCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulConfigAccessRequest) GetClientCertOk() (*string, bool) {
	if o == nil || o.ClientCert == nil {
		return nil, false
	}
	return o.ClientCert, true
}

// HasClientCert returns a boolean if a field has been set.
func (o *ConsulConfigAccessRequest) HasClientCert() bool {
	if o != nil && o.ClientCert != nil {
		return true
	}

	return false
}

// SetClientCert gets a reference to the given string and assigns it to the ClientCert field.
func (o *ConsulConfigAccessRequest) SetClientCert(v string) {
	o.ClientCert = &v
}

// GetClientKey returns the ClientKey field value if set, zero value otherwise.
func (o *ConsulConfigAccessRequest) GetClientKey() string {
	if o == nil || o.ClientKey == nil {
		var ret string
		return ret
	}
	return *o.ClientKey
}

// GetClientKeyOk returns a tuple with the ClientKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulConfigAccessRequest) GetClientKeyOk() (*string, bool) {
	if o == nil || o.ClientKey == nil {
		return nil, false
	}
	return o.ClientKey, true
}

// HasClientKey returns a boolean if a field has been set.
func (o *ConsulConfigAccessRequest) HasClientKey() bool {
	if o != nil && o.ClientKey != nil {
		return true
	}

	return false
}

// SetClientKey gets a reference to the given string and assigns it to the ClientKey field.
func (o *ConsulConfigAccessRequest) SetClientKey(v string) {
	o.ClientKey = &v
}

// GetScheme returns the Scheme field value if set, zero value otherwise.
func (o *ConsulConfigAccessRequest) GetScheme() string {
	if o == nil || o.Scheme == nil {
		var ret string
		return ret
	}
	return *o.Scheme
}

// GetSchemeOk returns a tuple with the Scheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulConfigAccessRequest) GetSchemeOk() (*string, bool) {
	if o == nil || o.Scheme == nil {
		return nil, false
	}
	return o.Scheme, true
}

// HasScheme returns a boolean if a field has been set.
func (o *ConsulConfigAccessRequest) HasScheme() bool {
	if o != nil && o.Scheme != nil {
		return true
	}

	return false
}

// SetScheme gets a reference to the given string and assigns it to the Scheme field.
func (o *ConsulConfigAccessRequest) SetScheme(v string) {
	o.Scheme = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ConsulConfigAccessRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulConfigAccessRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ConsulConfigAccessRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ConsulConfigAccessRequest) SetToken(v string) {
	o.Token = &v
}

func (o ConsulConfigAccessRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.CaCert != nil {
		toSerialize["ca_cert"] = o.CaCert
	}
	if o.ClientCert != nil {
		toSerialize["client_cert"] = o.ClientCert
	}
	if o.ClientKey != nil {
		toSerialize["client_key"] = o.ClientKey
	}
	if o.Scheme != nil {
		toSerialize["scheme"] = o.Scheme
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableConsulConfigAccessRequest struct {
	value *ConsulConfigAccessRequest
	isSet bool
}

func (v NullableConsulConfigAccessRequest) Get() *ConsulConfigAccessRequest {
	return v.value
}

func (v *NullableConsulConfigAccessRequest) Set(val *ConsulConfigAccessRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConsulConfigAccessRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConsulConfigAccessRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsulConfigAccessRequest(val *ConsulConfigAccessRequest) *NullableConsulConfigAccessRequest {
	return &NullableConsulConfigAccessRequest{value: val, isSet: true}
}

func (v NullableConsulConfigAccessRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsulConfigAccessRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


