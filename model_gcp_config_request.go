/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// GcpConfigRequest struct for GcpConfigRequest
type GcpConfigRequest struct {
	// Google credentials JSON that Vault will use to verify users against GCP APIs. If not specified, will use application default credentials
	Credentials *string `json:"credentials,omitempty"`
	// Specifies overrides for various Google API Service Endpoints used in requests.
	CustomEndpoint map[string]interface{} `json:"custom_endpoint,omitempty"`
	// Indicates what value to use when generating an alias for GCE authentications.
	GceAlias *string `json:"gce_alias,omitempty"`
	// The metadata to include on the aliases and audit logs generated by this plugin. When set to 'default', includes: instance_creation_timestamp, instance_id, instance_name, project_id, project_number, role, service_account_id, service_account_email, zone. Not editing this field means the 'default' fields are included. Explicitly setting this field to empty overrides the 'default' and means no metadata will be included. If not using 'default', explicit fields must be sent like: 'field1,field2'.
	GceMetadata []string `json:"gce_metadata,omitempty"`
	// Deprecated. This field does nothing and be removed in a future release
	// Deprecated
	GoogleCertsEndpoint *string `json:"google_certs_endpoint,omitempty"`
	// Indicates what value to use when generating an alias for IAM authentications.
	IamAlias *string `json:"iam_alias,omitempty"`
	// The metadata to include on the aliases and audit logs generated by this plugin. When set to 'default', includes: project_id, role, service_account_id, service_account_email. Not editing this field means the 'default' fields are included. Explicitly setting this field to empty overrides the 'default' and means no metadata will be included. If not using 'default', explicit fields must be sent like: 'field1,field2'.
	IamMetadata []string `json:"iam_metadata,omitempty"`
}

// NewGcpConfigRequest instantiates a new GcpConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpConfigRequest() *GcpConfigRequest {
	this := GcpConfigRequest{}
	var gceAlias string = "role_id"
	this.GceAlias = &gceAlias
	var iamAlias string = "role_id"
	this.IamAlias = &iamAlias
	return &this
}

// NewGcpConfigRequestWithDefaults instantiates a new GcpConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpConfigRequestWithDefaults() *GcpConfigRequest {
	this := GcpConfigRequest{}
	var gceAlias string = "role_id"
	this.GceAlias = &gceAlias
	var iamAlias string = "role_id"
	this.IamAlias = &iamAlias
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *GcpConfigRequest) GetCredentials() string {
	if o == nil || o.Credentials == nil {
		var ret string
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpConfigRequest) GetCredentialsOk() (*string, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given string and assigns it to the Credentials field.
func (o *GcpConfigRequest) SetCredentials(v string) {
	o.Credentials = &v
}

// GetCustomEndpoint returns the CustomEndpoint field value if set, zero value otherwise.
func (o *GcpConfigRequest) GetCustomEndpoint() map[string]interface{} {
	if o == nil || o.CustomEndpoint == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomEndpoint
}

// GetCustomEndpointOk returns a tuple with the CustomEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpConfigRequest) GetCustomEndpointOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomEndpoint == nil {
		return nil, false
	}
	return o.CustomEndpoint, true
}

// HasCustomEndpoint returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasCustomEndpoint() bool {
	if o != nil && o.CustomEndpoint != nil {
		return true
	}

	return false
}

// SetCustomEndpoint gets a reference to the given map[string]interface{} and assigns it to the CustomEndpoint field.
func (o *GcpConfigRequest) SetCustomEndpoint(v map[string]interface{}) {
	o.CustomEndpoint = v
}

// GetGceAlias returns the GceAlias field value if set, zero value otherwise.
func (o *GcpConfigRequest) GetGceAlias() string {
	if o == nil || o.GceAlias == nil {
		var ret string
		return ret
	}
	return *o.GceAlias
}

// GetGceAliasOk returns a tuple with the GceAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpConfigRequest) GetGceAliasOk() (*string, bool) {
	if o == nil || o.GceAlias == nil {
		return nil, false
	}
	return o.GceAlias, true
}

// HasGceAlias returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasGceAlias() bool {
	if o != nil && o.GceAlias != nil {
		return true
	}

	return false
}

// SetGceAlias gets a reference to the given string and assigns it to the GceAlias field.
func (o *GcpConfigRequest) SetGceAlias(v string) {
	o.GceAlias = &v
}

// GetGceMetadata returns the GceMetadata field value if set, zero value otherwise.
func (o *GcpConfigRequest) GetGceMetadata() []string {
	if o == nil || o.GceMetadata == nil {
		var ret []string
		return ret
	}
	return o.GceMetadata
}

// GetGceMetadataOk returns a tuple with the GceMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpConfigRequest) GetGceMetadataOk() ([]string, bool) {
	if o == nil || o.GceMetadata == nil {
		return nil, false
	}
	return o.GceMetadata, true
}

// HasGceMetadata returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasGceMetadata() bool {
	if o != nil && o.GceMetadata != nil {
		return true
	}

	return false
}

// SetGceMetadata gets a reference to the given []string and assigns it to the GceMetadata field.
func (o *GcpConfigRequest) SetGceMetadata(v []string) {
	o.GceMetadata = v
}

// GetGoogleCertsEndpoint returns the GoogleCertsEndpoint field value if set, zero value otherwise.
// Deprecated
func (o *GcpConfigRequest) GetGoogleCertsEndpoint() string {
	if o == nil || o.GoogleCertsEndpoint == nil {
		var ret string
		return ret
	}
	return *o.GoogleCertsEndpoint
}

// GetGoogleCertsEndpointOk returns a tuple with the GoogleCertsEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GcpConfigRequest) GetGoogleCertsEndpointOk() (*string, bool) {
	if o == nil || o.GoogleCertsEndpoint == nil {
		return nil, false
	}
	return o.GoogleCertsEndpoint, true
}

// HasGoogleCertsEndpoint returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasGoogleCertsEndpoint() bool {
	if o != nil && o.GoogleCertsEndpoint != nil {
		return true
	}

	return false
}

// SetGoogleCertsEndpoint gets a reference to the given string and assigns it to the GoogleCertsEndpoint field.
// Deprecated
func (o *GcpConfigRequest) SetGoogleCertsEndpoint(v string) {
	o.GoogleCertsEndpoint = &v
}

// GetIamAlias returns the IamAlias field value if set, zero value otherwise.
func (o *GcpConfigRequest) GetIamAlias() string {
	if o == nil || o.IamAlias == nil {
		var ret string
		return ret
	}
	return *o.IamAlias
}

// GetIamAliasOk returns a tuple with the IamAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpConfigRequest) GetIamAliasOk() (*string, bool) {
	if o == nil || o.IamAlias == nil {
		return nil, false
	}
	return o.IamAlias, true
}

// HasIamAlias returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasIamAlias() bool {
	if o != nil && o.IamAlias != nil {
		return true
	}

	return false
}

// SetIamAlias gets a reference to the given string and assigns it to the IamAlias field.
func (o *GcpConfigRequest) SetIamAlias(v string) {
	o.IamAlias = &v
}

// GetIamMetadata returns the IamMetadata field value if set, zero value otherwise.
func (o *GcpConfigRequest) GetIamMetadata() []string {
	if o == nil || o.IamMetadata == nil {
		var ret []string
		return ret
	}
	return o.IamMetadata
}

// GetIamMetadataOk returns a tuple with the IamMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpConfigRequest) GetIamMetadataOk() ([]string, bool) {
	if o == nil || o.IamMetadata == nil {
		return nil, false
	}
	return o.IamMetadata, true
}

// HasIamMetadata returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasIamMetadata() bool {
	if o != nil && o.IamMetadata != nil {
		return true
	}

	return false
}

// SetIamMetadata gets a reference to the given []string and assigns it to the IamMetadata field.
func (o *GcpConfigRequest) SetIamMetadata(v []string) {
	o.IamMetadata = v
}

func (o GcpConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if o.CustomEndpoint != nil {
		toSerialize["custom_endpoint"] = o.CustomEndpoint
	}
	if o.GceAlias != nil {
		toSerialize["gce_alias"] = o.GceAlias
	}
	if o.GceMetadata != nil {
		toSerialize["gce_metadata"] = o.GceMetadata
	}
	if o.GoogleCertsEndpoint != nil {
		toSerialize["google_certs_endpoint"] = o.GoogleCertsEndpoint
	}
	if o.IamAlias != nil {
		toSerialize["iam_alias"] = o.IamAlias
	}
	if o.IamMetadata != nil {
		toSerialize["iam_metadata"] = o.IamMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableGcpConfigRequest struct {
	value *GcpConfigRequest
	isSet bool
}

func (v NullableGcpConfigRequest) Get() *GcpConfigRequest {
	return v.value
}

func (v *NullableGcpConfigRequest) Set(val *GcpConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpConfigRequest(val *GcpConfigRequest) *NullableGcpConfigRequest {
	return &NullableGcpConfigRequest{value: val, isSet: true}
}

func (v NullableGcpConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


