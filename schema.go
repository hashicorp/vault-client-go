/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// AdConfigRequest struct for AdConfigRequest
type AdConfigRequest struct {
	// Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).
	AnonymousGroupSearch *bool `json:"anonymous_group_search,omitempty"`
	// LDAP DN for searching for the user DN (optional)
	Binddn *string `json:"binddn,omitempty"`
	// LDAP password for searching for the user DN (optional)
	Bindpass *string `json:"bindpass,omitempty"`
	// If true, case sensitivity will be used when comparing usernames and groups for matching policies.
	CaseSensitiveNames *bool `json:"case_sensitive_names,omitempty"`
	// CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded (optional)
	Certificate *string `json:"certificate,omitempty"`
	// Client certificate to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsCert *string `json:"client_tls_cert,omitempty"`
	// Client certificate key to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsKey *string `json:"client_tls_key,omitempty"`
	// Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true
	DenyNullBind *bool `json:"deny_null_bind,omitempty"`
	// Use anonymous bind to discover the bind DN of a user (optional)
	Discoverdn *bool `json:"discoverdn,omitempty"`
	// Text to insert the password into, ex. \"customPrefix{{PASSWORD}}customSuffix\".
	// Deprecated
	Formatter *string `json:"formatter,omitempty"`
	// LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: \"cn\" or \"memberOf\", etc. Default: cn
	Groupattr *string `json:"groupattr,omitempty"`
	// LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)
	Groupdn *string `json:"groupdn,omitempty"`
	// Go template for querying group membership of user (optional) The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
	Groupfilter *string `json:"groupfilter,omitempty"`
	// Skip LDAP server SSL Certificate verification - VERY insecure (optional)
	InsecureTls *bool `json:"insecure_tls,omitempty"`
	// The number of seconds after a Vault rotation where, if Active Directory shows a later rotation, it should be considered out-of-band.
	LastRotationTolerance *int32 `json:"last_rotation_tolerance,omitempty"`
	// The desired length of passwords that Vault generates.
	// Deprecated
	Length *int32 `json:"length,omitempty"`
	// In seconds, the maximum password time-to-live.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Name of the password policy to use to generate passwords.
	PasswordPolicy *string `json:"password_policy,omitempty"`
	// Timeout, in seconds, for the connection when making requests against the server before returning back an error.
	RequestTimeout *int32 `json:"request_timeout,omitempty"`
	// Issue a StartTLS command after establishing unencrypted connection (optional)
	Starttls *bool `json:"starttls,omitempty"`
	// Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMaxVersion *string `json:"tls_max_version,omitempty"`
	// Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMinVersion *string `json:"tls_min_version,omitempty"`
	// In seconds, the default password time-to-live.
	Ttl *int32 `json:"ttl,omitempty"`
	// Enables userPrincipalDomain login with [username]@UPNDomain (optional)
	Upndomain *string `json:"upndomain,omitempty"`
	// LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.
	Url *string `json:"url,omitempty"`
	// In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.
	UsePre111GroupCnBehavior *bool `json:"use_pre111_group_cn_behavior,omitempty"`
	// If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.
	UseTokenGroups *bool `json:"use_token_groups,omitempty"`
	// Attribute used for users (default: cn)
	Userattr *string `json:"userattr,omitempty"`
	// LDAP domain to use for users (eg: ou=People,dc=example,dc=org)
	Userdn *string `json:"userdn,omitempty"`
	// Go template for LDAP user search filer (optional) The template can access the following context variables: UserAttr, Username Default: ({{.UserAttr}}={{.Username}})
	Userfilter *string `json:"userfilter,omitempty"`
	// If true, sets the alias name to the username
	UsernameAsAlias *bool `json:"username_as_alias,omitempty"`
}

// NewAdConfigRequest instantiates a new AdConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdConfigRequest() *AdConfigRequest {
	this := AdConfigRequest{}
	var anonymousGroupSearch bool = false
	this.AnonymousGroupSearch = &anonymousGroupSearch
	var denyNullBind bool = true
	this.DenyNullBind = &denyNullBind
	var groupattr string = "cn"
	this.Groupattr = &groupattr
	var groupfilter string = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.Groupfilter = &groupfilter
	var lastRotationTolerance int32 = 5
	this.LastRotationTolerance = &lastRotationTolerance
	var length int32 = 64
	this.Length = &length
	var tlsMaxVersion string = "tls12"
	this.TlsMaxVersion = &tlsMaxVersion
	var tlsMinVersion string = "tls12"
	this.TlsMinVersion = &tlsMinVersion
	var url string = "ldap://127.0.0.1"
	this.Url = &url
	var useTokenGroups bool = false
	this.UseTokenGroups = &useTokenGroups
	var userattr string = "cn"
	this.Userattr = &userattr
	var userfilter string = "({{.UserAttr}}={{.Username}})"
	this.Userfilter = &userfilter
	var usernameAsAlias bool = false
	this.UsernameAsAlias = &usernameAsAlias
	return &this
}

// NewAdConfigRequestWithDefaults instantiates a new AdConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdConfigRequestWithDefaults() *AdConfigRequest {
	this := AdConfigRequest{}
	var anonymousGroupSearch bool = false
	this.AnonymousGroupSearch = &anonymousGroupSearch
	var denyNullBind bool = true
	this.DenyNullBind = &denyNullBind
	var groupattr string = "cn"
	this.Groupattr = &groupattr
	var groupfilter string = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.Groupfilter = &groupfilter
	var lastRotationTolerance int32 = 5
	this.LastRotationTolerance = &lastRotationTolerance
	var length int32 = 64
	this.Length = &length
	var tlsMaxVersion string = "tls12"
	this.TlsMaxVersion = &tlsMaxVersion
	var tlsMinVersion string = "tls12"
	this.TlsMinVersion = &tlsMinVersion
	var url string = "ldap://127.0.0.1"
	this.Url = &url
	var useTokenGroups bool = false
	this.UseTokenGroups = &useTokenGroups
	var userattr string = "cn"
	this.Userattr = &userattr
	var userfilter string = "({{.UserAttr}}={{.Username}})"
	this.Userfilter = &userfilter
	var usernameAsAlias bool = false
	this.UsernameAsAlias = &usernameAsAlias
	return &this
}

// GetAnonymousGroupSearch returns the AnonymousGroupSearch field value if set, zero value otherwise.
func (o *AdConfigRequest) GetAnonymousGroupSearch() bool {
	if o == nil || o.AnonymousGroupSearch == nil {
		var ret bool
		return ret
	}
	return *o.AnonymousGroupSearch
}

// GetAnonymousGroupSearchOk returns a tuple with the AnonymousGroupSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetAnonymousGroupSearchOk() (*bool, bool) {
	if o == nil || o.AnonymousGroupSearch == nil {
		return nil, false
	}
	return o.AnonymousGroupSearch, true
}

// HasAnonymousGroupSearch returns a boolean if a field has been set.
func (o *AdConfigRequest) HasAnonymousGroupSearch() bool {
	if o != nil && o.AnonymousGroupSearch != nil {
		return true
	}

	return false
}

// SetAnonymousGroupSearch gets a reference to the given bool and assigns it to the AnonymousGroupSearch field.
func (o *AdConfigRequest) SetAnonymousGroupSearch(v bool) {
	o.AnonymousGroupSearch = &v
}

// GetBinddn returns the Binddn field value if set, zero value otherwise.
func (o *AdConfigRequest) GetBinddn() string {
	if o == nil || o.Binddn == nil {
		var ret string
		return ret
	}
	return *o.Binddn
}

// GetBinddnOk returns a tuple with the Binddn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetBinddnOk() (*string, bool) {
	if o == nil || o.Binddn == nil {
		return nil, false
	}
	return o.Binddn, true
}

// HasBinddn returns a boolean if a field has been set.
func (o *AdConfigRequest) HasBinddn() bool {
	if o != nil && o.Binddn != nil {
		return true
	}

	return false
}

// SetBinddn gets a reference to the given string and assigns it to the Binddn field.
func (o *AdConfigRequest) SetBinddn(v string) {
	o.Binddn = &v
}

// GetBindpass returns the Bindpass field value if set, zero value otherwise.
func (o *AdConfigRequest) GetBindpass() string {
	if o == nil || o.Bindpass == nil {
		var ret string
		return ret
	}
	return *o.Bindpass
}

// GetBindpassOk returns a tuple with the Bindpass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetBindpassOk() (*string, bool) {
	if o == nil || o.Bindpass == nil {
		return nil, false
	}
	return o.Bindpass, true
}

// HasBindpass returns a boolean if a field has been set.
func (o *AdConfigRequest) HasBindpass() bool {
	if o != nil && o.Bindpass != nil {
		return true
	}

	return false
}

// SetBindpass gets a reference to the given string and assigns it to the Bindpass field.
func (o *AdConfigRequest) SetBindpass(v string) {
	o.Bindpass = &v
}

// GetCaseSensitiveNames returns the CaseSensitiveNames field value if set, zero value otherwise.
func (o *AdConfigRequest) GetCaseSensitiveNames() bool {
	if o == nil || o.CaseSensitiveNames == nil {
		var ret bool
		return ret
	}
	return *o.CaseSensitiveNames
}

// GetCaseSensitiveNamesOk returns a tuple with the CaseSensitiveNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetCaseSensitiveNamesOk() (*bool, bool) {
	if o == nil || o.CaseSensitiveNames == nil {
		return nil, false
	}
	return o.CaseSensitiveNames, true
}

// HasCaseSensitiveNames returns a boolean if a field has been set.
func (o *AdConfigRequest) HasCaseSensitiveNames() bool {
	if o != nil && o.CaseSensitiveNames != nil {
		return true
	}

	return false
}

// SetCaseSensitiveNames gets a reference to the given bool and assigns it to the CaseSensitiveNames field.
func (o *AdConfigRequest) SetCaseSensitiveNames(v bool) {
	o.CaseSensitiveNames = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *AdConfigRequest) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *AdConfigRequest) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *AdConfigRequest) SetCertificate(v string) {
	o.Certificate = &v
}

// GetClientTlsCert returns the ClientTlsCert field value if set, zero value otherwise.
func (o *AdConfigRequest) GetClientTlsCert() string {
	if o == nil || o.ClientTlsCert == nil {
		var ret string
		return ret
	}
	return *o.ClientTlsCert
}

// GetClientTlsCertOk returns a tuple with the ClientTlsCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetClientTlsCertOk() (*string, bool) {
	if o == nil || o.ClientTlsCert == nil {
		return nil, false
	}
	return o.ClientTlsCert, true
}

// HasClientTlsCert returns a boolean if a field has been set.
func (o *AdConfigRequest) HasClientTlsCert() bool {
	if o != nil && o.ClientTlsCert != nil {
		return true
	}

	return false
}

// SetClientTlsCert gets a reference to the given string and assigns it to the ClientTlsCert field.
func (o *AdConfigRequest) SetClientTlsCert(v string) {
	o.ClientTlsCert = &v
}

// GetClientTlsKey returns the ClientTlsKey field value if set, zero value otherwise.
func (o *AdConfigRequest) GetClientTlsKey() string {
	if o == nil || o.ClientTlsKey == nil {
		var ret string
		return ret
	}
	return *o.ClientTlsKey
}

// GetClientTlsKeyOk returns a tuple with the ClientTlsKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetClientTlsKeyOk() (*string, bool) {
	if o == nil || o.ClientTlsKey == nil {
		return nil, false
	}
	return o.ClientTlsKey, true
}

// HasClientTlsKey returns a boolean if a field has been set.
func (o *AdConfigRequest) HasClientTlsKey() bool {
	if o != nil && o.ClientTlsKey != nil {
		return true
	}

	return false
}

// SetClientTlsKey gets a reference to the given string and assigns it to the ClientTlsKey field.
func (o *AdConfigRequest) SetClientTlsKey(v string) {
	o.ClientTlsKey = &v
}

// GetDenyNullBind returns the DenyNullBind field value if set, zero value otherwise.
func (o *AdConfigRequest) GetDenyNullBind() bool {
	if o == nil || o.DenyNullBind == nil {
		var ret bool
		return ret
	}
	return *o.DenyNullBind
}

// GetDenyNullBindOk returns a tuple with the DenyNullBind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetDenyNullBindOk() (*bool, bool) {
	if o == nil || o.DenyNullBind == nil {
		return nil, false
	}
	return o.DenyNullBind, true
}

// HasDenyNullBind returns a boolean if a field has been set.
func (o *AdConfigRequest) HasDenyNullBind() bool {
	if o != nil && o.DenyNullBind != nil {
		return true
	}

	return false
}

// SetDenyNullBind gets a reference to the given bool and assigns it to the DenyNullBind field.
func (o *AdConfigRequest) SetDenyNullBind(v bool) {
	o.DenyNullBind = &v
}

// GetDiscoverdn returns the Discoverdn field value if set, zero value otherwise.
func (o *AdConfigRequest) GetDiscoverdn() bool {
	if o == nil || o.Discoverdn == nil {
		var ret bool
		return ret
	}
	return *o.Discoverdn
}

// GetDiscoverdnOk returns a tuple with the Discoverdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetDiscoverdnOk() (*bool, bool) {
	if o == nil || o.Discoverdn == nil {
		return nil, false
	}
	return o.Discoverdn, true
}

// HasDiscoverdn returns a boolean if a field has been set.
func (o *AdConfigRequest) HasDiscoverdn() bool {
	if o != nil && o.Discoverdn != nil {
		return true
	}

	return false
}

// SetDiscoverdn gets a reference to the given bool and assigns it to the Discoverdn field.
func (o *AdConfigRequest) SetDiscoverdn(v bool) {
	o.Discoverdn = &v
}

// GetFormatter returns the Formatter field value if set, zero value otherwise.
// Deprecated
func (o *AdConfigRequest) GetFormatter() string {
	if o == nil || o.Formatter == nil {
		var ret string
		return ret
	}
	return *o.Formatter
}

// GetFormatterOk returns a tuple with the Formatter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AdConfigRequest) GetFormatterOk() (*string, bool) {
	if o == nil || o.Formatter == nil {
		return nil, false
	}
	return o.Formatter, true
}

// HasFormatter returns a boolean if a field has been set.
func (o *AdConfigRequest) HasFormatter() bool {
	if o != nil && o.Formatter != nil {
		return true
	}

	return false
}

// SetFormatter gets a reference to the given string and assigns it to the Formatter field.
// Deprecated
func (o *AdConfigRequest) SetFormatter(v string) {
	o.Formatter = &v
}

// GetGroupattr returns the Groupattr field value if set, zero value otherwise.
func (o *AdConfigRequest) GetGroupattr() string {
	if o == nil || o.Groupattr == nil {
		var ret string
		return ret
	}
	return *o.Groupattr
}

// GetGroupattrOk returns a tuple with the Groupattr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetGroupattrOk() (*string, bool) {
	if o == nil || o.Groupattr == nil {
		return nil, false
	}
	return o.Groupattr, true
}

// HasGroupattr returns a boolean if a field has been set.
func (o *AdConfigRequest) HasGroupattr() bool {
	if o != nil && o.Groupattr != nil {
		return true
	}

	return false
}

// SetGroupattr gets a reference to the given string and assigns it to the Groupattr field.
func (o *AdConfigRequest) SetGroupattr(v string) {
	o.Groupattr = &v
}

// GetGroupdn returns the Groupdn field value if set, zero value otherwise.
func (o *AdConfigRequest) GetGroupdn() string {
	if o == nil || o.Groupdn == nil {
		var ret string
		return ret
	}
	return *o.Groupdn
}

// GetGroupdnOk returns a tuple with the Groupdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetGroupdnOk() (*string, bool) {
	if o == nil || o.Groupdn == nil {
		return nil, false
	}
	return o.Groupdn, true
}

// HasGroupdn returns a boolean if a field has been set.
func (o *AdConfigRequest) HasGroupdn() bool {
	if o != nil && o.Groupdn != nil {
		return true
	}

	return false
}

// SetGroupdn gets a reference to the given string and assigns it to the Groupdn field.
func (o *AdConfigRequest) SetGroupdn(v string) {
	o.Groupdn = &v
}

// GetGroupfilter returns the Groupfilter field value if set, zero value otherwise.
func (o *AdConfigRequest) GetGroupfilter() string {
	if o == nil || o.Groupfilter == nil {
		var ret string
		return ret
	}
	return *o.Groupfilter
}

// GetGroupfilterOk returns a tuple with the Groupfilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetGroupfilterOk() (*string, bool) {
	if o == nil || o.Groupfilter == nil {
		return nil, false
	}
	return o.Groupfilter, true
}

// HasGroupfilter returns a boolean if a field has been set.
func (o *AdConfigRequest) HasGroupfilter() bool {
	if o != nil && o.Groupfilter != nil {
		return true
	}

	return false
}

// SetGroupfilter gets a reference to the given string and assigns it to the Groupfilter field.
func (o *AdConfigRequest) SetGroupfilter(v string) {
	o.Groupfilter = &v
}

// GetInsecureTls returns the InsecureTls field value if set, zero value otherwise.
func (o *AdConfigRequest) GetInsecureTls() bool {
	if o == nil || o.InsecureTls == nil {
		var ret bool
		return ret
	}
	return *o.InsecureTls
}

// GetInsecureTlsOk returns a tuple with the InsecureTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetInsecureTlsOk() (*bool, bool) {
	if o == nil || o.InsecureTls == nil {
		return nil, false
	}
	return o.InsecureTls, true
}

// HasInsecureTls returns a boolean if a field has been set.
func (o *AdConfigRequest) HasInsecureTls() bool {
	if o != nil && o.InsecureTls != nil {
		return true
	}

	return false
}

// SetInsecureTls gets a reference to the given bool and assigns it to the InsecureTls field.
func (o *AdConfigRequest) SetInsecureTls(v bool) {
	o.InsecureTls = &v
}

// GetLastRotationTolerance returns the LastRotationTolerance field value if set, zero value otherwise.
func (o *AdConfigRequest) GetLastRotationTolerance() int32 {
	if o == nil || o.LastRotationTolerance == nil {
		var ret int32
		return ret
	}
	return *o.LastRotationTolerance
}

// GetLastRotationToleranceOk returns a tuple with the LastRotationTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetLastRotationToleranceOk() (*int32, bool) {
	if o == nil || o.LastRotationTolerance == nil {
		return nil, false
	}
	return o.LastRotationTolerance, true
}

// HasLastRotationTolerance returns a boolean if a field has been set.
func (o *AdConfigRequest) HasLastRotationTolerance() bool {
	if o != nil && o.LastRotationTolerance != nil {
		return true
	}

	return false
}

// SetLastRotationTolerance gets a reference to the given int32 and assigns it to the LastRotationTolerance field.
func (o *AdConfigRequest) SetLastRotationTolerance(v int32) {
	o.LastRotationTolerance = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
// Deprecated
func (o *AdConfigRequest) GetLength() int32 {
	if o == nil || o.Length == nil {
		var ret int32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AdConfigRequest) GetLengthOk() (*int32, bool) {
	if o == nil || o.Length == nil {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *AdConfigRequest) HasLength() bool {
	if o != nil && o.Length != nil {
		return true
	}

	return false
}

// SetLength gets a reference to the given int32 and assigns it to the Length field.
// Deprecated
func (o *AdConfigRequest) SetLength(v int32) {
	o.Length = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *AdConfigRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *AdConfigRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *AdConfigRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetPasswordPolicy returns the PasswordPolicy field value if set, zero value otherwise.
func (o *AdConfigRequest) GetPasswordPolicy() string {
	if o == nil || o.PasswordPolicy == nil {
		var ret string
		return ret
	}
	return *o.PasswordPolicy
}

// GetPasswordPolicyOk returns a tuple with the PasswordPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetPasswordPolicyOk() (*string, bool) {
	if o == nil || o.PasswordPolicy == nil {
		return nil, false
	}
	return o.PasswordPolicy, true
}

// HasPasswordPolicy returns a boolean if a field has been set.
func (o *AdConfigRequest) HasPasswordPolicy() bool {
	if o != nil && o.PasswordPolicy != nil {
		return true
	}

	return false
}

// SetPasswordPolicy gets a reference to the given string and assigns it to the PasswordPolicy field.
func (o *AdConfigRequest) SetPasswordPolicy(v string) {
	o.PasswordPolicy = &v
}

// GetRequestTimeout returns the RequestTimeout field value if set, zero value otherwise.
func (o *AdConfigRequest) GetRequestTimeout() int32 {
	if o == nil || o.RequestTimeout == nil {
		var ret int32
		return ret
	}
	return *o.RequestTimeout
}

// GetRequestTimeoutOk returns a tuple with the RequestTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetRequestTimeoutOk() (*int32, bool) {
	if o == nil || o.RequestTimeout == nil {
		return nil, false
	}
	return o.RequestTimeout, true
}

// HasRequestTimeout returns a boolean if a field has been set.
func (o *AdConfigRequest) HasRequestTimeout() bool {
	if o != nil && o.RequestTimeout != nil {
		return true
	}

	return false
}

// SetRequestTimeout gets a reference to the given int32 and assigns it to the RequestTimeout field.
func (o *AdConfigRequest) SetRequestTimeout(v int32) {
	o.RequestTimeout = &v
}

// GetStarttls returns the Starttls field value if set, zero value otherwise.
func (o *AdConfigRequest) GetStarttls() bool {
	if o == nil || o.Starttls == nil {
		var ret bool
		return ret
	}
	return *o.Starttls
}

// GetStarttlsOk returns a tuple with the Starttls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetStarttlsOk() (*bool, bool) {
	if o == nil || o.Starttls == nil {
		return nil, false
	}
	return o.Starttls, true
}

// HasStarttls returns a boolean if a field has been set.
func (o *AdConfigRequest) HasStarttls() bool {
	if o != nil && o.Starttls != nil {
		return true
	}

	return false
}

// SetStarttls gets a reference to the given bool and assigns it to the Starttls field.
func (o *AdConfigRequest) SetStarttls(v bool) {
	o.Starttls = &v
}

// GetTlsMaxVersion returns the TlsMaxVersion field value if set, zero value otherwise.
func (o *AdConfigRequest) GetTlsMaxVersion() string {
	if o == nil || o.TlsMaxVersion == nil {
		var ret string
		return ret
	}
	return *o.TlsMaxVersion
}

// GetTlsMaxVersionOk returns a tuple with the TlsMaxVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetTlsMaxVersionOk() (*string, bool) {
	if o == nil || o.TlsMaxVersion == nil {
		return nil, false
	}
	return o.TlsMaxVersion, true
}

// HasTlsMaxVersion returns a boolean if a field has been set.
func (o *AdConfigRequest) HasTlsMaxVersion() bool {
	if o != nil && o.TlsMaxVersion != nil {
		return true
	}

	return false
}

// SetTlsMaxVersion gets a reference to the given string and assigns it to the TlsMaxVersion field.
func (o *AdConfigRequest) SetTlsMaxVersion(v string) {
	o.TlsMaxVersion = &v
}

// GetTlsMinVersion returns the TlsMinVersion field value if set, zero value otherwise.
func (o *AdConfigRequest) GetTlsMinVersion() string {
	if o == nil || o.TlsMinVersion == nil {
		var ret string
		return ret
	}
	return *o.TlsMinVersion
}

// GetTlsMinVersionOk returns a tuple with the TlsMinVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetTlsMinVersionOk() (*string, bool) {
	if o == nil || o.TlsMinVersion == nil {
		return nil, false
	}
	return o.TlsMinVersion, true
}

// HasTlsMinVersion returns a boolean if a field has been set.
func (o *AdConfigRequest) HasTlsMinVersion() bool {
	if o != nil && o.TlsMinVersion != nil {
		return true
	}

	return false
}

// SetTlsMinVersion gets a reference to the given string and assigns it to the TlsMinVersion field.
func (o *AdConfigRequest) SetTlsMinVersion(v string) {
	o.TlsMinVersion = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *AdConfigRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AdConfigRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *AdConfigRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUpndomain returns the Upndomain field value if set, zero value otherwise.
func (o *AdConfigRequest) GetUpndomain() string {
	if o == nil || o.Upndomain == nil {
		var ret string
		return ret
	}
	return *o.Upndomain
}

// GetUpndomainOk returns a tuple with the Upndomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetUpndomainOk() (*string, bool) {
	if o == nil || o.Upndomain == nil {
		return nil, false
	}
	return o.Upndomain, true
}

// HasUpndomain returns a boolean if a field has been set.
func (o *AdConfigRequest) HasUpndomain() bool {
	if o != nil && o.Upndomain != nil {
		return true
	}

	return false
}

// SetUpndomain gets a reference to the given string and assigns it to the Upndomain field.
func (o *AdConfigRequest) SetUpndomain(v string) {
	o.Upndomain = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdConfigRequest) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdConfigRequest) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdConfigRequest) SetUrl(v string) {
	o.Url = &v
}

// GetUsePre111GroupCnBehavior returns the UsePre111GroupCnBehavior field value if set, zero value otherwise.
func (o *AdConfigRequest) GetUsePre111GroupCnBehavior() bool {
	if o == nil || o.UsePre111GroupCnBehavior == nil {
		var ret bool
		return ret
	}
	return *o.UsePre111GroupCnBehavior
}

// GetUsePre111GroupCnBehaviorOk returns a tuple with the UsePre111GroupCnBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetUsePre111GroupCnBehaviorOk() (*bool, bool) {
	if o == nil || o.UsePre111GroupCnBehavior == nil {
		return nil, false
	}
	return o.UsePre111GroupCnBehavior, true
}

// HasUsePre111GroupCnBehavior returns a boolean if a field has been set.
func (o *AdConfigRequest) HasUsePre111GroupCnBehavior() bool {
	if o != nil && o.UsePre111GroupCnBehavior != nil {
		return true
	}

	return false
}

// SetUsePre111GroupCnBehavior gets a reference to the given bool and assigns it to the UsePre111GroupCnBehavior field.
func (o *AdConfigRequest) SetUsePre111GroupCnBehavior(v bool) {
	o.UsePre111GroupCnBehavior = &v
}

// GetUseTokenGroups returns the UseTokenGroups field value if set, zero value otherwise.
func (o *AdConfigRequest) GetUseTokenGroups() bool {
	if o == nil || o.UseTokenGroups == nil {
		var ret bool
		return ret
	}
	return *o.UseTokenGroups
}

// GetUseTokenGroupsOk returns a tuple with the UseTokenGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetUseTokenGroupsOk() (*bool, bool) {
	if o == nil || o.UseTokenGroups == nil {
		return nil, false
	}
	return o.UseTokenGroups, true
}

// HasUseTokenGroups returns a boolean if a field has been set.
func (o *AdConfigRequest) HasUseTokenGroups() bool {
	if o != nil && o.UseTokenGroups != nil {
		return true
	}

	return false
}

// SetUseTokenGroups gets a reference to the given bool and assigns it to the UseTokenGroups field.
func (o *AdConfigRequest) SetUseTokenGroups(v bool) {
	o.UseTokenGroups = &v
}

// GetUserattr returns the Userattr field value if set, zero value otherwise.
func (o *AdConfigRequest) GetUserattr() string {
	if o == nil || o.Userattr == nil {
		var ret string
		return ret
	}
	return *o.Userattr
}

// GetUserattrOk returns a tuple with the Userattr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetUserattrOk() (*string, bool) {
	if o == nil || o.Userattr == nil {
		return nil, false
	}
	return o.Userattr, true
}

// HasUserattr returns a boolean if a field has been set.
func (o *AdConfigRequest) HasUserattr() bool {
	if o != nil && o.Userattr != nil {
		return true
	}

	return false
}

// SetUserattr gets a reference to the given string and assigns it to the Userattr field.
func (o *AdConfigRequest) SetUserattr(v string) {
	o.Userattr = &v
}

// GetUserdn returns the Userdn field value if set, zero value otherwise.
func (o *AdConfigRequest) GetUserdn() string {
	if o == nil || o.Userdn == nil {
		var ret string
		return ret
	}
	return *o.Userdn
}

// GetUserdnOk returns a tuple with the Userdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetUserdnOk() (*string, bool) {
	if o == nil || o.Userdn == nil {
		return nil, false
	}
	return o.Userdn, true
}

// HasUserdn returns a boolean if a field has been set.
func (o *AdConfigRequest) HasUserdn() bool {
	if o != nil && o.Userdn != nil {
		return true
	}

	return false
}

// SetUserdn gets a reference to the given string and assigns it to the Userdn field.
func (o *AdConfigRequest) SetUserdn(v string) {
	o.Userdn = &v
}

// GetUserfilter returns the Userfilter field value if set, zero value otherwise.
func (o *AdConfigRequest) GetUserfilter() string {
	if o == nil || o.Userfilter == nil {
		var ret string
		return ret
	}
	return *o.Userfilter
}

// GetUserfilterOk returns a tuple with the Userfilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetUserfilterOk() (*string, bool) {
	if o == nil || o.Userfilter == nil {
		return nil, false
	}
	return o.Userfilter, true
}

// HasUserfilter returns a boolean if a field has been set.
func (o *AdConfigRequest) HasUserfilter() bool {
	if o != nil && o.Userfilter != nil {
		return true
	}

	return false
}

// SetUserfilter gets a reference to the given string and assigns it to the Userfilter field.
func (o *AdConfigRequest) SetUserfilter(v string) {
	o.Userfilter = &v
}

// GetUsernameAsAlias returns the UsernameAsAlias field value if set, zero value otherwise.
func (o *AdConfigRequest) GetUsernameAsAlias() bool {
	if o == nil || o.UsernameAsAlias == nil {
		var ret bool
		return ret
	}
	return *o.UsernameAsAlias
}

// GetUsernameAsAliasOk returns a tuple with the UsernameAsAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdConfigRequest) GetUsernameAsAliasOk() (*bool, bool) {
	if o == nil || o.UsernameAsAlias == nil {
		return nil, false
	}
	return o.UsernameAsAlias, true
}

// HasUsernameAsAlias returns a boolean if a field has been set.
func (o *AdConfigRequest) HasUsernameAsAlias() bool {
	if o != nil && o.UsernameAsAlias != nil {
		return true
	}

	return false
}

// SetUsernameAsAlias gets a reference to the given bool and assigns it to the UsernameAsAlias field.
func (o *AdConfigRequest) SetUsernameAsAlias(v bool) {
	o.UsernameAsAlias = &v
}

func (o AdConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AnonymousGroupSearch != nil {
		toSerialize["anonymous_group_search"] = o.AnonymousGroupSearch
	}
	if o.Binddn != nil {
		toSerialize["binddn"] = o.Binddn
	}
	if o.Bindpass != nil {
		toSerialize["bindpass"] = o.Bindpass
	}
	if o.CaseSensitiveNames != nil {
		toSerialize["case_sensitive_names"] = o.CaseSensitiveNames
	}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.ClientTlsCert != nil {
		toSerialize["client_tls_cert"] = o.ClientTlsCert
	}
	if o.ClientTlsKey != nil {
		toSerialize["client_tls_key"] = o.ClientTlsKey
	}
	if o.DenyNullBind != nil {
		toSerialize["deny_null_bind"] = o.DenyNullBind
	}
	if o.Discoverdn != nil {
		toSerialize["discoverdn"] = o.Discoverdn
	}
	if o.Formatter != nil {
		toSerialize["formatter"] = o.Formatter
	}
	if o.Groupattr != nil {
		toSerialize["groupattr"] = o.Groupattr
	}
	if o.Groupdn != nil {
		toSerialize["groupdn"] = o.Groupdn
	}
	if o.Groupfilter != nil {
		toSerialize["groupfilter"] = o.Groupfilter
	}
	if o.InsecureTls != nil {
		toSerialize["insecure_tls"] = o.InsecureTls
	}
	if o.LastRotationTolerance != nil {
		toSerialize["last_rotation_tolerance"] = o.LastRotationTolerance
	}
	if o.Length != nil {
		toSerialize["length"] = o.Length
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.PasswordPolicy != nil {
		toSerialize["password_policy"] = o.PasswordPolicy
	}
	if o.RequestTimeout != nil {
		toSerialize["request_timeout"] = o.RequestTimeout
	}
	if o.Starttls != nil {
		toSerialize["starttls"] = o.Starttls
	}
	if o.TlsMaxVersion != nil {
		toSerialize["tls_max_version"] = o.TlsMaxVersion
	}
	if o.TlsMinVersion != nil {
		toSerialize["tls_min_version"] = o.TlsMinVersion
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.Upndomain != nil {
		toSerialize["upndomain"] = o.Upndomain
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.UsePre111GroupCnBehavior != nil {
		toSerialize["use_pre111_group_cn_behavior"] = o.UsePre111GroupCnBehavior
	}
	if o.UseTokenGroups != nil {
		toSerialize["use_token_groups"] = o.UseTokenGroups
	}
	if o.Userattr != nil {
		toSerialize["userattr"] = o.Userattr
	}
	if o.Userdn != nil {
		toSerialize["userdn"] = o.Userdn
	}
	if o.Userfilter != nil {
		toSerialize["userfilter"] = o.Userfilter
	}
	if o.UsernameAsAlias != nil {
		toSerialize["username_as_alias"] = o.UsernameAsAlias
	}
	return json.Marshal(toSerialize)
}

type NullableAdConfigRequest struct {
	value *AdConfigRequest
	isSet bool
}

func (v NullableAdConfigRequest) Get() *AdConfigRequest {
	return v.value
}

func (v *NullableAdConfigRequest) Set(val *AdConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAdConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAdConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdConfigRequest(val *AdConfigRequest) *NullableAdConfigRequest {
	return &NullableAdConfigRequest{value: val, isSet: true}
}

func (v NullableAdConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AdLibraryCheckInRequest struct for AdLibraryCheckInRequest
type AdLibraryCheckInRequest struct {
	// The username/logon name for the service accounts to check in.
	ServiceAccountNames []string `json:"service_account_names,omitempty"`
}

// NewAdLibraryCheckInRequest instantiates a new AdLibraryCheckInRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdLibraryCheckInRequest() *AdLibraryCheckInRequest {
	this := AdLibraryCheckInRequest{}
	return &this
}

// NewAdLibraryCheckInRequestWithDefaults instantiates a new AdLibraryCheckInRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdLibraryCheckInRequestWithDefaults() *AdLibraryCheckInRequest {
	this := AdLibraryCheckInRequest{}
	return &this
}

// GetServiceAccountNames returns the ServiceAccountNames field value if set, zero value otherwise.
func (o *AdLibraryCheckInRequest) GetServiceAccountNames() []string {
	if o == nil || o.ServiceAccountNames == nil {
		var ret []string
		return ret
	}
	return o.ServiceAccountNames
}

// GetServiceAccountNamesOk returns a tuple with the ServiceAccountNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdLibraryCheckInRequest) GetServiceAccountNamesOk() ([]string, bool) {
	if o == nil || o.ServiceAccountNames == nil {
		return nil, false
	}
	return o.ServiceAccountNames, true
}

// HasServiceAccountNames returns a boolean if a field has been set.
func (o *AdLibraryCheckInRequest) HasServiceAccountNames() bool {
	if o != nil && o.ServiceAccountNames != nil {
		return true
	}

	return false
}

// SetServiceAccountNames gets a reference to the given []string and assigns it to the ServiceAccountNames field.
func (o *AdLibraryCheckInRequest) SetServiceAccountNames(v []string) {
	o.ServiceAccountNames = v
}

func (o AdLibraryCheckInRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceAccountNames != nil {
		toSerialize["service_account_names"] = o.ServiceAccountNames
	}
	return json.Marshal(toSerialize)
}

type NullableAdLibraryCheckInRequest struct {
	value *AdLibraryCheckInRequest
	isSet bool
}

func (v NullableAdLibraryCheckInRequest) Get() *AdLibraryCheckInRequest {
	return v.value
}

func (v *NullableAdLibraryCheckInRequest) Set(val *AdLibraryCheckInRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAdLibraryCheckInRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAdLibraryCheckInRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdLibraryCheckInRequest(val *AdLibraryCheckInRequest) *NullableAdLibraryCheckInRequest {
	return &NullableAdLibraryCheckInRequest{value: val, isSet: true}
}

func (v NullableAdLibraryCheckInRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdLibraryCheckInRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AdLibraryCheckOutRequest struct for AdLibraryCheckOutRequest
type AdLibraryCheckOutRequest struct {
	// The length of time before the check-out will expire, in seconds.
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewAdLibraryCheckOutRequest instantiates a new AdLibraryCheckOutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdLibraryCheckOutRequest() *AdLibraryCheckOutRequest {
	this := AdLibraryCheckOutRequest{}
	return &this
}

// NewAdLibraryCheckOutRequestWithDefaults instantiates a new AdLibraryCheckOutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdLibraryCheckOutRequestWithDefaults() *AdLibraryCheckOutRequest {
	this := AdLibraryCheckOutRequest{}
	return &this
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *AdLibraryCheckOutRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdLibraryCheckOutRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AdLibraryCheckOutRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *AdLibraryCheckOutRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o AdLibraryCheckOutRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableAdLibraryCheckOutRequest struct {
	value *AdLibraryCheckOutRequest
	isSet bool
}

func (v NullableAdLibraryCheckOutRequest) Get() *AdLibraryCheckOutRequest {
	return v.value
}

func (v *NullableAdLibraryCheckOutRequest) Set(val *AdLibraryCheckOutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAdLibraryCheckOutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAdLibraryCheckOutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdLibraryCheckOutRequest(val *AdLibraryCheckOutRequest) *NullableAdLibraryCheckOutRequest {
	return &NullableAdLibraryCheckOutRequest{value: val, isSet: true}
}

func (v NullableAdLibraryCheckOutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdLibraryCheckOutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AdLibraryManageCheckInRequest struct for AdLibraryManageCheckInRequest
type AdLibraryManageCheckInRequest struct {
	// The username/logon name for the service accounts to check in.
	ServiceAccountNames []string `json:"service_account_names,omitempty"`
}

// NewAdLibraryManageCheckInRequest instantiates a new AdLibraryManageCheckInRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdLibraryManageCheckInRequest() *AdLibraryManageCheckInRequest {
	this := AdLibraryManageCheckInRequest{}
	return &this
}

// NewAdLibraryManageCheckInRequestWithDefaults instantiates a new AdLibraryManageCheckInRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdLibraryManageCheckInRequestWithDefaults() *AdLibraryManageCheckInRequest {
	this := AdLibraryManageCheckInRequest{}
	return &this
}

// GetServiceAccountNames returns the ServiceAccountNames field value if set, zero value otherwise.
func (o *AdLibraryManageCheckInRequest) GetServiceAccountNames() []string {
	if o == nil || o.ServiceAccountNames == nil {
		var ret []string
		return ret
	}
	return o.ServiceAccountNames
}

// GetServiceAccountNamesOk returns a tuple with the ServiceAccountNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdLibraryManageCheckInRequest) GetServiceAccountNamesOk() ([]string, bool) {
	if o == nil || o.ServiceAccountNames == nil {
		return nil, false
	}
	return o.ServiceAccountNames, true
}

// HasServiceAccountNames returns a boolean if a field has been set.
func (o *AdLibraryManageCheckInRequest) HasServiceAccountNames() bool {
	if o != nil && o.ServiceAccountNames != nil {
		return true
	}

	return false
}

// SetServiceAccountNames gets a reference to the given []string and assigns it to the ServiceAccountNames field.
func (o *AdLibraryManageCheckInRequest) SetServiceAccountNames(v []string) {
	o.ServiceAccountNames = v
}

func (o AdLibraryManageCheckInRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceAccountNames != nil {
		toSerialize["service_account_names"] = o.ServiceAccountNames
	}
	return json.Marshal(toSerialize)
}

type NullableAdLibraryManageCheckInRequest struct {
	value *AdLibraryManageCheckInRequest
	isSet bool
}

func (v NullableAdLibraryManageCheckInRequest) Get() *AdLibraryManageCheckInRequest {
	return v.value
}

func (v *NullableAdLibraryManageCheckInRequest) Set(val *AdLibraryManageCheckInRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAdLibraryManageCheckInRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAdLibraryManageCheckInRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdLibraryManageCheckInRequest(val *AdLibraryManageCheckInRequest) *NullableAdLibraryManageCheckInRequest {
	return &NullableAdLibraryManageCheckInRequest{value: val, isSet: true}
}

func (v NullableAdLibraryManageCheckInRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdLibraryManageCheckInRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AdLibraryRequest struct for AdLibraryRequest
type AdLibraryRequest struct {
	// Disable the default behavior of requiring that check-ins are performed by the entity that checked them out.
	DisableCheckInEnforcement *bool `json:"disable_check_in_enforcement,omitempty"`
	// In seconds, the max amount of time a check-out's renewals should last. Defaults to 24 hours.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// The username/logon name for the service accounts with which this set will be associated.
	ServiceAccountNames []string `json:"service_account_names,omitempty"`
	// In seconds, the amount of time a check-out should last. Defaults to 24 hours.
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewAdLibraryRequest instantiates a new AdLibraryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdLibraryRequest() *AdLibraryRequest {
	this := AdLibraryRequest{}
	var disableCheckInEnforcement bool = false
	this.DisableCheckInEnforcement = &disableCheckInEnforcement
	var maxTtl int32 = 86400
	this.MaxTtl = &maxTtl
	var ttl int32 = 86400
	this.Ttl = &ttl
	return &this
}

// NewAdLibraryRequestWithDefaults instantiates a new AdLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdLibraryRequestWithDefaults() *AdLibraryRequest {
	this := AdLibraryRequest{}
	var disableCheckInEnforcement bool = false
	this.DisableCheckInEnforcement = &disableCheckInEnforcement
	var maxTtl int32 = 86400
	this.MaxTtl = &maxTtl
	var ttl int32 = 86400
	this.Ttl = &ttl
	return &this
}

// GetDisableCheckInEnforcement returns the DisableCheckInEnforcement field value if set, zero value otherwise.
func (o *AdLibraryRequest) GetDisableCheckInEnforcement() bool {
	if o == nil || o.DisableCheckInEnforcement == nil {
		var ret bool
		return ret
	}
	return *o.DisableCheckInEnforcement
}

// GetDisableCheckInEnforcementOk returns a tuple with the DisableCheckInEnforcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdLibraryRequest) GetDisableCheckInEnforcementOk() (*bool, bool) {
	if o == nil || o.DisableCheckInEnforcement == nil {
		return nil, false
	}
	return o.DisableCheckInEnforcement, true
}

// HasDisableCheckInEnforcement returns a boolean if a field has been set.
func (o *AdLibraryRequest) HasDisableCheckInEnforcement() bool {
	if o != nil && o.DisableCheckInEnforcement != nil {
		return true
	}

	return false
}

// SetDisableCheckInEnforcement gets a reference to the given bool and assigns it to the DisableCheckInEnforcement field.
func (o *AdLibraryRequest) SetDisableCheckInEnforcement(v bool) {
	o.DisableCheckInEnforcement = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *AdLibraryRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdLibraryRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *AdLibraryRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *AdLibraryRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetServiceAccountNames returns the ServiceAccountNames field value if set, zero value otherwise.
func (o *AdLibraryRequest) GetServiceAccountNames() []string {
	if o == nil || o.ServiceAccountNames == nil {
		var ret []string
		return ret
	}
	return o.ServiceAccountNames
}

// GetServiceAccountNamesOk returns a tuple with the ServiceAccountNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdLibraryRequest) GetServiceAccountNamesOk() ([]string, bool) {
	if o == nil || o.ServiceAccountNames == nil {
		return nil, false
	}
	return o.ServiceAccountNames, true
}

// HasServiceAccountNames returns a boolean if a field has been set.
func (o *AdLibraryRequest) HasServiceAccountNames() bool {
	if o != nil && o.ServiceAccountNames != nil {
		return true
	}

	return false
}

// SetServiceAccountNames gets a reference to the given []string and assigns it to the ServiceAccountNames field.
func (o *AdLibraryRequest) SetServiceAccountNames(v []string) {
	o.ServiceAccountNames = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *AdLibraryRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdLibraryRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AdLibraryRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *AdLibraryRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o AdLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisableCheckInEnforcement != nil {
		toSerialize["disable_check_in_enforcement"] = o.DisableCheckInEnforcement
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.ServiceAccountNames != nil {
		toSerialize["service_account_names"] = o.ServiceAccountNames
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableAdLibraryRequest struct {
	value *AdLibraryRequest
	isSet bool
}

func (v NullableAdLibraryRequest) Get() *AdLibraryRequest {
	return v.value
}

func (v *NullableAdLibraryRequest) Set(val *AdLibraryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAdLibraryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAdLibraryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdLibraryRequest(val *AdLibraryRequest) *NullableAdLibraryRequest {
	return &NullableAdLibraryRequest{value: val, isSet: true}
}

func (v NullableAdLibraryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdLibraryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AdRolesRequest struct for AdRolesRequest
type AdRolesRequest struct {
	// The username/logon name for the service account with which this role will be associated.
	ServiceAccountName *string `json:"service_account_name,omitempty"`
	// In seconds, the default password time-to-live.
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewAdRolesRequest instantiates a new AdRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdRolesRequest() *AdRolesRequest {
	this := AdRolesRequest{}
	return &this
}

// NewAdRolesRequestWithDefaults instantiates a new AdRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdRolesRequestWithDefaults() *AdRolesRequest {
	this := AdRolesRequest{}
	return &this
}

// GetServiceAccountName returns the ServiceAccountName field value if set, zero value otherwise.
func (o *AdRolesRequest) GetServiceAccountName() string {
	if o == nil || o.ServiceAccountName == nil {
		var ret string
		return ret
	}
	return *o.ServiceAccountName
}

// GetServiceAccountNameOk returns a tuple with the ServiceAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdRolesRequest) GetServiceAccountNameOk() (*string, bool) {
	if o == nil || o.ServiceAccountName == nil {
		return nil, false
	}
	return o.ServiceAccountName, true
}

// HasServiceAccountName returns a boolean if a field has been set.
func (o *AdRolesRequest) HasServiceAccountName() bool {
	if o != nil && o.ServiceAccountName != nil {
		return true
	}

	return false
}

// SetServiceAccountName gets a reference to the given string and assigns it to the ServiceAccountName field.
func (o *AdRolesRequest) SetServiceAccountName(v string) {
	o.ServiceAccountName = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *AdRolesRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdRolesRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AdRolesRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *AdRolesRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o AdRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceAccountName != nil {
		toSerialize["service_account_name"] = o.ServiceAccountName
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableAdRolesRequest struct {
	value *AdRolesRequest
	isSet bool
}

func (v NullableAdRolesRequest) Get() *AdRolesRequest {
	return v.value
}

func (v *NullableAdRolesRequest) Set(val *AdRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAdRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAdRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdRolesRequest(val *AdRolesRequest) *NullableAdRolesRequest {
	return &NullableAdRolesRequest{value: val, isSet: true}
}

func (v NullableAdRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AlicloudConfigRequest struct for AlicloudConfigRequest
type AlicloudConfigRequest struct {
	// Access key with appropriate permissions.
	AccessKey *string `json:"access_key,omitempty"`
	// Secret key with appropriate permissions.
	SecretKey *string `json:"secret_key,omitempty"`
}

// NewAlicloudConfigRequest instantiates a new AlicloudConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlicloudConfigRequest() *AlicloudConfigRequest {
	this := AlicloudConfigRequest{}
	return &this
}

// NewAlicloudConfigRequestWithDefaults instantiates a new AlicloudConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlicloudConfigRequestWithDefaults() *AlicloudConfigRequest {
	this := AlicloudConfigRequest{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *AlicloudConfigRequest) GetAccessKey() string {
	if o == nil || o.AccessKey == nil {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudConfigRequest) GetAccessKeyOk() (*string, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *AlicloudConfigRequest) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *AlicloudConfigRequest) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *AlicloudConfigRequest) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudConfigRequest) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *AlicloudConfigRequest) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *AlicloudConfigRequest) SetSecretKey(v string) {
	o.SecretKey = &v
}

func (o AlicloudConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["access_key"] = o.AccessKey
	}
	if o.SecretKey != nil {
		toSerialize["secret_key"] = o.SecretKey
	}
	return json.Marshal(toSerialize)
}

type NullableAlicloudConfigRequest struct {
	value *AlicloudConfigRequest
	isSet bool
}

func (v NullableAlicloudConfigRequest) Get() *AlicloudConfigRequest {
	return v.value
}

func (v *NullableAlicloudConfigRequest) Set(val *AlicloudConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAlicloudConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAlicloudConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlicloudConfigRequest(val *AlicloudConfigRequest) *NullableAlicloudConfigRequest {
	return &NullableAlicloudConfigRequest{value: val, isSet: true}
}

func (v NullableAlicloudConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlicloudConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AlicloudLoginRequest struct for AlicloudLoginRequest
type AlicloudLoginRequest struct {
	// The request headers. This must include the headers over which AliCloud has included a signature.
	IdentityRequestHeaders *string `json:"identity_request_headers,omitempty"`
	// Base64-encoded full URL against which to make the AliCloud request.
	IdentityRequestUrl *string `json:"identity_request_url,omitempty"`
	// Name of the role against which the login is being attempted. If 'role' is not specified, then the login endpoint looks for a role name in the ARN returned by the GetCallerIdentity request. If a matching role is not found, login fails.
	Role *string `json:"role,omitempty"`
}

// NewAlicloudLoginRequest instantiates a new AlicloudLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlicloudLoginRequest() *AlicloudLoginRequest {
	this := AlicloudLoginRequest{}
	return &this
}

// NewAlicloudLoginRequestWithDefaults instantiates a new AlicloudLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlicloudLoginRequestWithDefaults() *AlicloudLoginRequest {
	this := AlicloudLoginRequest{}
	return &this
}

// GetIdentityRequestHeaders returns the IdentityRequestHeaders field value if set, zero value otherwise.
func (o *AlicloudLoginRequest) GetIdentityRequestHeaders() string {
	if o == nil || o.IdentityRequestHeaders == nil {
		var ret string
		return ret
	}
	return *o.IdentityRequestHeaders
}

// GetIdentityRequestHeadersOk returns a tuple with the IdentityRequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudLoginRequest) GetIdentityRequestHeadersOk() (*string, bool) {
	if o == nil || o.IdentityRequestHeaders == nil {
		return nil, false
	}
	return o.IdentityRequestHeaders, true
}

// HasIdentityRequestHeaders returns a boolean if a field has been set.
func (o *AlicloudLoginRequest) HasIdentityRequestHeaders() bool {
	if o != nil && o.IdentityRequestHeaders != nil {
		return true
	}

	return false
}

// SetIdentityRequestHeaders gets a reference to the given string and assigns it to the IdentityRequestHeaders field.
func (o *AlicloudLoginRequest) SetIdentityRequestHeaders(v string) {
	o.IdentityRequestHeaders = &v
}

// GetIdentityRequestUrl returns the IdentityRequestUrl field value if set, zero value otherwise.
func (o *AlicloudLoginRequest) GetIdentityRequestUrl() string {
	if o == nil || o.IdentityRequestUrl == nil {
		var ret string
		return ret
	}
	return *o.IdentityRequestUrl
}

// GetIdentityRequestUrlOk returns a tuple with the IdentityRequestUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudLoginRequest) GetIdentityRequestUrlOk() (*string, bool) {
	if o == nil || o.IdentityRequestUrl == nil {
		return nil, false
	}
	return o.IdentityRequestUrl, true
}

// HasIdentityRequestUrl returns a boolean if a field has been set.
func (o *AlicloudLoginRequest) HasIdentityRequestUrl() bool {
	if o != nil && o.IdentityRequestUrl != nil {
		return true
	}

	return false
}

// SetIdentityRequestUrl gets a reference to the given string and assigns it to the IdentityRequestUrl field.
func (o *AlicloudLoginRequest) SetIdentityRequestUrl(v string) {
	o.IdentityRequestUrl = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AlicloudLoginRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudLoginRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AlicloudLoginRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *AlicloudLoginRequest) SetRole(v string) {
	o.Role = &v
}

func (o AlicloudLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IdentityRequestHeaders != nil {
		toSerialize["identity_request_headers"] = o.IdentityRequestHeaders
	}
	if o.IdentityRequestUrl != nil {
		toSerialize["identity_request_url"] = o.IdentityRequestUrl
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableAlicloudLoginRequest struct {
	value *AlicloudLoginRequest
	isSet bool
}

func (v NullableAlicloudLoginRequest) Get() *AlicloudLoginRequest {
	return v.value
}

func (v *NullableAlicloudLoginRequest) Set(val *AlicloudLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAlicloudLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAlicloudLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlicloudLoginRequest(val *AlicloudLoginRequest) *NullableAlicloudLoginRequest {
	return &NullableAlicloudLoginRequest{value: val, isSet: true}
}

func (v NullableAlicloudLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlicloudLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AlicloudRoleRequest struct for AlicloudRoleRequest
type AlicloudRoleRequest struct {
	// ARN of the RAM to bind to this role.
	Arn *string `json:"arn,omitempty"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewAlicloudRoleRequest instantiates a new AlicloudRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlicloudRoleRequest() *AlicloudRoleRequest {
	this := AlicloudRoleRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewAlicloudRoleRequestWithDefaults instantiates a new AlicloudRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlicloudRoleRequestWithDefaults() *AlicloudRoleRequest {
	this := AlicloudRoleRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetArn returns the Arn field value if set, zero value otherwise.
func (o *AlicloudRoleRequest) GetArn() string {
	if o == nil || o.Arn == nil {
		var ret string
		return ret
	}
	return *o.Arn
}

// GetArnOk returns a tuple with the Arn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudRoleRequest) GetArnOk() (*string, bool) {
	if o == nil || o.Arn == nil {
		return nil, false
	}
	return o.Arn, true
}

// HasArn returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasArn() bool {
	if o != nil && o.Arn != nil {
		return true
	}

	return false
}

// SetArn gets a reference to the given string and assigns it to the Arn field.
func (o *AlicloudRoleRequest) SetArn(v string) {
	o.Arn = &v
}

// GetBoundCidrs returns the BoundCidrs field value if set, zero value otherwise.
// Deprecated
func (o *AlicloudRoleRequest) GetBoundCidrs() []string {
	if o == nil || o.BoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrs
}

// GetBoundCidrsOk returns a tuple with the BoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AlicloudRoleRequest) GetBoundCidrsOk() ([]string, bool) {
	if o == nil || o.BoundCidrs == nil {
		return nil, false
	}
	return o.BoundCidrs, true
}

// HasBoundCidrs returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasBoundCidrs() bool {
	if o != nil && o.BoundCidrs != nil {
		return true
	}

	return false
}

// SetBoundCidrs gets a reference to the given []string and assigns it to the BoundCidrs field.
// Deprecated
func (o *AlicloudRoleRequest) SetBoundCidrs(v []string) {
	o.BoundCidrs = v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *AlicloudRoleRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AlicloudRoleRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *AlicloudRoleRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *AlicloudRoleRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AlicloudRoleRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *AlicloudRoleRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *AlicloudRoleRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AlicloudRoleRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *AlicloudRoleRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *AlicloudRoleRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudRoleRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *AlicloudRoleRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *AlicloudRoleRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudRoleRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *AlicloudRoleRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *AlicloudRoleRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudRoleRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *AlicloudRoleRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *AlicloudRoleRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudRoleRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *AlicloudRoleRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *AlicloudRoleRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudRoleRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *AlicloudRoleRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *AlicloudRoleRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudRoleRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *AlicloudRoleRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *AlicloudRoleRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudRoleRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *AlicloudRoleRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *AlicloudRoleRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudRoleRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *AlicloudRoleRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *AlicloudRoleRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlicloudRoleRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *AlicloudRoleRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *AlicloudRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AlicloudRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AlicloudRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *AlicloudRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o AlicloudRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Arn != nil {
		toSerialize["arn"] = o.Arn
	}
	if o.BoundCidrs != nil {
		toSerialize["bound_cidrs"] = o.BoundCidrs
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableAlicloudRoleRequest struct {
	value *AlicloudRoleRequest
	isSet bool
}

func (v NullableAlicloudRoleRequest) Get() *AlicloudRoleRequest {
	return v.value
}

func (v *NullableAlicloudRoleRequest) Set(val *AlicloudRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAlicloudRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAlicloudRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlicloudRoleRequest(val *AlicloudRoleRequest) *NullableAlicloudRoleRequest {
	return &NullableAlicloudRoleRequest{value: val, isSet: true}
}

func (v NullableAlicloudRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlicloudRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppIdLoginRequest struct for AppIdLoginRequest
type AppIdLoginRequest struct {
	// The unique user ID
	UserId *string `json:"user_id,omitempty"`
}

// NewAppIdLoginRequest instantiates a new AppIdLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppIdLoginRequest() *AppIdLoginRequest {
	this := AppIdLoginRequest{}
	return &this
}

// NewAppIdLoginRequestWithDefaults instantiates a new AppIdLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppIdLoginRequestWithDefaults() *AppIdLoginRequest {
	this := AppIdLoginRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AppIdLoginRequest) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppIdLoginRequest) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AppIdLoginRequest) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *AppIdLoginRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o AppIdLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableAppIdLoginRequest struct {
	value *AppIdLoginRequest
	isSet bool
}

func (v NullableAppIdLoginRequest) Get() *AppIdLoginRequest {
	return v.value
}

func (v *NullableAppIdLoginRequest) Set(val *AppIdLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAppIdLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAppIdLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppIdLoginRequest(val *AppIdLoginRequest) *NullableAppIdLoginRequest {
	return &NullableAppIdLoginRequest{value: val, isSet: true}
}

func (v NullableAppIdLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppIdLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppIdMapAppIdRequest struct for AppIdMapAppIdRequest
type AppIdMapAppIdRequest struct {
	// A name to map to this app ID for logs.
	DisplayName *string `json:"display_name,omitempty"`
	// Policies for the app ID.
	Value *string `json:"value,omitempty"`
}

// NewAppIdMapAppIdRequest instantiates a new AppIdMapAppIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppIdMapAppIdRequest() *AppIdMapAppIdRequest {
	this := AppIdMapAppIdRequest{}
	return &this
}

// NewAppIdMapAppIdRequestWithDefaults instantiates a new AppIdMapAppIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppIdMapAppIdRequestWithDefaults() *AppIdMapAppIdRequest {
	this := AppIdMapAppIdRequest{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AppIdMapAppIdRequest) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppIdMapAppIdRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AppIdMapAppIdRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AppIdMapAppIdRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AppIdMapAppIdRequest) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppIdMapAppIdRequest) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AppIdMapAppIdRequest) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AppIdMapAppIdRequest) SetValue(v string) {
	o.Value = &v
}

func (o AppIdMapAppIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableAppIdMapAppIdRequest struct {
	value *AppIdMapAppIdRequest
	isSet bool
}

func (v NullableAppIdMapAppIdRequest) Get() *AppIdMapAppIdRequest {
	return v.value
}

func (v *NullableAppIdMapAppIdRequest) Set(val *AppIdMapAppIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAppIdMapAppIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAppIdMapAppIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppIdMapAppIdRequest(val *AppIdMapAppIdRequest) *NullableAppIdMapAppIdRequest {
	return &NullableAppIdMapAppIdRequest{value: val, isSet: true}
}

func (v NullableAppIdMapAppIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppIdMapAppIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppIdMapUserIdRequest struct for AppIdMapUserIdRequest
type AppIdMapUserIdRequest struct {
	// If not blank, restricts auth by this CIDR block
	CidrBlock *string `json:"cidr_block,omitempty"`
	// App IDs that this user associates with.
	Value *string `json:"value,omitempty"`
}

// NewAppIdMapUserIdRequest instantiates a new AppIdMapUserIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppIdMapUserIdRequest() *AppIdMapUserIdRequest {
	this := AppIdMapUserIdRequest{}
	return &this
}

// NewAppIdMapUserIdRequestWithDefaults instantiates a new AppIdMapUserIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppIdMapUserIdRequestWithDefaults() *AppIdMapUserIdRequest {
	this := AppIdMapUserIdRequest{}
	return &this
}

// GetCidrBlock returns the CidrBlock field value if set, zero value otherwise.
func (o *AppIdMapUserIdRequest) GetCidrBlock() string {
	if o == nil || o.CidrBlock == nil {
		var ret string
		return ret
	}
	return *o.CidrBlock
}

// GetCidrBlockOk returns a tuple with the CidrBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppIdMapUserIdRequest) GetCidrBlockOk() (*string, bool) {
	if o == nil || o.CidrBlock == nil {
		return nil, false
	}
	return o.CidrBlock, true
}

// HasCidrBlock returns a boolean if a field has been set.
func (o *AppIdMapUserIdRequest) HasCidrBlock() bool {
	if o != nil && o.CidrBlock != nil {
		return true
	}

	return false
}

// SetCidrBlock gets a reference to the given string and assigns it to the CidrBlock field.
func (o *AppIdMapUserIdRequest) SetCidrBlock(v string) {
	o.CidrBlock = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AppIdMapUserIdRequest) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppIdMapUserIdRequest) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AppIdMapUserIdRequest) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AppIdMapUserIdRequest) SetValue(v string) {
	o.Value = &v
}

func (o AppIdMapUserIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CidrBlock != nil {
		toSerialize["cidr_block"] = o.CidrBlock
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableAppIdMapUserIdRequest struct {
	value *AppIdMapUserIdRequest
	isSet bool
}

func (v NullableAppIdMapUserIdRequest) Get() *AppIdMapUserIdRequest {
	return v.value
}

func (v *NullableAppIdMapUserIdRequest) Set(val *AppIdMapUserIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAppIdMapUserIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAppIdMapUserIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppIdMapUserIdRequest(val *AppIdMapUserIdRequest) *NullableAppIdMapUserIdRequest {
	return &NullableAppIdMapUserIdRequest{value: val, isSet: true}
}

func (v NullableAppIdMapUserIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppIdMapUserIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleLoginRequest struct for ApproleLoginRequest
type ApproleLoginRequest struct {
	// Unique identifier of the Role. Required to be supplied when the 'bind_secret_id' constraint is set.
	RoleId *string `json:"role_id,omitempty"`
	// SecretID belong to the App role
	SecretId *string `json:"secret_id,omitempty"`
}

// NewApproleLoginRequest instantiates a new ApproleLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleLoginRequest() *ApproleLoginRequest {
	this := ApproleLoginRequest{}
	var secretId string = ""
	this.SecretId = &secretId
	return &this
}

// NewApproleLoginRequestWithDefaults instantiates a new ApproleLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleLoginRequestWithDefaults() *ApproleLoginRequest {
	this := ApproleLoginRequest{}
	var secretId string = ""
	this.SecretId = &secretId
	return &this
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *ApproleLoginRequest) GetRoleId() string {
	if o == nil || o.RoleId == nil {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleLoginRequest) GetRoleIdOk() (*string, bool) {
	if o == nil || o.RoleId == nil {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *ApproleLoginRequest) HasRoleId() bool {
	if o != nil && o.RoleId != nil {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *ApproleLoginRequest) SetRoleId(v string) {
	o.RoleId = &v
}

// GetSecretId returns the SecretId field value if set, zero value otherwise.
func (o *ApproleLoginRequest) GetSecretId() string {
	if o == nil || o.SecretId == nil {
		var ret string
		return ret
	}
	return *o.SecretId
}

// GetSecretIdOk returns a tuple with the SecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleLoginRequest) GetSecretIdOk() (*string, bool) {
	if o == nil || o.SecretId == nil {
		return nil, false
	}
	return o.SecretId, true
}

// HasSecretId returns a boolean if a field has been set.
func (o *ApproleLoginRequest) HasSecretId() bool {
	if o != nil && o.SecretId != nil {
		return true
	}

	return false
}

// SetSecretId gets a reference to the given string and assigns it to the SecretId field.
func (o *ApproleLoginRequest) SetSecretId(v string) {
	o.SecretId = &v
}

func (o ApproleLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RoleId != nil {
		toSerialize["role_id"] = o.RoleId
	}
	if o.SecretId != nil {
		toSerialize["secret_id"] = o.SecretId
	}
	return json.Marshal(toSerialize)
}

type NullableApproleLoginRequest struct {
	value *ApproleLoginRequest
	isSet bool
}

func (v NullableApproleLoginRequest) Get() *ApproleLoginRequest {
	return v.value
}

func (v *NullableApproleLoginRequest) Set(val *ApproleLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleLoginRequest(val *ApproleLoginRequest) *NullableApproleLoginRequest {
	return &NullableApproleLoginRequest{value: val, isSet: true}
}

func (v NullableApproleLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleBindSecretIdRequest struct for ApproleRoleBindSecretIdRequest
type ApproleRoleBindSecretIdRequest struct {
	// Impose secret_id to be presented when logging in using this role.
	BindSecretId *bool `json:"bind_secret_id,omitempty"`
}

// NewApproleRoleBindSecretIdRequest instantiates a new ApproleRoleBindSecretIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleBindSecretIdRequest() *ApproleRoleBindSecretIdRequest {
	this := ApproleRoleBindSecretIdRequest{}
	var bindSecretId bool = true
	this.BindSecretId = &bindSecretId
	return &this
}

// NewApproleRoleBindSecretIdRequestWithDefaults instantiates a new ApproleRoleBindSecretIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleBindSecretIdRequestWithDefaults() *ApproleRoleBindSecretIdRequest {
	this := ApproleRoleBindSecretIdRequest{}
	var bindSecretId bool = true
	this.BindSecretId = &bindSecretId
	return &this
}

// GetBindSecretId returns the BindSecretId field value if set, zero value otherwise.
func (o *ApproleRoleBindSecretIdRequest) GetBindSecretId() bool {
	if o == nil || o.BindSecretId == nil {
		var ret bool
		return ret
	}
	return *o.BindSecretId
}

// GetBindSecretIdOk returns a tuple with the BindSecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleBindSecretIdRequest) GetBindSecretIdOk() (*bool, bool) {
	if o == nil || o.BindSecretId == nil {
		return nil, false
	}
	return o.BindSecretId, true
}

// HasBindSecretId returns a boolean if a field has been set.
func (o *ApproleRoleBindSecretIdRequest) HasBindSecretId() bool {
	if o != nil && o.BindSecretId != nil {
		return true
	}

	return false
}

// SetBindSecretId gets a reference to the given bool and assigns it to the BindSecretId field.
func (o *ApproleRoleBindSecretIdRequest) SetBindSecretId(v bool) {
	o.BindSecretId = &v
}

func (o ApproleRoleBindSecretIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BindSecretId != nil {
		toSerialize["bind_secret_id"] = o.BindSecretId
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleBindSecretIdRequest struct {
	value *ApproleRoleBindSecretIdRequest
	isSet bool
}

func (v NullableApproleRoleBindSecretIdRequest) Get() *ApproleRoleBindSecretIdRequest {
	return v.value
}

func (v *NullableApproleRoleBindSecretIdRequest) Set(val *ApproleRoleBindSecretIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleBindSecretIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleBindSecretIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleBindSecretIdRequest(val *ApproleRoleBindSecretIdRequest) *NullableApproleRoleBindSecretIdRequest {
	return &NullableApproleRoleBindSecretIdRequest{value: val, isSet: true}
}

func (v NullableApproleRoleBindSecretIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleBindSecretIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleBoundCidrListRequest struct for ApproleRoleBoundCidrListRequest
type ApproleRoleBoundCidrListRequest struct {
	// Deprecated: Please use \"secret_id_bound_cidrs\" instead. Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.
	BoundCidrList []string `json:"bound_cidr_list,omitempty"`
}

// NewApproleRoleBoundCidrListRequest instantiates a new ApproleRoleBoundCidrListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleBoundCidrListRequest() *ApproleRoleBoundCidrListRequest {
	this := ApproleRoleBoundCidrListRequest{}
	return &this
}

// NewApproleRoleBoundCidrListRequestWithDefaults instantiates a new ApproleRoleBoundCidrListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleBoundCidrListRequestWithDefaults() *ApproleRoleBoundCidrListRequest {
	this := ApproleRoleBoundCidrListRequest{}
	return &this
}

// GetBoundCidrList returns the BoundCidrList field value if set, zero value otherwise.
func (o *ApproleRoleBoundCidrListRequest) GetBoundCidrList() []string {
	if o == nil || o.BoundCidrList == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrList
}

// GetBoundCidrListOk returns a tuple with the BoundCidrList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleBoundCidrListRequest) GetBoundCidrListOk() ([]string, bool) {
	if o == nil || o.BoundCidrList == nil {
		return nil, false
	}
	return o.BoundCidrList, true
}

// HasBoundCidrList returns a boolean if a field has been set.
func (o *ApproleRoleBoundCidrListRequest) HasBoundCidrList() bool {
	if o != nil && o.BoundCidrList != nil {
		return true
	}

	return false
}

// SetBoundCidrList gets a reference to the given []string and assigns it to the BoundCidrList field.
func (o *ApproleRoleBoundCidrListRequest) SetBoundCidrList(v []string) {
	o.BoundCidrList = v
}

func (o ApproleRoleBoundCidrListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BoundCidrList != nil {
		toSerialize["bound_cidr_list"] = o.BoundCidrList
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleBoundCidrListRequest struct {
	value *ApproleRoleBoundCidrListRequest
	isSet bool
}

func (v NullableApproleRoleBoundCidrListRequest) Get() *ApproleRoleBoundCidrListRequest {
	return v.value
}

func (v *NullableApproleRoleBoundCidrListRequest) Set(val *ApproleRoleBoundCidrListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleBoundCidrListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleBoundCidrListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleBoundCidrListRequest(val *ApproleRoleBoundCidrListRequest) *NullableApproleRoleBoundCidrListRequest {
	return &NullableApproleRoleBoundCidrListRequest{value: val, isSet: true}
}

func (v NullableApproleRoleBoundCidrListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleBoundCidrListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleCustomSecretIdRequest struct for ApproleRoleCustomSecretIdRequest
type ApproleRoleCustomSecretIdRequest struct {
	// Comma separated string or list of CIDR blocks enforcing secret IDs to be used from specific set of IP addresses. If 'bound_cidr_list' is set on the role, then the list of CIDR blocks listed here should be a subset of the CIDR blocks listed on the role.
	CidrList []string `json:"cidr_list,omitempty"`
	// Metadata to be tied to the SecretID. This should be a JSON formatted string containing metadata in key value pairs.
	Metadata *string `json:"metadata,omitempty"`
	// SecretID to be attached to the role.
	SecretId *string `json:"secret_id,omitempty"`
	// Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can use the returned token. Should be a subset of the token CIDR blocks listed on the role, if any.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
}

// NewApproleRoleCustomSecretIdRequest instantiates a new ApproleRoleCustomSecretIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleCustomSecretIdRequest() *ApproleRoleCustomSecretIdRequest {
	this := ApproleRoleCustomSecretIdRequest{}
	return &this
}

// NewApproleRoleCustomSecretIdRequestWithDefaults instantiates a new ApproleRoleCustomSecretIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleCustomSecretIdRequestWithDefaults() *ApproleRoleCustomSecretIdRequest {
	this := ApproleRoleCustomSecretIdRequest{}
	return &this
}

// GetCidrList returns the CidrList field value if set, zero value otherwise.
func (o *ApproleRoleCustomSecretIdRequest) GetCidrList() []string {
	if o == nil || o.CidrList == nil {
		var ret []string
		return ret
	}
	return o.CidrList
}

// GetCidrListOk returns a tuple with the CidrList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleCustomSecretIdRequest) GetCidrListOk() ([]string, bool) {
	if o == nil || o.CidrList == nil {
		return nil, false
	}
	return o.CidrList, true
}

// HasCidrList returns a boolean if a field has been set.
func (o *ApproleRoleCustomSecretIdRequest) HasCidrList() bool {
	if o != nil && o.CidrList != nil {
		return true
	}

	return false
}

// SetCidrList gets a reference to the given []string and assigns it to the CidrList field.
func (o *ApproleRoleCustomSecretIdRequest) SetCidrList(v []string) {
	o.CidrList = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ApproleRoleCustomSecretIdRequest) GetMetadata() string {
	if o == nil || o.Metadata == nil {
		var ret string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleCustomSecretIdRequest) GetMetadataOk() (*string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ApproleRoleCustomSecretIdRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given string and assigns it to the Metadata field.
func (o *ApproleRoleCustomSecretIdRequest) SetMetadata(v string) {
	o.Metadata = &v
}

// GetSecretId returns the SecretId field value if set, zero value otherwise.
func (o *ApproleRoleCustomSecretIdRequest) GetSecretId() string {
	if o == nil || o.SecretId == nil {
		var ret string
		return ret
	}
	return *o.SecretId
}

// GetSecretIdOk returns a tuple with the SecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleCustomSecretIdRequest) GetSecretIdOk() (*string, bool) {
	if o == nil || o.SecretId == nil {
		return nil, false
	}
	return o.SecretId, true
}

// HasSecretId returns a boolean if a field has been set.
func (o *ApproleRoleCustomSecretIdRequest) HasSecretId() bool {
	if o != nil && o.SecretId != nil {
		return true
	}

	return false
}

// SetSecretId gets a reference to the given string and assigns it to the SecretId field.
func (o *ApproleRoleCustomSecretIdRequest) SetSecretId(v string) {
	o.SecretId = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *ApproleRoleCustomSecretIdRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleCustomSecretIdRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *ApproleRoleCustomSecretIdRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *ApproleRoleCustomSecretIdRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

func (o ApproleRoleCustomSecretIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CidrList != nil {
		toSerialize["cidr_list"] = o.CidrList
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.SecretId != nil {
		toSerialize["secret_id"] = o.SecretId
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleCustomSecretIdRequest struct {
	value *ApproleRoleCustomSecretIdRequest
	isSet bool
}

func (v NullableApproleRoleCustomSecretIdRequest) Get() *ApproleRoleCustomSecretIdRequest {
	return v.value
}

func (v *NullableApproleRoleCustomSecretIdRequest) Set(val *ApproleRoleCustomSecretIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleCustomSecretIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleCustomSecretIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleCustomSecretIdRequest(val *ApproleRoleCustomSecretIdRequest) *NullableApproleRoleCustomSecretIdRequest {
	return &NullableApproleRoleCustomSecretIdRequest{value: val, isSet: true}
}

func (v NullableApproleRoleCustomSecretIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleCustomSecretIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRolePeriodRequest struct for ApproleRolePeriodRequest
type ApproleRolePeriodRequest struct {
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
}

// NewApproleRolePeriodRequest instantiates a new ApproleRolePeriodRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRolePeriodRequest() *ApproleRolePeriodRequest {
	this := ApproleRolePeriodRequest{}
	return &this
}

// NewApproleRolePeriodRequestWithDefaults instantiates a new ApproleRolePeriodRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRolePeriodRequestWithDefaults() *ApproleRolePeriodRequest {
	this := ApproleRolePeriodRequest{}
	return &this
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *ApproleRolePeriodRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ApproleRolePeriodRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *ApproleRolePeriodRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *ApproleRolePeriodRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *ApproleRolePeriodRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRolePeriodRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *ApproleRolePeriodRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *ApproleRolePeriodRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

func (o ApproleRolePeriodRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRolePeriodRequest struct {
	value *ApproleRolePeriodRequest
	isSet bool
}

func (v NullableApproleRolePeriodRequest) Get() *ApproleRolePeriodRequest {
	return v.value
}

func (v *NullableApproleRolePeriodRequest) Set(val *ApproleRolePeriodRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRolePeriodRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRolePeriodRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRolePeriodRequest(val *ApproleRolePeriodRequest) *NullableApproleRolePeriodRequest {
	return &NullableApproleRolePeriodRequest{value: val, isSet: true}
}

func (v NullableApproleRolePeriodRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRolePeriodRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRolePoliciesRequest struct for ApproleRolePoliciesRequest
type ApproleRolePoliciesRequest struct {
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
}

// NewApproleRolePoliciesRequest instantiates a new ApproleRolePoliciesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRolePoliciesRequest() *ApproleRolePoliciesRequest {
	this := ApproleRolePoliciesRequest{}
	return &this
}

// NewApproleRolePoliciesRequestWithDefaults instantiates a new ApproleRolePoliciesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRolePoliciesRequestWithDefaults() *ApproleRolePoliciesRequest {
	this := ApproleRolePoliciesRequest{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *ApproleRolePoliciesRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ApproleRolePoliciesRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *ApproleRolePoliciesRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *ApproleRolePoliciesRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *ApproleRolePoliciesRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRolePoliciesRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *ApproleRolePoliciesRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *ApproleRolePoliciesRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

func (o ApproleRolePoliciesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRolePoliciesRequest struct {
	value *ApproleRolePoliciesRequest
	isSet bool
}

func (v NullableApproleRolePoliciesRequest) Get() *ApproleRolePoliciesRequest {
	return v.value
}

func (v *NullableApproleRolePoliciesRequest) Set(val *ApproleRolePoliciesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRolePoliciesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRolePoliciesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRolePoliciesRequest(val *ApproleRolePoliciesRequest) *NullableApproleRolePoliciesRequest {
	return &NullableApproleRolePoliciesRequest{value: val, isSet: true}
}

func (v NullableApproleRolePoliciesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRolePoliciesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleRequest struct for ApproleRoleRequest
type ApproleRoleRequest struct {
	// Impose secret_id to be presented when logging in using this role. Defaults to 'true'.
	BindSecretId *bool `json:"bind_secret_id,omitempty"`
	// Use \"secret_id_bound_cidrs\" instead.
	// Deprecated
	BoundCidrList []string `json:"bound_cidr_list,omitempty"`
	// If set, the secret IDs generated using this role will be cluster local. This can only be set during role creation and once set, it can't be reset later.
	LocalSecretIds *bool `json:"local_secret_ids,omitempty"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Identifier of the role. Defaults to a UUID.
	RoleId *string `json:"role_id,omitempty"`
	// Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.
	SecretIdBoundCidrs []string `json:"secret_id_bound_cidrs,omitempty"`
	// Number of times a SecretID can access the role, after which the SecretID will expire. Defaults to 0 meaning that the the secret_id is of unlimited use.
	SecretIdNumUses *int32 `json:"secret_id_num_uses,omitempty"`
	// Duration in seconds after which the issued SecretID should expire. Defaults to 0, meaning no expiration.
	SecretIdTtl *int32 `json:"secret_id_ttl,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
}

// NewApproleRoleRequest instantiates a new ApproleRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleRequest() *ApproleRoleRequest {
	this := ApproleRoleRequest{}
	var bindSecretId bool = true
	this.BindSecretId = &bindSecretId
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewApproleRoleRequestWithDefaults instantiates a new ApproleRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleRequestWithDefaults() *ApproleRoleRequest {
	this := ApproleRoleRequest{}
	var bindSecretId bool = true
	this.BindSecretId = &bindSecretId
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetBindSecretId returns the BindSecretId field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetBindSecretId() bool {
	if o == nil || o.BindSecretId == nil {
		var ret bool
		return ret
	}
	return *o.BindSecretId
}

// GetBindSecretIdOk returns a tuple with the BindSecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetBindSecretIdOk() (*bool, bool) {
	if o == nil || o.BindSecretId == nil {
		return nil, false
	}
	return o.BindSecretId, true
}

// HasBindSecretId returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasBindSecretId() bool {
	if o != nil && o.BindSecretId != nil {
		return true
	}

	return false
}

// SetBindSecretId gets a reference to the given bool and assigns it to the BindSecretId field.
func (o *ApproleRoleRequest) SetBindSecretId(v bool) {
	o.BindSecretId = &v
}

// GetBoundCidrList returns the BoundCidrList field value if set, zero value otherwise.
// Deprecated
func (o *ApproleRoleRequest) GetBoundCidrList() []string {
	if o == nil || o.BoundCidrList == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrList
}

// GetBoundCidrListOk returns a tuple with the BoundCidrList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ApproleRoleRequest) GetBoundCidrListOk() ([]string, bool) {
	if o == nil || o.BoundCidrList == nil {
		return nil, false
	}
	return o.BoundCidrList, true
}

// HasBoundCidrList returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasBoundCidrList() bool {
	if o != nil && o.BoundCidrList != nil {
		return true
	}

	return false
}

// SetBoundCidrList gets a reference to the given []string and assigns it to the BoundCidrList field.
// Deprecated
func (o *ApproleRoleRequest) SetBoundCidrList(v []string) {
	o.BoundCidrList = v
}

// GetLocalSecretIds returns the LocalSecretIds field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetLocalSecretIds() bool {
	if o == nil || o.LocalSecretIds == nil {
		var ret bool
		return ret
	}
	return *o.LocalSecretIds
}

// GetLocalSecretIdsOk returns a tuple with the LocalSecretIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetLocalSecretIdsOk() (*bool, bool) {
	if o == nil || o.LocalSecretIds == nil {
		return nil, false
	}
	return o.LocalSecretIds, true
}

// HasLocalSecretIds returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasLocalSecretIds() bool {
	if o != nil && o.LocalSecretIds != nil {
		return true
	}

	return false
}

// SetLocalSecretIds gets a reference to the given bool and assigns it to the LocalSecretIds field.
func (o *ApproleRoleRequest) SetLocalSecretIds(v bool) {
	o.LocalSecretIds = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *ApproleRoleRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ApproleRoleRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *ApproleRoleRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *ApproleRoleRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ApproleRoleRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *ApproleRoleRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetRoleId() string {
	if o == nil || o.RoleId == nil {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetRoleIdOk() (*string, bool) {
	if o == nil || o.RoleId == nil {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasRoleId() bool {
	if o != nil && o.RoleId != nil {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *ApproleRoleRequest) SetRoleId(v string) {
	o.RoleId = &v
}

// GetSecretIdBoundCidrs returns the SecretIdBoundCidrs field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetSecretIdBoundCidrs() []string {
	if o == nil || o.SecretIdBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.SecretIdBoundCidrs
}

// GetSecretIdBoundCidrsOk returns a tuple with the SecretIdBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetSecretIdBoundCidrsOk() ([]string, bool) {
	if o == nil || o.SecretIdBoundCidrs == nil {
		return nil, false
	}
	return o.SecretIdBoundCidrs, true
}

// HasSecretIdBoundCidrs returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasSecretIdBoundCidrs() bool {
	if o != nil && o.SecretIdBoundCidrs != nil {
		return true
	}

	return false
}

// SetSecretIdBoundCidrs gets a reference to the given []string and assigns it to the SecretIdBoundCidrs field.
func (o *ApproleRoleRequest) SetSecretIdBoundCidrs(v []string) {
	o.SecretIdBoundCidrs = v
}

// GetSecretIdNumUses returns the SecretIdNumUses field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetSecretIdNumUses() int32 {
	if o == nil || o.SecretIdNumUses == nil {
		var ret int32
		return ret
	}
	return *o.SecretIdNumUses
}

// GetSecretIdNumUsesOk returns a tuple with the SecretIdNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetSecretIdNumUsesOk() (*int32, bool) {
	if o == nil || o.SecretIdNumUses == nil {
		return nil, false
	}
	return o.SecretIdNumUses, true
}

// HasSecretIdNumUses returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasSecretIdNumUses() bool {
	if o != nil && o.SecretIdNumUses != nil {
		return true
	}

	return false
}

// SetSecretIdNumUses gets a reference to the given int32 and assigns it to the SecretIdNumUses field.
func (o *ApproleRoleRequest) SetSecretIdNumUses(v int32) {
	o.SecretIdNumUses = &v
}

// GetSecretIdTtl returns the SecretIdTtl field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetSecretIdTtl() int32 {
	if o == nil || o.SecretIdTtl == nil {
		var ret int32
		return ret
	}
	return *o.SecretIdTtl
}

// GetSecretIdTtlOk returns a tuple with the SecretIdTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetSecretIdTtlOk() (*int32, bool) {
	if o == nil || o.SecretIdTtl == nil {
		return nil, false
	}
	return o.SecretIdTtl, true
}

// HasSecretIdTtl returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasSecretIdTtl() bool {
	if o != nil && o.SecretIdTtl != nil {
		return true
	}

	return false
}

// SetSecretIdTtl gets a reference to the given int32 and assigns it to the SecretIdTtl field.
func (o *ApproleRoleRequest) SetSecretIdTtl(v int32) {
	o.SecretIdTtl = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *ApproleRoleRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *ApproleRoleRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *ApproleRoleRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *ApproleRoleRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *ApproleRoleRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *ApproleRoleRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *ApproleRoleRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *ApproleRoleRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *ApproleRoleRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *ApproleRoleRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *ApproleRoleRequest) SetTokenType(v string) {
	o.TokenType = &v
}

func (o ApproleRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BindSecretId != nil {
		toSerialize["bind_secret_id"] = o.BindSecretId
	}
	if o.BoundCidrList != nil {
		toSerialize["bound_cidr_list"] = o.BoundCidrList
	}
	if o.LocalSecretIds != nil {
		toSerialize["local_secret_ids"] = o.LocalSecretIds
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.RoleId != nil {
		toSerialize["role_id"] = o.RoleId
	}
	if o.SecretIdBoundCidrs != nil {
		toSerialize["secret_id_bound_cidrs"] = o.SecretIdBoundCidrs
	}
	if o.SecretIdNumUses != nil {
		toSerialize["secret_id_num_uses"] = o.SecretIdNumUses
	}
	if o.SecretIdTtl != nil {
		toSerialize["secret_id_ttl"] = o.SecretIdTtl
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleRequest struct {
	value *ApproleRoleRequest
	isSet bool
}

func (v NullableApproleRoleRequest) Get() *ApproleRoleRequest {
	return v.value
}

func (v *NullableApproleRoleRequest) Set(val *ApproleRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleRequest(val *ApproleRoleRequest) *NullableApproleRoleRequest {
	return &NullableApproleRoleRequest{value: val, isSet: true}
}

func (v NullableApproleRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleRoleIdRequest struct for ApproleRoleRoleIdRequest
type ApproleRoleRoleIdRequest struct {
	// Identifier of the role. Defaults to a UUID.
	RoleId *string `json:"role_id,omitempty"`
}

// NewApproleRoleRoleIdRequest instantiates a new ApproleRoleRoleIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleRoleIdRequest() *ApproleRoleRoleIdRequest {
	this := ApproleRoleRoleIdRequest{}
	return &this
}

// NewApproleRoleRoleIdRequestWithDefaults instantiates a new ApproleRoleRoleIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleRoleIdRequestWithDefaults() *ApproleRoleRoleIdRequest {
	this := ApproleRoleRoleIdRequest{}
	return &this
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *ApproleRoleRoleIdRequest) GetRoleId() string {
	if o == nil || o.RoleId == nil {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRoleIdRequest) GetRoleIdOk() (*string, bool) {
	if o == nil || o.RoleId == nil {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *ApproleRoleRoleIdRequest) HasRoleId() bool {
	if o != nil && o.RoleId != nil {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *ApproleRoleRoleIdRequest) SetRoleId(v string) {
	o.RoleId = &v
}

func (o ApproleRoleRoleIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RoleId != nil {
		toSerialize["role_id"] = o.RoleId
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleRoleIdRequest struct {
	value *ApproleRoleRoleIdRequest
	isSet bool
}

func (v NullableApproleRoleRoleIdRequest) Get() *ApproleRoleRoleIdRequest {
	return v.value
}

func (v *NullableApproleRoleRoleIdRequest) Set(val *ApproleRoleRoleIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleRoleIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleRoleIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleRoleIdRequest(val *ApproleRoleRoleIdRequest) *NullableApproleRoleRoleIdRequest {
	return &NullableApproleRoleRoleIdRequest{value: val, isSet: true}
}

func (v NullableApproleRoleRoleIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleRoleIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleSecretIdAccessorDestroyRequest struct for ApproleRoleSecretIdAccessorDestroyRequest
type ApproleRoleSecretIdAccessorDestroyRequest struct {
	// Accessor of the SecretID
	SecretIdAccessor *string `json:"secret_id_accessor,omitempty"`
}

// NewApproleRoleSecretIdAccessorDestroyRequest instantiates a new ApproleRoleSecretIdAccessorDestroyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleSecretIdAccessorDestroyRequest() *ApproleRoleSecretIdAccessorDestroyRequest {
	this := ApproleRoleSecretIdAccessorDestroyRequest{}
	return &this
}

// NewApproleRoleSecretIdAccessorDestroyRequestWithDefaults instantiates a new ApproleRoleSecretIdAccessorDestroyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleSecretIdAccessorDestroyRequestWithDefaults() *ApproleRoleSecretIdAccessorDestroyRequest {
	this := ApproleRoleSecretIdAccessorDestroyRequest{}
	return &this
}

// GetSecretIdAccessor returns the SecretIdAccessor field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdAccessorDestroyRequest) GetSecretIdAccessor() string {
	if o == nil || o.SecretIdAccessor == nil {
		var ret string
		return ret
	}
	return *o.SecretIdAccessor
}

// GetSecretIdAccessorOk returns a tuple with the SecretIdAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdAccessorDestroyRequest) GetSecretIdAccessorOk() (*string, bool) {
	if o == nil || o.SecretIdAccessor == nil {
		return nil, false
	}
	return o.SecretIdAccessor, true
}

// HasSecretIdAccessor returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdAccessorDestroyRequest) HasSecretIdAccessor() bool {
	if o != nil && o.SecretIdAccessor != nil {
		return true
	}

	return false
}

// SetSecretIdAccessor gets a reference to the given string and assigns it to the SecretIdAccessor field.
func (o *ApproleRoleSecretIdAccessorDestroyRequest) SetSecretIdAccessor(v string) {
	o.SecretIdAccessor = &v
}

func (o ApproleRoleSecretIdAccessorDestroyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretIdAccessor != nil {
		toSerialize["secret_id_accessor"] = o.SecretIdAccessor
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleSecretIdAccessorDestroyRequest struct {
	value *ApproleRoleSecretIdAccessorDestroyRequest
	isSet bool
}

func (v NullableApproleRoleSecretIdAccessorDestroyRequest) Get() *ApproleRoleSecretIdAccessorDestroyRequest {
	return v.value
}

func (v *NullableApproleRoleSecretIdAccessorDestroyRequest) Set(val *ApproleRoleSecretIdAccessorDestroyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleSecretIdAccessorDestroyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleSecretIdAccessorDestroyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleSecretIdAccessorDestroyRequest(val *ApproleRoleSecretIdAccessorDestroyRequest) *NullableApproleRoleSecretIdAccessorDestroyRequest {
	return &NullableApproleRoleSecretIdAccessorDestroyRequest{value: val, isSet: true}
}

func (v NullableApproleRoleSecretIdAccessorDestroyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleSecretIdAccessorDestroyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleSecretIdAccessorLookupRequest struct for ApproleRoleSecretIdAccessorLookupRequest
type ApproleRoleSecretIdAccessorLookupRequest struct {
	// Accessor of the SecretID
	SecretIdAccessor *string `json:"secret_id_accessor,omitempty"`
}

// NewApproleRoleSecretIdAccessorLookupRequest instantiates a new ApproleRoleSecretIdAccessorLookupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleSecretIdAccessorLookupRequest() *ApproleRoleSecretIdAccessorLookupRequest {
	this := ApproleRoleSecretIdAccessorLookupRequest{}
	return &this
}

// NewApproleRoleSecretIdAccessorLookupRequestWithDefaults instantiates a new ApproleRoleSecretIdAccessorLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleSecretIdAccessorLookupRequestWithDefaults() *ApproleRoleSecretIdAccessorLookupRequest {
	this := ApproleRoleSecretIdAccessorLookupRequest{}
	return &this
}

// GetSecretIdAccessor returns the SecretIdAccessor field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdAccessorLookupRequest) GetSecretIdAccessor() string {
	if o == nil || o.SecretIdAccessor == nil {
		var ret string
		return ret
	}
	return *o.SecretIdAccessor
}

// GetSecretIdAccessorOk returns a tuple with the SecretIdAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdAccessorLookupRequest) GetSecretIdAccessorOk() (*string, bool) {
	if o == nil || o.SecretIdAccessor == nil {
		return nil, false
	}
	return o.SecretIdAccessor, true
}

// HasSecretIdAccessor returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdAccessorLookupRequest) HasSecretIdAccessor() bool {
	if o != nil && o.SecretIdAccessor != nil {
		return true
	}

	return false
}

// SetSecretIdAccessor gets a reference to the given string and assigns it to the SecretIdAccessor field.
func (o *ApproleRoleSecretIdAccessorLookupRequest) SetSecretIdAccessor(v string) {
	o.SecretIdAccessor = &v
}

func (o ApproleRoleSecretIdAccessorLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretIdAccessor != nil {
		toSerialize["secret_id_accessor"] = o.SecretIdAccessor
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleSecretIdAccessorLookupRequest struct {
	value *ApproleRoleSecretIdAccessorLookupRequest
	isSet bool
}

func (v NullableApproleRoleSecretIdAccessorLookupRequest) Get() *ApproleRoleSecretIdAccessorLookupRequest {
	return v.value
}

func (v *NullableApproleRoleSecretIdAccessorLookupRequest) Set(val *ApproleRoleSecretIdAccessorLookupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleSecretIdAccessorLookupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleSecretIdAccessorLookupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleSecretIdAccessorLookupRequest(val *ApproleRoleSecretIdAccessorLookupRequest) *NullableApproleRoleSecretIdAccessorLookupRequest {
	return &NullableApproleRoleSecretIdAccessorLookupRequest{value: val, isSet: true}
}

func (v NullableApproleRoleSecretIdAccessorLookupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleSecretIdAccessorLookupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleSecretIdBoundCidrsRequest struct for ApproleRoleSecretIdBoundCidrsRequest
type ApproleRoleSecretIdBoundCidrsRequest struct {
	// Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.
	SecretIdBoundCidrs []string `json:"secret_id_bound_cidrs,omitempty"`
}

// NewApproleRoleSecretIdBoundCidrsRequest instantiates a new ApproleRoleSecretIdBoundCidrsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleSecretIdBoundCidrsRequest() *ApproleRoleSecretIdBoundCidrsRequest {
	this := ApproleRoleSecretIdBoundCidrsRequest{}
	return &this
}

// NewApproleRoleSecretIdBoundCidrsRequestWithDefaults instantiates a new ApproleRoleSecretIdBoundCidrsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleSecretIdBoundCidrsRequestWithDefaults() *ApproleRoleSecretIdBoundCidrsRequest {
	this := ApproleRoleSecretIdBoundCidrsRequest{}
	return &this
}

// GetSecretIdBoundCidrs returns the SecretIdBoundCidrs field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdBoundCidrsRequest) GetSecretIdBoundCidrs() []string {
	if o == nil || o.SecretIdBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.SecretIdBoundCidrs
}

// GetSecretIdBoundCidrsOk returns a tuple with the SecretIdBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdBoundCidrsRequest) GetSecretIdBoundCidrsOk() ([]string, bool) {
	if o == nil || o.SecretIdBoundCidrs == nil {
		return nil, false
	}
	return o.SecretIdBoundCidrs, true
}

// HasSecretIdBoundCidrs returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdBoundCidrsRequest) HasSecretIdBoundCidrs() bool {
	if o != nil && o.SecretIdBoundCidrs != nil {
		return true
	}

	return false
}

// SetSecretIdBoundCidrs gets a reference to the given []string and assigns it to the SecretIdBoundCidrs field.
func (o *ApproleRoleSecretIdBoundCidrsRequest) SetSecretIdBoundCidrs(v []string) {
	o.SecretIdBoundCidrs = v
}

func (o ApproleRoleSecretIdBoundCidrsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretIdBoundCidrs != nil {
		toSerialize["secret_id_bound_cidrs"] = o.SecretIdBoundCidrs
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleSecretIdBoundCidrsRequest struct {
	value *ApproleRoleSecretIdBoundCidrsRequest
	isSet bool
}

func (v NullableApproleRoleSecretIdBoundCidrsRequest) Get() *ApproleRoleSecretIdBoundCidrsRequest {
	return v.value
}

func (v *NullableApproleRoleSecretIdBoundCidrsRequest) Set(val *ApproleRoleSecretIdBoundCidrsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleSecretIdBoundCidrsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleSecretIdBoundCidrsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleSecretIdBoundCidrsRequest(val *ApproleRoleSecretIdBoundCidrsRequest) *NullableApproleRoleSecretIdBoundCidrsRequest {
	return &NullableApproleRoleSecretIdBoundCidrsRequest{value: val, isSet: true}
}

func (v NullableApproleRoleSecretIdBoundCidrsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleSecretIdBoundCidrsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleSecretIdDestroyRequest struct for ApproleRoleSecretIdDestroyRequest
type ApproleRoleSecretIdDestroyRequest struct {
	// SecretID attached to the role.
	SecretId *string `json:"secret_id,omitempty"`
}

// NewApproleRoleSecretIdDestroyRequest instantiates a new ApproleRoleSecretIdDestroyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleSecretIdDestroyRequest() *ApproleRoleSecretIdDestroyRequest {
	this := ApproleRoleSecretIdDestroyRequest{}
	return &this
}

// NewApproleRoleSecretIdDestroyRequestWithDefaults instantiates a new ApproleRoleSecretIdDestroyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleSecretIdDestroyRequestWithDefaults() *ApproleRoleSecretIdDestroyRequest {
	this := ApproleRoleSecretIdDestroyRequest{}
	return &this
}

// GetSecretId returns the SecretId field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdDestroyRequest) GetSecretId() string {
	if o == nil || o.SecretId == nil {
		var ret string
		return ret
	}
	return *o.SecretId
}

// GetSecretIdOk returns a tuple with the SecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdDestroyRequest) GetSecretIdOk() (*string, bool) {
	if o == nil || o.SecretId == nil {
		return nil, false
	}
	return o.SecretId, true
}

// HasSecretId returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdDestroyRequest) HasSecretId() bool {
	if o != nil && o.SecretId != nil {
		return true
	}

	return false
}

// SetSecretId gets a reference to the given string and assigns it to the SecretId field.
func (o *ApproleRoleSecretIdDestroyRequest) SetSecretId(v string) {
	o.SecretId = &v
}

func (o ApproleRoleSecretIdDestroyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretId != nil {
		toSerialize["secret_id"] = o.SecretId
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleSecretIdDestroyRequest struct {
	value *ApproleRoleSecretIdDestroyRequest
	isSet bool
}

func (v NullableApproleRoleSecretIdDestroyRequest) Get() *ApproleRoleSecretIdDestroyRequest {
	return v.value
}

func (v *NullableApproleRoleSecretIdDestroyRequest) Set(val *ApproleRoleSecretIdDestroyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleSecretIdDestroyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleSecretIdDestroyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleSecretIdDestroyRequest(val *ApproleRoleSecretIdDestroyRequest) *NullableApproleRoleSecretIdDestroyRequest {
	return &NullableApproleRoleSecretIdDestroyRequest{value: val, isSet: true}
}

func (v NullableApproleRoleSecretIdDestroyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleSecretIdDestroyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleSecretIdLookupRequest struct for ApproleRoleSecretIdLookupRequest
type ApproleRoleSecretIdLookupRequest struct {
	// SecretID attached to the role.
	SecretId *string `json:"secret_id,omitempty"`
}

// NewApproleRoleSecretIdLookupRequest instantiates a new ApproleRoleSecretIdLookupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleSecretIdLookupRequest() *ApproleRoleSecretIdLookupRequest {
	this := ApproleRoleSecretIdLookupRequest{}
	return &this
}

// NewApproleRoleSecretIdLookupRequestWithDefaults instantiates a new ApproleRoleSecretIdLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleSecretIdLookupRequestWithDefaults() *ApproleRoleSecretIdLookupRequest {
	this := ApproleRoleSecretIdLookupRequest{}
	return &this
}

// GetSecretId returns the SecretId field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdLookupRequest) GetSecretId() string {
	if o == nil || o.SecretId == nil {
		var ret string
		return ret
	}
	return *o.SecretId
}

// GetSecretIdOk returns a tuple with the SecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdLookupRequest) GetSecretIdOk() (*string, bool) {
	if o == nil || o.SecretId == nil {
		return nil, false
	}
	return o.SecretId, true
}

// HasSecretId returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdLookupRequest) HasSecretId() bool {
	if o != nil && o.SecretId != nil {
		return true
	}

	return false
}

// SetSecretId gets a reference to the given string and assigns it to the SecretId field.
func (o *ApproleRoleSecretIdLookupRequest) SetSecretId(v string) {
	o.SecretId = &v
}

func (o ApproleRoleSecretIdLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretId != nil {
		toSerialize["secret_id"] = o.SecretId
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleSecretIdLookupRequest struct {
	value *ApproleRoleSecretIdLookupRequest
	isSet bool
}

func (v NullableApproleRoleSecretIdLookupRequest) Get() *ApproleRoleSecretIdLookupRequest {
	return v.value
}

func (v *NullableApproleRoleSecretIdLookupRequest) Set(val *ApproleRoleSecretIdLookupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleSecretIdLookupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleSecretIdLookupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleSecretIdLookupRequest(val *ApproleRoleSecretIdLookupRequest) *NullableApproleRoleSecretIdLookupRequest {
	return &NullableApproleRoleSecretIdLookupRequest{value: val, isSet: true}
}

func (v NullableApproleRoleSecretIdLookupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleSecretIdLookupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleSecretIdNumUsesRequest struct for ApproleRoleSecretIdNumUsesRequest
type ApproleRoleSecretIdNumUsesRequest struct {
	// Number of times a SecretID can access the role, after which the SecretID will expire.
	SecretIdNumUses *int32 `json:"secret_id_num_uses,omitempty"`
}

// NewApproleRoleSecretIdNumUsesRequest instantiates a new ApproleRoleSecretIdNumUsesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleSecretIdNumUsesRequest() *ApproleRoleSecretIdNumUsesRequest {
	this := ApproleRoleSecretIdNumUsesRequest{}
	return &this
}

// NewApproleRoleSecretIdNumUsesRequestWithDefaults instantiates a new ApproleRoleSecretIdNumUsesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleSecretIdNumUsesRequestWithDefaults() *ApproleRoleSecretIdNumUsesRequest {
	this := ApproleRoleSecretIdNumUsesRequest{}
	return &this
}

// GetSecretIdNumUses returns the SecretIdNumUses field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdNumUsesRequest) GetSecretIdNumUses() int32 {
	if o == nil || o.SecretIdNumUses == nil {
		var ret int32
		return ret
	}
	return *o.SecretIdNumUses
}

// GetSecretIdNumUsesOk returns a tuple with the SecretIdNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdNumUsesRequest) GetSecretIdNumUsesOk() (*int32, bool) {
	if o == nil || o.SecretIdNumUses == nil {
		return nil, false
	}
	return o.SecretIdNumUses, true
}

// HasSecretIdNumUses returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdNumUsesRequest) HasSecretIdNumUses() bool {
	if o != nil && o.SecretIdNumUses != nil {
		return true
	}

	return false
}

// SetSecretIdNumUses gets a reference to the given int32 and assigns it to the SecretIdNumUses field.
func (o *ApproleRoleSecretIdNumUsesRequest) SetSecretIdNumUses(v int32) {
	o.SecretIdNumUses = &v
}

func (o ApproleRoleSecretIdNumUsesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretIdNumUses != nil {
		toSerialize["secret_id_num_uses"] = o.SecretIdNumUses
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleSecretIdNumUsesRequest struct {
	value *ApproleRoleSecretIdNumUsesRequest
	isSet bool
}

func (v NullableApproleRoleSecretIdNumUsesRequest) Get() *ApproleRoleSecretIdNumUsesRequest {
	return v.value
}

func (v *NullableApproleRoleSecretIdNumUsesRequest) Set(val *ApproleRoleSecretIdNumUsesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleSecretIdNumUsesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleSecretIdNumUsesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleSecretIdNumUsesRequest(val *ApproleRoleSecretIdNumUsesRequest) *NullableApproleRoleSecretIdNumUsesRequest {
	return &NullableApproleRoleSecretIdNumUsesRequest{value: val, isSet: true}
}

func (v NullableApproleRoleSecretIdNumUsesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleSecretIdNumUsesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleSecretIdRequest struct for ApproleRoleSecretIdRequest
type ApproleRoleSecretIdRequest struct {
	// Comma separated string or list of CIDR blocks enforcing secret IDs to be used from specific set of IP addresses. If 'bound_cidr_list' is set on the role, then the list of CIDR blocks listed here should be a subset of the CIDR blocks listed on the role.
	CidrList []string `json:"cidr_list,omitempty"`
	// Metadata to be tied to the SecretID. This should be a JSON formatted string containing the metadata in key value pairs.
	Metadata *string `json:"metadata,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
}

// NewApproleRoleSecretIdRequest instantiates a new ApproleRoleSecretIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleSecretIdRequest() *ApproleRoleSecretIdRequest {
	this := ApproleRoleSecretIdRequest{}
	return &this
}

// NewApproleRoleSecretIdRequestWithDefaults instantiates a new ApproleRoleSecretIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleSecretIdRequestWithDefaults() *ApproleRoleSecretIdRequest {
	this := ApproleRoleSecretIdRequest{}
	return &this
}

// GetCidrList returns the CidrList field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdRequest) GetCidrList() []string {
	if o == nil || o.CidrList == nil {
		var ret []string
		return ret
	}
	return o.CidrList
}

// GetCidrListOk returns a tuple with the CidrList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdRequest) GetCidrListOk() ([]string, bool) {
	if o == nil || o.CidrList == nil {
		return nil, false
	}
	return o.CidrList, true
}

// HasCidrList returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdRequest) HasCidrList() bool {
	if o != nil && o.CidrList != nil {
		return true
	}

	return false
}

// SetCidrList gets a reference to the given []string and assigns it to the CidrList field.
func (o *ApproleRoleSecretIdRequest) SetCidrList(v []string) {
	o.CidrList = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdRequest) GetMetadata() string {
	if o == nil || o.Metadata == nil {
		var ret string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdRequest) GetMetadataOk() (*string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given string and assigns it to the Metadata field.
func (o *ApproleRoleSecretIdRequest) SetMetadata(v string) {
	o.Metadata = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *ApproleRoleSecretIdRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

func (o ApproleRoleSecretIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CidrList != nil {
		toSerialize["cidr_list"] = o.CidrList
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleSecretIdRequest struct {
	value *ApproleRoleSecretIdRequest
	isSet bool
}

func (v NullableApproleRoleSecretIdRequest) Get() *ApproleRoleSecretIdRequest {
	return v.value
}

func (v *NullableApproleRoleSecretIdRequest) Set(val *ApproleRoleSecretIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleSecretIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleSecretIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleSecretIdRequest(val *ApproleRoleSecretIdRequest) *NullableApproleRoleSecretIdRequest {
	return &NullableApproleRoleSecretIdRequest{value: val, isSet: true}
}

func (v NullableApproleRoleSecretIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleSecretIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleSecretIdTtlRequest struct for ApproleRoleSecretIdTtlRequest
type ApproleRoleSecretIdTtlRequest struct {
	// Duration in seconds after which the issued SecretID should expire. Defaults to 0, meaning no expiration.
	SecretIdTtl *int32 `json:"secret_id_ttl,omitempty"`
}

// NewApproleRoleSecretIdTtlRequest instantiates a new ApproleRoleSecretIdTtlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleSecretIdTtlRequest() *ApproleRoleSecretIdTtlRequest {
	this := ApproleRoleSecretIdTtlRequest{}
	return &this
}

// NewApproleRoleSecretIdTtlRequestWithDefaults instantiates a new ApproleRoleSecretIdTtlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleSecretIdTtlRequestWithDefaults() *ApproleRoleSecretIdTtlRequest {
	this := ApproleRoleSecretIdTtlRequest{}
	return &this
}

// GetSecretIdTtl returns the SecretIdTtl field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdTtlRequest) GetSecretIdTtl() int32 {
	if o == nil || o.SecretIdTtl == nil {
		var ret int32
		return ret
	}
	return *o.SecretIdTtl
}

// GetSecretIdTtlOk returns a tuple with the SecretIdTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdTtlRequest) GetSecretIdTtlOk() (*int32, bool) {
	if o == nil || o.SecretIdTtl == nil {
		return nil, false
	}
	return o.SecretIdTtl, true
}

// HasSecretIdTtl returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdTtlRequest) HasSecretIdTtl() bool {
	if o != nil && o.SecretIdTtl != nil {
		return true
	}

	return false
}

// SetSecretIdTtl gets a reference to the given int32 and assigns it to the SecretIdTtl field.
func (o *ApproleRoleSecretIdTtlRequest) SetSecretIdTtl(v int32) {
	o.SecretIdTtl = &v
}

func (o ApproleRoleSecretIdTtlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretIdTtl != nil {
		toSerialize["secret_id_ttl"] = o.SecretIdTtl
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleSecretIdTtlRequest struct {
	value *ApproleRoleSecretIdTtlRequest
	isSet bool
}

func (v NullableApproleRoleSecretIdTtlRequest) Get() *ApproleRoleSecretIdTtlRequest {
	return v.value
}

func (v *NullableApproleRoleSecretIdTtlRequest) Set(val *ApproleRoleSecretIdTtlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleSecretIdTtlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleSecretIdTtlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleSecretIdTtlRequest(val *ApproleRoleSecretIdTtlRequest) *NullableApproleRoleSecretIdTtlRequest {
	return &NullableApproleRoleSecretIdTtlRequest{value: val, isSet: true}
}

func (v NullableApproleRoleSecretIdTtlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleSecretIdTtlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleTokenBoundCidrsRequest struct for ApproleRoleTokenBoundCidrsRequest
type ApproleRoleTokenBoundCidrsRequest struct {
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
}

// NewApproleRoleTokenBoundCidrsRequest instantiates a new ApproleRoleTokenBoundCidrsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleTokenBoundCidrsRequest() *ApproleRoleTokenBoundCidrsRequest {
	this := ApproleRoleTokenBoundCidrsRequest{}
	return &this
}

// NewApproleRoleTokenBoundCidrsRequestWithDefaults instantiates a new ApproleRoleTokenBoundCidrsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleTokenBoundCidrsRequestWithDefaults() *ApproleRoleTokenBoundCidrsRequest {
	this := ApproleRoleTokenBoundCidrsRequest{}
	return &this
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *ApproleRoleTokenBoundCidrsRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleTokenBoundCidrsRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *ApproleRoleTokenBoundCidrsRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *ApproleRoleTokenBoundCidrsRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

func (o ApproleRoleTokenBoundCidrsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleTokenBoundCidrsRequest struct {
	value *ApproleRoleTokenBoundCidrsRequest
	isSet bool
}

func (v NullableApproleRoleTokenBoundCidrsRequest) Get() *ApproleRoleTokenBoundCidrsRequest {
	return v.value
}

func (v *NullableApproleRoleTokenBoundCidrsRequest) Set(val *ApproleRoleTokenBoundCidrsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleTokenBoundCidrsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleTokenBoundCidrsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleTokenBoundCidrsRequest(val *ApproleRoleTokenBoundCidrsRequest) *NullableApproleRoleTokenBoundCidrsRequest {
	return &NullableApproleRoleTokenBoundCidrsRequest{value: val, isSet: true}
}

func (v NullableApproleRoleTokenBoundCidrsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleTokenBoundCidrsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleTokenMaxTtlRequest struct for ApproleRoleTokenMaxTtlRequest
type ApproleRoleTokenMaxTtlRequest struct {
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
}

// NewApproleRoleTokenMaxTtlRequest instantiates a new ApproleRoleTokenMaxTtlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleTokenMaxTtlRequest() *ApproleRoleTokenMaxTtlRequest {
	this := ApproleRoleTokenMaxTtlRequest{}
	return &this
}

// NewApproleRoleTokenMaxTtlRequestWithDefaults instantiates a new ApproleRoleTokenMaxTtlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleTokenMaxTtlRequestWithDefaults() *ApproleRoleTokenMaxTtlRequest {
	this := ApproleRoleTokenMaxTtlRequest{}
	return &this
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *ApproleRoleTokenMaxTtlRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleTokenMaxTtlRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *ApproleRoleTokenMaxTtlRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *ApproleRoleTokenMaxTtlRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

func (o ApproleRoleTokenMaxTtlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleTokenMaxTtlRequest struct {
	value *ApproleRoleTokenMaxTtlRequest
	isSet bool
}

func (v NullableApproleRoleTokenMaxTtlRequest) Get() *ApproleRoleTokenMaxTtlRequest {
	return v.value
}

func (v *NullableApproleRoleTokenMaxTtlRequest) Set(val *ApproleRoleTokenMaxTtlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleTokenMaxTtlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleTokenMaxTtlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleTokenMaxTtlRequest(val *ApproleRoleTokenMaxTtlRequest) *NullableApproleRoleTokenMaxTtlRequest {
	return &NullableApproleRoleTokenMaxTtlRequest{value: val, isSet: true}
}

func (v NullableApproleRoleTokenMaxTtlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleTokenMaxTtlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleTokenNumUsesRequest struct for ApproleRoleTokenNumUsesRequest
type ApproleRoleTokenNumUsesRequest struct {
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
}

// NewApproleRoleTokenNumUsesRequest instantiates a new ApproleRoleTokenNumUsesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleTokenNumUsesRequest() *ApproleRoleTokenNumUsesRequest {
	this := ApproleRoleTokenNumUsesRequest{}
	return &this
}

// NewApproleRoleTokenNumUsesRequestWithDefaults instantiates a new ApproleRoleTokenNumUsesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleTokenNumUsesRequestWithDefaults() *ApproleRoleTokenNumUsesRequest {
	this := ApproleRoleTokenNumUsesRequest{}
	return &this
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *ApproleRoleTokenNumUsesRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleTokenNumUsesRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *ApproleRoleTokenNumUsesRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *ApproleRoleTokenNumUsesRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

func (o ApproleRoleTokenNumUsesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleTokenNumUsesRequest struct {
	value *ApproleRoleTokenNumUsesRequest
	isSet bool
}

func (v NullableApproleRoleTokenNumUsesRequest) Get() *ApproleRoleTokenNumUsesRequest {
	return v.value
}

func (v *NullableApproleRoleTokenNumUsesRequest) Set(val *ApproleRoleTokenNumUsesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleTokenNumUsesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleTokenNumUsesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleTokenNumUsesRequest(val *ApproleRoleTokenNumUsesRequest) *NullableApproleRoleTokenNumUsesRequest {
	return &NullableApproleRoleTokenNumUsesRequest{value: val, isSet: true}
}

func (v NullableApproleRoleTokenNumUsesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleTokenNumUsesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ApproleRoleTokenTtlRequest struct for ApproleRoleTokenTtlRequest
type ApproleRoleTokenTtlRequest struct {
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
}

// NewApproleRoleTokenTtlRequest instantiates a new ApproleRoleTokenTtlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleTokenTtlRequest() *ApproleRoleTokenTtlRequest {
	this := ApproleRoleTokenTtlRequest{}
	return &this
}

// NewApproleRoleTokenTtlRequestWithDefaults instantiates a new ApproleRoleTokenTtlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleTokenTtlRequestWithDefaults() *ApproleRoleTokenTtlRequest {
	this := ApproleRoleTokenTtlRequest{}
	return &this
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *ApproleRoleTokenTtlRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleTokenTtlRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *ApproleRoleTokenTtlRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *ApproleRoleTokenTtlRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

func (o ApproleRoleTokenTtlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleTokenTtlRequest struct {
	value *ApproleRoleTokenTtlRequest
	isSet bool
}

func (v NullableApproleRoleTokenTtlRequest) Get() *ApproleRoleTokenTtlRequest {
	return v.value
}

func (v *NullableApproleRoleTokenTtlRequest) Set(val *ApproleRoleTokenTtlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleTokenTtlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleTokenTtlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleTokenTtlRequest(val *ApproleRoleTokenTtlRequest) *NullableApproleRoleTokenTtlRequest {
	return &NullableApproleRoleTokenTtlRequest{value: val, isSet: true}
}

func (v NullableApproleRoleTokenTtlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleTokenTtlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsConfigCertificateRequest struct for AwsConfigCertificateRequest
type AwsConfigCertificateRequest struct {
	// Base64 encoded AWS Public cert required to verify PKCS7 signature of the EC2 instance metadata.
	AwsPublicCert *string `json:"aws_public_cert,omitempty"`
	// Takes the value of either \"pkcs7\" or \"identity\", indicating the type of document which can be verified using the given certificate. The reason is that the PKCS#7 document will have a DSA digest and the identity signature will have an RSA signature, and accordingly the public certificates to verify those also vary. Defaults to \"pkcs7\".
	Type *string `json:"type,omitempty"`
}

// NewAwsConfigCertificateRequest instantiates a new AwsConfigCertificateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigCertificateRequest() *AwsConfigCertificateRequest {
	this := AwsConfigCertificateRequest{}
	var type_ string = "pkcs7"
	this.Type = &type_
	return &this
}

// NewAwsConfigCertificateRequestWithDefaults instantiates a new AwsConfigCertificateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigCertificateRequestWithDefaults() *AwsConfigCertificateRequest {
	this := AwsConfigCertificateRequest{}
	var type_ string = "pkcs7"
	this.Type = &type_
	return &this
}

// GetAwsPublicCert returns the AwsPublicCert field value if set, zero value otherwise.
func (o *AwsConfigCertificateRequest) GetAwsPublicCert() string {
	if o == nil || o.AwsPublicCert == nil {
		var ret string
		return ret
	}
	return *o.AwsPublicCert
}

// GetAwsPublicCertOk returns a tuple with the AwsPublicCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigCertificateRequest) GetAwsPublicCertOk() (*string, bool) {
	if o == nil || o.AwsPublicCert == nil {
		return nil, false
	}
	return o.AwsPublicCert, true
}

// HasAwsPublicCert returns a boolean if a field has been set.
func (o *AwsConfigCertificateRequest) HasAwsPublicCert() bool {
	if o != nil && o.AwsPublicCert != nil {
		return true
	}

	return false
}

// SetAwsPublicCert gets a reference to the given string and assigns it to the AwsPublicCert field.
func (o *AwsConfigCertificateRequest) SetAwsPublicCert(v string) {
	o.AwsPublicCert = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AwsConfigCertificateRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigCertificateRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AwsConfigCertificateRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AwsConfigCertificateRequest) SetType(v string) {
	o.Type = &v
}

func (o AwsConfigCertificateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AwsPublicCert != nil {
		toSerialize["aws_public_cert"] = o.AwsPublicCert
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigCertificateRequest struct {
	value *AwsConfigCertificateRequest
	isSet bool
}

func (v NullableAwsConfigCertificateRequest) Get() *AwsConfigCertificateRequest {
	return v.value
}

func (v *NullableAwsConfigCertificateRequest) Set(val *AwsConfigCertificateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigCertificateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigCertificateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigCertificateRequest(val *AwsConfigCertificateRequest) *NullableAwsConfigCertificateRequest {
	return &NullableAwsConfigCertificateRequest{value: val, isSet: true}
}

func (v NullableAwsConfigCertificateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigCertificateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsConfigClientRequest struct for AwsConfigClientRequest
type AwsConfigClientRequest struct {
	// AWS Access Key ID for the account used to make AWS API requests.
	AccessKey *string `json:"access_key,omitempty"`
	// List of additional headers that are allowed to be in AWS STS request headers
	AllowedStsHeaderValues []string `json:"allowed_sts_header_values,omitempty"`
	// URL to override the default generated endpoint for making AWS EC2 API calls.
	Endpoint *string `json:"endpoint,omitempty"`
	// URL to override the default generated endpoint for making AWS IAM API calls.
	IamEndpoint *string `json:"iam_endpoint,omitempty"`
	// Value to require in the X-Vault-AWS-IAM-Server-ID request header
	IamServerIdHeaderValue *string `json:"iam_server_id_header_value,omitempty"`
	// Maximum number of retries for recoverable exceptions of AWS APIs
	MaxRetries *int32 `json:"max_retries,omitempty"`
	// AWS Secret Access Key for the account used to make AWS API requests.
	SecretKey *string `json:"secret_key,omitempty"`
	// URL to override the default generated endpoint for making AWS STS API calls.
	StsEndpoint *string `json:"sts_endpoint,omitempty"`
	// The region ID for the sts_endpoint, if set.
	StsRegion *string `json:"sts_region,omitempty"`
}

// NewAwsConfigClientRequest instantiates a new AwsConfigClientRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigClientRequest() *AwsConfigClientRequest {
	this := AwsConfigClientRequest{}
	var accessKey string = ""
	this.AccessKey = &accessKey
	var endpoint string = ""
	this.Endpoint = &endpoint
	var iamEndpoint string = ""
	this.IamEndpoint = &iamEndpoint
	var iamServerIdHeaderValue string = ""
	this.IamServerIdHeaderValue = &iamServerIdHeaderValue
	var maxRetries int32 = -1
	this.MaxRetries = &maxRetries
	var secretKey string = ""
	this.SecretKey = &secretKey
	var stsEndpoint string = ""
	this.StsEndpoint = &stsEndpoint
	var stsRegion string = ""
	this.StsRegion = &stsRegion
	return &this
}

// NewAwsConfigClientRequestWithDefaults instantiates a new AwsConfigClientRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigClientRequestWithDefaults() *AwsConfigClientRequest {
	this := AwsConfigClientRequest{}
	var accessKey string = ""
	this.AccessKey = &accessKey
	var endpoint string = ""
	this.Endpoint = &endpoint
	var iamEndpoint string = ""
	this.IamEndpoint = &iamEndpoint
	var iamServerIdHeaderValue string = ""
	this.IamServerIdHeaderValue = &iamServerIdHeaderValue
	var maxRetries int32 = -1
	this.MaxRetries = &maxRetries
	var secretKey string = ""
	this.SecretKey = &secretKey
	var stsEndpoint string = ""
	this.StsEndpoint = &stsEndpoint
	var stsRegion string = ""
	this.StsRegion = &stsRegion
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *AwsConfigClientRequest) GetAccessKey() string {
	if o == nil || o.AccessKey == nil {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigClientRequest) GetAccessKeyOk() (*string, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *AwsConfigClientRequest) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *AwsConfigClientRequest) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetAllowedStsHeaderValues returns the AllowedStsHeaderValues field value if set, zero value otherwise.
func (o *AwsConfigClientRequest) GetAllowedStsHeaderValues() []string {
	if o == nil || o.AllowedStsHeaderValues == nil {
		var ret []string
		return ret
	}
	return o.AllowedStsHeaderValues
}

// GetAllowedStsHeaderValuesOk returns a tuple with the AllowedStsHeaderValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigClientRequest) GetAllowedStsHeaderValuesOk() ([]string, bool) {
	if o == nil || o.AllowedStsHeaderValues == nil {
		return nil, false
	}
	return o.AllowedStsHeaderValues, true
}

// HasAllowedStsHeaderValues returns a boolean if a field has been set.
func (o *AwsConfigClientRequest) HasAllowedStsHeaderValues() bool {
	if o != nil && o.AllowedStsHeaderValues != nil {
		return true
	}

	return false
}

// SetAllowedStsHeaderValues gets a reference to the given []string and assigns it to the AllowedStsHeaderValues field.
func (o *AwsConfigClientRequest) SetAllowedStsHeaderValues(v []string) {
	o.AllowedStsHeaderValues = v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *AwsConfigClientRequest) GetEndpoint() string {
	if o == nil || o.Endpoint == nil {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigClientRequest) GetEndpointOk() (*string, bool) {
	if o == nil || o.Endpoint == nil {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *AwsConfigClientRequest) HasEndpoint() bool {
	if o != nil && o.Endpoint != nil {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *AwsConfigClientRequest) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetIamEndpoint returns the IamEndpoint field value if set, zero value otherwise.
func (o *AwsConfigClientRequest) GetIamEndpoint() string {
	if o == nil || o.IamEndpoint == nil {
		var ret string
		return ret
	}
	return *o.IamEndpoint
}

// GetIamEndpointOk returns a tuple with the IamEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigClientRequest) GetIamEndpointOk() (*string, bool) {
	if o == nil || o.IamEndpoint == nil {
		return nil, false
	}
	return o.IamEndpoint, true
}

// HasIamEndpoint returns a boolean if a field has been set.
func (o *AwsConfigClientRequest) HasIamEndpoint() bool {
	if o != nil && o.IamEndpoint != nil {
		return true
	}

	return false
}

// SetIamEndpoint gets a reference to the given string and assigns it to the IamEndpoint field.
func (o *AwsConfigClientRequest) SetIamEndpoint(v string) {
	o.IamEndpoint = &v
}

// GetIamServerIdHeaderValue returns the IamServerIdHeaderValue field value if set, zero value otherwise.
func (o *AwsConfigClientRequest) GetIamServerIdHeaderValue() string {
	if o == nil || o.IamServerIdHeaderValue == nil {
		var ret string
		return ret
	}
	return *o.IamServerIdHeaderValue
}

// GetIamServerIdHeaderValueOk returns a tuple with the IamServerIdHeaderValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigClientRequest) GetIamServerIdHeaderValueOk() (*string, bool) {
	if o == nil || o.IamServerIdHeaderValue == nil {
		return nil, false
	}
	return o.IamServerIdHeaderValue, true
}

// HasIamServerIdHeaderValue returns a boolean if a field has been set.
func (o *AwsConfigClientRequest) HasIamServerIdHeaderValue() bool {
	if o != nil && o.IamServerIdHeaderValue != nil {
		return true
	}

	return false
}

// SetIamServerIdHeaderValue gets a reference to the given string and assigns it to the IamServerIdHeaderValue field.
func (o *AwsConfigClientRequest) SetIamServerIdHeaderValue(v string) {
	o.IamServerIdHeaderValue = &v
}

// GetMaxRetries returns the MaxRetries field value if set, zero value otherwise.
func (o *AwsConfigClientRequest) GetMaxRetries() int32 {
	if o == nil || o.MaxRetries == nil {
		var ret int32
		return ret
	}
	return *o.MaxRetries
}

// GetMaxRetriesOk returns a tuple with the MaxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigClientRequest) GetMaxRetriesOk() (*int32, bool) {
	if o == nil || o.MaxRetries == nil {
		return nil, false
	}
	return o.MaxRetries, true
}

// HasMaxRetries returns a boolean if a field has been set.
func (o *AwsConfigClientRequest) HasMaxRetries() bool {
	if o != nil && o.MaxRetries != nil {
		return true
	}

	return false
}

// SetMaxRetries gets a reference to the given int32 and assigns it to the MaxRetries field.
func (o *AwsConfigClientRequest) SetMaxRetries(v int32) {
	o.MaxRetries = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *AwsConfigClientRequest) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigClientRequest) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *AwsConfigClientRequest) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *AwsConfigClientRequest) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetStsEndpoint returns the StsEndpoint field value if set, zero value otherwise.
func (o *AwsConfigClientRequest) GetStsEndpoint() string {
	if o == nil || o.StsEndpoint == nil {
		var ret string
		return ret
	}
	return *o.StsEndpoint
}

// GetStsEndpointOk returns a tuple with the StsEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigClientRequest) GetStsEndpointOk() (*string, bool) {
	if o == nil || o.StsEndpoint == nil {
		return nil, false
	}
	return o.StsEndpoint, true
}

// HasStsEndpoint returns a boolean if a field has been set.
func (o *AwsConfigClientRequest) HasStsEndpoint() bool {
	if o != nil && o.StsEndpoint != nil {
		return true
	}

	return false
}

// SetStsEndpoint gets a reference to the given string and assigns it to the StsEndpoint field.
func (o *AwsConfigClientRequest) SetStsEndpoint(v string) {
	o.StsEndpoint = &v
}

// GetStsRegion returns the StsRegion field value if set, zero value otherwise.
func (o *AwsConfigClientRequest) GetStsRegion() string {
	if o == nil || o.StsRegion == nil {
		var ret string
		return ret
	}
	return *o.StsRegion
}

// GetStsRegionOk returns a tuple with the StsRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigClientRequest) GetStsRegionOk() (*string, bool) {
	if o == nil || o.StsRegion == nil {
		return nil, false
	}
	return o.StsRegion, true
}

// HasStsRegion returns a boolean if a field has been set.
func (o *AwsConfigClientRequest) HasStsRegion() bool {
	if o != nil && o.StsRegion != nil {
		return true
	}

	return false
}

// SetStsRegion gets a reference to the given string and assigns it to the StsRegion field.
func (o *AwsConfigClientRequest) SetStsRegion(v string) {
	o.StsRegion = &v
}

func (o AwsConfigClientRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["access_key"] = o.AccessKey
	}
	if o.AllowedStsHeaderValues != nil {
		toSerialize["allowed_sts_header_values"] = o.AllowedStsHeaderValues
	}
	if o.Endpoint != nil {
		toSerialize["endpoint"] = o.Endpoint
	}
	if o.IamEndpoint != nil {
		toSerialize["iam_endpoint"] = o.IamEndpoint
	}
	if o.IamServerIdHeaderValue != nil {
		toSerialize["iam_server_id_header_value"] = o.IamServerIdHeaderValue
	}
	if o.MaxRetries != nil {
		toSerialize["max_retries"] = o.MaxRetries
	}
	if o.SecretKey != nil {
		toSerialize["secret_key"] = o.SecretKey
	}
	if o.StsEndpoint != nil {
		toSerialize["sts_endpoint"] = o.StsEndpoint
	}
	if o.StsRegion != nil {
		toSerialize["sts_region"] = o.StsRegion
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigClientRequest struct {
	value *AwsConfigClientRequest
	isSet bool
}

func (v NullableAwsConfigClientRequest) Get() *AwsConfigClientRequest {
	return v.value
}

func (v *NullableAwsConfigClientRequest) Set(val *AwsConfigClientRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigClientRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigClientRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigClientRequest(val *AwsConfigClientRequest) *NullableAwsConfigClientRequest {
	return &NullableAwsConfigClientRequest{value: val, isSet: true}
}

func (v NullableAwsConfigClientRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigClientRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsConfigIdentityRequest struct for AwsConfigIdentityRequest
type AwsConfigIdentityRequest struct {
	// Configure how the AWS auth method generates entity alias when using EC2 auth. Valid values are \"role_id\", \"instance_id\", and \"image_id\". Defaults to \"role_id\".
	Ec2Alias *string `json:"ec2_alias,omitempty"`
	// The metadata to include on the aliases and audit logs generated by this plugin. When set to 'default', includes: account_id, auth_type. These fields are available to add: ami_id, instance_id, region. Not editing this field means the 'default' fields are included. Explicitly setting this field to empty overrides the 'default' and means no metadata will be included. If not using 'default', explicit fields must be sent like: 'field1,field2'.
	Ec2Metadata []string `json:"ec2_metadata,omitempty"`
	// Configure how the AWS auth method generates entity aliases when using IAM auth. Valid values are \"role_id\", \"unique_id\", and \"full_arn\". Defaults to \"role_id\".
	IamAlias *string `json:"iam_alias,omitempty"`
	// The metadata to include on the aliases and audit logs generated by this plugin. When set to 'default', includes: account_id, auth_type. These fields are available to add: canonical_arn, client_arn, client_user_id, inferred_aws_region, inferred_entity_id, inferred_entity_type. Not editing this field means the 'default' fields are included. Explicitly setting this field to empty overrides the 'default' and means no metadata will be included. If not using 'default', explicit fields must be sent like: 'field1,field2'.
	IamMetadata []string `json:"iam_metadata,omitempty"`
}

// NewAwsConfigIdentityRequest instantiates a new AwsConfigIdentityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigIdentityRequest() *AwsConfigIdentityRequest {
	this := AwsConfigIdentityRequest{}
	var ec2Alias string = "instance_id"
	this.Ec2Alias = &ec2Alias
	var iamAlias string = "unique_id"
	this.IamAlias = &iamAlias
	return &this
}

// NewAwsConfigIdentityRequestWithDefaults instantiates a new AwsConfigIdentityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigIdentityRequestWithDefaults() *AwsConfigIdentityRequest {
	this := AwsConfigIdentityRequest{}
	var ec2Alias string = "instance_id"
	this.Ec2Alias = &ec2Alias
	var iamAlias string = "unique_id"
	this.IamAlias = &iamAlias
	return &this
}

// GetEc2Alias returns the Ec2Alias field value if set, zero value otherwise.
func (o *AwsConfigIdentityRequest) GetEc2Alias() string {
	if o == nil || o.Ec2Alias == nil {
		var ret string
		return ret
	}
	return *o.Ec2Alias
}

// GetEc2AliasOk returns a tuple with the Ec2Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigIdentityRequest) GetEc2AliasOk() (*string, bool) {
	if o == nil || o.Ec2Alias == nil {
		return nil, false
	}
	return o.Ec2Alias, true
}

// HasEc2Alias returns a boolean if a field has been set.
func (o *AwsConfigIdentityRequest) HasEc2Alias() bool {
	if o != nil && o.Ec2Alias != nil {
		return true
	}

	return false
}

// SetEc2Alias gets a reference to the given string and assigns it to the Ec2Alias field.
func (o *AwsConfigIdentityRequest) SetEc2Alias(v string) {
	o.Ec2Alias = &v
}

// GetEc2Metadata returns the Ec2Metadata field value if set, zero value otherwise.
func (o *AwsConfigIdentityRequest) GetEc2Metadata() []string {
	if o == nil || o.Ec2Metadata == nil {
		var ret []string
		return ret
	}
	return o.Ec2Metadata
}

// GetEc2MetadataOk returns a tuple with the Ec2Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigIdentityRequest) GetEc2MetadataOk() ([]string, bool) {
	if o == nil || o.Ec2Metadata == nil {
		return nil, false
	}
	return o.Ec2Metadata, true
}

// HasEc2Metadata returns a boolean if a field has been set.
func (o *AwsConfigIdentityRequest) HasEc2Metadata() bool {
	if o != nil && o.Ec2Metadata != nil {
		return true
	}

	return false
}

// SetEc2Metadata gets a reference to the given []string and assigns it to the Ec2Metadata field.
func (o *AwsConfigIdentityRequest) SetEc2Metadata(v []string) {
	o.Ec2Metadata = v
}

// GetIamAlias returns the IamAlias field value if set, zero value otherwise.
func (o *AwsConfigIdentityRequest) GetIamAlias() string {
	if o == nil || o.IamAlias == nil {
		var ret string
		return ret
	}
	return *o.IamAlias
}

// GetIamAliasOk returns a tuple with the IamAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigIdentityRequest) GetIamAliasOk() (*string, bool) {
	if o == nil || o.IamAlias == nil {
		return nil, false
	}
	return o.IamAlias, true
}

// HasIamAlias returns a boolean if a field has been set.
func (o *AwsConfigIdentityRequest) HasIamAlias() bool {
	if o != nil && o.IamAlias != nil {
		return true
	}

	return false
}

// SetIamAlias gets a reference to the given string and assigns it to the IamAlias field.
func (o *AwsConfigIdentityRequest) SetIamAlias(v string) {
	o.IamAlias = &v
}

// GetIamMetadata returns the IamMetadata field value if set, zero value otherwise.
func (o *AwsConfigIdentityRequest) GetIamMetadata() []string {
	if o == nil || o.IamMetadata == nil {
		var ret []string
		return ret
	}
	return o.IamMetadata
}

// GetIamMetadataOk returns a tuple with the IamMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigIdentityRequest) GetIamMetadataOk() ([]string, bool) {
	if o == nil || o.IamMetadata == nil {
		return nil, false
	}
	return o.IamMetadata, true
}

// HasIamMetadata returns a boolean if a field has been set.
func (o *AwsConfigIdentityRequest) HasIamMetadata() bool {
	if o != nil && o.IamMetadata != nil {
		return true
	}

	return false
}

// SetIamMetadata gets a reference to the given []string and assigns it to the IamMetadata field.
func (o *AwsConfigIdentityRequest) SetIamMetadata(v []string) {
	o.IamMetadata = v
}

func (o AwsConfigIdentityRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ec2Alias != nil {
		toSerialize["ec2_alias"] = o.Ec2Alias
	}
	if o.Ec2Metadata != nil {
		toSerialize["ec2_metadata"] = o.Ec2Metadata
	}
	if o.IamAlias != nil {
		toSerialize["iam_alias"] = o.IamAlias
	}
	if o.IamMetadata != nil {
		toSerialize["iam_metadata"] = o.IamMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigIdentityRequest struct {
	value *AwsConfigIdentityRequest
	isSet bool
}

func (v NullableAwsConfigIdentityRequest) Get() *AwsConfigIdentityRequest {
	return v.value
}

func (v *NullableAwsConfigIdentityRequest) Set(val *AwsConfigIdentityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigIdentityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigIdentityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigIdentityRequest(val *AwsConfigIdentityRequest) *NullableAwsConfigIdentityRequest {
	return &NullableAwsConfigIdentityRequest{value: val, isSet: true}
}

func (v NullableAwsConfigIdentityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigIdentityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsConfigLeaseRequest struct for AwsConfigLeaseRequest
type AwsConfigLeaseRequest struct {
	// Default lease for roles.
	Lease *string `json:"lease,omitempty"`
	// Maximum time a credential is valid for.
	LeaseMax *string `json:"lease_max,omitempty"`
}

// NewAwsConfigLeaseRequest instantiates a new AwsConfigLeaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigLeaseRequest() *AwsConfigLeaseRequest {
	this := AwsConfigLeaseRequest{}
	return &this
}

// NewAwsConfigLeaseRequestWithDefaults instantiates a new AwsConfigLeaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigLeaseRequestWithDefaults() *AwsConfigLeaseRequest {
	this := AwsConfigLeaseRequest{}
	return &this
}

// GetLease returns the Lease field value if set, zero value otherwise.
func (o *AwsConfigLeaseRequest) GetLease() string {
	if o == nil || o.Lease == nil {
		var ret string
		return ret
	}
	return *o.Lease
}

// GetLeaseOk returns a tuple with the Lease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigLeaseRequest) GetLeaseOk() (*string, bool) {
	if o == nil || o.Lease == nil {
		return nil, false
	}
	return o.Lease, true
}

// HasLease returns a boolean if a field has been set.
func (o *AwsConfigLeaseRequest) HasLease() bool {
	if o != nil && o.Lease != nil {
		return true
	}

	return false
}

// SetLease gets a reference to the given string and assigns it to the Lease field.
func (o *AwsConfigLeaseRequest) SetLease(v string) {
	o.Lease = &v
}

// GetLeaseMax returns the LeaseMax field value if set, zero value otherwise.
func (o *AwsConfigLeaseRequest) GetLeaseMax() string {
	if o == nil || o.LeaseMax == nil {
		var ret string
		return ret
	}
	return *o.LeaseMax
}

// GetLeaseMaxOk returns a tuple with the LeaseMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigLeaseRequest) GetLeaseMaxOk() (*string, bool) {
	if o == nil || o.LeaseMax == nil {
		return nil, false
	}
	return o.LeaseMax, true
}

// HasLeaseMax returns a boolean if a field has been set.
func (o *AwsConfigLeaseRequest) HasLeaseMax() bool {
	if o != nil && o.LeaseMax != nil {
		return true
	}

	return false
}

// SetLeaseMax gets a reference to the given string and assigns it to the LeaseMax field.
func (o *AwsConfigLeaseRequest) SetLeaseMax(v string) {
	o.LeaseMax = &v
}

func (o AwsConfigLeaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Lease != nil {
		toSerialize["lease"] = o.Lease
	}
	if o.LeaseMax != nil {
		toSerialize["lease_max"] = o.LeaseMax
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigLeaseRequest struct {
	value *AwsConfigLeaseRequest
	isSet bool
}

func (v NullableAwsConfigLeaseRequest) Get() *AwsConfigLeaseRequest {
	return v.value
}

func (v *NullableAwsConfigLeaseRequest) Set(val *AwsConfigLeaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigLeaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigLeaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigLeaseRequest(val *AwsConfigLeaseRequest) *NullableAwsConfigLeaseRequest {
	return &NullableAwsConfigLeaseRequest{value: val, isSet: true}
}

func (v NullableAwsConfigLeaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigLeaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsConfigRootRequest struct for AwsConfigRootRequest
type AwsConfigRootRequest struct {
	// Access key with permission to create new keys.
	AccessKey *string `json:"access_key,omitempty"`
	// Endpoint to custom IAM server URL
	IamEndpoint *string `json:"iam_endpoint,omitempty"`
	// Maximum number of retries for recoverable exceptions of AWS APIs
	MaxRetries *int32 `json:"max_retries,omitempty"`
	// Region for API calls.
	Region *string `json:"region,omitempty"`
	// Secret key with permission to create new keys.
	SecretKey *string `json:"secret_key,omitempty"`
	// Endpoint to custom STS server URL
	StsEndpoint *string `json:"sts_endpoint,omitempty"`
	// Template to generate custom IAM usernames
	UsernameTemplate *string `json:"username_template,omitempty"`
}

// NewAwsConfigRootRequest instantiates a new AwsConfigRootRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigRootRequest() *AwsConfigRootRequest {
	this := AwsConfigRootRequest{}
	var maxRetries int32 = -1
	this.MaxRetries = &maxRetries
	return &this
}

// NewAwsConfigRootRequestWithDefaults instantiates a new AwsConfigRootRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigRootRequestWithDefaults() *AwsConfigRootRequest {
	this := AwsConfigRootRequest{}
	var maxRetries int32 = -1
	this.MaxRetries = &maxRetries
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetAccessKey() string {
	if o == nil || o.AccessKey == nil {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetAccessKeyOk() (*string, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *AwsConfigRootRequest) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetIamEndpoint returns the IamEndpoint field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetIamEndpoint() string {
	if o == nil || o.IamEndpoint == nil {
		var ret string
		return ret
	}
	return *o.IamEndpoint
}

// GetIamEndpointOk returns a tuple with the IamEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetIamEndpointOk() (*string, bool) {
	if o == nil || o.IamEndpoint == nil {
		return nil, false
	}
	return o.IamEndpoint, true
}

// HasIamEndpoint returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasIamEndpoint() bool {
	if o != nil && o.IamEndpoint != nil {
		return true
	}

	return false
}

// SetIamEndpoint gets a reference to the given string and assigns it to the IamEndpoint field.
func (o *AwsConfigRootRequest) SetIamEndpoint(v string) {
	o.IamEndpoint = &v
}

// GetMaxRetries returns the MaxRetries field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetMaxRetries() int32 {
	if o == nil || o.MaxRetries == nil {
		var ret int32
		return ret
	}
	return *o.MaxRetries
}

// GetMaxRetriesOk returns a tuple with the MaxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetMaxRetriesOk() (*int32, bool) {
	if o == nil || o.MaxRetries == nil {
		return nil, false
	}
	return o.MaxRetries, true
}

// HasMaxRetries returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasMaxRetries() bool {
	if o != nil && o.MaxRetries != nil {
		return true
	}

	return false
}

// SetMaxRetries gets a reference to the given int32 and assigns it to the MaxRetries field.
func (o *AwsConfigRootRequest) SetMaxRetries(v int32) {
	o.MaxRetries = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AwsConfigRootRequest) SetRegion(v string) {
	o.Region = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *AwsConfigRootRequest) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetStsEndpoint returns the StsEndpoint field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetStsEndpoint() string {
	if o == nil || o.StsEndpoint == nil {
		var ret string
		return ret
	}
	return *o.StsEndpoint
}

// GetStsEndpointOk returns a tuple with the StsEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetStsEndpointOk() (*string, bool) {
	if o == nil || o.StsEndpoint == nil {
		return nil, false
	}
	return o.StsEndpoint, true
}

// HasStsEndpoint returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasStsEndpoint() bool {
	if o != nil && o.StsEndpoint != nil {
		return true
	}

	return false
}

// SetStsEndpoint gets a reference to the given string and assigns it to the StsEndpoint field.
func (o *AwsConfigRootRequest) SetStsEndpoint(v string) {
	o.StsEndpoint = &v
}

// GetUsernameTemplate returns the UsernameTemplate field value if set, zero value otherwise.
func (o *AwsConfigRootRequest) GetUsernameTemplate() string {
	if o == nil || o.UsernameTemplate == nil {
		var ret string
		return ret
	}
	return *o.UsernameTemplate
}

// GetUsernameTemplateOk returns a tuple with the UsernameTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigRootRequest) GetUsernameTemplateOk() (*string, bool) {
	if o == nil || o.UsernameTemplate == nil {
		return nil, false
	}
	return o.UsernameTemplate, true
}

// HasUsernameTemplate returns a boolean if a field has been set.
func (o *AwsConfigRootRequest) HasUsernameTemplate() bool {
	if o != nil && o.UsernameTemplate != nil {
		return true
	}

	return false
}

// SetUsernameTemplate gets a reference to the given string and assigns it to the UsernameTemplate field.
func (o *AwsConfigRootRequest) SetUsernameTemplate(v string) {
	o.UsernameTemplate = &v
}

func (o AwsConfigRootRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["access_key"] = o.AccessKey
	}
	if o.IamEndpoint != nil {
		toSerialize["iam_endpoint"] = o.IamEndpoint
	}
	if o.MaxRetries != nil {
		toSerialize["max_retries"] = o.MaxRetries
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.SecretKey != nil {
		toSerialize["secret_key"] = o.SecretKey
	}
	if o.StsEndpoint != nil {
		toSerialize["sts_endpoint"] = o.StsEndpoint
	}
	if o.UsernameTemplate != nil {
		toSerialize["username_template"] = o.UsernameTemplate
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigRootRequest struct {
	value *AwsConfigRootRequest
	isSet bool
}

func (v NullableAwsConfigRootRequest) Get() *AwsConfigRootRequest {
	return v.value
}

func (v *NullableAwsConfigRootRequest) Set(val *AwsConfigRootRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigRootRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigRootRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigRootRequest(val *AwsConfigRootRequest) *NullableAwsConfigRootRequest {
	return &NullableAwsConfigRootRequest{value: val, isSet: true}
}

func (v NullableAwsConfigRootRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigRootRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsConfigStsRequest struct for AwsConfigStsRequest
type AwsConfigStsRequest struct {
	// AWS ARN for STS role to be assumed when interacting with the account specified. The Vault server must have permissions to assume this role.
	StsRole *string `json:"sts_role,omitempty"`
}

// NewAwsConfigStsRequest instantiates a new AwsConfigStsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigStsRequest() *AwsConfigStsRequest {
	this := AwsConfigStsRequest{}
	return &this
}

// NewAwsConfigStsRequestWithDefaults instantiates a new AwsConfigStsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigStsRequestWithDefaults() *AwsConfigStsRequest {
	this := AwsConfigStsRequest{}
	return &this
}

// GetStsRole returns the StsRole field value if set, zero value otherwise.
func (o *AwsConfigStsRequest) GetStsRole() string {
	if o == nil || o.StsRole == nil {
		var ret string
		return ret
	}
	return *o.StsRole
}

// GetStsRoleOk returns a tuple with the StsRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigStsRequest) GetStsRoleOk() (*string, bool) {
	if o == nil || o.StsRole == nil {
		return nil, false
	}
	return o.StsRole, true
}

// HasStsRole returns a boolean if a field has been set.
func (o *AwsConfigStsRequest) HasStsRole() bool {
	if o != nil && o.StsRole != nil {
		return true
	}

	return false
}

// SetStsRole gets a reference to the given string and assigns it to the StsRole field.
func (o *AwsConfigStsRequest) SetStsRole(v string) {
	o.StsRole = &v
}

func (o AwsConfigStsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StsRole != nil {
		toSerialize["sts_role"] = o.StsRole
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigStsRequest struct {
	value *AwsConfigStsRequest
	isSet bool
}

func (v NullableAwsConfigStsRequest) Get() *AwsConfigStsRequest {
	return v.value
}

func (v *NullableAwsConfigStsRequest) Set(val *AwsConfigStsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigStsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigStsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigStsRequest(val *AwsConfigStsRequest) *NullableAwsConfigStsRequest {
	return &NullableAwsConfigStsRequest{value: val, isSet: true}
}

func (v NullableAwsConfigStsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigStsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsConfigTidyIdentityAccesslistRequest struct for AwsConfigTidyIdentityAccesslistRequest
type AwsConfigTidyIdentityAccesslistRequest struct {
	// If set to 'true', disables the periodic tidying of the 'identity-accesslist/<instance_id>' entries.
	DisablePeriodicTidy *bool `json:"disable_periodic_tidy,omitempty"`
	// The amount of extra time that must have passed beyond the identity's expiration, before it is removed from the backend storage.
	SafetyBuffer *int32 `json:"safety_buffer,omitempty"`
}

// NewAwsConfigTidyIdentityAccesslistRequest instantiates a new AwsConfigTidyIdentityAccesslistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigTidyIdentityAccesslistRequest() *AwsConfigTidyIdentityAccesslistRequest {
	this := AwsConfigTidyIdentityAccesslistRequest{}
	var disablePeriodicTidy bool = false
	this.DisablePeriodicTidy = &disablePeriodicTidy
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// NewAwsConfigTidyIdentityAccesslistRequestWithDefaults instantiates a new AwsConfigTidyIdentityAccesslistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigTidyIdentityAccesslistRequestWithDefaults() *AwsConfigTidyIdentityAccesslistRequest {
	this := AwsConfigTidyIdentityAccesslistRequest{}
	var disablePeriodicTidy bool = false
	this.DisablePeriodicTidy = &disablePeriodicTidy
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// GetDisablePeriodicTidy returns the DisablePeriodicTidy field value if set, zero value otherwise.
func (o *AwsConfigTidyIdentityAccesslistRequest) GetDisablePeriodicTidy() bool {
	if o == nil || o.DisablePeriodicTidy == nil {
		var ret bool
		return ret
	}
	return *o.DisablePeriodicTidy
}

// GetDisablePeriodicTidyOk returns a tuple with the DisablePeriodicTidy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigTidyIdentityAccesslistRequest) GetDisablePeriodicTidyOk() (*bool, bool) {
	if o == nil || o.DisablePeriodicTidy == nil {
		return nil, false
	}
	return o.DisablePeriodicTidy, true
}

// HasDisablePeriodicTidy returns a boolean if a field has been set.
func (o *AwsConfigTidyIdentityAccesslistRequest) HasDisablePeriodicTidy() bool {
	if o != nil && o.DisablePeriodicTidy != nil {
		return true
	}

	return false
}

// SetDisablePeriodicTidy gets a reference to the given bool and assigns it to the DisablePeriodicTidy field.
func (o *AwsConfigTidyIdentityAccesslistRequest) SetDisablePeriodicTidy(v bool) {
	o.DisablePeriodicTidy = &v
}

// GetSafetyBuffer returns the SafetyBuffer field value if set, zero value otherwise.
func (o *AwsConfigTidyIdentityAccesslistRequest) GetSafetyBuffer() int32 {
	if o == nil || o.SafetyBuffer == nil {
		var ret int32
		return ret
	}
	return *o.SafetyBuffer
}

// GetSafetyBufferOk returns a tuple with the SafetyBuffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigTidyIdentityAccesslistRequest) GetSafetyBufferOk() (*int32, bool) {
	if o == nil || o.SafetyBuffer == nil {
		return nil, false
	}
	return o.SafetyBuffer, true
}

// HasSafetyBuffer returns a boolean if a field has been set.
func (o *AwsConfigTidyIdentityAccesslistRequest) HasSafetyBuffer() bool {
	if o != nil && o.SafetyBuffer != nil {
		return true
	}

	return false
}

// SetSafetyBuffer gets a reference to the given int32 and assigns it to the SafetyBuffer field.
func (o *AwsConfigTidyIdentityAccesslistRequest) SetSafetyBuffer(v int32) {
	o.SafetyBuffer = &v
}

func (o AwsConfigTidyIdentityAccesslistRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisablePeriodicTidy != nil {
		toSerialize["disable_periodic_tidy"] = o.DisablePeriodicTidy
	}
	if o.SafetyBuffer != nil {
		toSerialize["safety_buffer"] = o.SafetyBuffer
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigTidyIdentityAccesslistRequest struct {
	value *AwsConfigTidyIdentityAccesslistRequest
	isSet bool
}

func (v NullableAwsConfigTidyIdentityAccesslistRequest) Get() *AwsConfigTidyIdentityAccesslistRequest {
	return v.value
}

func (v *NullableAwsConfigTidyIdentityAccesslistRequest) Set(val *AwsConfigTidyIdentityAccesslistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigTidyIdentityAccesslistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigTidyIdentityAccesslistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigTidyIdentityAccesslistRequest(val *AwsConfigTidyIdentityAccesslistRequest) *NullableAwsConfigTidyIdentityAccesslistRequest {
	return &NullableAwsConfigTidyIdentityAccesslistRequest{value: val, isSet: true}
}

func (v NullableAwsConfigTidyIdentityAccesslistRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigTidyIdentityAccesslistRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsConfigTidyIdentityWhitelistRequest struct for AwsConfigTidyIdentityWhitelistRequest
type AwsConfigTidyIdentityWhitelistRequest struct {
	// If set to 'true', disables the periodic tidying of the 'identity-accesslist/<instance_id>' entries.
	DisablePeriodicTidy *bool `json:"disable_periodic_tidy,omitempty"`
	// The amount of extra time that must have passed beyond the identity's expiration, before it is removed from the backend storage.
	SafetyBuffer *int32 `json:"safety_buffer,omitempty"`
}

// NewAwsConfigTidyIdentityWhitelistRequest instantiates a new AwsConfigTidyIdentityWhitelistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigTidyIdentityWhitelistRequest() *AwsConfigTidyIdentityWhitelistRequest {
	this := AwsConfigTidyIdentityWhitelistRequest{}
	var disablePeriodicTidy bool = false
	this.DisablePeriodicTidy = &disablePeriodicTidy
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// NewAwsConfigTidyIdentityWhitelistRequestWithDefaults instantiates a new AwsConfigTidyIdentityWhitelistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigTidyIdentityWhitelistRequestWithDefaults() *AwsConfigTidyIdentityWhitelistRequest {
	this := AwsConfigTidyIdentityWhitelistRequest{}
	var disablePeriodicTidy bool = false
	this.DisablePeriodicTidy = &disablePeriodicTidy
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// GetDisablePeriodicTidy returns the DisablePeriodicTidy field value if set, zero value otherwise.
func (o *AwsConfigTidyIdentityWhitelistRequest) GetDisablePeriodicTidy() bool {
	if o == nil || o.DisablePeriodicTidy == nil {
		var ret bool
		return ret
	}
	return *o.DisablePeriodicTidy
}

// GetDisablePeriodicTidyOk returns a tuple with the DisablePeriodicTidy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigTidyIdentityWhitelistRequest) GetDisablePeriodicTidyOk() (*bool, bool) {
	if o == nil || o.DisablePeriodicTidy == nil {
		return nil, false
	}
	return o.DisablePeriodicTidy, true
}

// HasDisablePeriodicTidy returns a boolean if a field has been set.
func (o *AwsConfigTidyIdentityWhitelistRequest) HasDisablePeriodicTidy() bool {
	if o != nil && o.DisablePeriodicTidy != nil {
		return true
	}

	return false
}

// SetDisablePeriodicTidy gets a reference to the given bool and assigns it to the DisablePeriodicTidy field.
func (o *AwsConfigTidyIdentityWhitelistRequest) SetDisablePeriodicTidy(v bool) {
	o.DisablePeriodicTidy = &v
}

// GetSafetyBuffer returns the SafetyBuffer field value if set, zero value otherwise.
func (o *AwsConfigTidyIdentityWhitelistRequest) GetSafetyBuffer() int32 {
	if o == nil || o.SafetyBuffer == nil {
		var ret int32
		return ret
	}
	return *o.SafetyBuffer
}

// GetSafetyBufferOk returns a tuple with the SafetyBuffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigTidyIdentityWhitelistRequest) GetSafetyBufferOk() (*int32, bool) {
	if o == nil || o.SafetyBuffer == nil {
		return nil, false
	}
	return o.SafetyBuffer, true
}

// HasSafetyBuffer returns a boolean if a field has been set.
func (o *AwsConfigTidyIdentityWhitelistRequest) HasSafetyBuffer() bool {
	if o != nil && o.SafetyBuffer != nil {
		return true
	}

	return false
}

// SetSafetyBuffer gets a reference to the given int32 and assigns it to the SafetyBuffer field.
func (o *AwsConfigTidyIdentityWhitelistRequest) SetSafetyBuffer(v int32) {
	o.SafetyBuffer = &v
}

func (o AwsConfigTidyIdentityWhitelistRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisablePeriodicTidy != nil {
		toSerialize["disable_periodic_tidy"] = o.DisablePeriodicTidy
	}
	if o.SafetyBuffer != nil {
		toSerialize["safety_buffer"] = o.SafetyBuffer
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigTidyIdentityWhitelistRequest struct {
	value *AwsConfigTidyIdentityWhitelistRequest
	isSet bool
}

func (v NullableAwsConfigTidyIdentityWhitelistRequest) Get() *AwsConfigTidyIdentityWhitelistRequest {
	return v.value
}

func (v *NullableAwsConfigTidyIdentityWhitelistRequest) Set(val *AwsConfigTidyIdentityWhitelistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigTidyIdentityWhitelistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigTidyIdentityWhitelistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigTidyIdentityWhitelistRequest(val *AwsConfigTidyIdentityWhitelistRequest) *NullableAwsConfigTidyIdentityWhitelistRequest {
	return &NullableAwsConfigTidyIdentityWhitelistRequest{value: val, isSet: true}
}

func (v NullableAwsConfigTidyIdentityWhitelistRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigTidyIdentityWhitelistRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsConfigTidyRoletagBlacklistRequest struct for AwsConfigTidyRoletagBlacklistRequest
type AwsConfigTidyRoletagBlacklistRequest struct {
	// If set to 'true', disables the periodic tidying of deny listed entries.
	DisablePeriodicTidy *bool `json:"disable_periodic_tidy,omitempty"`
	// The amount of extra time that must have passed beyond the roletag expiration, before it is removed from the backend storage. Defaults to 4320h (180 days).
	SafetyBuffer *int32 `json:"safety_buffer,omitempty"`
}

// NewAwsConfigTidyRoletagBlacklistRequest instantiates a new AwsConfigTidyRoletagBlacklistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigTidyRoletagBlacklistRequest() *AwsConfigTidyRoletagBlacklistRequest {
	this := AwsConfigTidyRoletagBlacklistRequest{}
	var disablePeriodicTidy bool = false
	this.DisablePeriodicTidy = &disablePeriodicTidy
	var safetyBuffer int32 = 15552000
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// NewAwsConfigTidyRoletagBlacklistRequestWithDefaults instantiates a new AwsConfigTidyRoletagBlacklistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigTidyRoletagBlacklistRequestWithDefaults() *AwsConfigTidyRoletagBlacklistRequest {
	this := AwsConfigTidyRoletagBlacklistRequest{}
	var disablePeriodicTidy bool = false
	this.DisablePeriodicTidy = &disablePeriodicTidy
	var safetyBuffer int32 = 15552000
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// GetDisablePeriodicTidy returns the DisablePeriodicTidy field value if set, zero value otherwise.
func (o *AwsConfigTidyRoletagBlacklistRequest) GetDisablePeriodicTidy() bool {
	if o == nil || o.DisablePeriodicTidy == nil {
		var ret bool
		return ret
	}
	return *o.DisablePeriodicTidy
}

// GetDisablePeriodicTidyOk returns a tuple with the DisablePeriodicTidy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigTidyRoletagBlacklistRequest) GetDisablePeriodicTidyOk() (*bool, bool) {
	if o == nil || o.DisablePeriodicTidy == nil {
		return nil, false
	}
	return o.DisablePeriodicTidy, true
}

// HasDisablePeriodicTidy returns a boolean if a field has been set.
func (o *AwsConfigTidyRoletagBlacklistRequest) HasDisablePeriodicTidy() bool {
	if o != nil && o.DisablePeriodicTidy != nil {
		return true
	}

	return false
}

// SetDisablePeriodicTidy gets a reference to the given bool and assigns it to the DisablePeriodicTidy field.
func (o *AwsConfigTidyRoletagBlacklistRequest) SetDisablePeriodicTidy(v bool) {
	o.DisablePeriodicTidy = &v
}

// GetSafetyBuffer returns the SafetyBuffer field value if set, zero value otherwise.
func (o *AwsConfigTidyRoletagBlacklistRequest) GetSafetyBuffer() int32 {
	if o == nil || o.SafetyBuffer == nil {
		var ret int32
		return ret
	}
	return *o.SafetyBuffer
}

// GetSafetyBufferOk returns a tuple with the SafetyBuffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigTidyRoletagBlacklistRequest) GetSafetyBufferOk() (*int32, bool) {
	if o == nil || o.SafetyBuffer == nil {
		return nil, false
	}
	return o.SafetyBuffer, true
}

// HasSafetyBuffer returns a boolean if a field has been set.
func (o *AwsConfigTidyRoletagBlacklistRequest) HasSafetyBuffer() bool {
	if o != nil && o.SafetyBuffer != nil {
		return true
	}

	return false
}

// SetSafetyBuffer gets a reference to the given int32 and assigns it to the SafetyBuffer field.
func (o *AwsConfigTidyRoletagBlacklistRequest) SetSafetyBuffer(v int32) {
	o.SafetyBuffer = &v
}

func (o AwsConfigTidyRoletagBlacklistRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisablePeriodicTidy != nil {
		toSerialize["disable_periodic_tidy"] = o.DisablePeriodicTidy
	}
	if o.SafetyBuffer != nil {
		toSerialize["safety_buffer"] = o.SafetyBuffer
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigTidyRoletagBlacklistRequest struct {
	value *AwsConfigTidyRoletagBlacklistRequest
	isSet bool
}

func (v NullableAwsConfigTidyRoletagBlacklistRequest) Get() *AwsConfigTidyRoletagBlacklistRequest {
	return v.value
}

func (v *NullableAwsConfigTidyRoletagBlacklistRequest) Set(val *AwsConfigTidyRoletagBlacklistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigTidyRoletagBlacklistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigTidyRoletagBlacklistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigTidyRoletagBlacklistRequest(val *AwsConfigTidyRoletagBlacklistRequest) *NullableAwsConfigTidyRoletagBlacklistRequest {
	return &NullableAwsConfigTidyRoletagBlacklistRequest{value: val, isSet: true}
}

func (v NullableAwsConfigTidyRoletagBlacklistRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigTidyRoletagBlacklistRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsConfigTidyRoletagDenylistRequest struct for AwsConfigTidyRoletagDenylistRequest
type AwsConfigTidyRoletagDenylistRequest struct {
	// If set to 'true', disables the periodic tidying of deny listed entries.
	DisablePeriodicTidy *bool `json:"disable_periodic_tidy,omitempty"`
	// The amount of extra time that must have passed beyond the roletag expiration, before it is removed from the backend storage. Defaults to 4320h (180 days).
	SafetyBuffer *int32 `json:"safety_buffer,omitempty"`
}

// NewAwsConfigTidyRoletagDenylistRequest instantiates a new AwsConfigTidyRoletagDenylistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigTidyRoletagDenylistRequest() *AwsConfigTidyRoletagDenylistRequest {
	this := AwsConfigTidyRoletagDenylistRequest{}
	var disablePeriodicTidy bool = false
	this.DisablePeriodicTidy = &disablePeriodicTidy
	var safetyBuffer int32 = 15552000
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// NewAwsConfigTidyRoletagDenylistRequestWithDefaults instantiates a new AwsConfigTidyRoletagDenylistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigTidyRoletagDenylistRequestWithDefaults() *AwsConfigTidyRoletagDenylistRequest {
	this := AwsConfigTidyRoletagDenylistRequest{}
	var disablePeriodicTidy bool = false
	this.DisablePeriodicTidy = &disablePeriodicTidy
	var safetyBuffer int32 = 15552000
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// GetDisablePeriodicTidy returns the DisablePeriodicTidy field value if set, zero value otherwise.
func (o *AwsConfigTidyRoletagDenylistRequest) GetDisablePeriodicTidy() bool {
	if o == nil || o.DisablePeriodicTidy == nil {
		var ret bool
		return ret
	}
	return *o.DisablePeriodicTidy
}

// GetDisablePeriodicTidyOk returns a tuple with the DisablePeriodicTidy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigTidyRoletagDenylistRequest) GetDisablePeriodicTidyOk() (*bool, bool) {
	if o == nil || o.DisablePeriodicTidy == nil {
		return nil, false
	}
	return o.DisablePeriodicTidy, true
}

// HasDisablePeriodicTidy returns a boolean if a field has been set.
func (o *AwsConfigTidyRoletagDenylistRequest) HasDisablePeriodicTidy() bool {
	if o != nil && o.DisablePeriodicTidy != nil {
		return true
	}

	return false
}

// SetDisablePeriodicTidy gets a reference to the given bool and assigns it to the DisablePeriodicTidy field.
func (o *AwsConfigTidyRoletagDenylistRequest) SetDisablePeriodicTidy(v bool) {
	o.DisablePeriodicTidy = &v
}

// GetSafetyBuffer returns the SafetyBuffer field value if set, zero value otherwise.
func (o *AwsConfigTidyRoletagDenylistRequest) GetSafetyBuffer() int32 {
	if o == nil || o.SafetyBuffer == nil {
		var ret int32
		return ret
	}
	return *o.SafetyBuffer
}

// GetSafetyBufferOk returns a tuple with the SafetyBuffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigTidyRoletagDenylistRequest) GetSafetyBufferOk() (*int32, bool) {
	if o == nil || o.SafetyBuffer == nil {
		return nil, false
	}
	return o.SafetyBuffer, true
}

// HasSafetyBuffer returns a boolean if a field has been set.
func (o *AwsConfigTidyRoletagDenylistRequest) HasSafetyBuffer() bool {
	if o != nil && o.SafetyBuffer != nil {
		return true
	}

	return false
}

// SetSafetyBuffer gets a reference to the given int32 and assigns it to the SafetyBuffer field.
func (o *AwsConfigTidyRoletagDenylistRequest) SetSafetyBuffer(v int32) {
	o.SafetyBuffer = &v
}

func (o AwsConfigTidyRoletagDenylistRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisablePeriodicTidy != nil {
		toSerialize["disable_periodic_tidy"] = o.DisablePeriodicTidy
	}
	if o.SafetyBuffer != nil {
		toSerialize["safety_buffer"] = o.SafetyBuffer
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigTidyRoletagDenylistRequest struct {
	value *AwsConfigTidyRoletagDenylistRequest
	isSet bool
}

func (v NullableAwsConfigTidyRoletagDenylistRequest) Get() *AwsConfigTidyRoletagDenylistRequest {
	return v.value
}

func (v *NullableAwsConfigTidyRoletagDenylistRequest) Set(val *AwsConfigTidyRoletagDenylistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigTidyRoletagDenylistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigTidyRoletagDenylistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigTidyRoletagDenylistRequest(val *AwsConfigTidyRoletagDenylistRequest) *NullableAwsConfigTidyRoletagDenylistRequest {
	return &NullableAwsConfigTidyRoletagDenylistRequest{value: val, isSet: true}
}

func (v NullableAwsConfigTidyRoletagDenylistRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigTidyRoletagDenylistRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsCredsRequest struct for AwsCredsRequest
type AwsCredsRequest struct {
	// Name of the role
	Name *string `json:"name,omitempty"`
	// ARN of role to assume when credential_type is assumed_role
	RoleArn *string `json:"role_arn,omitempty"`
	// Session name to use when assuming role. Max chars: 64
	RoleSessionName *string `json:"role_session_name,omitempty"`
	// Lifetime of the returned credentials in seconds
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewAwsCredsRequest instantiates a new AwsCredsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsCredsRequest() *AwsCredsRequest {
	this := AwsCredsRequest{}
	var ttl int32 = 3600
	this.Ttl = &ttl
	return &this
}

// NewAwsCredsRequestWithDefaults instantiates a new AwsCredsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsCredsRequestWithDefaults() *AwsCredsRequest {
	this := AwsCredsRequest{}
	var ttl int32 = 3600
	this.Ttl = &ttl
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AwsCredsRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsCredsRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AwsCredsRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AwsCredsRequest) SetName(v string) {
	o.Name = &v
}

// GetRoleArn returns the RoleArn field value if set, zero value otherwise.
func (o *AwsCredsRequest) GetRoleArn() string {
	if o == nil || o.RoleArn == nil {
		var ret string
		return ret
	}
	return *o.RoleArn
}

// GetRoleArnOk returns a tuple with the RoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsCredsRequest) GetRoleArnOk() (*string, bool) {
	if o == nil || o.RoleArn == nil {
		return nil, false
	}
	return o.RoleArn, true
}

// HasRoleArn returns a boolean if a field has been set.
func (o *AwsCredsRequest) HasRoleArn() bool {
	if o != nil && o.RoleArn != nil {
		return true
	}

	return false
}

// SetRoleArn gets a reference to the given string and assigns it to the RoleArn field.
func (o *AwsCredsRequest) SetRoleArn(v string) {
	o.RoleArn = &v
}

// GetRoleSessionName returns the RoleSessionName field value if set, zero value otherwise.
func (o *AwsCredsRequest) GetRoleSessionName() string {
	if o == nil || o.RoleSessionName == nil {
		var ret string
		return ret
	}
	return *o.RoleSessionName
}

// GetRoleSessionNameOk returns a tuple with the RoleSessionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsCredsRequest) GetRoleSessionNameOk() (*string, bool) {
	if o == nil || o.RoleSessionName == nil {
		return nil, false
	}
	return o.RoleSessionName, true
}

// HasRoleSessionName returns a boolean if a field has been set.
func (o *AwsCredsRequest) HasRoleSessionName() bool {
	if o != nil && o.RoleSessionName != nil {
		return true
	}

	return false
}

// SetRoleSessionName gets a reference to the given string and assigns it to the RoleSessionName field.
func (o *AwsCredsRequest) SetRoleSessionName(v string) {
	o.RoleSessionName = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *AwsCredsRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsCredsRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AwsCredsRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *AwsCredsRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o AwsCredsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.RoleArn != nil {
		toSerialize["role_arn"] = o.RoleArn
	}
	if o.RoleSessionName != nil {
		toSerialize["role_session_name"] = o.RoleSessionName
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableAwsCredsRequest struct {
	value *AwsCredsRequest
	isSet bool
}

func (v NullableAwsCredsRequest) Get() *AwsCredsRequest {
	return v.value
}

func (v *NullableAwsCredsRequest) Set(val *AwsCredsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsCredsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsCredsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsCredsRequest(val *AwsCredsRequest) *NullableAwsCredsRequest {
	return &NullableAwsCredsRequest{value: val, isSet: true}
}

func (v NullableAwsCredsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsCredsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsLoginRequest struct for AwsLoginRequest
type AwsLoginRequest struct {
	// HTTP method to use for the AWS request when auth_type is iam. This must match what has been signed in the presigned request. Currently, POST is the only supported value
	IamHttpRequestMethod *string `json:"iam_http_request_method,omitempty"`
	// Base64-encoded request body when auth_type is iam. This must match the request body included in the signature.
	IamRequestBody *string `json:"iam_request_body,omitempty"`
	// Key/value pairs of headers for use in the sts:GetCallerIdentity HTTP requests headers when auth_type is iam. Can be either a Base64-encoded, JSON-serialized string, or a JSON object of key/value pairs. This must at a minimum include the headers over which AWS has included a signature.
	IamRequestHeaders *string `json:"iam_request_headers,omitempty"`
	// Base64-encoded full URL against which to make the AWS request when using iam auth_type.
	IamRequestUrl *string `json:"iam_request_url,omitempty"`
	// Base64 encoded EC2 instance identity document. This needs to be supplied along with the 'signature' parameter. If using 'curl' for fetching the identity document, consider using the option '-w 0' while piping the output to 'base64' binary.
	Identity *string `json:"identity,omitempty"`
	// The nonce to be used for subsequent login requests when auth_type is ec2. If this parameter is not specified at all and if reauthentication is allowed, then the backend will generate a random nonce, attaches it to the instance's identity access list entry and returns the nonce back as part of auth metadata. This value should be used with further login requests, to establish client authenticity. Clients can choose to set a custom nonce if preferred, in which case, it is recommended that clients provide a strong nonce. If a nonce is provided but with an empty value, it indicates intent to disable reauthentication. Note that, when 'disallow_reauthentication' option is enabled on either the role or the role tag, the 'nonce' holds no significance.
	Nonce *string `json:"nonce,omitempty"`
	// PKCS7 signature of the identity document when using an auth_type of ec2.
	Pkcs7 *string `json:"pkcs7,omitempty"`
	// Name of the role against which the login is being attempted. If 'role' is not specified, then the login endpoint looks for a role bearing the name of the AMI ID of the EC2 instance that is trying to login. If a matching role is not found, login fails.
	Role *string `json:"role,omitempty"`
	// Base64 encoded SHA256 RSA signature of the instance identity document. This needs to be supplied along with 'identity' parameter.
	Signature *string `json:"signature,omitempty"`
}

// NewAwsLoginRequest instantiates a new AwsLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsLoginRequest() *AwsLoginRequest {
	this := AwsLoginRequest{}
	return &this
}

// NewAwsLoginRequestWithDefaults instantiates a new AwsLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsLoginRequestWithDefaults() *AwsLoginRequest {
	this := AwsLoginRequest{}
	return &this
}

// GetIamHttpRequestMethod returns the IamHttpRequestMethod field value if set, zero value otherwise.
func (o *AwsLoginRequest) GetIamHttpRequestMethod() string {
	if o == nil || o.IamHttpRequestMethod == nil {
		var ret string
		return ret
	}
	return *o.IamHttpRequestMethod
}

// GetIamHttpRequestMethodOk returns a tuple with the IamHttpRequestMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsLoginRequest) GetIamHttpRequestMethodOk() (*string, bool) {
	if o == nil || o.IamHttpRequestMethod == nil {
		return nil, false
	}
	return o.IamHttpRequestMethod, true
}

// HasIamHttpRequestMethod returns a boolean if a field has been set.
func (o *AwsLoginRequest) HasIamHttpRequestMethod() bool {
	if o != nil && o.IamHttpRequestMethod != nil {
		return true
	}

	return false
}

// SetIamHttpRequestMethod gets a reference to the given string and assigns it to the IamHttpRequestMethod field.
func (o *AwsLoginRequest) SetIamHttpRequestMethod(v string) {
	o.IamHttpRequestMethod = &v
}

// GetIamRequestBody returns the IamRequestBody field value if set, zero value otherwise.
func (o *AwsLoginRequest) GetIamRequestBody() string {
	if o == nil || o.IamRequestBody == nil {
		var ret string
		return ret
	}
	return *o.IamRequestBody
}

// GetIamRequestBodyOk returns a tuple with the IamRequestBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsLoginRequest) GetIamRequestBodyOk() (*string, bool) {
	if o == nil || o.IamRequestBody == nil {
		return nil, false
	}
	return o.IamRequestBody, true
}

// HasIamRequestBody returns a boolean if a field has been set.
func (o *AwsLoginRequest) HasIamRequestBody() bool {
	if o != nil && o.IamRequestBody != nil {
		return true
	}

	return false
}

// SetIamRequestBody gets a reference to the given string and assigns it to the IamRequestBody field.
func (o *AwsLoginRequest) SetIamRequestBody(v string) {
	o.IamRequestBody = &v
}

// GetIamRequestHeaders returns the IamRequestHeaders field value if set, zero value otherwise.
func (o *AwsLoginRequest) GetIamRequestHeaders() string {
	if o == nil || o.IamRequestHeaders == nil {
		var ret string
		return ret
	}
	return *o.IamRequestHeaders
}

// GetIamRequestHeadersOk returns a tuple with the IamRequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsLoginRequest) GetIamRequestHeadersOk() (*string, bool) {
	if o == nil || o.IamRequestHeaders == nil {
		return nil, false
	}
	return o.IamRequestHeaders, true
}

// HasIamRequestHeaders returns a boolean if a field has been set.
func (o *AwsLoginRequest) HasIamRequestHeaders() bool {
	if o != nil && o.IamRequestHeaders != nil {
		return true
	}

	return false
}

// SetIamRequestHeaders gets a reference to the given string and assigns it to the IamRequestHeaders field.
func (o *AwsLoginRequest) SetIamRequestHeaders(v string) {
	o.IamRequestHeaders = &v
}

// GetIamRequestUrl returns the IamRequestUrl field value if set, zero value otherwise.
func (o *AwsLoginRequest) GetIamRequestUrl() string {
	if o == nil || o.IamRequestUrl == nil {
		var ret string
		return ret
	}
	return *o.IamRequestUrl
}

// GetIamRequestUrlOk returns a tuple with the IamRequestUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsLoginRequest) GetIamRequestUrlOk() (*string, bool) {
	if o == nil || o.IamRequestUrl == nil {
		return nil, false
	}
	return o.IamRequestUrl, true
}

// HasIamRequestUrl returns a boolean if a field has been set.
func (o *AwsLoginRequest) HasIamRequestUrl() bool {
	if o != nil && o.IamRequestUrl != nil {
		return true
	}

	return false
}

// SetIamRequestUrl gets a reference to the given string and assigns it to the IamRequestUrl field.
func (o *AwsLoginRequest) SetIamRequestUrl(v string) {
	o.IamRequestUrl = &v
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *AwsLoginRequest) GetIdentity() string {
	if o == nil || o.Identity == nil {
		var ret string
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsLoginRequest) GetIdentityOk() (*string, bool) {
	if o == nil || o.Identity == nil {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *AwsLoginRequest) HasIdentity() bool {
	if o != nil && o.Identity != nil {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given string and assigns it to the Identity field.
func (o *AwsLoginRequest) SetIdentity(v string) {
	o.Identity = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *AwsLoginRequest) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsLoginRequest) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *AwsLoginRequest) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *AwsLoginRequest) SetNonce(v string) {
	o.Nonce = &v
}

// GetPkcs7 returns the Pkcs7 field value if set, zero value otherwise.
func (o *AwsLoginRequest) GetPkcs7() string {
	if o == nil || o.Pkcs7 == nil {
		var ret string
		return ret
	}
	return *o.Pkcs7
}

// GetPkcs7Ok returns a tuple with the Pkcs7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsLoginRequest) GetPkcs7Ok() (*string, bool) {
	if o == nil || o.Pkcs7 == nil {
		return nil, false
	}
	return o.Pkcs7, true
}

// HasPkcs7 returns a boolean if a field has been set.
func (o *AwsLoginRequest) HasPkcs7() bool {
	if o != nil && o.Pkcs7 != nil {
		return true
	}

	return false
}

// SetPkcs7 gets a reference to the given string and assigns it to the Pkcs7 field.
func (o *AwsLoginRequest) SetPkcs7(v string) {
	o.Pkcs7 = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AwsLoginRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsLoginRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AwsLoginRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *AwsLoginRequest) SetRole(v string) {
	o.Role = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *AwsLoginRequest) GetSignature() string {
	if o == nil || o.Signature == nil {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsLoginRequest) GetSignatureOk() (*string, bool) {
	if o == nil || o.Signature == nil {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *AwsLoginRequest) HasSignature() bool {
	if o != nil && o.Signature != nil {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *AwsLoginRequest) SetSignature(v string) {
	o.Signature = &v
}

func (o AwsLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IamHttpRequestMethod != nil {
		toSerialize["iam_http_request_method"] = o.IamHttpRequestMethod
	}
	if o.IamRequestBody != nil {
		toSerialize["iam_request_body"] = o.IamRequestBody
	}
	if o.IamRequestHeaders != nil {
		toSerialize["iam_request_headers"] = o.IamRequestHeaders
	}
	if o.IamRequestUrl != nil {
		toSerialize["iam_request_url"] = o.IamRequestUrl
	}
	if o.Identity != nil {
		toSerialize["identity"] = o.Identity
	}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	if o.Pkcs7 != nil {
		toSerialize["pkcs7"] = o.Pkcs7
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.Signature != nil {
		toSerialize["signature"] = o.Signature
	}
	return json.Marshal(toSerialize)
}

type NullableAwsLoginRequest struct {
	value *AwsLoginRequest
	isSet bool
}

func (v NullableAwsLoginRequest) Get() *AwsLoginRequest {
	return v.value
}

func (v *NullableAwsLoginRequest) Set(val *AwsLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsLoginRequest(val *AwsLoginRequest) *NullableAwsLoginRequest {
	return &NullableAwsLoginRequest{value: val, isSet: true}
}

func (v NullableAwsLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsRoleRequest struct for AwsRoleRequest
type AwsRoleRequest struct {
	// If set, allows migration of the underlying instance where the client resides. This keys off of pendingTime in the metadata document, so essentially, this disables the client nonce check whenever the instance is migrated to a new host and pendingTime is newer than the previously-remembered time. Use with caution. This is only checked when auth_type is ec2.
	AllowInstanceMigration *bool `json:"allow_instance_migration,omitempty"`
	// The auth_type permitted to authenticate to this role. Must be one of iam or ec2 and cannot be changed after role creation.
	AuthType *string `json:"auth_type,omitempty"`
	// If set, defines a constraint on the EC2 instances that the account ID in its identity document to match one of the IDs specified by this parameter. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundAccountId []string `json:"bound_account_id,omitempty"`
	// If set, defines a constraint on the EC2 instances that they should be using one of the AMI IDs specified by this parameter. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundAmiId []string `json:"bound_ami_id,omitempty"`
	// If set, defines a constraint on the EC2 instances to have one of the given instance IDs. Can be a list or comma-separated string of EC2 instance IDs. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundEc2InstanceId []string `json:"bound_ec2_instance_id,omitempty"`
	// If set, defines a constraint on the EC2 instances to be associated with an IAM instance profile ARN which has a prefix that matches one of the values specified by this parameter. The value is prefix-matched (as though it were a glob ending in '*'). This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundIamInstanceProfileArn []string `json:"bound_iam_instance_profile_arn,omitempty"`
	// ARN of the IAM principals to bind to this role. Only applicable when auth_type is iam.
	BoundIamPrincipalArn []string `json:"bound_iam_principal_arn,omitempty"`
	// If set, defines a constraint on the authenticating EC2 instance that it must match one of the IAM role ARNs specified by this parameter. The value is prefix-matched (as though it were a glob ending in '*'). The configured IAM user or EC2 instance role must be allowed to execute the 'iam:GetInstanceProfile' action if this is specified. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundIamRoleArn []string `json:"bound_iam_role_arn,omitempty"`
	// If set, defines a constraint on the EC2 instances that the region in its identity document match one of the regions specified by this parameter. This is only applicable when auth_type is ec2.
	BoundRegion []string `json:"bound_region,omitempty"`
	// If set, defines a constraint on the EC2 instance to be associated with the subnet ID that matches one of the values specified by this parameter. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundSubnetId []string `json:"bound_subnet_id,omitempty"`
	// If set, defines a constraint on the EC2 instance to be associated with a VPC ID that matches one of the value specified by this parameter. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundVpcId []string `json:"bound_vpc_id,omitempty"`
	// If set, only allows a single token to be granted per instance ID. In order to perform a fresh login, the entry in the access list for the instance ID needs to be cleared using 'auth/aws-ec2/identity-accesslist/<instance_id>' endpoint. This is only applicable when auth_type is ec2.
	DisallowReauthentication *bool `json:"disallow_reauthentication,omitempty"`
	// When auth_type is iam and inferred_entity_type is set, the region to assume the inferred entity exists in.
	InferredAwsRegion *string `json:"inferred_aws_region,omitempty"`
	// When auth_type is iam, the AWS entity type to infer from the authenticated principal. The only supported value is ec2_instance, which will extract the EC2 instance ID from the authenticated role and apply the following restrictions specific to EC2 instances: bound_ami_id, bound_account_id, bound_iam_role_arn, bound_iam_instance_profile_arn, bound_vpc_id, bound_subnet_id. The configured EC2 client must be able to find the inferred instance ID in the results, and the instance must be running. If unable to determine the EC2 instance ID or unable to find the EC2 instance ID among running instances, then authentication will fail.
	InferredEntityType *string `json:"inferred_entity_type,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// If set, resolve all AWS IAM ARNs into AWS's internal unique IDs. When an IAM entity (e.g., user, role, or instance profile) is deleted, then all references to it within the role will be invalidated, which prevents a new IAM entity from being created with the same name and matching the role's IAM binds. Once set, this cannot be unset.
	ResolveAwsUniqueIds *bool `json:"resolve_aws_unique_ids,omitempty"`
	// If set, enables the role tags for this role. The value set for this field should be the 'key' of the tag on the EC2 instance. The 'value' of the tag should be generated using 'role/<role>/tag' endpoint. Defaults to an empty string, meaning that role tags are disabled. This is only allowed if auth_type is ec2.
	RoleTag *string `json:"role_tag,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewAwsRoleRequest instantiates a new AwsRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsRoleRequest() *AwsRoleRequest {
	this := AwsRoleRequest{}
	var allowInstanceMigration bool = false
	this.AllowInstanceMigration = &allowInstanceMigration
	var disallowReauthentication bool = false
	this.DisallowReauthentication = &disallowReauthentication
	var resolveAwsUniqueIds bool = true
	this.ResolveAwsUniqueIds = &resolveAwsUniqueIds
	var roleTag string = ""
	this.RoleTag = &roleTag
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewAwsRoleRequestWithDefaults instantiates a new AwsRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsRoleRequestWithDefaults() *AwsRoleRequest {
	this := AwsRoleRequest{}
	var allowInstanceMigration bool = false
	this.AllowInstanceMigration = &allowInstanceMigration
	var disallowReauthentication bool = false
	this.DisallowReauthentication = &disallowReauthentication
	var resolveAwsUniqueIds bool = true
	this.ResolveAwsUniqueIds = &resolveAwsUniqueIds
	var roleTag string = ""
	this.RoleTag = &roleTag
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetAllowInstanceMigration returns the AllowInstanceMigration field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetAllowInstanceMigration() bool {
	if o == nil || o.AllowInstanceMigration == nil {
		var ret bool
		return ret
	}
	return *o.AllowInstanceMigration
}

// GetAllowInstanceMigrationOk returns a tuple with the AllowInstanceMigration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetAllowInstanceMigrationOk() (*bool, bool) {
	if o == nil || o.AllowInstanceMigration == nil {
		return nil, false
	}
	return o.AllowInstanceMigration, true
}

// HasAllowInstanceMigration returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasAllowInstanceMigration() bool {
	if o != nil && o.AllowInstanceMigration != nil {
		return true
	}

	return false
}

// SetAllowInstanceMigration gets a reference to the given bool and assigns it to the AllowInstanceMigration field.
func (o *AwsRoleRequest) SetAllowInstanceMigration(v bool) {
	o.AllowInstanceMigration = &v
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetAuthType() string {
	if o == nil || o.AuthType == nil {
		var ret string
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetAuthTypeOk() (*string, bool) {
	if o == nil || o.AuthType == nil {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasAuthType() bool {
	if o != nil && o.AuthType != nil {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given string and assigns it to the AuthType field.
func (o *AwsRoleRequest) SetAuthType(v string) {
	o.AuthType = &v
}

// GetBoundAccountId returns the BoundAccountId field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetBoundAccountId() []string {
	if o == nil || o.BoundAccountId == nil {
		var ret []string
		return ret
	}
	return o.BoundAccountId
}

// GetBoundAccountIdOk returns a tuple with the BoundAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetBoundAccountIdOk() ([]string, bool) {
	if o == nil || o.BoundAccountId == nil {
		return nil, false
	}
	return o.BoundAccountId, true
}

// HasBoundAccountId returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasBoundAccountId() bool {
	if o != nil && o.BoundAccountId != nil {
		return true
	}

	return false
}

// SetBoundAccountId gets a reference to the given []string and assigns it to the BoundAccountId field.
func (o *AwsRoleRequest) SetBoundAccountId(v []string) {
	o.BoundAccountId = v
}

// GetBoundAmiId returns the BoundAmiId field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetBoundAmiId() []string {
	if o == nil || o.BoundAmiId == nil {
		var ret []string
		return ret
	}
	return o.BoundAmiId
}

// GetBoundAmiIdOk returns a tuple with the BoundAmiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetBoundAmiIdOk() ([]string, bool) {
	if o == nil || o.BoundAmiId == nil {
		return nil, false
	}
	return o.BoundAmiId, true
}

// HasBoundAmiId returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasBoundAmiId() bool {
	if o != nil && o.BoundAmiId != nil {
		return true
	}

	return false
}

// SetBoundAmiId gets a reference to the given []string and assigns it to the BoundAmiId field.
func (o *AwsRoleRequest) SetBoundAmiId(v []string) {
	o.BoundAmiId = v
}

// GetBoundEc2InstanceId returns the BoundEc2InstanceId field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetBoundEc2InstanceId() []string {
	if o == nil || o.BoundEc2InstanceId == nil {
		var ret []string
		return ret
	}
	return o.BoundEc2InstanceId
}

// GetBoundEc2InstanceIdOk returns a tuple with the BoundEc2InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetBoundEc2InstanceIdOk() ([]string, bool) {
	if o == nil || o.BoundEc2InstanceId == nil {
		return nil, false
	}
	return o.BoundEc2InstanceId, true
}

// HasBoundEc2InstanceId returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasBoundEc2InstanceId() bool {
	if o != nil && o.BoundEc2InstanceId != nil {
		return true
	}

	return false
}

// SetBoundEc2InstanceId gets a reference to the given []string and assigns it to the BoundEc2InstanceId field.
func (o *AwsRoleRequest) SetBoundEc2InstanceId(v []string) {
	o.BoundEc2InstanceId = v
}

// GetBoundIamInstanceProfileArn returns the BoundIamInstanceProfileArn field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetBoundIamInstanceProfileArn() []string {
	if o == nil || o.BoundIamInstanceProfileArn == nil {
		var ret []string
		return ret
	}
	return o.BoundIamInstanceProfileArn
}

// GetBoundIamInstanceProfileArnOk returns a tuple with the BoundIamInstanceProfileArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetBoundIamInstanceProfileArnOk() ([]string, bool) {
	if o == nil || o.BoundIamInstanceProfileArn == nil {
		return nil, false
	}
	return o.BoundIamInstanceProfileArn, true
}

// HasBoundIamInstanceProfileArn returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasBoundIamInstanceProfileArn() bool {
	if o != nil && o.BoundIamInstanceProfileArn != nil {
		return true
	}

	return false
}

// SetBoundIamInstanceProfileArn gets a reference to the given []string and assigns it to the BoundIamInstanceProfileArn field.
func (o *AwsRoleRequest) SetBoundIamInstanceProfileArn(v []string) {
	o.BoundIamInstanceProfileArn = v
}

// GetBoundIamPrincipalArn returns the BoundIamPrincipalArn field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetBoundIamPrincipalArn() []string {
	if o == nil || o.BoundIamPrincipalArn == nil {
		var ret []string
		return ret
	}
	return o.BoundIamPrincipalArn
}

// GetBoundIamPrincipalArnOk returns a tuple with the BoundIamPrincipalArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetBoundIamPrincipalArnOk() ([]string, bool) {
	if o == nil || o.BoundIamPrincipalArn == nil {
		return nil, false
	}
	return o.BoundIamPrincipalArn, true
}

// HasBoundIamPrincipalArn returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasBoundIamPrincipalArn() bool {
	if o != nil && o.BoundIamPrincipalArn != nil {
		return true
	}

	return false
}

// SetBoundIamPrincipalArn gets a reference to the given []string and assigns it to the BoundIamPrincipalArn field.
func (o *AwsRoleRequest) SetBoundIamPrincipalArn(v []string) {
	o.BoundIamPrincipalArn = v
}

// GetBoundIamRoleArn returns the BoundIamRoleArn field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetBoundIamRoleArn() []string {
	if o == nil || o.BoundIamRoleArn == nil {
		var ret []string
		return ret
	}
	return o.BoundIamRoleArn
}

// GetBoundIamRoleArnOk returns a tuple with the BoundIamRoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetBoundIamRoleArnOk() ([]string, bool) {
	if o == nil || o.BoundIamRoleArn == nil {
		return nil, false
	}
	return o.BoundIamRoleArn, true
}

// HasBoundIamRoleArn returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasBoundIamRoleArn() bool {
	if o != nil && o.BoundIamRoleArn != nil {
		return true
	}

	return false
}

// SetBoundIamRoleArn gets a reference to the given []string and assigns it to the BoundIamRoleArn field.
func (o *AwsRoleRequest) SetBoundIamRoleArn(v []string) {
	o.BoundIamRoleArn = v
}

// GetBoundRegion returns the BoundRegion field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetBoundRegion() []string {
	if o == nil || o.BoundRegion == nil {
		var ret []string
		return ret
	}
	return o.BoundRegion
}

// GetBoundRegionOk returns a tuple with the BoundRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetBoundRegionOk() ([]string, bool) {
	if o == nil || o.BoundRegion == nil {
		return nil, false
	}
	return o.BoundRegion, true
}

// HasBoundRegion returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasBoundRegion() bool {
	if o != nil && o.BoundRegion != nil {
		return true
	}

	return false
}

// SetBoundRegion gets a reference to the given []string and assigns it to the BoundRegion field.
func (o *AwsRoleRequest) SetBoundRegion(v []string) {
	o.BoundRegion = v
}

// GetBoundSubnetId returns the BoundSubnetId field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetBoundSubnetId() []string {
	if o == nil || o.BoundSubnetId == nil {
		var ret []string
		return ret
	}
	return o.BoundSubnetId
}

// GetBoundSubnetIdOk returns a tuple with the BoundSubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetBoundSubnetIdOk() ([]string, bool) {
	if o == nil || o.BoundSubnetId == nil {
		return nil, false
	}
	return o.BoundSubnetId, true
}

// HasBoundSubnetId returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasBoundSubnetId() bool {
	if o != nil && o.BoundSubnetId != nil {
		return true
	}

	return false
}

// SetBoundSubnetId gets a reference to the given []string and assigns it to the BoundSubnetId field.
func (o *AwsRoleRequest) SetBoundSubnetId(v []string) {
	o.BoundSubnetId = v
}

// GetBoundVpcId returns the BoundVpcId field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetBoundVpcId() []string {
	if o == nil || o.BoundVpcId == nil {
		var ret []string
		return ret
	}
	return o.BoundVpcId
}

// GetBoundVpcIdOk returns a tuple with the BoundVpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetBoundVpcIdOk() ([]string, bool) {
	if o == nil || o.BoundVpcId == nil {
		return nil, false
	}
	return o.BoundVpcId, true
}

// HasBoundVpcId returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasBoundVpcId() bool {
	if o != nil && o.BoundVpcId != nil {
		return true
	}

	return false
}

// SetBoundVpcId gets a reference to the given []string and assigns it to the BoundVpcId field.
func (o *AwsRoleRequest) SetBoundVpcId(v []string) {
	o.BoundVpcId = v
}

// GetDisallowReauthentication returns the DisallowReauthentication field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetDisallowReauthentication() bool {
	if o == nil || o.DisallowReauthentication == nil {
		var ret bool
		return ret
	}
	return *o.DisallowReauthentication
}

// GetDisallowReauthenticationOk returns a tuple with the DisallowReauthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetDisallowReauthenticationOk() (*bool, bool) {
	if o == nil || o.DisallowReauthentication == nil {
		return nil, false
	}
	return o.DisallowReauthentication, true
}

// HasDisallowReauthentication returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasDisallowReauthentication() bool {
	if o != nil && o.DisallowReauthentication != nil {
		return true
	}

	return false
}

// SetDisallowReauthentication gets a reference to the given bool and assigns it to the DisallowReauthentication field.
func (o *AwsRoleRequest) SetDisallowReauthentication(v bool) {
	o.DisallowReauthentication = &v
}

// GetInferredAwsRegion returns the InferredAwsRegion field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetInferredAwsRegion() string {
	if o == nil || o.InferredAwsRegion == nil {
		var ret string
		return ret
	}
	return *o.InferredAwsRegion
}

// GetInferredAwsRegionOk returns a tuple with the InferredAwsRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetInferredAwsRegionOk() (*string, bool) {
	if o == nil || o.InferredAwsRegion == nil {
		return nil, false
	}
	return o.InferredAwsRegion, true
}

// HasInferredAwsRegion returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasInferredAwsRegion() bool {
	if o != nil && o.InferredAwsRegion != nil {
		return true
	}

	return false
}

// SetInferredAwsRegion gets a reference to the given string and assigns it to the InferredAwsRegion field.
func (o *AwsRoleRequest) SetInferredAwsRegion(v string) {
	o.InferredAwsRegion = &v
}

// GetInferredEntityType returns the InferredEntityType field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetInferredEntityType() string {
	if o == nil || o.InferredEntityType == nil {
		var ret string
		return ret
	}
	return *o.InferredEntityType
}

// GetInferredEntityTypeOk returns a tuple with the InferredEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetInferredEntityTypeOk() (*string, bool) {
	if o == nil || o.InferredEntityType == nil {
		return nil, false
	}
	return o.InferredEntityType, true
}

// HasInferredEntityType returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasInferredEntityType() bool {
	if o != nil && o.InferredEntityType != nil {
		return true
	}

	return false
}

// SetInferredEntityType gets a reference to the given string and assigns it to the InferredEntityType field.
func (o *AwsRoleRequest) SetInferredEntityType(v string) {
	o.InferredEntityType = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *AwsRoleRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AwsRoleRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *AwsRoleRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *AwsRoleRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AwsRoleRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *AwsRoleRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *AwsRoleRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AwsRoleRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *AwsRoleRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetResolveAwsUniqueIds returns the ResolveAwsUniqueIds field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetResolveAwsUniqueIds() bool {
	if o == nil || o.ResolveAwsUniqueIds == nil {
		var ret bool
		return ret
	}
	return *o.ResolveAwsUniqueIds
}

// GetResolveAwsUniqueIdsOk returns a tuple with the ResolveAwsUniqueIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetResolveAwsUniqueIdsOk() (*bool, bool) {
	if o == nil || o.ResolveAwsUniqueIds == nil {
		return nil, false
	}
	return o.ResolveAwsUniqueIds, true
}

// HasResolveAwsUniqueIds returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasResolveAwsUniqueIds() bool {
	if o != nil && o.ResolveAwsUniqueIds != nil {
		return true
	}

	return false
}

// SetResolveAwsUniqueIds gets a reference to the given bool and assigns it to the ResolveAwsUniqueIds field.
func (o *AwsRoleRequest) SetResolveAwsUniqueIds(v bool) {
	o.ResolveAwsUniqueIds = &v
}

// GetRoleTag returns the RoleTag field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetRoleTag() string {
	if o == nil || o.RoleTag == nil {
		var ret string
		return ret
	}
	return *o.RoleTag
}

// GetRoleTagOk returns a tuple with the RoleTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetRoleTagOk() (*string, bool) {
	if o == nil || o.RoleTag == nil {
		return nil, false
	}
	return o.RoleTag, true
}

// HasRoleTag returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasRoleTag() bool {
	if o != nil && o.RoleTag != nil {
		return true
	}

	return false
}

// SetRoleTag gets a reference to the given string and assigns it to the RoleTag field.
func (o *AwsRoleRequest) SetRoleTag(v string) {
	o.RoleTag = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *AwsRoleRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *AwsRoleRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *AwsRoleRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *AwsRoleRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *AwsRoleRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *AwsRoleRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *AwsRoleRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *AwsRoleRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *AwsRoleRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *AwsRoleRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *AwsRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AwsRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AwsRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *AwsRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o AwsRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowInstanceMigration != nil {
		toSerialize["allow_instance_migration"] = o.AllowInstanceMigration
	}
	if o.AuthType != nil {
		toSerialize["auth_type"] = o.AuthType
	}
	if o.BoundAccountId != nil {
		toSerialize["bound_account_id"] = o.BoundAccountId
	}
	if o.BoundAmiId != nil {
		toSerialize["bound_ami_id"] = o.BoundAmiId
	}
	if o.BoundEc2InstanceId != nil {
		toSerialize["bound_ec2_instance_id"] = o.BoundEc2InstanceId
	}
	if o.BoundIamInstanceProfileArn != nil {
		toSerialize["bound_iam_instance_profile_arn"] = o.BoundIamInstanceProfileArn
	}
	if o.BoundIamPrincipalArn != nil {
		toSerialize["bound_iam_principal_arn"] = o.BoundIamPrincipalArn
	}
	if o.BoundIamRoleArn != nil {
		toSerialize["bound_iam_role_arn"] = o.BoundIamRoleArn
	}
	if o.BoundRegion != nil {
		toSerialize["bound_region"] = o.BoundRegion
	}
	if o.BoundSubnetId != nil {
		toSerialize["bound_subnet_id"] = o.BoundSubnetId
	}
	if o.BoundVpcId != nil {
		toSerialize["bound_vpc_id"] = o.BoundVpcId
	}
	if o.DisallowReauthentication != nil {
		toSerialize["disallow_reauthentication"] = o.DisallowReauthentication
	}
	if o.InferredAwsRegion != nil {
		toSerialize["inferred_aws_region"] = o.InferredAwsRegion
	}
	if o.InferredEntityType != nil {
		toSerialize["inferred_entity_type"] = o.InferredEntityType
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.ResolveAwsUniqueIds != nil {
		toSerialize["resolve_aws_unique_ids"] = o.ResolveAwsUniqueIds
	}
	if o.RoleTag != nil {
		toSerialize["role_tag"] = o.RoleTag
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableAwsRoleRequest struct {
	value *AwsRoleRequest
	isSet bool
}

func (v NullableAwsRoleRequest) Get() *AwsRoleRequest {
	return v.value
}

func (v *NullableAwsRoleRequest) Set(val *AwsRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsRoleRequest(val *AwsRoleRequest) *NullableAwsRoleRequest {
	return &NullableAwsRoleRequest{value: val, isSet: true}
}

func (v NullableAwsRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsRoleTagRequest struct for AwsRoleTagRequest
type AwsRoleTagRequest struct {
	// If set, allows migration of the underlying instance where the client resides. This keys off of pendingTime in the metadata document, so essentially, this disables the client nonce check whenever the instance is migrated to a new host and pendingTime is newer than the previously-remembered time. Use with caution.
	AllowInstanceMigration *bool `json:"allow_instance_migration,omitempty"`
	// If set, only allows a single token to be granted per instance ID. In order to perform a fresh login, the entry in access list for the instance ID needs to be cleared using the 'auth/aws-ec2/identity-accesslist/<instance_id>' endpoint.
	DisallowReauthentication *bool `json:"disallow_reauthentication,omitempty"`
	// Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID.
	InstanceId *string `json:"instance_id,omitempty"`
	// If set, specifies the maximum allowed token lifetime.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Policies to be associated with the tag. If set, must be a subset of the role's policies. If set, but set to an empty value, only the 'default' policy will be given to issued tokens.
	Policies []string `json:"policies,omitempty"`
}

// NewAwsRoleTagRequest instantiates a new AwsRoleTagRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsRoleTagRequest() *AwsRoleTagRequest {
	this := AwsRoleTagRequest{}
	var allowInstanceMigration bool = false
	this.AllowInstanceMigration = &allowInstanceMigration
	var disallowReauthentication bool = false
	this.DisallowReauthentication = &disallowReauthentication
	var maxTtl int32 = 0
	this.MaxTtl = &maxTtl
	return &this
}

// NewAwsRoleTagRequestWithDefaults instantiates a new AwsRoleTagRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsRoleTagRequestWithDefaults() *AwsRoleTagRequest {
	this := AwsRoleTagRequest{}
	var allowInstanceMigration bool = false
	this.AllowInstanceMigration = &allowInstanceMigration
	var disallowReauthentication bool = false
	this.DisallowReauthentication = &disallowReauthentication
	var maxTtl int32 = 0
	this.MaxTtl = &maxTtl
	return &this
}

// GetAllowInstanceMigration returns the AllowInstanceMigration field value if set, zero value otherwise.
func (o *AwsRoleTagRequest) GetAllowInstanceMigration() bool {
	if o == nil || o.AllowInstanceMigration == nil {
		var ret bool
		return ret
	}
	return *o.AllowInstanceMigration
}

// GetAllowInstanceMigrationOk returns a tuple with the AllowInstanceMigration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleTagRequest) GetAllowInstanceMigrationOk() (*bool, bool) {
	if o == nil || o.AllowInstanceMigration == nil {
		return nil, false
	}
	return o.AllowInstanceMigration, true
}

// HasAllowInstanceMigration returns a boolean if a field has been set.
func (o *AwsRoleTagRequest) HasAllowInstanceMigration() bool {
	if o != nil && o.AllowInstanceMigration != nil {
		return true
	}

	return false
}

// SetAllowInstanceMigration gets a reference to the given bool and assigns it to the AllowInstanceMigration field.
func (o *AwsRoleTagRequest) SetAllowInstanceMigration(v bool) {
	o.AllowInstanceMigration = &v
}

// GetDisallowReauthentication returns the DisallowReauthentication field value if set, zero value otherwise.
func (o *AwsRoleTagRequest) GetDisallowReauthentication() bool {
	if o == nil || o.DisallowReauthentication == nil {
		var ret bool
		return ret
	}
	return *o.DisallowReauthentication
}

// GetDisallowReauthenticationOk returns a tuple with the DisallowReauthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleTagRequest) GetDisallowReauthenticationOk() (*bool, bool) {
	if o == nil || o.DisallowReauthentication == nil {
		return nil, false
	}
	return o.DisallowReauthentication, true
}

// HasDisallowReauthentication returns a boolean if a field has been set.
func (o *AwsRoleTagRequest) HasDisallowReauthentication() bool {
	if o != nil && o.DisallowReauthentication != nil {
		return true
	}

	return false
}

// SetDisallowReauthentication gets a reference to the given bool and assigns it to the DisallowReauthentication field.
func (o *AwsRoleTagRequest) SetDisallowReauthentication(v bool) {
	o.DisallowReauthentication = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *AwsRoleTagRequest) GetInstanceId() string {
	if o == nil || o.InstanceId == nil {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleTagRequest) GetInstanceIdOk() (*string, bool) {
	if o == nil || o.InstanceId == nil {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *AwsRoleTagRequest) HasInstanceId() bool {
	if o != nil && o.InstanceId != nil {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *AwsRoleTagRequest) SetInstanceId(v string) {
	o.InstanceId = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *AwsRoleTagRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleTagRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *AwsRoleTagRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *AwsRoleTagRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *AwsRoleTagRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleTagRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *AwsRoleTagRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *AwsRoleTagRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o AwsRoleTagRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowInstanceMigration != nil {
		toSerialize["allow_instance_migration"] = o.AllowInstanceMigration
	}
	if o.DisallowReauthentication != nil {
		toSerialize["disallow_reauthentication"] = o.DisallowReauthentication
	}
	if o.InstanceId != nil {
		toSerialize["instance_id"] = o.InstanceId
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableAwsRoleTagRequest struct {
	value *AwsRoleTagRequest
	isSet bool
}

func (v NullableAwsRoleTagRequest) Get() *AwsRoleTagRequest {
	return v.value
}

func (v *NullableAwsRoleTagRequest) Set(val *AwsRoleTagRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsRoleTagRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsRoleTagRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsRoleTagRequest(val *AwsRoleTagRequest) *NullableAwsRoleTagRequest {
	return &NullableAwsRoleTagRequest{value: val, isSet: true}
}

func (v NullableAwsRoleTagRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsRoleTagRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsRolesRequest struct for AwsRolesRequest
type AwsRolesRequest struct {
	// Use role_arns or policy_arns instead.
	// Deprecated
	Arn *string `json:"arn,omitempty"`
	// Type of credential to retrieve. Must be one of assumed_role, iam_user, or federation_token
	CredentialType *string `json:"credential_type,omitempty"`
	// Default TTL for assumed_role and federation_token credential types when no TTL is explicitly requested with the credentials
	DefaultStsTtl *int32 `json:"default_sts_ttl,omitempty"`
	// Names of IAM groups that generated IAM users will be added to. For a credential type of assumed_role or federation_token, the policies sent to the corresponding AWS call (sts:AssumeRole or sts:GetFederation) will be the policies from each group in iam_groups combined with the policy_document and policy_arns parameters.
	IamGroups []string `json:"iam_groups,omitempty"`
	// IAM tags to be set for any users created by this role. These must be presented as Key-Value pairs. This can be represented as a map or a list of equal sign delimited key pairs.
	IamTags map[string]interface{} `json:"iam_tags,omitempty"`
	// Max allowed TTL for assumed_role and federation_token credential types
	MaxStsTtl *int32 `json:"max_sts_ttl,omitempty"`
	// ARN of an IAM policy to attach as a permissions boundary on IAM user credentials; only valid when credential_type isiam_user
	PermissionsBoundaryArn *string `json:"permissions_boundary_arn,omitempty"`
	// Use policy_document instead.
	// Deprecated
	Policy *string `json:"policy,omitempty"`
	// ARNs of AWS policies. Behavior varies by credential_type. When credential_type is iam_user, then it will attach the specified policies to the generated IAM user. When credential_type is assumed_role or federation_token, the policies will be passed as the PolicyArns parameter, acting as a filter on permissions available.
	PolicyArns []string `json:"policy_arns,omitempty"`
	// JSON-encoded IAM policy document. Behavior varies by credential_type. When credential_type is iam_user, then it will attach the contents of the policy_document to the IAM user generated. When credential_type is assumed_role or federation_token, this will be passed in as the Policy parameter to the AssumeRole or GetFederationToken API call, acting as a filter on permissions available.
	PolicyDocument *string `json:"policy_document,omitempty"`
	// ARNs of AWS roles allowed to be assumed. Only valid when credential_type is assumed_role
	RoleArns []string `json:"role_arns,omitempty"`
	// Path for IAM User. Only valid when credential_type is iam_user
	UserPath *string `json:"user_path,omitempty"`
}

// NewAwsRolesRequest instantiates a new AwsRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsRolesRequest() *AwsRolesRequest {
	this := AwsRolesRequest{}
	var userPath string = "/"
	this.UserPath = &userPath
	return &this
}

// NewAwsRolesRequestWithDefaults instantiates a new AwsRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsRolesRequestWithDefaults() *AwsRolesRequest {
	this := AwsRolesRequest{}
	var userPath string = "/"
	this.UserPath = &userPath
	return &this
}

// GetArn returns the Arn field value if set, zero value otherwise.
// Deprecated
func (o *AwsRolesRequest) GetArn() string {
	if o == nil || o.Arn == nil {
		var ret string
		return ret
	}
	return *o.Arn
}

// GetArnOk returns a tuple with the Arn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AwsRolesRequest) GetArnOk() (*string, bool) {
	if o == nil || o.Arn == nil {
		return nil, false
	}
	return o.Arn, true
}

// HasArn returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasArn() bool {
	if o != nil && o.Arn != nil {
		return true
	}

	return false
}

// SetArn gets a reference to the given string and assigns it to the Arn field.
// Deprecated
func (o *AwsRolesRequest) SetArn(v string) {
	o.Arn = &v
}

// GetCredentialType returns the CredentialType field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetCredentialType() string {
	if o == nil || o.CredentialType == nil {
		var ret string
		return ret
	}
	return *o.CredentialType
}

// GetCredentialTypeOk returns a tuple with the CredentialType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetCredentialTypeOk() (*string, bool) {
	if o == nil || o.CredentialType == nil {
		return nil, false
	}
	return o.CredentialType, true
}

// HasCredentialType returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasCredentialType() bool {
	if o != nil && o.CredentialType != nil {
		return true
	}

	return false
}

// SetCredentialType gets a reference to the given string and assigns it to the CredentialType field.
func (o *AwsRolesRequest) SetCredentialType(v string) {
	o.CredentialType = &v
}

// GetDefaultStsTtl returns the DefaultStsTtl field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetDefaultStsTtl() int32 {
	if o == nil || o.DefaultStsTtl == nil {
		var ret int32
		return ret
	}
	return *o.DefaultStsTtl
}

// GetDefaultStsTtlOk returns a tuple with the DefaultStsTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetDefaultStsTtlOk() (*int32, bool) {
	if o == nil || o.DefaultStsTtl == nil {
		return nil, false
	}
	return o.DefaultStsTtl, true
}

// HasDefaultStsTtl returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasDefaultStsTtl() bool {
	if o != nil && o.DefaultStsTtl != nil {
		return true
	}

	return false
}

// SetDefaultStsTtl gets a reference to the given int32 and assigns it to the DefaultStsTtl field.
func (o *AwsRolesRequest) SetDefaultStsTtl(v int32) {
	o.DefaultStsTtl = &v
}

// GetIamGroups returns the IamGroups field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetIamGroups() []string {
	if o == nil || o.IamGroups == nil {
		var ret []string
		return ret
	}
	return o.IamGroups
}

// GetIamGroupsOk returns a tuple with the IamGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetIamGroupsOk() ([]string, bool) {
	if o == nil || o.IamGroups == nil {
		return nil, false
	}
	return o.IamGroups, true
}

// HasIamGroups returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasIamGroups() bool {
	if o != nil && o.IamGroups != nil {
		return true
	}

	return false
}

// SetIamGroups gets a reference to the given []string and assigns it to the IamGroups field.
func (o *AwsRolesRequest) SetIamGroups(v []string) {
	o.IamGroups = v
}

// GetIamTags returns the IamTags field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetIamTags() map[string]interface{} {
	if o == nil || o.IamTags == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.IamTags
}

// GetIamTagsOk returns a tuple with the IamTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetIamTagsOk() (map[string]interface{}, bool) {
	if o == nil || o.IamTags == nil {
		return nil, false
	}
	return o.IamTags, true
}

// HasIamTags returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasIamTags() bool {
	if o != nil && o.IamTags != nil {
		return true
	}

	return false
}

// SetIamTags gets a reference to the given map[string]interface{} and assigns it to the IamTags field.
func (o *AwsRolesRequest) SetIamTags(v map[string]interface{}) {
	o.IamTags = v
}

// GetMaxStsTtl returns the MaxStsTtl field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetMaxStsTtl() int32 {
	if o == nil || o.MaxStsTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxStsTtl
}

// GetMaxStsTtlOk returns a tuple with the MaxStsTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetMaxStsTtlOk() (*int32, bool) {
	if o == nil || o.MaxStsTtl == nil {
		return nil, false
	}
	return o.MaxStsTtl, true
}

// HasMaxStsTtl returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasMaxStsTtl() bool {
	if o != nil && o.MaxStsTtl != nil {
		return true
	}

	return false
}

// SetMaxStsTtl gets a reference to the given int32 and assigns it to the MaxStsTtl field.
func (o *AwsRolesRequest) SetMaxStsTtl(v int32) {
	o.MaxStsTtl = &v
}

// GetPermissionsBoundaryArn returns the PermissionsBoundaryArn field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetPermissionsBoundaryArn() string {
	if o == nil || o.PermissionsBoundaryArn == nil {
		var ret string
		return ret
	}
	return *o.PermissionsBoundaryArn
}

// GetPermissionsBoundaryArnOk returns a tuple with the PermissionsBoundaryArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetPermissionsBoundaryArnOk() (*string, bool) {
	if o == nil || o.PermissionsBoundaryArn == nil {
		return nil, false
	}
	return o.PermissionsBoundaryArn, true
}

// HasPermissionsBoundaryArn returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasPermissionsBoundaryArn() bool {
	if o != nil && o.PermissionsBoundaryArn != nil {
		return true
	}

	return false
}

// SetPermissionsBoundaryArn gets a reference to the given string and assigns it to the PermissionsBoundaryArn field.
func (o *AwsRolesRequest) SetPermissionsBoundaryArn(v string) {
	o.PermissionsBoundaryArn = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
// Deprecated
func (o *AwsRolesRequest) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AwsRolesRequest) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
// Deprecated
func (o *AwsRolesRequest) SetPolicy(v string) {
	o.Policy = &v
}

// GetPolicyArns returns the PolicyArns field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetPolicyArns() []string {
	if o == nil || o.PolicyArns == nil {
		var ret []string
		return ret
	}
	return o.PolicyArns
}

// GetPolicyArnsOk returns a tuple with the PolicyArns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetPolicyArnsOk() ([]string, bool) {
	if o == nil || o.PolicyArns == nil {
		return nil, false
	}
	return o.PolicyArns, true
}

// HasPolicyArns returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasPolicyArns() bool {
	if o != nil && o.PolicyArns != nil {
		return true
	}

	return false
}

// SetPolicyArns gets a reference to the given []string and assigns it to the PolicyArns field.
func (o *AwsRolesRequest) SetPolicyArns(v []string) {
	o.PolicyArns = v
}

// GetPolicyDocument returns the PolicyDocument field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetPolicyDocument() string {
	if o == nil || o.PolicyDocument == nil {
		var ret string
		return ret
	}
	return *o.PolicyDocument
}

// GetPolicyDocumentOk returns a tuple with the PolicyDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetPolicyDocumentOk() (*string, bool) {
	if o == nil || o.PolicyDocument == nil {
		return nil, false
	}
	return o.PolicyDocument, true
}

// HasPolicyDocument returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasPolicyDocument() bool {
	if o != nil && o.PolicyDocument != nil {
		return true
	}

	return false
}

// SetPolicyDocument gets a reference to the given string and assigns it to the PolicyDocument field.
func (o *AwsRolesRequest) SetPolicyDocument(v string) {
	o.PolicyDocument = &v
}

// GetRoleArns returns the RoleArns field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetRoleArns() []string {
	if o == nil || o.RoleArns == nil {
		var ret []string
		return ret
	}
	return o.RoleArns
}

// GetRoleArnsOk returns a tuple with the RoleArns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetRoleArnsOk() ([]string, bool) {
	if o == nil || o.RoleArns == nil {
		return nil, false
	}
	return o.RoleArns, true
}

// HasRoleArns returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasRoleArns() bool {
	if o != nil && o.RoleArns != nil {
		return true
	}

	return false
}

// SetRoleArns gets a reference to the given []string and assigns it to the RoleArns field.
func (o *AwsRolesRequest) SetRoleArns(v []string) {
	o.RoleArns = v
}

// GetUserPath returns the UserPath field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetUserPath() string {
	if o == nil || o.UserPath == nil {
		var ret string
		return ret
	}
	return *o.UserPath
}

// GetUserPathOk returns a tuple with the UserPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetUserPathOk() (*string, bool) {
	if o == nil || o.UserPath == nil {
		return nil, false
	}
	return o.UserPath, true
}

// HasUserPath returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasUserPath() bool {
	if o != nil && o.UserPath != nil {
		return true
	}

	return false
}

// SetUserPath gets a reference to the given string and assigns it to the UserPath field.
func (o *AwsRolesRequest) SetUserPath(v string) {
	o.UserPath = &v
}

func (o AwsRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Arn != nil {
		toSerialize["arn"] = o.Arn
	}
	if o.CredentialType != nil {
		toSerialize["credential_type"] = o.CredentialType
	}
	if o.DefaultStsTtl != nil {
		toSerialize["default_sts_ttl"] = o.DefaultStsTtl
	}
	if o.IamGroups != nil {
		toSerialize["iam_groups"] = o.IamGroups
	}
	if o.IamTags != nil {
		toSerialize["iam_tags"] = o.IamTags
	}
	if o.MaxStsTtl != nil {
		toSerialize["max_sts_ttl"] = o.MaxStsTtl
	}
	if o.PermissionsBoundaryArn != nil {
		toSerialize["permissions_boundary_arn"] = o.PermissionsBoundaryArn
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	if o.PolicyArns != nil {
		toSerialize["policy_arns"] = o.PolicyArns
	}
	if o.PolicyDocument != nil {
		toSerialize["policy_document"] = o.PolicyDocument
	}
	if o.RoleArns != nil {
		toSerialize["role_arns"] = o.RoleArns
	}
	if o.UserPath != nil {
		toSerialize["user_path"] = o.UserPath
	}
	return json.Marshal(toSerialize)
}

type NullableAwsRolesRequest struct {
	value *AwsRolesRequest
	isSet bool
}

func (v NullableAwsRolesRequest) Get() *AwsRolesRequest {
	return v.value
}

func (v *NullableAwsRolesRequest) Set(val *AwsRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsRolesRequest(val *AwsRolesRequest) *NullableAwsRolesRequest {
	return &NullableAwsRolesRequest{value: val, isSet: true}
}

func (v NullableAwsRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsStsRequest struct for AwsStsRequest
type AwsStsRequest struct {
	// ARN of role to assume when credential_type is assumed_role
	RoleArn *string `json:"role_arn,omitempty"`
	// Session name to use when assuming role. Max chars: 64
	RoleSessionName *string `json:"role_session_name,omitempty"`
	// Lifetime of the returned credentials in seconds
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewAwsStsRequest instantiates a new AwsStsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsStsRequest() *AwsStsRequest {
	this := AwsStsRequest{}
	var ttl int32 = 3600
	this.Ttl = &ttl
	return &this
}

// NewAwsStsRequestWithDefaults instantiates a new AwsStsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsStsRequestWithDefaults() *AwsStsRequest {
	this := AwsStsRequest{}
	var ttl int32 = 3600
	this.Ttl = &ttl
	return &this
}

// GetRoleArn returns the RoleArn field value if set, zero value otherwise.
func (o *AwsStsRequest) GetRoleArn() string {
	if o == nil || o.RoleArn == nil {
		var ret string
		return ret
	}
	return *o.RoleArn
}

// GetRoleArnOk returns a tuple with the RoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsStsRequest) GetRoleArnOk() (*string, bool) {
	if o == nil || o.RoleArn == nil {
		return nil, false
	}
	return o.RoleArn, true
}

// HasRoleArn returns a boolean if a field has been set.
func (o *AwsStsRequest) HasRoleArn() bool {
	if o != nil && o.RoleArn != nil {
		return true
	}

	return false
}

// SetRoleArn gets a reference to the given string and assigns it to the RoleArn field.
func (o *AwsStsRequest) SetRoleArn(v string) {
	o.RoleArn = &v
}

// GetRoleSessionName returns the RoleSessionName field value if set, zero value otherwise.
func (o *AwsStsRequest) GetRoleSessionName() string {
	if o == nil || o.RoleSessionName == nil {
		var ret string
		return ret
	}
	return *o.RoleSessionName
}

// GetRoleSessionNameOk returns a tuple with the RoleSessionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsStsRequest) GetRoleSessionNameOk() (*string, bool) {
	if o == nil || o.RoleSessionName == nil {
		return nil, false
	}
	return o.RoleSessionName, true
}

// HasRoleSessionName returns a boolean if a field has been set.
func (o *AwsStsRequest) HasRoleSessionName() bool {
	if o != nil && o.RoleSessionName != nil {
		return true
	}

	return false
}

// SetRoleSessionName gets a reference to the given string and assigns it to the RoleSessionName field.
func (o *AwsStsRequest) SetRoleSessionName(v string) {
	o.RoleSessionName = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *AwsStsRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsStsRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AwsStsRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *AwsStsRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o AwsStsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RoleArn != nil {
		toSerialize["role_arn"] = o.RoleArn
	}
	if o.RoleSessionName != nil {
		toSerialize["role_session_name"] = o.RoleSessionName
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableAwsStsRequest struct {
	value *AwsStsRequest
	isSet bool
}

func (v NullableAwsStsRequest) Get() *AwsStsRequest {
	return v.value
}

func (v *NullableAwsStsRequest) Set(val *AwsStsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsStsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsStsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsStsRequest(val *AwsStsRequest) *NullableAwsStsRequest {
	return &NullableAwsStsRequest{value: val, isSet: true}
}

func (v NullableAwsStsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsStsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsTidyIdentityAccesslistRequest struct for AwsTidyIdentityAccesslistRequest
type AwsTidyIdentityAccesslistRequest struct {
	// The amount of extra time that must have passed beyond the identity's expiration, before it is removed from the backend storage.
	SafetyBuffer *int32 `json:"safety_buffer,omitempty"`
}

// NewAwsTidyIdentityAccesslistRequest instantiates a new AwsTidyIdentityAccesslistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsTidyIdentityAccesslistRequest() *AwsTidyIdentityAccesslistRequest {
	this := AwsTidyIdentityAccesslistRequest{}
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// NewAwsTidyIdentityAccesslistRequestWithDefaults instantiates a new AwsTidyIdentityAccesslistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsTidyIdentityAccesslistRequestWithDefaults() *AwsTidyIdentityAccesslistRequest {
	this := AwsTidyIdentityAccesslistRequest{}
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// GetSafetyBuffer returns the SafetyBuffer field value if set, zero value otherwise.
func (o *AwsTidyIdentityAccesslistRequest) GetSafetyBuffer() int32 {
	if o == nil || o.SafetyBuffer == nil {
		var ret int32
		return ret
	}
	return *o.SafetyBuffer
}

// GetSafetyBufferOk returns a tuple with the SafetyBuffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsTidyIdentityAccesslistRequest) GetSafetyBufferOk() (*int32, bool) {
	if o == nil || o.SafetyBuffer == nil {
		return nil, false
	}
	return o.SafetyBuffer, true
}

// HasSafetyBuffer returns a boolean if a field has been set.
func (o *AwsTidyIdentityAccesslistRequest) HasSafetyBuffer() bool {
	if o != nil && o.SafetyBuffer != nil {
		return true
	}

	return false
}

// SetSafetyBuffer gets a reference to the given int32 and assigns it to the SafetyBuffer field.
func (o *AwsTidyIdentityAccesslistRequest) SetSafetyBuffer(v int32) {
	o.SafetyBuffer = &v
}

func (o AwsTidyIdentityAccesslistRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SafetyBuffer != nil {
		toSerialize["safety_buffer"] = o.SafetyBuffer
	}
	return json.Marshal(toSerialize)
}

type NullableAwsTidyIdentityAccesslistRequest struct {
	value *AwsTidyIdentityAccesslistRequest
	isSet bool
}

func (v NullableAwsTidyIdentityAccesslistRequest) Get() *AwsTidyIdentityAccesslistRequest {
	return v.value
}

func (v *NullableAwsTidyIdentityAccesslistRequest) Set(val *AwsTidyIdentityAccesslistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsTidyIdentityAccesslistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsTidyIdentityAccesslistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsTidyIdentityAccesslistRequest(val *AwsTidyIdentityAccesslistRequest) *NullableAwsTidyIdentityAccesslistRequest {
	return &NullableAwsTidyIdentityAccesslistRequest{value: val, isSet: true}
}

func (v NullableAwsTidyIdentityAccesslistRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsTidyIdentityAccesslistRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsTidyIdentityWhitelistRequest struct for AwsTidyIdentityWhitelistRequest
type AwsTidyIdentityWhitelistRequest struct {
	// The amount of extra time that must have passed beyond the identity's expiration, before it is removed from the backend storage.
	SafetyBuffer *int32 `json:"safety_buffer,omitempty"`
}

// NewAwsTidyIdentityWhitelistRequest instantiates a new AwsTidyIdentityWhitelistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsTidyIdentityWhitelistRequest() *AwsTidyIdentityWhitelistRequest {
	this := AwsTidyIdentityWhitelistRequest{}
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// NewAwsTidyIdentityWhitelistRequestWithDefaults instantiates a new AwsTidyIdentityWhitelistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsTidyIdentityWhitelistRequestWithDefaults() *AwsTidyIdentityWhitelistRequest {
	this := AwsTidyIdentityWhitelistRequest{}
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// GetSafetyBuffer returns the SafetyBuffer field value if set, zero value otherwise.
func (o *AwsTidyIdentityWhitelistRequest) GetSafetyBuffer() int32 {
	if o == nil || o.SafetyBuffer == nil {
		var ret int32
		return ret
	}
	return *o.SafetyBuffer
}

// GetSafetyBufferOk returns a tuple with the SafetyBuffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsTidyIdentityWhitelistRequest) GetSafetyBufferOk() (*int32, bool) {
	if o == nil || o.SafetyBuffer == nil {
		return nil, false
	}
	return o.SafetyBuffer, true
}

// HasSafetyBuffer returns a boolean if a field has been set.
func (o *AwsTidyIdentityWhitelistRequest) HasSafetyBuffer() bool {
	if o != nil && o.SafetyBuffer != nil {
		return true
	}

	return false
}

// SetSafetyBuffer gets a reference to the given int32 and assigns it to the SafetyBuffer field.
func (o *AwsTidyIdentityWhitelistRequest) SetSafetyBuffer(v int32) {
	o.SafetyBuffer = &v
}

func (o AwsTidyIdentityWhitelistRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SafetyBuffer != nil {
		toSerialize["safety_buffer"] = o.SafetyBuffer
	}
	return json.Marshal(toSerialize)
}

type NullableAwsTidyIdentityWhitelistRequest struct {
	value *AwsTidyIdentityWhitelistRequest
	isSet bool
}

func (v NullableAwsTidyIdentityWhitelistRequest) Get() *AwsTidyIdentityWhitelistRequest {
	return v.value
}

func (v *NullableAwsTidyIdentityWhitelistRequest) Set(val *AwsTidyIdentityWhitelistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsTidyIdentityWhitelistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsTidyIdentityWhitelistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsTidyIdentityWhitelistRequest(val *AwsTidyIdentityWhitelistRequest) *NullableAwsTidyIdentityWhitelistRequest {
	return &NullableAwsTidyIdentityWhitelistRequest{value: val, isSet: true}
}

func (v NullableAwsTidyIdentityWhitelistRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsTidyIdentityWhitelistRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsTidyRoletagBlacklistRequest struct for AwsTidyRoletagBlacklistRequest
type AwsTidyRoletagBlacklistRequest struct {
	// The amount of extra time that must have passed beyond the roletag expiration, before it is removed from the backend storage.
	SafetyBuffer *int32 `json:"safety_buffer,omitempty"`
}

// NewAwsTidyRoletagBlacklistRequest instantiates a new AwsTidyRoletagBlacklistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsTidyRoletagBlacklistRequest() *AwsTidyRoletagBlacklistRequest {
	this := AwsTidyRoletagBlacklistRequest{}
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// NewAwsTidyRoletagBlacklistRequestWithDefaults instantiates a new AwsTidyRoletagBlacklistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsTidyRoletagBlacklistRequestWithDefaults() *AwsTidyRoletagBlacklistRequest {
	this := AwsTidyRoletagBlacklistRequest{}
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// GetSafetyBuffer returns the SafetyBuffer field value if set, zero value otherwise.
func (o *AwsTidyRoletagBlacklistRequest) GetSafetyBuffer() int32 {
	if o == nil || o.SafetyBuffer == nil {
		var ret int32
		return ret
	}
	return *o.SafetyBuffer
}

// GetSafetyBufferOk returns a tuple with the SafetyBuffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsTidyRoletagBlacklistRequest) GetSafetyBufferOk() (*int32, bool) {
	if o == nil || o.SafetyBuffer == nil {
		return nil, false
	}
	return o.SafetyBuffer, true
}

// HasSafetyBuffer returns a boolean if a field has been set.
func (o *AwsTidyRoletagBlacklistRequest) HasSafetyBuffer() bool {
	if o != nil && o.SafetyBuffer != nil {
		return true
	}

	return false
}

// SetSafetyBuffer gets a reference to the given int32 and assigns it to the SafetyBuffer field.
func (o *AwsTidyRoletagBlacklistRequest) SetSafetyBuffer(v int32) {
	o.SafetyBuffer = &v
}

func (o AwsTidyRoletagBlacklistRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SafetyBuffer != nil {
		toSerialize["safety_buffer"] = o.SafetyBuffer
	}
	return json.Marshal(toSerialize)
}

type NullableAwsTidyRoletagBlacklistRequest struct {
	value *AwsTidyRoletagBlacklistRequest
	isSet bool
}

func (v NullableAwsTidyRoletagBlacklistRequest) Get() *AwsTidyRoletagBlacklistRequest {
	return v.value
}

func (v *NullableAwsTidyRoletagBlacklistRequest) Set(val *AwsTidyRoletagBlacklistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsTidyRoletagBlacklistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsTidyRoletagBlacklistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsTidyRoletagBlacklistRequest(val *AwsTidyRoletagBlacklistRequest) *NullableAwsTidyRoletagBlacklistRequest {
	return &NullableAwsTidyRoletagBlacklistRequest{value: val, isSet: true}
}

func (v NullableAwsTidyRoletagBlacklistRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsTidyRoletagBlacklistRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AwsTidyRoletagDenylistRequest struct for AwsTidyRoletagDenylistRequest
type AwsTidyRoletagDenylistRequest struct {
	// The amount of extra time that must have passed beyond the roletag expiration, before it is removed from the backend storage.
	SafetyBuffer *int32 `json:"safety_buffer,omitempty"`
}

// NewAwsTidyRoletagDenylistRequest instantiates a new AwsTidyRoletagDenylistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsTidyRoletagDenylistRequest() *AwsTidyRoletagDenylistRequest {
	this := AwsTidyRoletagDenylistRequest{}
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// NewAwsTidyRoletagDenylistRequestWithDefaults instantiates a new AwsTidyRoletagDenylistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsTidyRoletagDenylistRequestWithDefaults() *AwsTidyRoletagDenylistRequest {
	this := AwsTidyRoletagDenylistRequest{}
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// GetSafetyBuffer returns the SafetyBuffer field value if set, zero value otherwise.
func (o *AwsTidyRoletagDenylistRequest) GetSafetyBuffer() int32 {
	if o == nil || o.SafetyBuffer == nil {
		var ret int32
		return ret
	}
	return *o.SafetyBuffer
}

// GetSafetyBufferOk returns a tuple with the SafetyBuffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsTidyRoletagDenylistRequest) GetSafetyBufferOk() (*int32, bool) {
	if o == nil || o.SafetyBuffer == nil {
		return nil, false
	}
	return o.SafetyBuffer, true
}

// HasSafetyBuffer returns a boolean if a field has been set.
func (o *AwsTidyRoletagDenylistRequest) HasSafetyBuffer() bool {
	if o != nil && o.SafetyBuffer != nil {
		return true
	}

	return false
}

// SetSafetyBuffer gets a reference to the given int32 and assigns it to the SafetyBuffer field.
func (o *AwsTidyRoletagDenylistRequest) SetSafetyBuffer(v int32) {
	o.SafetyBuffer = &v
}

func (o AwsTidyRoletagDenylistRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SafetyBuffer != nil {
		toSerialize["safety_buffer"] = o.SafetyBuffer
	}
	return json.Marshal(toSerialize)
}

type NullableAwsTidyRoletagDenylistRequest struct {
	value *AwsTidyRoletagDenylistRequest
	isSet bool
}

func (v NullableAwsTidyRoletagDenylistRequest) Get() *AwsTidyRoletagDenylistRequest {
	return v.value
}

func (v *NullableAwsTidyRoletagDenylistRequest) Set(val *AwsTidyRoletagDenylistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsTidyRoletagDenylistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsTidyRoletagDenylistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsTidyRoletagDenylistRequest(val *AwsTidyRoletagDenylistRequest) *NullableAwsTidyRoletagDenylistRequest {
	return &NullableAwsTidyRoletagDenylistRequest{value: val, isSet: true}
}

func (v NullableAwsTidyRoletagDenylistRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsTidyRoletagDenylistRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AzureConfigRequest struct for AzureConfigRequest
type AzureConfigRequest struct {
	// The OAuth2 client id to connection to Azure. This value can also be provided with the AZURE_CLIENT_ID environment variable.
	ClientId *string `json:"client_id,omitempty"`
	// The OAuth2 client secret to connection to Azure. This value can also be provided with the AZURE_CLIENT_SECRET environment variable.
	ClientSecret *string `json:"client_secret,omitempty"`
	// The Azure environment name. If not provided, AzurePublicCloud is used. This value can also be provided with the AZURE_ENVIRONMENT environment variable.
	Environment *string `json:"environment,omitempty"`
	// The resource URL for the vault application in Azure Active Directory. This value can also be provided with the AZURE_AD_RESOURCE environment variable.
	Resource *string `json:"resource,omitempty"`
	// The tenant id for the Azure Active Directory. This is sometimes referred to as Directory ID in AD. This value can also be provided with the AZURE_TENANT_ID environment variable.
	TenantId *string `json:"tenant_id,omitempty"`
}

// NewAzureConfigRequest instantiates a new AzureConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureConfigRequest() *AzureConfigRequest {
	this := AzureConfigRequest{}
	return &this
}

// NewAzureConfigRequestWithDefaults instantiates a new AzureConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureConfigRequestWithDefaults() *AzureConfigRequest {
	this := AzureConfigRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *AzureConfigRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConfigRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *AzureConfigRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *AzureConfigRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *AzureConfigRequest) GetClientSecret() string {
	if o == nil || o.ClientSecret == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConfigRequest) GetClientSecretOk() (*string, bool) {
	if o == nil || o.ClientSecret == nil {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *AzureConfigRequest) HasClientSecret() bool {
	if o != nil && o.ClientSecret != nil {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *AzureConfigRequest) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *AzureConfigRequest) GetEnvironment() string {
	if o == nil || o.Environment == nil {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConfigRequest) GetEnvironmentOk() (*string, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *AzureConfigRequest) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *AzureConfigRequest) SetEnvironment(v string) {
	o.Environment = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *AzureConfigRequest) GetResource() string {
	if o == nil || o.Resource == nil {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConfigRequest) GetResourceOk() (*string, bool) {
	if o == nil || o.Resource == nil {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *AzureConfigRequest) HasResource() bool {
	if o != nil && o.Resource != nil {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *AzureConfigRequest) SetResource(v string) {
	o.Resource = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *AzureConfigRequest) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConfigRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *AzureConfigRequest) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *AzureConfigRequest) SetTenantId(v string) {
	o.TenantId = &v
}

func (o AzureConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.ClientSecret != nil {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.Resource != nil {
		toSerialize["resource"] = o.Resource
	}
	if o.TenantId != nil {
		toSerialize["tenant_id"] = o.TenantId
	}
	return json.Marshal(toSerialize)
}

type NullableAzureConfigRequest struct {
	value *AzureConfigRequest
	isSet bool
}

func (v NullableAzureConfigRequest) Get() *AzureConfigRequest {
	return v.value
}

func (v *NullableAzureConfigRequest) Set(val *AzureConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureConfigRequest(val *AzureConfigRequest) *NullableAzureConfigRequest {
	return &NullableAzureConfigRequest{value: val, isSet: true}
}

func (v NullableAzureConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AzureLoginRequest struct for AzureLoginRequest
type AzureLoginRequest struct {
	// A signed JWT
	Jwt *string `json:"jwt,omitempty"`
	// The resource group from the instance.
	ResourceGroupName *string `json:"resource_group_name,omitempty"`
	// The token role.
	Role *string `json:"role,omitempty"`
	// The subscription id for the instance.
	SubscriptionId *string `json:"subscription_id,omitempty"`
	// The name of the virtual machine. This value is ignored if vmss_name is specified.
	VmName *string `json:"vm_name,omitempty"`
	// The name of the virtual machine scale set the instance is in.
	VmssName *string `json:"vmss_name,omitempty"`
}

// NewAzureLoginRequest instantiates a new AzureLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureLoginRequest() *AzureLoginRequest {
	this := AzureLoginRequest{}
	return &this
}

// NewAzureLoginRequestWithDefaults instantiates a new AzureLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureLoginRequestWithDefaults() *AzureLoginRequest {
	this := AzureLoginRequest{}
	return &this
}

// GetJwt returns the Jwt field value if set, zero value otherwise.
func (o *AzureLoginRequest) GetJwt() string {
	if o == nil || o.Jwt == nil {
		var ret string
		return ret
	}
	return *o.Jwt
}

// GetJwtOk returns a tuple with the Jwt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLoginRequest) GetJwtOk() (*string, bool) {
	if o == nil || o.Jwt == nil {
		return nil, false
	}
	return o.Jwt, true
}

// HasJwt returns a boolean if a field has been set.
func (o *AzureLoginRequest) HasJwt() bool {
	if o != nil && o.Jwt != nil {
		return true
	}

	return false
}

// SetJwt gets a reference to the given string and assigns it to the Jwt field.
func (o *AzureLoginRequest) SetJwt(v string) {
	o.Jwt = &v
}

// GetResourceGroupName returns the ResourceGroupName field value if set, zero value otherwise.
func (o *AzureLoginRequest) GetResourceGroupName() string {
	if o == nil || o.ResourceGroupName == nil {
		var ret string
		return ret
	}
	return *o.ResourceGroupName
}

// GetResourceGroupNameOk returns a tuple with the ResourceGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLoginRequest) GetResourceGroupNameOk() (*string, bool) {
	if o == nil || o.ResourceGroupName == nil {
		return nil, false
	}
	return o.ResourceGroupName, true
}

// HasResourceGroupName returns a boolean if a field has been set.
func (o *AzureLoginRequest) HasResourceGroupName() bool {
	if o != nil && o.ResourceGroupName != nil {
		return true
	}

	return false
}

// SetResourceGroupName gets a reference to the given string and assigns it to the ResourceGroupName field.
func (o *AzureLoginRequest) SetResourceGroupName(v string) {
	o.ResourceGroupName = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AzureLoginRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLoginRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AzureLoginRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *AzureLoginRequest) SetRole(v string) {
	o.Role = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *AzureLoginRequest) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLoginRequest) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *AzureLoginRequest) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *AzureLoginRequest) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetVmName returns the VmName field value if set, zero value otherwise.
func (o *AzureLoginRequest) GetVmName() string {
	if o == nil || o.VmName == nil {
		var ret string
		return ret
	}
	return *o.VmName
}

// GetVmNameOk returns a tuple with the VmName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLoginRequest) GetVmNameOk() (*string, bool) {
	if o == nil || o.VmName == nil {
		return nil, false
	}
	return o.VmName, true
}

// HasVmName returns a boolean if a field has been set.
func (o *AzureLoginRequest) HasVmName() bool {
	if o != nil && o.VmName != nil {
		return true
	}

	return false
}

// SetVmName gets a reference to the given string and assigns it to the VmName field.
func (o *AzureLoginRequest) SetVmName(v string) {
	o.VmName = &v
}

// GetVmssName returns the VmssName field value if set, zero value otherwise.
func (o *AzureLoginRequest) GetVmssName() string {
	if o == nil || o.VmssName == nil {
		var ret string
		return ret
	}
	return *o.VmssName
}

// GetVmssNameOk returns a tuple with the VmssName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLoginRequest) GetVmssNameOk() (*string, bool) {
	if o == nil || o.VmssName == nil {
		return nil, false
	}
	return o.VmssName, true
}

// HasVmssName returns a boolean if a field has been set.
func (o *AzureLoginRequest) HasVmssName() bool {
	if o != nil && o.VmssName != nil {
		return true
	}

	return false
}

// SetVmssName gets a reference to the given string and assigns it to the VmssName field.
func (o *AzureLoginRequest) SetVmssName(v string) {
	o.VmssName = &v
}

func (o AzureLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Jwt != nil {
		toSerialize["jwt"] = o.Jwt
	}
	if o.ResourceGroupName != nil {
		toSerialize["resource_group_name"] = o.ResourceGroupName
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.SubscriptionId != nil {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	if o.VmName != nil {
		toSerialize["vm_name"] = o.VmName
	}
	if o.VmssName != nil {
		toSerialize["vmss_name"] = o.VmssName
	}
	return json.Marshal(toSerialize)
}

type NullableAzureLoginRequest struct {
	value *AzureLoginRequest
	isSet bool
}

func (v NullableAzureLoginRequest) Get() *AzureLoginRequest {
	return v.value
}

func (v *NullableAzureLoginRequest) Set(val *AzureLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureLoginRequest(val *AzureLoginRequest) *NullableAzureLoginRequest {
	return &NullableAzureLoginRequest{value: val, isSet: true}
}

func (v NullableAzureLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AzureRoleRequest struct for AzureRoleRequest
type AzureRoleRequest struct {
	// Comma-separated list of group ids that login is restricted to.
	BoundGroupIds []string `json:"bound_group_ids,omitempty"`
	// Comma-separated list of locations that login is restricted to.
	BoundLocations []string `json:"bound_locations,omitempty"`
	// Comma-separated list of resource groups that login is restricted to.
	BoundResourceGroups []string `json:"bound_resource_groups,omitempty"`
	// Comma-separated list of scale sets that login is restricted to.
	BoundScaleSets []string `json:"bound_scale_sets,omitempty"`
	// Comma-separated list of service principal ids that login is restricted to.
	BoundServicePrincipalIds []string `json:"bound_service_principal_ids,omitempty"`
	// Comma-separated list of subscription ids that login is restricted to.
	BoundSubscriptionIds []string `json:"bound_subscription_ids,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Use \"token_num_uses\" instead. If this and \"token_num_uses\" are both specified, only \"token_num_uses\" will be used.
	// Deprecated
	NumUses *int32 `json:"num_uses,omitempty"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewAzureRoleRequest instantiates a new AzureRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureRoleRequest() *AzureRoleRequest {
	this := AzureRoleRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewAzureRoleRequestWithDefaults instantiates a new AzureRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureRoleRequestWithDefaults() *AzureRoleRequest {
	this := AzureRoleRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetBoundGroupIds returns the BoundGroupIds field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetBoundGroupIds() []string {
	if o == nil || o.BoundGroupIds == nil {
		var ret []string
		return ret
	}
	return o.BoundGroupIds
}

// GetBoundGroupIdsOk returns a tuple with the BoundGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetBoundGroupIdsOk() ([]string, bool) {
	if o == nil || o.BoundGroupIds == nil {
		return nil, false
	}
	return o.BoundGroupIds, true
}

// HasBoundGroupIds returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasBoundGroupIds() bool {
	if o != nil && o.BoundGroupIds != nil {
		return true
	}

	return false
}

// SetBoundGroupIds gets a reference to the given []string and assigns it to the BoundGroupIds field.
func (o *AzureRoleRequest) SetBoundGroupIds(v []string) {
	o.BoundGroupIds = v
}

// GetBoundLocations returns the BoundLocations field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetBoundLocations() []string {
	if o == nil || o.BoundLocations == nil {
		var ret []string
		return ret
	}
	return o.BoundLocations
}

// GetBoundLocationsOk returns a tuple with the BoundLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetBoundLocationsOk() ([]string, bool) {
	if o == nil || o.BoundLocations == nil {
		return nil, false
	}
	return o.BoundLocations, true
}

// HasBoundLocations returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasBoundLocations() bool {
	if o != nil && o.BoundLocations != nil {
		return true
	}

	return false
}

// SetBoundLocations gets a reference to the given []string and assigns it to the BoundLocations field.
func (o *AzureRoleRequest) SetBoundLocations(v []string) {
	o.BoundLocations = v
}

// GetBoundResourceGroups returns the BoundResourceGroups field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetBoundResourceGroups() []string {
	if o == nil || o.BoundResourceGroups == nil {
		var ret []string
		return ret
	}
	return o.BoundResourceGroups
}

// GetBoundResourceGroupsOk returns a tuple with the BoundResourceGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetBoundResourceGroupsOk() ([]string, bool) {
	if o == nil || o.BoundResourceGroups == nil {
		return nil, false
	}
	return o.BoundResourceGroups, true
}

// HasBoundResourceGroups returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasBoundResourceGroups() bool {
	if o != nil && o.BoundResourceGroups != nil {
		return true
	}

	return false
}

// SetBoundResourceGroups gets a reference to the given []string and assigns it to the BoundResourceGroups field.
func (o *AzureRoleRequest) SetBoundResourceGroups(v []string) {
	o.BoundResourceGroups = v
}

// GetBoundScaleSets returns the BoundScaleSets field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetBoundScaleSets() []string {
	if o == nil || o.BoundScaleSets == nil {
		var ret []string
		return ret
	}
	return o.BoundScaleSets
}

// GetBoundScaleSetsOk returns a tuple with the BoundScaleSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetBoundScaleSetsOk() ([]string, bool) {
	if o == nil || o.BoundScaleSets == nil {
		return nil, false
	}
	return o.BoundScaleSets, true
}

// HasBoundScaleSets returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasBoundScaleSets() bool {
	if o != nil && o.BoundScaleSets != nil {
		return true
	}

	return false
}

// SetBoundScaleSets gets a reference to the given []string and assigns it to the BoundScaleSets field.
func (o *AzureRoleRequest) SetBoundScaleSets(v []string) {
	o.BoundScaleSets = v
}

// GetBoundServicePrincipalIds returns the BoundServicePrincipalIds field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetBoundServicePrincipalIds() []string {
	if o == nil || o.BoundServicePrincipalIds == nil {
		var ret []string
		return ret
	}
	return o.BoundServicePrincipalIds
}

// GetBoundServicePrincipalIdsOk returns a tuple with the BoundServicePrincipalIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetBoundServicePrincipalIdsOk() ([]string, bool) {
	if o == nil || o.BoundServicePrincipalIds == nil {
		return nil, false
	}
	return o.BoundServicePrincipalIds, true
}

// HasBoundServicePrincipalIds returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasBoundServicePrincipalIds() bool {
	if o != nil && o.BoundServicePrincipalIds != nil {
		return true
	}

	return false
}

// SetBoundServicePrincipalIds gets a reference to the given []string and assigns it to the BoundServicePrincipalIds field.
func (o *AzureRoleRequest) SetBoundServicePrincipalIds(v []string) {
	o.BoundServicePrincipalIds = v
}

// GetBoundSubscriptionIds returns the BoundSubscriptionIds field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetBoundSubscriptionIds() []string {
	if o == nil || o.BoundSubscriptionIds == nil {
		var ret []string
		return ret
	}
	return o.BoundSubscriptionIds
}

// GetBoundSubscriptionIdsOk returns a tuple with the BoundSubscriptionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetBoundSubscriptionIdsOk() ([]string, bool) {
	if o == nil || o.BoundSubscriptionIds == nil {
		return nil, false
	}
	return o.BoundSubscriptionIds, true
}

// HasBoundSubscriptionIds returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasBoundSubscriptionIds() bool {
	if o != nil && o.BoundSubscriptionIds != nil {
		return true
	}

	return false
}

// SetBoundSubscriptionIds gets a reference to the given []string and assigns it to the BoundSubscriptionIds field.
func (o *AzureRoleRequest) SetBoundSubscriptionIds(v []string) {
	o.BoundSubscriptionIds = v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *AzureRoleRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AzureRoleRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *AzureRoleRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetNumUses returns the NumUses field value if set, zero value otherwise.
// Deprecated
func (o *AzureRoleRequest) GetNumUses() int32 {
	if o == nil || o.NumUses == nil {
		var ret int32
		return ret
	}
	return *o.NumUses
}

// GetNumUsesOk returns a tuple with the NumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AzureRoleRequest) GetNumUsesOk() (*int32, bool) {
	if o == nil || o.NumUses == nil {
		return nil, false
	}
	return o.NumUses, true
}

// HasNumUses returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasNumUses() bool {
	if o != nil && o.NumUses != nil {
		return true
	}

	return false
}

// SetNumUses gets a reference to the given int32 and assigns it to the NumUses field.
// Deprecated
func (o *AzureRoleRequest) SetNumUses(v int32) {
	o.NumUses = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *AzureRoleRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AzureRoleRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *AzureRoleRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *AzureRoleRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AzureRoleRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *AzureRoleRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *AzureRoleRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *AzureRoleRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *AzureRoleRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *AzureRoleRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *AzureRoleRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *AzureRoleRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *AzureRoleRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *AzureRoleRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *AzureRoleRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRoleRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *AzureRoleRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *AzureRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AzureRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AzureRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *AzureRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o AzureRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BoundGroupIds != nil {
		toSerialize["bound_group_ids"] = o.BoundGroupIds
	}
	if o.BoundLocations != nil {
		toSerialize["bound_locations"] = o.BoundLocations
	}
	if o.BoundResourceGroups != nil {
		toSerialize["bound_resource_groups"] = o.BoundResourceGroups
	}
	if o.BoundScaleSets != nil {
		toSerialize["bound_scale_sets"] = o.BoundScaleSets
	}
	if o.BoundServicePrincipalIds != nil {
		toSerialize["bound_service_principal_ids"] = o.BoundServicePrincipalIds
	}
	if o.BoundSubscriptionIds != nil {
		toSerialize["bound_subscription_ids"] = o.BoundSubscriptionIds
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.NumUses != nil {
		toSerialize["num_uses"] = o.NumUses
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableAzureRoleRequest struct {
	value *AzureRoleRequest
	isSet bool
}

func (v NullableAzureRoleRequest) Get() *AzureRoleRequest {
	return v.value
}

func (v *NullableAzureRoleRequest) Set(val *AzureRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureRoleRequest(val *AzureRoleRequest) *NullableAzureRoleRequest {
	return &NullableAzureRoleRequest{value: val, isSet: true}
}

func (v NullableAzureRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AzureRolesRequest struct for AzureRolesRequest
type AzureRolesRequest struct {
	// Application Object ID to use for static service principal credentials.
	ApplicationObjectId *string `json:"application_object_id,omitempty"`
	// JSON list of Azure groups to add the service principal to.
	AzureGroups *string `json:"azure_groups,omitempty"`
	// JSON list of Azure roles to assign.
	AzureRoles *string `json:"azure_roles,omitempty"`
	// Maximum time a service principal. If not set or set to 0, will use system default.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Default lease for generated credentials. If not set or set to 0, will use system default.
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewAzureRolesRequest instantiates a new AzureRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureRolesRequest() *AzureRolesRequest {
	this := AzureRolesRequest{}
	return &this
}

// NewAzureRolesRequestWithDefaults instantiates a new AzureRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureRolesRequestWithDefaults() *AzureRolesRequest {
	this := AzureRolesRequest{}
	return &this
}

// GetApplicationObjectId returns the ApplicationObjectId field value if set, zero value otherwise.
func (o *AzureRolesRequest) GetApplicationObjectId() string {
	if o == nil || o.ApplicationObjectId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationObjectId
}

// GetApplicationObjectIdOk returns a tuple with the ApplicationObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRolesRequest) GetApplicationObjectIdOk() (*string, bool) {
	if o == nil || o.ApplicationObjectId == nil {
		return nil, false
	}
	return o.ApplicationObjectId, true
}

// HasApplicationObjectId returns a boolean if a field has been set.
func (o *AzureRolesRequest) HasApplicationObjectId() bool {
	if o != nil && o.ApplicationObjectId != nil {
		return true
	}

	return false
}

// SetApplicationObjectId gets a reference to the given string and assigns it to the ApplicationObjectId field.
func (o *AzureRolesRequest) SetApplicationObjectId(v string) {
	o.ApplicationObjectId = &v
}

// GetAzureGroups returns the AzureGroups field value if set, zero value otherwise.
func (o *AzureRolesRequest) GetAzureGroups() string {
	if o == nil || o.AzureGroups == nil {
		var ret string
		return ret
	}
	return *o.AzureGroups
}

// GetAzureGroupsOk returns a tuple with the AzureGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRolesRequest) GetAzureGroupsOk() (*string, bool) {
	if o == nil || o.AzureGroups == nil {
		return nil, false
	}
	return o.AzureGroups, true
}

// HasAzureGroups returns a boolean if a field has been set.
func (o *AzureRolesRequest) HasAzureGroups() bool {
	if o != nil && o.AzureGroups != nil {
		return true
	}

	return false
}

// SetAzureGroups gets a reference to the given string and assigns it to the AzureGroups field.
func (o *AzureRolesRequest) SetAzureGroups(v string) {
	o.AzureGroups = &v
}

// GetAzureRoles returns the AzureRoles field value if set, zero value otherwise.
func (o *AzureRolesRequest) GetAzureRoles() string {
	if o == nil || o.AzureRoles == nil {
		var ret string
		return ret
	}
	return *o.AzureRoles
}

// GetAzureRolesOk returns a tuple with the AzureRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRolesRequest) GetAzureRolesOk() (*string, bool) {
	if o == nil || o.AzureRoles == nil {
		return nil, false
	}
	return o.AzureRoles, true
}

// HasAzureRoles returns a boolean if a field has been set.
func (o *AzureRolesRequest) HasAzureRoles() bool {
	if o != nil && o.AzureRoles != nil {
		return true
	}

	return false
}

// SetAzureRoles gets a reference to the given string and assigns it to the AzureRoles field.
func (o *AzureRolesRequest) SetAzureRoles(v string) {
	o.AzureRoles = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *AzureRolesRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRolesRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *AzureRolesRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *AzureRolesRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *AzureRolesRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRolesRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AzureRolesRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *AzureRolesRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o AzureRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationObjectId != nil {
		toSerialize["application_object_id"] = o.ApplicationObjectId
	}
	if o.AzureGroups != nil {
		toSerialize["azure_groups"] = o.AzureGroups
	}
	if o.AzureRoles != nil {
		toSerialize["azure_roles"] = o.AzureRoles
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableAzureRolesRequest struct {
	value *AzureRolesRequest
	isSet bool
}

func (v NullableAzureRolesRequest) Get() *AzureRolesRequest {
	return v.value
}

func (v *NullableAzureRolesRequest) Set(val *AzureRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureRolesRequest(val *AzureRolesRequest) *NullableAzureRolesRequest {
	return &NullableAzureRolesRequest{value: val, isSet: true}
}

func (v NullableAzureRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CentrifyConfigRequest struct for CentrifyConfigRequest
type CentrifyConfigRequest struct {
	// OAuth2 App ID
	AppId *string `json:"app_id,omitempty"`
	// OAuth2 Client ID
	ClientId *string `json:"client_id,omitempty"`
	// OAuth2 Client Secret
	ClientSecret *string `json:"client_secret,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// OAuth2 App Scope
	Scope *string `json:"scope,omitempty"`
	// Service URL (https://<tenant>.my.centrify.com)
	ServiceUrl *string `json:"service_url,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
}

// NewCentrifyConfigRequest instantiates a new CentrifyConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentrifyConfigRequest() *CentrifyConfigRequest {
	this := CentrifyConfigRequest{}
	var appId string = "vault_io_integration"
	this.AppId = &appId
	var scope string = "vault_io_integration"
	this.Scope = &scope
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewCentrifyConfigRequestWithDefaults instantiates a new CentrifyConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentrifyConfigRequestWithDefaults() *CentrifyConfigRequest {
	this := CentrifyConfigRequest{}
	var appId string = "vault_io_integration"
	this.AppId = &appId
	var scope string = "vault_io_integration"
	this.Scope = &scope
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *CentrifyConfigRequest) GetAppId() string {
	if o == nil || o.AppId == nil {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyConfigRequest) GetAppIdOk() (*string, bool) {
	if o == nil || o.AppId == nil {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *CentrifyConfigRequest) HasAppId() bool {
	if o != nil && o.AppId != nil {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *CentrifyConfigRequest) SetAppId(v string) {
	o.AppId = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *CentrifyConfigRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyConfigRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *CentrifyConfigRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *CentrifyConfigRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *CentrifyConfigRequest) GetClientSecret() string {
	if o == nil || o.ClientSecret == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyConfigRequest) GetClientSecretOk() (*string, bool) {
	if o == nil || o.ClientSecret == nil {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *CentrifyConfigRequest) HasClientSecret() bool {
	if o != nil && o.ClientSecret != nil {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *CentrifyConfigRequest) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *CentrifyConfigRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CentrifyConfigRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *CentrifyConfigRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *CentrifyConfigRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *CentrifyConfigRequest) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyConfigRequest) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *CentrifyConfigRequest) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *CentrifyConfigRequest) SetScope(v string) {
	o.Scope = &v
}

// GetServiceUrl returns the ServiceUrl field value if set, zero value otherwise.
func (o *CentrifyConfigRequest) GetServiceUrl() string {
	if o == nil || o.ServiceUrl == nil {
		var ret string
		return ret
	}
	return *o.ServiceUrl
}

// GetServiceUrlOk returns a tuple with the ServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyConfigRequest) GetServiceUrlOk() (*string, bool) {
	if o == nil || o.ServiceUrl == nil {
		return nil, false
	}
	return o.ServiceUrl, true
}

// HasServiceUrl returns a boolean if a field has been set.
func (o *CentrifyConfigRequest) HasServiceUrl() bool {
	if o != nil && o.ServiceUrl != nil {
		return true
	}

	return false
}

// SetServiceUrl gets a reference to the given string and assigns it to the ServiceUrl field.
func (o *CentrifyConfigRequest) SetServiceUrl(v string) {
	o.ServiceUrl = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *CentrifyConfigRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyConfigRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *CentrifyConfigRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *CentrifyConfigRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *CentrifyConfigRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyConfigRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *CentrifyConfigRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *CentrifyConfigRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *CentrifyConfigRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyConfigRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *CentrifyConfigRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *CentrifyConfigRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *CentrifyConfigRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyConfigRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *CentrifyConfigRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *CentrifyConfigRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *CentrifyConfigRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyConfigRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *CentrifyConfigRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *CentrifyConfigRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *CentrifyConfigRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyConfigRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *CentrifyConfigRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *CentrifyConfigRequest) SetTokenType(v string) {
	o.TokenType = &v
}

func (o CentrifyConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppId != nil {
		toSerialize["app_id"] = o.AppId
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.ClientSecret != nil {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.ServiceUrl != nil {
		toSerialize["service_url"] = o.ServiceUrl
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	return json.Marshal(toSerialize)
}

type NullableCentrifyConfigRequest struct {
	value *CentrifyConfigRequest
	isSet bool
}

func (v NullableCentrifyConfigRequest) Get() *CentrifyConfigRequest {
	return v.value
}

func (v *NullableCentrifyConfigRequest) Set(val *CentrifyConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCentrifyConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCentrifyConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentrifyConfigRequest(val *CentrifyConfigRequest) *NullableCentrifyConfigRequest {
	return &NullableCentrifyConfigRequest{value: val, isSet: true}
}

func (v NullableCentrifyConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentrifyConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CentrifyLoginRequest struct for CentrifyLoginRequest
type CentrifyLoginRequest struct {
	// Auth mode ('ro' for resource owner, 'cc' for credential client).
	Mode *string `json:"mode,omitempty"`
	// Password for this user.
	Password *string `json:"password,omitempty"`
	// Username of the user.
	Username *string `json:"username,omitempty"`
}

// NewCentrifyLoginRequest instantiates a new CentrifyLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentrifyLoginRequest() *CentrifyLoginRequest {
	this := CentrifyLoginRequest{}
	var mode string = "ro"
	this.Mode = &mode
	return &this
}

// NewCentrifyLoginRequestWithDefaults instantiates a new CentrifyLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentrifyLoginRequestWithDefaults() *CentrifyLoginRequest {
	this := CentrifyLoginRequest{}
	var mode string = "ro"
	this.Mode = &mode
	return &this
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *CentrifyLoginRequest) GetMode() string {
	if o == nil || o.Mode == nil {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyLoginRequest) GetModeOk() (*string, bool) {
	if o == nil || o.Mode == nil {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *CentrifyLoginRequest) HasMode() bool {
	if o != nil && o.Mode != nil {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *CentrifyLoginRequest) SetMode(v string) {
	o.Mode = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CentrifyLoginRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyLoginRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CentrifyLoginRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CentrifyLoginRequest) SetPassword(v string) {
	o.Password = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *CentrifyLoginRequest) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentrifyLoginRequest) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *CentrifyLoginRequest) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *CentrifyLoginRequest) SetUsername(v string) {
	o.Username = &v
}

func (o CentrifyLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Mode != nil {
		toSerialize["mode"] = o.Mode
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableCentrifyLoginRequest struct {
	value *CentrifyLoginRequest
	isSet bool
}

func (v NullableCentrifyLoginRequest) Get() *CentrifyLoginRequest {
	return v.value
}

func (v *NullableCentrifyLoginRequest) Set(val *CentrifyLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCentrifyLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCentrifyLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentrifyLoginRequest(val *CentrifyLoginRequest) *NullableCentrifyLoginRequest {
	return &NullableCentrifyLoginRequest{value: val, isSet: true}
}

func (v NullableCentrifyLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentrifyLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CertCertsRequest struct for CertCertsRequest
type CertCertsRequest struct {
	// A comma-separated list of names. At least one must exist in the Common Name. Supports globbing.
	AllowedCommonNames []string `json:"allowed_common_names,omitempty"`
	// A comma-separated list of DNS names. At least one must exist in the SANs. Supports globbing.
	AllowedDnsSans []string `json:"allowed_dns_sans,omitempty"`
	// A comma-separated list of Email Addresses. At least one must exist in the SANs. Supports globbing.
	AllowedEmailSans []string `json:"allowed_email_sans,omitempty"`
	// A comma-separated string or array of oid extensions. Upon successfull authentication, these extensions will be added as metadata if they are present in the certificate. The metadata key will be the string consisting of the oid numbers separated by a dash (-) instead of a dot (.) to allow usage in ACL templates.
	AllowedMetadataExtensions []string `json:"allowed_metadata_extensions,omitempty"`
	// A comma-separated list of names. At least one must exist in either the Common Name or SANs. Supports globbing. This parameter is deprecated, please use allowed_common_names, allowed_dns_sans, allowed_email_sans, allowed_uri_sans.
	AllowedNames []string `json:"allowed_names,omitempty"`
	// A comma-separated list of Organizational Units names. At least one must exist in the OU field.
	AllowedOrganizationalUnits []string `json:"allowed_organizational_units,omitempty"`
	// A comma-separated list of URIs. At least one must exist in the SANs. Supports globbing.
	AllowedUriSans []string `json:"allowed_uri_sans,omitempty"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs,omitempty"`
	// The public certificate that should be trusted. Must be x509 PEM encoded.
	Certificate *string `json:"certificate,omitempty"`
	// The display name to use for clients using this certificate.
	DisplayName *string `json:"display_name,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Lease *int32 `json:"lease,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// A comma-separated string or array of extensions formatted as \"oid:value\". Expects the extension value to be some type of ASN1 encoded string. All values much match. Supports globbing on \"value\".
	RequiredExtensions []string `json:"required_extensions,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewCertCertsRequest instantiates a new CertCertsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertCertsRequest() *CertCertsRequest {
	this := CertCertsRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewCertCertsRequestWithDefaults instantiates a new CertCertsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertCertsRequestWithDefaults() *CertCertsRequest {
	this := CertCertsRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetAllowedCommonNames returns the AllowedCommonNames field value if set, zero value otherwise.
func (o *CertCertsRequest) GetAllowedCommonNames() []string {
	if o == nil || o.AllowedCommonNames == nil {
		var ret []string
		return ret
	}
	return o.AllowedCommonNames
}

// GetAllowedCommonNamesOk returns a tuple with the AllowedCommonNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetAllowedCommonNamesOk() ([]string, bool) {
	if o == nil || o.AllowedCommonNames == nil {
		return nil, false
	}
	return o.AllowedCommonNames, true
}

// HasAllowedCommonNames returns a boolean if a field has been set.
func (o *CertCertsRequest) HasAllowedCommonNames() bool {
	if o != nil && o.AllowedCommonNames != nil {
		return true
	}

	return false
}

// SetAllowedCommonNames gets a reference to the given []string and assigns it to the AllowedCommonNames field.
func (o *CertCertsRequest) SetAllowedCommonNames(v []string) {
	o.AllowedCommonNames = v
}

// GetAllowedDnsSans returns the AllowedDnsSans field value if set, zero value otherwise.
func (o *CertCertsRequest) GetAllowedDnsSans() []string {
	if o == nil || o.AllowedDnsSans == nil {
		var ret []string
		return ret
	}
	return o.AllowedDnsSans
}

// GetAllowedDnsSansOk returns a tuple with the AllowedDnsSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetAllowedDnsSansOk() ([]string, bool) {
	if o == nil || o.AllowedDnsSans == nil {
		return nil, false
	}
	return o.AllowedDnsSans, true
}

// HasAllowedDnsSans returns a boolean if a field has been set.
func (o *CertCertsRequest) HasAllowedDnsSans() bool {
	if o != nil && o.AllowedDnsSans != nil {
		return true
	}

	return false
}

// SetAllowedDnsSans gets a reference to the given []string and assigns it to the AllowedDnsSans field.
func (o *CertCertsRequest) SetAllowedDnsSans(v []string) {
	o.AllowedDnsSans = v
}

// GetAllowedEmailSans returns the AllowedEmailSans field value if set, zero value otherwise.
func (o *CertCertsRequest) GetAllowedEmailSans() []string {
	if o == nil || o.AllowedEmailSans == nil {
		var ret []string
		return ret
	}
	return o.AllowedEmailSans
}

// GetAllowedEmailSansOk returns a tuple with the AllowedEmailSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetAllowedEmailSansOk() ([]string, bool) {
	if o == nil || o.AllowedEmailSans == nil {
		return nil, false
	}
	return o.AllowedEmailSans, true
}

// HasAllowedEmailSans returns a boolean if a field has been set.
func (o *CertCertsRequest) HasAllowedEmailSans() bool {
	if o != nil && o.AllowedEmailSans != nil {
		return true
	}

	return false
}

// SetAllowedEmailSans gets a reference to the given []string and assigns it to the AllowedEmailSans field.
func (o *CertCertsRequest) SetAllowedEmailSans(v []string) {
	o.AllowedEmailSans = v
}

// GetAllowedMetadataExtensions returns the AllowedMetadataExtensions field value if set, zero value otherwise.
func (o *CertCertsRequest) GetAllowedMetadataExtensions() []string {
	if o == nil || o.AllowedMetadataExtensions == nil {
		var ret []string
		return ret
	}
	return o.AllowedMetadataExtensions
}

// GetAllowedMetadataExtensionsOk returns a tuple with the AllowedMetadataExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetAllowedMetadataExtensionsOk() ([]string, bool) {
	if o == nil || o.AllowedMetadataExtensions == nil {
		return nil, false
	}
	return o.AllowedMetadataExtensions, true
}

// HasAllowedMetadataExtensions returns a boolean if a field has been set.
func (o *CertCertsRequest) HasAllowedMetadataExtensions() bool {
	if o != nil && o.AllowedMetadataExtensions != nil {
		return true
	}

	return false
}

// SetAllowedMetadataExtensions gets a reference to the given []string and assigns it to the AllowedMetadataExtensions field.
func (o *CertCertsRequest) SetAllowedMetadataExtensions(v []string) {
	o.AllowedMetadataExtensions = v
}

// GetAllowedNames returns the AllowedNames field value if set, zero value otherwise.
func (o *CertCertsRequest) GetAllowedNames() []string {
	if o == nil || o.AllowedNames == nil {
		var ret []string
		return ret
	}
	return o.AllowedNames
}

// GetAllowedNamesOk returns a tuple with the AllowedNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetAllowedNamesOk() ([]string, bool) {
	if o == nil || o.AllowedNames == nil {
		return nil, false
	}
	return o.AllowedNames, true
}

// HasAllowedNames returns a boolean if a field has been set.
func (o *CertCertsRequest) HasAllowedNames() bool {
	if o != nil && o.AllowedNames != nil {
		return true
	}

	return false
}

// SetAllowedNames gets a reference to the given []string and assigns it to the AllowedNames field.
func (o *CertCertsRequest) SetAllowedNames(v []string) {
	o.AllowedNames = v
}

// GetAllowedOrganizationalUnits returns the AllowedOrganizationalUnits field value if set, zero value otherwise.
func (o *CertCertsRequest) GetAllowedOrganizationalUnits() []string {
	if o == nil || o.AllowedOrganizationalUnits == nil {
		var ret []string
		return ret
	}
	return o.AllowedOrganizationalUnits
}

// GetAllowedOrganizationalUnitsOk returns a tuple with the AllowedOrganizationalUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetAllowedOrganizationalUnitsOk() ([]string, bool) {
	if o == nil || o.AllowedOrganizationalUnits == nil {
		return nil, false
	}
	return o.AllowedOrganizationalUnits, true
}

// HasAllowedOrganizationalUnits returns a boolean if a field has been set.
func (o *CertCertsRequest) HasAllowedOrganizationalUnits() bool {
	if o != nil && o.AllowedOrganizationalUnits != nil {
		return true
	}

	return false
}

// SetAllowedOrganizationalUnits gets a reference to the given []string and assigns it to the AllowedOrganizationalUnits field.
func (o *CertCertsRequest) SetAllowedOrganizationalUnits(v []string) {
	o.AllowedOrganizationalUnits = v
}

// GetAllowedUriSans returns the AllowedUriSans field value if set, zero value otherwise.
func (o *CertCertsRequest) GetAllowedUriSans() []string {
	if o == nil || o.AllowedUriSans == nil {
		var ret []string
		return ret
	}
	return o.AllowedUriSans
}

// GetAllowedUriSansOk returns a tuple with the AllowedUriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetAllowedUriSansOk() ([]string, bool) {
	if o == nil || o.AllowedUriSans == nil {
		return nil, false
	}
	return o.AllowedUriSans, true
}

// HasAllowedUriSans returns a boolean if a field has been set.
func (o *CertCertsRequest) HasAllowedUriSans() bool {
	if o != nil && o.AllowedUriSans != nil {
		return true
	}

	return false
}

// SetAllowedUriSans gets a reference to the given []string and assigns it to the AllowedUriSans field.
func (o *CertCertsRequest) SetAllowedUriSans(v []string) {
	o.AllowedUriSans = v
}

// GetBoundCidrs returns the BoundCidrs field value if set, zero value otherwise.
// Deprecated
func (o *CertCertsRequest) GetBoundCidrs() []string {
	if o == nil || o.BoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrs
}

// GetBoundCidrsOk returns a tuple with the BoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CertCertsRequest) GetBoundCidrsOk() ([]string, bool) {
	if o == nil || o.BoundCidrs == nil {
		return nil, false
	}
	return o.BoundCidrs, true
}

// HasBoundCidrs returns a boolean if a field has been set.
func (o *CertCertsRequest) HasBoundCidrs() bool {
	if o != nil && o.BoundCidrs != nil {
		return true
	}

	return false
}

// SetBoundCidrs gets a reference to the given []string and assigns it to the BoundCidrs field.
// Deprecated
func (o *CertCertsRequest) SetBoundCidrs(v []string) {
	o.BoundCidrs = v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *CertCertsRequest) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *CertCertsRequest) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *CertCertsRequest) SetCertificate(v string) {
	o.Certificate = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CertCertsRequest) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CertCertsRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CertCertsRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetLease returns the Lease field value if set, zero value otherwise.
// Deprecated
func (o *CertCertsRequest) GetLease() int32 {
	if o == nil || o.Lease == nil {
		var ret int32
		return ret
	}
	return *o.Lease
}

// GetLeaseOk returns a tuple with the Lease field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CertCertsRequest) GetLeaseOk() (*int32, bool) {
	if o == nil || o.Lease == nil {
		return nil, false
	}
	return o.Lease, true
}

// HasLease returns a boolean if a field has been set.
func (o *CertCertsRequest) HasLease() bool {
	if o != nil && o.Lease != nil {
		return true
	}

	return false
}

// SetLease gets a reference to the given int32 and assigns it to the Lease field.
// Deprecated
func (o *CertCertsRequest) SetLease(v int32) {
	o.Lease = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *CertCertsRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CertCertsRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *CertCertsRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *CertCertsRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *CertCertsRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CertCertsRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *CertCertsRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *CertCertsRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *CertCertsRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CertCertsRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *CertCertsRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *CertCertsRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetRequiredExtensions returns the RequiredExtensions field value if set, zero value otherwise.
func (o *CertCertsRequest) GetRequiredExtensions() []string {
	if o == nil || o.RequiredExtensions == nil {
		var ret []string
		return ret
	}
	return o.RequiredExtensions
}

// GetRequiredExtensionsOk returns a tuple with the RequiredExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetRequiredExtensionsOk() ([]string, bool) {
	if o == nil || o.RequiredExtensions == nil {
		return nil, false
	}
	return o.RequiredExtensions, true
}

// HasRequiredExtensions returns a boolean if a field has been set.
func (o *CertCertsRequest) HasRequiredExtensions() bool {
	if o != nil && o.RequiredExtensions != nil {
		return true
	}

	return false
}

// SetRequiredExtensions gets a reference to the given []string and assigns it to the RequiredExtensions field.
func (o *CertCertsRequest) SetRequiredExtensions(v []string) {
	o.RequiredExtensions = v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *CertCertsRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *CertCertsRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *CertCertsRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *CertCertsRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *CertCertsRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *CertCertsRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *CertCertsRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *CertCertsRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *CertCertsRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *CertCertsRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *CertCertsRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *CertCertsRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *CertCertsRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *CertCertsRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *CertCertsRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *CertCertsRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *CertCertsRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *CertCertsRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *CertCertsRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *CertCertsRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *CertCertsRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *CertCertsRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *CertCertsRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *CertCertsRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *CertCertsRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCertsRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *CertCertsRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *CertCertsRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *CertCertsRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CertCertsRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *CertCertsRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *CertCertsRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o CertCertsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedCommonNames != nil {
		toSerialize["allowed_common_names"] = o.AllowedCommonNames
	}
	if o.AllowedDnsSans != nil {
		toSerialize["allowed_dns_sans"] = o.AllowedDnsSans
	}
	if o.AllowedEmailSans != nil {
		toSerialize["allowed_email_sans"] = o.AllowedEmailSans
	}
	if o.AllowedMetadataExtensions != nil {
		toSerialize["allowed_metadata_extensions"] = o.AllowedMetadataExtensions
	}
	if o.AllowedNames != nil {
		toSerialize["allowed_names"] = o.AllowedNames
	}
	if o.AllowedOrganizationalUnits != nil {
		toSerialize["allowed_organizational_units"] = o.AllowedOrganizationalUnits
	}
	if o.AllowedUriSans != nil {
		toSerialize["allowed_uri_sans"] = o.AllowedUriSans
	}
	if o.BoundCidrs != nil {
		toSerialize["bound_cidrs"] = o.BoundCidrs
	}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Lease != nil {
		toSerialize["lease"] = o.Lease
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.RequiredExtensions != nil {
		toSerialize["required_extensions"] = o.RequiredExtensions
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableCertCertsRequest struct {
	value *CertCertsRequest
	isSet bool
}

func (v NullableCertCertsRequest) Get() *CertCertsRequest {
	return v.value
}

func (v *NullableCertCertsRequest) Set(val *CertCertsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCertCertsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCertCertsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertCertsRequest(val *CertCertsRequest) *NullableCertCertsRequest {
	return &NullableCertCertsRequest{value: val, isSet: true}
}

func (v NullableCertCertsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertCertsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CertConfigRequest struct for CertConfigRequest
type CertConfigRequest struct {
	// If set, during renewal, skips the matching of presented client identity with the client identity used during login. Defaults to false.
	DisableBinding *bool `json:"disable_binding,omitempty"`
}

// NewCertConfigRequest instantiates a new CertConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertConfigRequest() *CertConfigRequest {
	this := CertConfigRequest{}
	var disableBinding bool = false
	this.DisableBinding = &disableBinding
	return &this
}

// NewCertConfigRequestWithDefaults instantiates a new CertConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertConfigRequestWithDefaults() *CertConfigRequest {
	this := CertConfigRequest{}
	var disableBinding bool = false
	this.DisableBinding = &disableBinding
	return &this
}

// GetDisableBinding returns the DisableBinding field value if set, zero value otherwise.
func (o *CertConfigRequest) GetDisableBinding() bool {
	if o == nil || o.DisableBinding == nil {
		var ret bool
		return ret
	}
	return *o.DisableBinding
}

// GetDisableBindingOk returns a tuple with the DisableBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertConfigRequest) GetDisableBindingOk() (*bool, bool) {
	if o == nil || o.DisableBinding == nil {
		return nil, false
	}
	return o.DisableBinding, true
}

// HasDisableBinding returns a boolean if a field has been set.
func (o *CertConfigRequest) HasDisableBinding() bool {
	if o != nil && o.DisableBinding != nil {
		return true
	}

	return false
}

// SetDisableBinding gets a reference to the given bool and assigns it to the DisableBinding field.
func (o *CertConfigRequest) SetDisableBinding(v bool) {
	o.DisableBinding = &v
}

func (o CertConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisableBinding != nil {
		toSerialize["disable_binding"] = o.DisableBinding
	}
	return json.Marshal(toSerialize)
}

type NullableCertConfigRequest struct {
	value *CertConfigRequest
	isSet bool
}

func (v NullableCertConfigRequest) Get() *CertConfigRequest {
	return v.value
}

func (v *NullableCertConfigRequest) Set(val *CertConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCertConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCertConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertConfigRequest(val *CertConfigRequest) *NullableCertConfigRequest {
	return &NullableCertConfigRequest{value: val, isSet: true}
}

func (v NullableCertConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CertCrlsRequest struct for CertCrlsRequest
type CertCrlsRequest struct {
	// The public certificate that should be trusted. May be DER or PEM encoded. Note: the expiration time is ignored; if the CRL is no longer valid, delete it using the same name as specified here.
	Crl *string `json:"crl,omitempty"`
}

// NewCertCrlsRequest instantiates a new CertCrlsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertCrlsRequest() *CertCrlsRequest {
	this := CertCrlsRequest{}
	return &this
}

// NewCertCrlsRequestWithDefaults instantiates a new CertCrlsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertCrlsRequestWithDefaults() *CertCrlsRequest {
	this := CertCrlsRequest{}
	return &this
}

// GetCrl returns the Crl field value if set, zero value otherwise.
func (o *CertCrlsRequest) GetCrl() string {
	if o == nil || o.Crl == nil {
		var ret string
		return ret
	}
	return *o.Crl
}

// GetCrlOk returns a tuple with the Crl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertCrlsRequest) GetCrlOk() (*string, bool) {
	if o == nil || o.Crl == nil {
		return nil, false
	}
	return o.Crl, true
}

// HasCrl returns a boolean if a field has been set.
func (o *CertCrlsRequest) HasCrl() bool {
	if o != nil && o.Crl != nil {
		return true
	}

	return false
}

// SetCrl gets a reference to the given string and assigns it to the Crl field.
func (o *CertCrlsRequest) SetCrl(v string) {
	o.Crl = &v
}

func (o CertCrlsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Crl != nil {
		toSerialize["crl"] = o.Crl
	}
	return json.Marshal(toSerialize)
}

type NullableCertCrlsRequest struct {
	value *CertCrlsRequest
	isSet bool
}

func (v NullableCertCrlsRequest) Get() *CertCrlsRequest {
	return v.value
}

func (v *NullableCertCrlsRequest) Set(val *CertCrlsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCertCrlsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCertCrlsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertCrlsRequest(val *CertCrlsRequest) *NullableCertCrlsRequest {
	return &NullableCertCrlsRequest{value: val, isSet: true}
}

func (v NullableCertCrlsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertCrlsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CertLoginRequest struct for CertLoginRequest
type CertLoginRequest struct {
	// The name of the certificate role to authenticate against.
	Name *string `json:"name,omitempty"`
}

// NewCertLoginRequest instantiates a new CertLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertLoginRequest() *CertLoginRequest {
	this := CertLoginRequest{}
	return &this
}

// NewCertLoginRequestWithDefaults instantiates a new CertLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertLoginRequestWithDefaults() *CertLoginRequest {
	this := CertLoginRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CertLoginRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertLoginRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CertLoginRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CertLoginRequest) SetName(v string) {
	o.Name = &v
}

func (o CertLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCertLoginRequest struct {
	value *CertLoginRequest
	isSet bool
}

func (v NullableCertLoginRequest) Get() *CertLoginRequest {
	return v.value
}

func (v *NullableCertLoginRequest) Set(val *CertLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCertLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCertLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertLoginRequest(val *CertLoginRequest) *NullableCertLoginRequest {
	return &NullableCertLoginRequest{value: val, isSet: true}
}

func (v NullableCertLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CfConfigRequest struct for CfConfigRequest
type CfConfigRequest struct {
	// CF’s API address.
	CfApiAddr *string `json:"cf_api_addr,omitempty"`
	// The PEM-format certificates that are presented for mutual TLS with the CloudFoundry API. If not set, mutual TLS is not used
	CfApiMutualTlsCertificate *string `json:"cf_api_mutual_tls_certificate,omitempty"`
	// The PEM-format private key that are used for mutual TLS with the CloudFoundry API. If not set, mutual TLS is not used
	CfApiMutualTlsKey *string `json:"cf_api_mutual_tls_key,omitempty"`
	// The PEM-format CA certificates that are acceptable for the CF API to present.
	CfApiTrustedCertificates []string `json:"cf_api_trusted_certificates,omitempty"`
	// The client id for CF’s API.
	CfClientId *string `json:"cf_client_id,omitempty"`
	// The client secret for CF’s API.
	CfClientSecret *string `json:"cf_client_secret,omitempty"`
	// The password for CF’s API.
	CfPassword *string `json:"cf_password,omitempty"`
	// The username for CF’s API.
	CfUsername *string `json:"cf_username,omitempty"`
	// The PEM-format CA certificates that are required to have issued the instance certificates presented for logging in.
	IdentityCaCertificates []string `json:"identity_ca_certificates,omitempty"`
	// Duration in seconds for the maximum acceptable length in the future a \"signing_time\" can be. Useful for clock drift. Set low to reduce the opportunity for replay attacks.
	LoginMaxSecondsNotAfter *int32 `json:"login_max_seconds_not_after,omitempty"`
	// Duration in seconds for the maximum acceptable age of a \"signing_time\". Useful for clock drift. Set low to reduce the opportunity for replay attacks.
	LoginMaxSecondsNotBefore *int32 `json:"login_max_seconds_not_before,omitempty"`
	// Deprecated. Please use \"cf_api_addr\".
	// Deprecated
	PcfApiAddr *string `json:"pcf_api_addr,omitempty"`
	// Deprecated. Please use \"cf_api_trusted_certificates\".
	// Deprecated
	PcfApiTrustedCertificates []string `json:"pcf_api_trusted_certificates,omitempty"`
	// Deprecated. Please use \"cf_password\".
	// Deprecated
	PcfPassword *string `json:"pcf_password,omitempty"`
	// Deprecated. Please use \"cf_username\".
	// Deprecated
	PcfUsername *string `json:"pcf_username,omitempty"`
}

// NewCfConfigRequest instantiates a new CfConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCfConfigRequest() *CfConfigRequest {
	this := CfConfigRequest{}
	var loginMaxSecondsNotAfter int32 = 60
	this.LoginMaxSecondsNotAfter = &loginMaxSecondsNotAfter
	var loginMaxSecondsNotBefore int32 = 300
	this.LoginMaxSecondsNotBefore = &loginMaxSecondsNotBefore
	return &this
}

// NewCfConfigRequestWithDefaults instantiates a new CfConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCfConfigRequestWithDefaults() *CfConfigRequest {
	this := CfConfigRequest{}
	var loginMaxSecondsNotAfter int32 = 60
	this.LoginMaxSecondsNotAfter = &loginMaxSecondsNotAfter
	var loginMaxSecondsNotBefore int32 = 300
	this.LoginMaxSecondsNotBefore = &loginMaxSecondsNotBefore
	return &this
}

// GetCfApiAddr returns the CfApiAddr field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfApiAddr() string {
	if o == nil || o.CfApiAddr == nil {
		var ret string
		return ret
	}
	return *o.CfApiAddr
}

// GetCfApiAddrOk returns a tuple with the CfApiAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfApiAddrOk() (*string, bool) {
	if o == nil || o.CfApiAddr == nil {
		return nil, false
	}
	return o.CfApiAddr, true
}

// HasCfApiAddr returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfApiAddr() bool {
	if o != nil && o.CfApiAddr != nil {
		return true
	}

	return false
}

// SetCfApiAddr gets a reference to the given string and assigns it to the CfApiAddr field.
func (o *CfConfigRequest) SetCfApiAddr(v string) {
	o.CfApiAddr = &v
}

// GetCfApiMutualTlsCertificate returns the CfApiMutualTlsCertificate field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfApiMutualTlsCertificate() string {
	if o == nil || o.CfApiMutualTlsCertificate == nil {
		var ret string
		return ret
	}
	return *o.CfApiMutualTlsCertificate
}

// GetCfApiMutualTlsCertificateOk returns a tuple with the CfApiMutualTlsCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfApiMutualTlsCertificateOk() (*string, bool) {
	if o == nil || o.CfApiMutualTlsCertificate == nil {
		return nil, false
	}
	return o.CfApiMutualTlsCertificate, true
}

// HasCfApiMutualTlsCertificate returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfApiMutualTlsCertificate() bool {
	if o != nil && o.CfApiMutualTlsCertificate != nil {
		return true
	}

	return false
}

// SetCfApiMutualTlsCertificate gets a reference to the given string and assigns it to the CfApiMutualTlsCertificate field.
func (o *CfConfigRequest) SetCfApiMutualTlsCertificate(v string) {
	o.CfApiMutualTlsCertificate = &v
}

// GetCfApiMutualTlsKey returns the CfApiMutualTlsKey field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfApiMutualTlsKey() string {
	if o == nil || o.CfApiMutualTlsKey == nil {
		var ret string
		return ret
	}
	return *o.CfApiMutualTlsKey
}

// GetCfApiMutualTlsKeyOk returns a tuple with the CfApiMutualTlsKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfApiMutualTlsKeyOk() (*string, bool) {
	if o == nil || o.CfApiMutualTlsKey == nil {
		return nil, false
	}
	return o.CfApiMutualTlsKey, true
}

// HasCfApiMutualTlsKey returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfApiMutualTlsKey() bool {
	if o != nil && o.CfApiMutualTlsKey != nil {
		return true
	}

	return false
}

// SetCfApiMutualTlsKey gets a reference to the given string and assigns it to the CfApiMutualTlsKey field.
func (o *CfConfigRequest) SetCfApiMutualTlsKey(v string) {
	o.CfApiMutualTlsKey = &v
}

// GetCfApiTrustedCertificates returns the CfApiTrustedCertificates field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfApiTrustedCertificates() []string {
	if o == nil || o.CfApiTrustedCertificates == nil {
		var ret []string
		return ret
	}
	return o.CfApiTrustedCertificates
}

// GetCfApiTrustedCertificatesOk returns a tuple with the CfApiTrustedCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfApiTrustedCertificatesOk() ([]string, bool) {
	if o == nil || o.CfApiTrustedCertificates == nil {
		return nil, false
	}
	return o.CfApiTrustedCertificates, true
}

// HasCfApiTrustedCertificates returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfApiTrustedCertificates() bool {
	if o != nil && o.CfApiTrustedCertificates != nil {
		return true
	}

	return false
}

// SetCfApiTrustedCertificates gets a reference to the given []string and assigns it to the CfApiTrustedCertificates field.
func (o *CfConfigRequest) SetCfApiTrustedCertificates(v []string) {
	o.CfApiTrustedCertificates = v
}

// GetCfClientId returns the CfClientId field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfClientId() string {
	if o == nil || o.CfClientId == nil {
		var ret string
		return ret
	}
	return *o.CfClientId
}

// GetCfClientIdOk returns a tuple with the CfClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfClientIdOk() (*string, bool) {
	if o == nil || o.CfClientId == nil {
		return nil, false
	}
	return o.CfClientId, true
}

// HasCfClientId returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfClientId() bool {
	if o != nil && o.CfClientId != nil {
		return true
	}

	return false
}

// SetCfClientId gets a reference to the given string and assigns it to the CfClientId field.
func (o *CfConfigRequest) SetCfClientId(v string) {
	o.CfClientId = &v
}

// GetCfClientSecret returns the CfClientSecret field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfClientSecret() string {
	if o == nil || o.CfClientSecret == nil {
		var ret string
		return ret
	}
	return *o.CfClientSecret
}

// GetCfClientSecretOk returns a tuple with the CfClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfClientSecretOk() (*string, bool) {
	if o == nil || o.CfClientSecret == nil {
		return nil, false
	}
	return o.CfClientSecret, true
}

// HasCfClientSecret returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfClientSecret() bool {
	if o != nil && o.CfClientSecret != nil {
		return true
	}

	return false
}

// SetCfClientSecret gets a reference to the given string and assigns it to the CfClientSecret field.
func (o *CfConfigRequest) SetCfClientSecret(v string) {
	o.CfClientSecret = &v
}

// GetCfPassword returns the CfPassword field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfPassword() string {
	if o == nil || o.CfPassword == nil {
		var ret string
		return ret
	}
	return *o.CfPassword
}

// GetCfPasswordOk returns a tuple with the CfPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfPasswordOk() (*string, bool) {
	if o == nil || o.CfPassword == nil {
		return nil, false
	}
	return o.CfPassword, true
}

// HasCfPassword returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfPassword() bool {
	if o != nil && o.CfPassword != nil {
		return true
	}

	return false
}

// SetCfPassword gets a reference to the given string and assigns it to the CfPassword field.
func (o *CfConfigRequest) SetCfPassword(v string) {
	o.CfPassword = &v
}

// GetCfUsername returns the CfUsername field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfUsername() string {
	if o == nil || o.CfUsername == nil {
		var ret string
		return ret
	}
	return *o.CfUsername
}

// GetCfUsernameOk returns a tuple with the CfUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfUsernameOk() (*string, bool) {
	if o == nil || o.CfUsername == nil {
		return nil, false
	}
	return o.CfUsername, true
}

// HasCfUsername returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfUsername() bool {
	if o != nil && o.CfUsername != nil {
		return true
	}

	return false
}

// SetCfUsername gets a reference to the given string and assigns it to the CfUsername field.
func (o *CfConfigRequest) SetCfUsername(v string) {
	o.CfUsername = &v
}

// GetIdentityCaCertificates returns the IdentityCaCertificates field value if set, zero value otherwise.
func (o *CfConfigRequest) GetIdentityCaCertificates() []string {
	if o == nil || o.IdentityCaCertificates == nil {
		var ret []string
		return ret
	}
	return o.IdentityCaCertificates
}

// GetIdentityCaCertificatesOk returns a tuple with the IdentityCaCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetIdentityCaCertificatesOk() ([]string, bool) {
	if o == nil || o.IdentityCaCertificates == nil {
		return nil, false
	}
	return o.IdentityCaCertificates, true
}

// HasIdentityCaCertificates returns a boolean if a field has been set.
func (o *CfConfigRequest) HasIdentityCaCertificates() bool {
	if o != nil && o.IdentityCaCertificates != nil {
		return true
	}

	return false
}

// SetIdentityCaCertificates gets a reference to the given []string and assigns it to the IdentityCaCertificates field.
func (o *CfConfigRequest) SetIdentityCaCertificates(v []string) {
	o.IdentityCaCertificates = v
}

// GetLoginMaxSecondsNotAfter returns the LoginMaxSecondsNotAfter field value if set, zero value otherwise.
func (o *CfConfigRequest) GetLoginMaxSecondsNotAfter() int32 {
	if o == nil || o.LoginMaxSecondsNotAfter == nil {
		var ret int32
		return ret
	}
	return *o.LoginMaxSecondsNotAfter
}

// GetLoginMaxSecondsNotAfterOk returns a tuple with the LoginMaxSecondsNotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetLoginMaxSecondsNotAfterOk() (*int32, bool) {
	if o == nil || o.LoginMaxSecondsNotAfter == nil {
		return nil, false
	}
	return o.LoginMaxSecondsNotAfter, true
}

// HasLoginMaxSecondsNotAfter returns a boolean if a field has been set.
func (o *CfConfigRequest) HasLoginMaxSecondsNotAfter() bool {
	if o != nil && o.LoginMaxSecondsNotAfter != nil {
		return true
	}

	return false
}

// SetLoginMaxSecondsNotAfter gets a reference to the given int32 and assigns it to the LoginMaxSecondsNotAfter field.
func (o *CfConfigRequest) SetLoginMaxSecondsNotAfter(v int32) {
	o.LoginMaxSecondsNotAfter = &v
}

// GetLoginMaxSecondsNotBefore returns the LoginMaxSecondsNotBefore field value if set, zero value otherwise.
func (o *CfConfigRequest) GetLoginMaxSecondsNotBefore() int32 {
	if o == nil || o.LoginMaxSecondsNotBefore == nil {
		var ret int32
		return ret
	}
	return *o.LoginMaxSecondsNotBefore
}

// GetLoginMaxSecondsNotBeforeOk returns a tuple with the LoginMaxSecondsNotBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetLoginMaxSecondsNotBeforeOk() (*int32, bool) {
	if o == nil || o.LoginMaxSecondsNotBefore == nil {
		return nil, false
	}
	return o.LoginMaxSecondsNotBefore, true
}

// HasLoginMaxSecondsNotBefore returns a boolean if a field has been set.
func (o *CfConfigRequest) HasLoginMaxSecondsNotBefore() bool {
	if o != nil && o.LoginMaxSecondsNotBefore != nil {
		return true
	}

	return false
}

// SetLoginMaxSecondsNotBefore gets a reference to the given int32 and assigns it to the LoginMaxSecondsNotBefore field.
func (o *CfConfigRequest) SetLoginMaxSecondsNotBefore(v int32) {
	o.LoginMaxSecondsNotBefore = &v
}

// GetPcfApiAddr returns the PcfApiAddr field value if set, zero value otherwise.
// Deprecated
func (o *CfConfigRequest) GetPcfApiAddr() string {
	if o == nil || o.PcfApiAddr == nil {
		var ret string
		return ret
	}
	return *o.PcfApiAddr
}

// GetPcfApiAddrOk returns a tuple with the PcfApiAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfConfigRequest) GetPcfApiAddrOk() (*string, bool) {
	if o == nil || o.PcfApiAddr == nil {
		return nil, false
	}
	return o.PcfApiAddr, true
}

// HasPcfApiAddr returns a boolean if a field has been set.
func (o *CfConfigRequest) HasPcfApiAddr() bool {
	if o != nil && o.PcfApiAddr != nil {
		return true
	}

	return false
}

// SetPcfApiAddr gets a reference to the given string and assigns it to the PcfApiAddr field.
// Deprecated
func (o *CfConfigRequest) SetPcfApiAddr(v string) {
	o.PcfApiAddr = &v
}

// GetPcfApiTrustedCertificates returns the PcfApiTrustedCertificates field value if set, zero value otherwise.
// Deprecated
func (o *CfConfigRequest) GetPcfApiTrustedCertificates() []string {
	if o == nil || o.PcfApiTrustedCertificates == nil {
		var ret []string
		return ret
	}
	return o.PcfApiTrustedCertificates
}

// GetPcfApiTrustedCertificatesOk returns a tuple with the PcfApiTrustedCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfConfigRequest) GetPcfApiTrustedCertificatesOk() ([]string, bool) {
	if o == nil || o.PcfApiTrustedCertificates == nil {
		return nil, false
	}
	return o.PcfApiTrustedCertificates, true
}

// HasPcfApiTrustedCertificates returns a boolean if a field has been set.
func (o *CfConfigRequest) HasPcfApiTrustedCertificates() bool {
	if o != nil && o.PcfApiTrustedCertificates != nil {
		return true
	}

	return false
}

// SetPcfApiTrustedCertificates gets a reference to the given []string and assigns it to the PcfApiTrustedCertificates field.
// Deprecated
func (o *CfConfigRequest) SetPcfApiTrustedCertificates(v []string) {
	o.PcfApiTrustedCertificates = v
}

// GetPcfPassword returns the PcfPassword field value if set, zero value otherwise.
// Deprecated
func (o *CfConfigRequest) GetPcfPassword() string {
	if o == nil || o.PcfPassword == nil {
		var ret string
		return ret
	}
	return *o.PcfPassword
}

// GetPcfPasswordOk returns a tuple with the PcfPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfConfigRequest) GetPcfPasswordOk() (*string, bool) {
	if o == nil || o.PcfPassword == nil {
		return nil, false
	}
	return o.PcfPassword, true
}

// HasPcfPassword returns a boolean if a field has been set.
func (o *CfConfigRequest) HasPcfPassword() bool {
	if o != nil && o.PcfPassword != nil {
		return true
	}

	return false
}

// SetPcfPassword gets a reference to the given string and assigns it to the PcfPassword field.
// Deprecated
func (o *CfConfigRequest) SetPcfPassword(v string) {
	o.PcfPassword = &v
}

// GetPcfUsername returns the PcfUsername field value if set, zero value otherwise.
// Deprecated
func (o *CfConfigRequest) GetPcfUsername() string {
	if o == nil || o.PcfUsername == nil {
		var ret string
		return ret
	}
	return *o.PcfUsername
}

// GetPcfUsernameOk returns a tuple with the PcfUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfConfigRequest) GetPcfUsernameOk() (*string, bool) {
	if o == nil || o.PcfUsername == nil {
		return nil, false
	}
	return o.PcfUsername, true
}

// HasPcfUsername returns a boolean if a field has been set.
func (o *CfConfigRequest) HasPcfUsername() bool {
	if o != nil && o.PcfUsername != nil {
		return true
	}

	return false
}

// SetPcfUsername gets a reference to the given string and assigns it to the PcfUsername field.
// Deprecated
func (o *CfConfigRequest) SetPcfUsername(v string) {
	o.PcfUsername = &v
}

func (o CfConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CfApiAddr != nil {
		toSerialize["cf_api_addr"] = o.CfApiAddr
	}
	if o.CfApiMutualTlsCertificate != nil {
		toSerialize["cf_api_mutual_tls_certificate"] = o.CfApiMutualTlsCertificate
	}
	if o.CfApiMutualTlsKey != nil {
		toSerialize["cf_api_mutual_tls_key"] = o.CfApiMutualTlsKey
	}
	if o.CfApiTrustedCertificates != nil {
		toSerialize["cf_api_trusted_certificates"] = o.CfApiTrustedCertificates
	}
	if o.CfClientId != nil {
		toSerialize["cf_client_id"] = o.CfClientId
	}
	if o.CfClientSecret != nil {
		toSerialize["cf_client_secret"] = o.CfClientSecret
	}
	if o.CfPassword != nil {
		toSerialize["cf_password"] = o.CfPassword
	}
	if o.CfUsername != nil {
		toSerialize["cf_username"] = o.CfUsername
	}
	if o.IdentityCaCertificates != nil {
		toSerialize["identity_ca_certificates"] = o.IdentityCaCertificates
	}
	if o.LoginMaxSecondsNotAfter != nil {
		toSerialize["login_max_seconds_not_after"] = o.LoginMaxSecondsNotAfter
	}
	if o.LoginMaxSecondsNotBefore != nil {
		toSerialize["login_max_seconds_not_before"] = o.LoginMaxSecondsNotBefore
	}
	if o.PcfApiAddr != nil {
		toSerialize["pcf_api_addr"] = o.PcfApiAddr
	}
	if o.PcfApiTrustedCertificates != nil {
		toSerialize["pcf_api_trusted_certificates"] = o.PcfApiTrustedCertificates
	}
	if o.PcfPassword != nil {
		toSerialize["pcf_password"] = o.PcfPassword
	}
	if o.PcfUsername != nil {
		toSerialize["pcf_username"] = o.PcfUsername
	}
	return json.Marshal(toSerialize)
}

type NullableCfConfigRequest struct {
	value *CfConfigRequest
	isSet bool
}

func (v NullableCfConfigRequest) Get() *CfConfigRequest {
	return v.value
}

func (v *NullableCfConfigRequest) Set(val *CfConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCfConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCfConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCfConfigRequest(val *CfConfigRequest) *NullableCfConfigRequest {
	return &NullableCfConfigRequest{value: val, isSet: true}
}

func (v NullableCfConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCfConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CfLoginRequest struct for CfLoginRequest
type CfLoginRequest struct {
	// The full body of the file available at the CF_INSTANCE_CERT path on the CF instance.
	CfInstanceCert string `json:"cf_instance_cert"`
	// The name of the role to authenticate against.
	Role string `json:"role"`
	// The signature generated by the client certificate's private key.
	Signature string `json:"signature"`
	// The date and time used to construct the signature.
	SigningTime string `json:"signing_time"`
}

// NewCfLoginRequest instantiates a new CfLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCfLoginRequest(cfInstanceCert string, role string, signature string, signingTime string) *CfLoginRequest {
	this := CfLoginRequest{}
	this.CfInstanceCert = cfInstanceCert
	this.Role = role
	this.Signature = signature
	this.SigningTime = signingTime
	return &this
}

// NewCfLoginRequestWithDefaults instantiates a new CfLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCfLoginRequestWithDefaults() *CfLoginRequest {
	this := CfLoginRequest{}
	return &this
}

// GetCfInstanceCert returns the CfInstanceCert field value
func (o *CfLoginRequest) GetCfInstanceCert() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CfInstanceCert
}

// GetCfInstanceCertOk returns a tuple with the CfInstanceCert field value
// and a boolean to check if the value has been set.
func (o *CfLoginRequest) GetCfInstanceCertOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CfInstanceCert, true
}

// SetCfInstanceCert sets field value
func (o *CfLoginRequest) SetCfInstanceCert(v string) {
	o.CfInstanceCert = v
}

// GetRole returns the Role field value
func (o *CfLoginRequest) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *CfLoginRequest) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *CfLoginRequest) SetRole(v string) {
	o.Role = v
}

// GetSignature returns the Signature field value
func (o *CfLoginRequest) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *CfLoginRequest) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *CfLoginRequest) SetSignature(v string) {
	o.Signature = v
}

// GetSigningTime returns the SigningTime field value
func (o *CfLoginRequest) GetSigningTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SigningTime
}

// GetSigningTimeOk returns a tuple with the SigningTime field value
// and a boolean to check if the value has been set.
func (o *CfLoginRequest) GetSigningTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SigningTime, true
}

// SetSigningTime sets field value
func (o *CfLoginRequest) SetSigningTime(v string) {
	o.SigningTime = v
}

func (o CfLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cf_instance_cert"] = o.CfInstanceCert
	}
	if true {
		toSerialize["role"] = o.Role
	}
	if true {
		toSerialize["signature"] = o.Signature
	}
	if true {
		toSerialize["signing_time"] = o.SigningTime
	}
	return json.Marshal(toSerialize)
}

type NullableCfLoginRequest struct {
	value *CfLoginRequest
	isSet bool
}

func (v NullableCfLoginRequest) Get() *CfLoginRequest {
	return v.value
}

func (v *NullableCfLoginRequest) Set(val *CfLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCfLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCfLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCfLoginRequest(val *CfLoginRequest) *NullableCfLoginRequest {
	return &NullableCfLoginRequest{value: val, isSet: true}
}

func (v NullableCfLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCfLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CfRolesRequest struct for CfRolesRequest
type CfRolesRequest struct {
	// Require that the client certificate presented has at least one of these app IDs.
	BoundApplicationIds []string `json:"bound_application_ids,omitempty"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs,omitempty"`
	// Require that the client certificate presented has at least one of these instance IDs.
	BoundInstanceIds []string `json:"bound_instance_ids,omitempty"`
	// Require that the client certificate presented has at least one of these org IDs.
	BoundOrganizationIds []string `json:"bound_organization_ids,omitempty"`
	// Require that the client certificate presented has at least one of these space IDs.
	BoundSpaceIds []string `json:"bound_space_ids,omitempty"`
	// If set to true, disables the default behavior that logging in must be performed from an acceptable IP address described by the certificate presented.
	DisableIpMatching *bool `json:"disable_ip_matching,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewCfRolesRequest instantiates a new CfRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCfRolesRequest() *CfRolesRequest {
	this := CfRolesRequest{}
	var disableIpMatching bool = false
	this.DisableIpMatching = &disableIpMatching
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewCfRolesRequestWithDefaults instantiates a new CfRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCfRolesRequestWithDefaults() *CfRolesRequest {
	this := CfRolesRequest{}
	var disableIpMatching bool = false
	this.DisableIpMatching = &disableIpMatching
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetBoundApplicationIds returns the BoundApplicationIds field value if set, zero value otherwise.
func (o *CfRolesRequest) GetBoundApplicationIds() []string {
	if o == nil || o.BoundApplicationIds == nil {
		var ret []string
		return ret
	}
	return o.BoundApplicationIds
}

// GetBoundApplicationIdsOk returns a tuple with the BoundApplicationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetBoundApplicationIdsOk() ([]string, bool) {
	if o == nil || o.BoundApplicationIds == nil {
		return nil, false
	}
	return o.BoundApplicationIds, true
}

// HasBoundApplicationIds returns a boolean if a field has been set.
func (o *CfRolesRequest) HasBoundApplicationIds() bool {
	if o != nil && o.BoundApplicationIds != nil {
		return true
	}

	return false
}

// SetBoundApplicationIds gets a reference to the given []string and assigns it to the BoundApplicationIds field.
func (o *CfRolesRequest) SetBoundApplicationIds(v []string) {
	o.BoundApplicationIds = v
}

// GetBoundCidrs returns the BoundCidrs field value if set, zero value otherwise.
// Deprecated
func (o *CfRolesRequest) GetBoundCidrs() []string {
	if o == nil || o.BoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrs
}

// GetBoundCidrsOk returns a tuple with the BoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfRolesRequest) GetBoundCidrsOk() ([]string, bool) {
	if o == nil || o.BoundCidrs == nil {
		return nil, false
	}
	return o.BoundCidrs, true
}

// HasBoundCidrs returns a boolean if a field has been set.
func (o *CfRolesRequest) HasBoundCidrs() bool {
	if o != nil && o.BoundCidrs != nil {
		return true
	}

	return false
}

// SetBoundCidrs gets a reference to the given []string and assigns it to the BoundCidrs field.
// Deprecated
func (o *CfRolesRequest) SetBoundCidrs(v []string) {
	o.BoundCidrs = v
}

// GetBoundInstanceIds returns the BoundInstanceIds field value if set, zero value otherwise.
func (o *CfRolesRequest) GetBoundInstanceIds() []string {
	if o == nil || o.BoundInstanceIds == nil {
		var ret []string
		return ret
	}
	return o.BoundInstanceIds
}

// GetBoundInstanceIdsOk returns a tuple with the BoundInstanceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetBoundInstanceIdsOk() ([]string, bool) {
	if o == nil || o.BoundInstanceIds == nil {
		return nil, false
	}
	return o.BoundInstanceIds, true
}

// HasBoundInstanceIds returns a boolean if a field has been set.
func (o *CfRolesRequest) HasBoundInstanceIds() bool {
	if o != nil && o.BoundInstanceIds != nil {
		return true
	}

	return false
}

// SetBoundInstanceIds gets a reference to the given []string and assigns it to the BoundInstanceIds field.
func (o *CfRolesRequest) SetBoundInstanceIds(v []string) {
	o.BoundInstanceIds = v
}

// GetBoundOrganizationIds returns the BoundOrganizationIds field value if set, zero value otherwise.
func (o *CfRolesRequest) GetBoundOrganizationIds() []string {
	if o == nil || o.BoundOrganizationIds == nil {
		var ret []string
		return ret
	}
	return o.BoundOrganizationIds
}

// GetBoundOrganizationIdsOk returns a tuple with the BoundOrganizationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetBoundOrganizationIdsOk() ([]string, bool) {
	if o == nil || o.BoundOrganizationIds == nil {
		return nil, false
	}
	return o.BoundOrganizationIds, true
}

// HasBoundOrganizationIds returns a boolean if a field has been set.
func (o *CfRolesRequest) HasBoundOrganizationIds() bool {
	if o != nil && o.BoundOrganizationIds != nil {
		return true
	}

	return false
}

// SetBoundOrganizationIds gets a reference to the given []string and assigns it to the BoundOrganizationIds field.
func (o *CfRolesRequest) SetBoundOrganizationIds(v []string) {
	o.BoundOrganizationIds = v
}

// GetBoundSpaceIds returns the BoundSpaceIds field value if set, zero value otherwise.
func (o *CfRolesRequest) GetBoundSpaceIds() []string {
	if o == nil || o.BoundSpaceIds == nil {
		var ret []string
		return ret
	}
	return o.BoundSpaceIds
}

// GetBoundSpaceIdsOk returns a tuple with the BoundSpaceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetBoundSpaceIdsOk() ([]string, bool) {
	if o == nil || o.BoundSpaceIds == nil {
		return nil, false
	}
	return o.BoundSpaceIds, true
}

// HasBoundSpaceIds returns a boolean if a field has been set.
func (o *CfRolesRequest) HasBoundSpaceIds() bool {
	if o != nil && o.BoundSpaceIds != nil {
		return true
	}

	return false
}

// SetBoundSpaceIds gets a reference to the given []string and assigns it to the BoundSpaceIds field.
func (o *CfRolesRequest) SetBoundSpaceIds(v []string) {
	o.BoundSpaceIds = v
}

// GetDisableIpMatching returns the DisableIpMatching field value if set, zero value otherwise.
func (o *CfRolesRequest) GetDisableIpMatching() bool {
	if o == nil || o.DisableIpMatching == nil {
		var ret bool
		return ret
	}
	return *o.DisableIpMatching
}

// GetDisableIpMatchingOk returns a tuple with the DisableIpMatching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetDisableIpMatchingOk() (*bool, bool) {
	if o == nil || o.DisableIpMatching == nil {
		return nil, false
	}
	return o.DisableIpMatching, true
}

// HasDisableIpMatching returns a boolean if a field has been set.
func (o *CfRolesRequest) HasDisableIpMatching() bool {
	if o != nil && o.DisableIpMatching != nil {
		return true
	}

	return false
}

// SetDisableIpMatching gets a reference to the given bool and assigns it to the DisableIpMatching field.
func (o *CfRolesRequest) SetDisableIpMatching(v bool) {
	o.DisableIpMatching = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *CfRolesRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfRolesRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *CfRolesRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *CfRolesRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *CfRolesRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfRolesRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *CfRolesRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *CfRolesRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *CfRolesRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfRolesRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *CfRolesRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *CfRolesRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *CfRolesRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *CfRolesRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *CfRolesRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *CfRolesRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *CfRolesRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *CfRolesRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *CfRolesRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *CfRolesRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *CfRolesRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *CfRolesRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *CfRolesRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *CfRolesRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *CfRolesRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *CfRolesRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *CfRolesRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *CfRolesRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *CfRolesRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *CfRolesRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *CfRolesRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *CfRolesRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *CfRolesRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *CfRolesRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *CfRolesRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *CfRolesRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *CfRolesRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfRolesRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *CfRolesRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *CfRolesRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *CfRolesRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfRolesRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *CfRolesRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *CfRolesRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o CfRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BoundApplicationIds != nil {
		toSerialize["bound_application_ids"] = o.BoundApplicationIds
	}
	if o.BoundCidrs != nil {
		toSerialize["bound_cidrs"] = o.BoundCidrs
	}
	if o.BoundInstanceIds != nil {
		toSerialize["bound_instance_ids"] = o.BoundInstanceIds
	}
	if o.BoundOrganizationIds != nil {
		toSerialize["bound_organization_ids"] = o.BoundOrganizationIds
	}
	if o.BoundSpaceIds != nil {
		toSerialize["bound_space_ids"] = o.BoundSpaceIds
	}
	if o.DisableIpMatching != nil {
		toSerialize["disable_ip_matching"] = o.DisableIpMatching
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableCfRolesRequest struct {
	value *CfRolesRequest
	isSet bool
}

func (v NullableCfRolesRequest) Get() *CfRolesRequest {
	return v.value
}

func (v *NullableCfRolesRequest) Set(val *CfRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCfRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCfRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCfRolesRequest(val *CfRolesRequest) *NullableCfRolesRequest {
	return &NullableCfRolesRequest{value: val, isSet: true}
}

func (v NullableCfRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCfRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ConsulConfigAccessRequest struct for ConsulConfigAccessRequest
type ConsulConfigAccessRequest struct {
	// Consul server address
	Address *string `json:"address,omitempty"`
	// CA certificate to use when verifying Consul server certificate, must be x509 PEM encoded.
	CaCert *string `json:"ca_cert,omitempty"`
	// Client certificate used for Consul's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_key.
	ClientCert *string `json:"client_cert,omitempty"`
	// Client key used for Consul's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_cert.
	ClientKey *string `json:"client_key,omitempty"`
	// URI scheme for the Consul address
	Scheme *string `json:"scheme,omitempty"`
	// Token for API calls
	Token *string `json:"token,omitempty"`
}

// NewConsulConfigAccessRequest instantiates a new ConsulConfigAccessRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsulConfigAccessRequest() *ConsulConfigAccessRequest {
	this := ConsulConfigAccessRequest{}
	var scheme string = "http"
	this.Scheme = &scheme
	return &this
}

// NewConsulConfigAccessRequestWithDefaults instantiates a new ConsulConfigAccessRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsulConfigAccessRequestWithDefaults() *ConsulConfigAccessRequest {
	this := ConsulConfigAccessRequest{}
	var scheme string = "http"
	this.Scheme = &scheme
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ConsulConfigAccessRequest) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulConfigAccessRequest) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ConsulConfigAccessRequest) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ConsulConfigAccessRequest) SetAddress(v string) {
	o.Address = &v
}

// GetCaCert returns the CaCert field value if set, zero value otherwise.
func (o *ConsulConfigAccessRequest) GetCaCert() string {
	if o == nil || o.CaCert == nil {
		var ret string
		return ret
	}
	return *o.CaCert
}

// GetCaCertOk returns a tuple with the CaCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulConfigAccessRequest) GetCaCertOk() (*string, bool) {
	if o == nil || o.CaCert == nil {
		return nil, false
	}
	return o.CaCert, true
}

// HasCaCert returns a boolean if a field has been set.
func (o *ConsulConfigAccessRequest) HasCaCert() bool {
	if o != nil && o.CaCert != nil {
		return true
	}

	return false
}

// SetCaCert gets a reference to the given string and assigns it to the CaCert field.
func (o *ConsulConfigAccessRequest) SetCaCert(v string) {
	o.CaCert = &v
}

// GetClientCert returns the ClientCert field value if set, zero value otherwise.
func (o *ConsulConfigAccessRequest) GetClientCert() string {
	if o == nil || o.ClientCert == nil {
		var ret string
		return ret
	}
	return *o.ClientCert
}

// GetClientCertOk returns a tuple with the ClientCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulConfigAccessRequest) GetClientCertOk() (*string, bool) {
	if o == nil || o.ClientCert == nil {
		return nil, false
	}
	return o.ClientCert, true
}

// HasClientCert returns a boolean if a field has been set.
func (o *ConsulConfigAccessRequest) HasClientCert() bool {
	if o != nil && o.ClientCert != nil {
		return true
	}

	return false
}

// SetClientCert gets a reference to the given string and assigns it to the ClientCert field.
func (o *ConsulConfigAccessRequest) SetClientCert(v string) {
	o.ClientCert = &v
}

// GetClientKey returns the ClientKey field value if set, zero value otherwise.
func (o *ConsulConfigAccessRequest) GetClientKey() string {
	if o == nil || o.ClientKey == nil {
		var ret string
		return ret
	}
	return *o.ClientKey
}

// GetClientKeyOk returns a tuple with the ClientKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulConfigAccessRequest) GetClientKeyOk() (*string, bool) {
	if o == nil || o.ClientKey == nil {
		return nil, false
	}
	return o.ClientKey, true
}

// HasClientKey returns a boolean if a field has been set.
func (o *ConsulConfigAccessRequest) HasClientKey() bool {
	if o != nil && o.ClientKey != nil {
		return true
	}

	return false
}

// SetClientKey gets a reference to the given string and assigns it to the ClientKey field.
func (o *ConsulConfigAccessRequest) SetClientKey(v string) {
	o.ClientKey = &v
}

// GetScheme returns the Scheme field value if set, zero value otherwise.
func (o *ConsulConfigAccessRequest) GetScheme() string {
	if o == nil || o.Scheme == nil {
		var ret string
		return ret
	}
	return *o.Scheme
}

// GetSchemeOk returns a tuple with the Scheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulConfigAccessRequest) GetSchemeOk() (*string, bool) {
	if o == nil || o.Scheme == nil {
		return nil, false
	}
	return o.Scheme, true
}

// HasScheme returns a boolean if a field has been set.
func (o *ConsulConfigAccessRequest) HasScheme() bool {
	if o != nil && o.Scheme != nil {
		return true
	}

	return false
}

// SetScheme gets a reference to the given string and assigns it to the Scheme field.
func (o *ConsulConfigAccessRequest) SetScheme(v string) {
	o.Scheme = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ConsulConfigAccessRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulConfigAccessRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ConsulConfigAccessRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ConsulConfigAccessRequest) SetToken(v string) {
	o.Token = &v
}

func (o ConsulConfigAccessRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.CaCert != nil {
		toSerialize["ca_cert"] = o.CaCert
	}
	if o.ClientCert != nil {
		toSerialize["client_cert"] = o.ClientCert
	}
	if o.ClientKey != nil {
		toSerialize["client_key"] = o.ClientKey
	}
	if o.Scheme != nil {
		toSerialize["scheme"] = o.Scheme
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableConsulConfigAccessRequest struct {
	value *ConsulConfigAccessRequest
	isSet bool
}

func (v NullableConsulConfigAccessRequest) Get() *ConsulConfigAccessRequest {
	return v.value
}

func (v *NullableConsulConfigAccessRequest) Set(val *ConsulConfigAccessRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConsulConfigAccessRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConsulConfigAccessRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsulConfigAccessRequest(val *ConsulConfigAccessRequest) *NullableConsulConfigAccessRequest {
	return &NullableConsulConfigAccessRequest{value: val, isSet: true}
}

func (v NullableConsulConfigAccessRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsulConfigAccessRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ConsulRolesRequest struct for ConsulRolesRequest
type ConsulRolesRequest struct {
	// Indicates which namespace that the token will be created within. Defaults to 'default'. Available in Consul 1.7 and above.
	ConsulNamespace *string `json:"consul_namespace,omitempty"`
	// List of policies to attach to the token. Either \"consul_policies\" or \"consul_roles\" are required for Consul 1.5 and above, or just \"consul_policies\" if using Consul 1.4.
	ConsulPolicies []string `json:"consul_policies,omitempty"`
	// List of Consul roles to attach to the token. Either \"policies\" or \"consul_roles\" are required for Consul 1.5 and above.
	ConsulRoles []string `json:"consul_roles,omitempty"`
	// Use \"ttl\" instead.
	// Deprecated
	Lease *int32 `json:"lease,omitempty"`
	// Indicates that the token should not be replicated globally and instead be local to the current datacenter. Available in Consul 1.4 and above.
	Local *bool `json:"local,omitempty"`
	// Max TTL for the Consul token created from the role.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// List of Node Identities to attach to the token. Available in Consul 1.8.1 or above.
	NodeIdentities []string `json:"node_identities,omitempty"`
	// Indicates which admin partition that the token will be created within. Defaults to 'default'. Available in Consul 1.11 and above.
	Partition *string `json:"partition,omitempty"`
	// Use \"consul_policies\" instead.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Policy document, base64 encoded. Required for 'client' tokens. Required for Consul pre-1.4.
	// Deprecated
	Policy *string `json:"policy,omitempty"`
	// List of Service Identities to attach to the token, separated by semicolons. Available in Consul 1.5 or above.
	ServiceIdentities []string `json:"service_identities,omitempty"`
	// Which type of token to create: 'client' or 'management'. If a 'management' token, the \"policy\", \"policies\", and \"consul_roles\" parameters are not required. Defaults to 'client'.
	// Deprecated
	TokenType *string `json:"token_type,omitempty"`
	// TTL for the Consul token created from the role.
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewConsulRolesRequest instantiates a new ConsulRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsulRolesRequest() *ConsulRolesRequest {
	this := ConsulRolesRequest{}
	var tokenType string = "client"
	this.TokenType = &tokenType
	return &this
}

// NewConsulRolesRequestWithDefaults instantiates a new ConsulRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsulRolesRequestWithDefaults() *ConsulRolesRequest {
	this := ConsulRolesRequest{}
	var tokenType string = "client"
	this.TokenType = &tokenType
	return &this
}

// GetConsulNamespace returns the ConsulNamespace field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetConsulNamespace() string {
	if o == nil || o.ConsulNamespace == nil {
		var ret string
		return ret
	}
	return *o.ConsulNamespace
}

// GetConsulNamespaceOk returns a tuple with the ConsulNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetConsulNamespaceOk() (*string, bool) {
	if o == nil || o.ConsulNamespace == nil {
		return nil, false
	}
	return o.ConsulNamespace, true
}

// HasConsulNamespace returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasConsulNamespace() bool {
	if o != nil && o.ConsulNamespace != nil {
		return true
	}

	return false
}

// SetConsulNamespace gets a reference to the given string and assigns it to the ConsulNamespace field.
func (o *ConsulRolesRequest) SetConsulNamespace(v string) {
	o.ConsulNamespace = &v
}

// GetConsulPolicies returns the ConsulPolicies field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetConsulPolicies() []string {
	if o == nil || o.ConsulPolicies == nil {
		var ret []string
		return ret
	}
	return o.ConsulPolicies
}

// GetConsulPoliciesOk returns a tuple with the ConsulPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetConsulPoliciesOk() ([]string, bool) {
	if o == nil || o.ConsulPolicies == nil {
		return nil, false
	}
	return o.ConsulPolicies, true
}

// HasConsulPolicies returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasConsulPolicies() bool {
	if o != nil && o.ConsulPolicies != nil {
		return true
	}

	return false
}

// SetConsulPolicies gets a reference to the given []string and assigns it to the ConsulPolicies field.
func (o *ConsulRolesRequest) SetConsulPolicies(v []string) {
	o.ConsulPolicies = v
}

// GetConsulRoles returns the ConsulRoles field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetConsulRoles() []string {
	if o == nil || o.ConsulRoles == nil {
		var ret []string
		return ret
	}
	return o.ConsulRoles
}

// GetConsulRolesOk returns a tuple with the ConsulRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetConsulRolesOk() ([]string, bool) {
	if o == nil || o.ConsulRoles == nil {
		return nil, false
	}
	return o.ConsulRoles, true
}

// HasConsulRoles returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasConsulRoles() bool {
	if o != nil && o.ConsulRoles != nil {
		return true
	}

	return false
}

// SetConsulRoles gets a reference to the given []string and assigns it to the ConsulRoles field.
func (o *ConsulRolesRequest) SetConsulRoles(v []string) {
	o.ConsulRoles = v
}

// GetLease returns the Lease field value if set, zero value otherwise.
// Deprecated
func (o *ConsulRolesRequest) GetLease() int32 {
	if o == nil || o.Lease == nil {
		var ret int32
		return ret
	}
	return *o.Lease
}

// GetLeaseOk returns a tuple with the Lease field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ConsulRolesRequest) GetLeaseOk() (*int32, bool) {
	if o == nil || o.Lease == nil {
		return nil, false
	}
	return o.Lease, true
}

// HasLease returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasLease() bool {
	if o != nil && o.Lease != nil {
		return true
	}

	return false
}

// SetLease gets a reference to the given int32 and assigns it to the Lease field.
// Deprecated
func (o *ConsulRolesRequest) SetLease(v int32) {
	o.Lease = &v
}

// GetLocal returns the Local field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetLocal() bool {
	if o == nil || o.Local == nil {
		var ret bool
		return ret
	}
	return *o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetLocalOk() (*bool, bool) {
	if o == nil || o.Local == nil {
		return nil, false
	}
	return o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasLocal() bool {
	if o != nil && o.Local != nil {
		return true
	}

	return false
}

// SetLocal gets a reference to the given bool and assigns it to the Local field.
func (o *ConsulRolesRequest) SetLocal(v bool) {
	o.Local = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *ConsulRolesRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetNodeIdentities returns the NodeIdentities field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetNodeIdentities() []string {
	if o == nil || o.NodeIdentities == nil {
		var ret []string
		return ret
	}
	return o.NodeIdentities
}

// GetNodeIdentitiesOk returns a tuple with the NodeIdentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetNodeIdentitiesOk() ([]string, bool) {
	if o == nil || o.NodeIdentities == nil {
		return nil, false
	}
	return o.NodeIdentities, true
}

// HasNodeIdentities returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasNodeIdentities() bool {
	if o != nil && o.NodeIdentities != nil {
		return true
	}

	return false
}

// SetNodeIdentities gets a reference to the given []string and assigns it to the NodeIdentities field.
func (o *ConsulRolesRequest) SetNodeIdentities(v []string) {
	o.NodeIdentities = v
}

// GetPartition returns the Partition field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetPartition() string {
	if o == nil || o.Partition == nil {
		var ret string
		return ret
	}
	return *o.Partition
}

// GetPartitionOk returns a tuple with the Partition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetPartitionOk() (*string, bool) {
	if o == nil || o.Partition == nil {
		return nil, false
	}
	return o.Partition, true
}

// HasPartition returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasPartition() bool {
	if o != nil && o.Partition != nil {
		return true
	}

	return false
}

// SetPartition gets a reference to the given string and assigns it to the Partition field.
func (o *ConsulRolesRequest) SetPartition(v string) {
	o.Partition = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *ConsulRolesRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ConsulRolesRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *ConsulRolesRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
// Deprecated
func (o *ConsulRolesRequest) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ConsulRolesRequest) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
// Deprecated
func (o *ConsulRolesRequest) SetPolicy(v string) {
	o.Policy = &v
}

// GetServiceIdentities returns the ServiceIdentities field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetServiceIdentities() []string {
	if o == nil || o.ServiceIdentities == nil {
		var ret []string
		return ret
	}
	return o.ServiceIdentities
}

// GetServiceIdentitiesOk returns a tuple with the ServiceIdentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetServiceIdentitiesOk() ([]string, bool) {
	if o == nil || o.ServiceIdentities == nil {
		return nil, false
	}
	return o.ServiceIdentities, true
}

// HasServiceIdentities returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasServiceIdentities() bool {
	if o != nil && o.ServiceIdentities != nil {
		return true
	}

	return false
}

// SetServiceIdentities gets a reference to the given []string and assigns it to the ServiceIdentities field.
func (o *ConsulRolesRequest) SetServiceIdentities(v []string) {
	o.ServiceIdentities = v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
// Deprecated
func (o *ConsulRolesRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ConsulRolesRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
// Deprecated
func (o *ConsulRolesRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *ConsulRolesRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o ConsulRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConsulNamespace != nil {
		toSerialize["consul_namespace"] = o.ConsulNamespace
	}
	if o.ConsulPolicies != nil {
		toSerialize["consul_policies"] = o.ConsulPolicies
	}
	if o.ConsulRoles != nil {
		toSerialize["consul_roles"] = o.ConsulRoles
	}
	if o.Lease != nil {
		toSerialize["lease"] = o.Lease
	}
	if o.Local != nil {
		toSerialize["local"] = o.Local
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.NodeIdentities != nil {
		toSerialize["node_identities"] = o.NodeIdentities
	}
	if o.Partition != nil {
		toSerialize["partition"] = o.Partition
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	if o.ServiceIdentities != nil {
		toSerialize["service_identities"] = o.ServiceIdentities
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableConsulRolesRequest struct {
	value *ConsulRolesRequest
	isSet bool
}

func (v NullableConsulRolesRequest) Get() *ConsulRolesRequest {
	return v.value
}

func (v *NullableConsulRolesRequest) Set(val *ConsulRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConsulRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConsulRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsulRolesRequest(val *ConsulRolesRequest) *NullableConsulRolesRequest {
	return &NullableConsulRolesRequest{value: val, isSet: true}
}

func (v NullableConsulRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsulRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpConfigRequest struct for GcpConfigRequest
type GcpConfigRequest struct {
	// Google credentials JSON that Vault will use to verify users against GCP APIs. If not specified, will use application default credentials
	Credentials *string `json:"credentials,omitempty"`
	// Specifies overrides for various Google API Service Endpoints used in requests.
	CustomEndpoint map[string]interface{} `json:"custom_endpoint,omitempty"`
	// Indicates what value to use when generating an alias for GCE authentications.
	GceAlias *string `json:"gce_alias,omitempty"`
	// The metadata to include on the aliases and audit logs generated by this plugin. When set to 'default', includes: instance_creation_timestamp, instance_id, instance_name, project_id, project_number, role, service_account_id, service_account_email, zone. Not editing this field means the 'default' fields are included. Explicitly setting this field to empty overrides the 'default' and means no metadata will be included. If not using 'default', explicit fields must be sent like: 'field1,field2'.
	GceMetadata []string `json:"gce_metadata,omitempty"`
	// Deprecated. This field does nothing and be removed in a future release
	// Deprecated
	GoogleCertsEndpoint *string `json:"google_certs_endpoint,omitempty"`
	// Indicates what value to use when generating an alias for IAM authentications.
	IamAlias *string `json:"iam_alias,omitempty"`
	// The metadata to include on the aliases and audit logs generated by this plugin. When set to 'default', includes: project_id, role, service_account_id, service_account_email. Not editing this field means the 'default' fields are included. Explicitly setting this field to empty overrides the 'default' and means no metadata will be included. If not using 'default', explicit fields must be sent like: 'field1,field2'.
	IamMetadata []string `json:"iam_metadata,omitempty"`
}

// NewGcpConfigRequest instantiates a new GcpConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpConfigRequest() *GcpConfigRequest {
	this := GcpConfigRequest{}
	var gceAlias string = "role_id"
	this.GceAlias = &gceAlias
	var iamAlias string = "role_id"
	this.IamAlias = &iamAlias
	return &this
}

// NewGcpConfigRequestWithDefaults instantiates a new GcpConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpConfigRequestWithDefaults() *GcpConfigRequest {
	this := GcpConfigRequest{}
	var gceAlias string = "role_id"
	this.GceAlias = &gceAlias
	var iamAlias string = "role_id"
	this.IamAlias = &iamAlias
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *GcpConfigRequest) GetCredentials() string {
	if o == nil || o.Credentials == nil {
		var ret string
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpConfigRequest) GetCredentialsOk() (*string, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given string and assigns it to the Credentials field.
func (o *GcpConfigRequest) SetCredentials(v string) {
	o.Credentials = &v
}

// GetCustomEndpoint returns the CustomEndpoint field value if set, zero value otherwise.
func (o *GcpConfigRequest) GetCustomEndpoint() map[string]interface{} {
	if o == nil || o.CustomEndpoint == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomEndpoint
}

// GetCustomEndpointOk returns a tuple with the CustomEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpConfigRequest) GetCustomEndpointOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomEndpoint == nil {
		return nil, false
	}
	return o.CustomEndpoint, true
}

// HasCustomEndpoint returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasCustomEndpoint() bool {
	if o != nil && o.CustomEndpoint != nil {
		return true
	}

	return false
}

// SetCustomEndpoint gets a reference to the given map[string]interface{} and assigns it to the CustomEndpoint field.
func (o *GcpConfigRequest) SetCustomEndpoint(v map[string]interface{}) {
	o.CustomEndpoint = v
}

// GetGceAlias returns the GceAlias field value if set, zero value otherwise.
func (o *GcpConfigRequest) GetGceAlias() string {
	if o == nil || o.GceAlias == nil {
		var ret string
		return ret
	}
	return *o.GceAlias
}

// GetGceAliasOk returns a tuple with the GceAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpConfigRequest) GetGceAliasOk() (*string, bool) {
	if o == nil || o.GceAlias == nil {
		return nil, false
	}
	return o.GceAlias, true
}

// HasGceAlias returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasGceAlias() bool {
	if o != nil && o.GceAlias != nil {
		return true
	}

	return false
}

// SetGceAlias gets a reference to the given string and assigns it to the GceAlias field.
func (o *GcpConfigRequest) SetGceAlias(v string) {
	o.GceAlias = &v
}

// GetGceMetadata returns the GceMetadata field value if set, zero value otherwise.
func (o *GcpConfigRequest) GetGceMetadata() []string {
	if o == nil || o.GceMetadata == nil {
		var ret []string
		return ret
	}
	return o.GceMetadata
}

// GetGceMetadataOk returns a tuple with the GceMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpConfigRequest) GetGceMetadataOk() ([]string, bool) {
	if o == nil || o.GceMetadata == nil {
		return nil, false
	}
	return o.GceMetadata, true
}

// HasGceMetadata returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasGceMetadata() bool {
	if o != nil && o.GceMetadata != nil {
		return true
	}

	return false
}

// SetGceMetadata gets a reference to the given []string and assigns it to the GceMetadata field.
func (o *GcpConfigRequest) SetGceMetadata(v []string) {
	o.GceMetadata = v
}

// GetGoogleCertsEndpoint returns the GoogleCertsEndpoint field value if set, zero value otherwise.
// Deprecated
func (o *GcpConfigRequest) GetGoogleCertsEndpoint() string {
	if o == nil || o.GoogleCertsEndpoint == nil {
		var ret string
		return ret
	}
	return *o.GoogleCertsEndpoint
}

// GetGoogleCertsEndpointOk returns a tuple with the GoogleCertsEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GcpConfigRequest) GetGoogleCertsEndpointOk() (*string, bool) {
	if o == nil || o.GoogleCertsEndpoint == nil {
		return nil, false
	}
	return o.GoogleCertsEndpoint, true
}

// HasGoogleCertsEndpoint returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasGoogleCertsEndpoint() bool {
	if o != nil && o.GoogleCertsEndpoint != nil {
		return true
	}

	return false
}

// SetGoogleCertsEndpoint gets a reference to the given string and assigns it to the GoogleCertsEndpoint field.
// Deprecated
func (o *GcpConfigRequest) SetGoogleCertsEndpoint(v string) {
	o.GoogleCertsEndpoint = &v
}

// GetIamAlias returns the IamAlias field value if set, zero value otherwise.
func (o *GcpConfigRequest) GetIamAlias() string {
	if o == nil || o.IamAlias == nil {
		var ret string
		return ret
	}
	return *o.IamAlias
}

// GetIamAliasOk returns a tuple with the IamAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpConfigRequest) GetIamAliasOk() (*string, bool) {
	if o == nil || o.IamAlias == nil {
		return nil, false
	}
	return o.IamAlias, true
}

// HasIamAlias returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasIamAlias() bool {
	if o != nil && o.IamAlias != nil {
		return true
	}

	return false
}

// SetIamAlias gets a reference to the given string and assigns it to the IamAlias field.
func (o *GcpConfigRequest) SetIamAlias(v string) {
	o.IamAlias = &v
}

// GetIamMetadata returns the IamMetadata field value if set, zero value otherwise.
func (o *GcpConfigRequest) GetIamMetadata() []string {
	if o == nil || o.IamMetadata == nil {
		var ret []string
		return ret
	}
	return o.IamMetadata
}

// GetIamMetadataOk returns a tuple with the IamMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpConfigRequest) GetIamMetadataOk() ([]string, bool) {
	if o == nil || o.IamMetadata == nil {
		return nil, false
	}
	return o.IamMetadata, true
}

// HasIamMetadata returns a boolean if a field has been set.
func (o *GcpConfigRequest) HasIamMetadata() bool {
	if o != nil && o.IamMetadata != nil {
		return true
	}

	return false
}

// SetIamMetadata gets a reference to the given []string and assigns it to the IamMetadata field.
func (o *GcpConfigRequest) SetIamMetadata(v []string) {
	o.IamMetadata = v
}

func (o GcpConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if o.CustomEndpoint != nil {
		toSerialize["custom_endpoint"] = o.CustomEndpoint
	}
	if o.GceAlias != nil {
		toSerialize["gce_alias"] = o.GceAlias
	}
	if o.GceMetadata != nil {
		toSerialize["gce_metadata"] = o.GceMetadata
	}
	if o.GoogleCertsEndpoint != nil {
		toSerialize["google_certs_endpoint"] = o.GoogleCertsEndpoint
	}
	if o.IamAlias != nil {
		toSerialize["iam_alias"] = o.IamAlias
	}
	if o.IamMetadata != nil {
		toSerialize["iam_metadata"] = o.IamMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableGcpConfigRequest struct {
	value *GcpConfigRequest
	isSet bool
}

func (v NullableGcpConfigRequest) Get() *GcpConfigRequest {
	return v.value
}

func (v *NullableGcpConfigRequest) Set(val *GcpConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpConfigRequest(val *GcpConfigRequest) *NullableGcpConfigRequest {
	return &NullableGcpConfigRequest{value: val, isSet: true}
}

func (v NullableGcpConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpKeyRequest struct for GcpKeyRequest
type GcpKeyRequest struct {
	// Private key algorithm for service account key - defaults to KEY_ALG_RSA_2048\"
	KeyAlgorithm *string `json:"key_algorithm,omitempty"`
	// Private key type for service account key - defaults to TYPE_GOOGLE_CREDENTIALS_FILE\"
	KeyType *string `json:"key_type,omitempty"`
	// Lifetime of the service account key
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewGcpKeyRequest instantiates a new GcpKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpKeyRequest() *GcpKeyRequest {
	this := GcpKeyRequest{}
	var keyAlgorithm string = "KEY_ALG_RSA_2048"
	this.KeyAlgorithm = &keyAlgorithm
	var keyType string = "TYPE_GOOGLE_CREDENTIALS_FILE"
	this.KeyType = &keyType
	return &this
}

// NewGcpKeyRequestWithDefaults instantiates a new GcpKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpKeyRequestWithDefaults() *GcpKeyRequest {
	this := GcpKeyRequest{}
	var keyAlgorithm string = "KEY_ALG_RSA_2048"
	this.KeyAlgorithm = &keyAlgorithm
	var keyType string = "TYPE_GOOGLE_CREDENTIALS_FILE"
	this.KeyType = &keyType
	return &this
}

// GetKeyAlgorithm returns the KeyAlgorithm field value if set, zero value otherwise.
func (o *GcpKeyRequest) GetKeyAlgorithm() string {
	if o == nil || o.KeyAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.KeyAlgorithm
}

// GetKeyAlgorithmOk returns a tuple with the KeyAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpKeyRequest) GetKeyAlgorithmOk() (*string, bool) {
	if o == nil || o.KeyAlgorithm == nil {
		return nil, false
	}
	return o.KeyAlgorithm, true
}

// HasKeyAlgorithm returns a boolean if a field has been set.
func (o *GcpKeyRequest) HasKeyAlgorithm() bool {
	if o != nil && o.KeyAlgorithm != nil {
		return true
	}

	return false
}

// SetKeyAlgorithm gets a reference to the given string and assigns it to the KeyAlgorithm field.
func (o *GcpKeyRequest) SetKeyAlgorithm(v string) {
	o.KeyAlgorithm = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *GcpKeyRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpKeyRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *GcpKeyRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *GcpKeyRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *GcpKeyRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpKeyRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *GcpKeyRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *GcpKeyRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o GcpKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeyAlgorithm != nil {
		toSerialize["key_algorithm"] = o.KeyAlgorithm
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableGcpKeyRequest struct {
	value *GcpKeyRequest
	isSet bool
}

func (v NullableGcpKeyRequest) Get() *GcpKeyRequest {
	return v.value
}

func (v *NullableGcpKeyRequest) Set(val *GcpKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpKeyRequest(val *GcpKeyRequest) *NullableGcpKeyRequest {
	return &NullableGcpKeyRequest{value: val, isSet: true}
}

func (v NullableGcpKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpLoginRequest struct for GcpLoginRequest
type GcpLoginRequest struct {
	// A signed JWT. This is either a self-signed service account JWT ('iam' roles only) or a GCE identity metadata token ('iam', 'gce' roles).
	Jwt *string `json:"jwt,omitempty"`
	// Name of the role against which the login is being attempted. Required.
	Role *string `json:"role,omitempty"`
}

// NewGcpLoginRequest instantiates a new GcpLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpLoginRequest() *GcpLoginRequest {
	this := GcpLoginRequest{}
	return &this
}

// NewGcpLoginRequestWithDefaults instantiates a new GcpLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpLoginRequestWithDefaults() *GcpLoginRequest {
	this := GcpLoginRequest{}
	return &this
}

// GetJwt returns the Jwt field value if set, zero value otherwise.
func (o *GcpLoginRequest) GetJwt() string {
	if o == nil || o.Jwt == nil {
		var ret string
		return ret
	}
	return *o.Jwt
}

// GetJwtOk returns a tuple with the Jwt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpLoginRequest) GetJwtOk() (*string, bool) {
	if o == nil || o.Jwt == nil {
		return nil, false
	}
	return o.Jwt, true
}

// HasJwt returns a boolean if a field has been set.
func (o *GcpLoginRequest) HasJwt() bool {
	if o != nil && o.Jwt != nil {
		return true
	}

	return false
}

// SetJwt gets a reference to the given string and assigns it to the Jwt field.
func (o *GcpLoginRequest) SetJwt(v string) {
	o.Jwt = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *GcpLoginRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpLoginRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *GcpLoginRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *GcpLoginRequest) SetRole(v string) {
	o.Role = &v
}

func (o GcpLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Jwt != nil {
		toSerialize["jwt"] = o.Jwt
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableGcpLoginRequest struct {
	value *GcpLoginRequest
	isSet bool
}

func (v NullableGcpLoginRequest) Get() *GcpLoginRequest {
	return v.value
}

func (v *NullableGcpLoginRequest) Set(val *GcpLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpLoginRequest(val *GcpLoginRequest) *NullableGcpLoginRequest {
	return &NullableGcpLoginRequest{value: val, isSet: true}
}

func (v NullableGcpLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpRoleLabelsRequest struct for GcpRoleLabelsRequest
type GcpRoleLabelsRequest struct {
	// BoundLabels to add (in $key:$value)
	Add []string `json:"add,omitempty"`
	// Label key values to remove
	Remove []string `json:"remove,omitempty"`
}

// NewGcpRoleLabelsRequest instantiates a new GcpRoleLabelsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpRoleLabelsRequest() *GcpRoleLabelsRequest {
	this := GcpRoleLabelsRequest{}
	return &this
}

// NewGcpRoleLabelsRequestWithDefaults instantiates a new GcpRoleLabelsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpRoleLabelsRequestWithDefaults() *GcpRoleLabelsRequest {
	this := GcpRoleLabelsRequest{}
	return &this
}

// GetAdd returns the Add field value if set, zero value otherwise.
func (o *GcpRoleLabelsRequest) GetAdd() []string {
	if o == nil || o.Add == nil {
		var ret []string
		return ret
	}
	return o.Add
}

// GetAddOk returns a tuple with the Add field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleLabelsRequest) GetAddOk() ([]string, bool) {
	if o == nil || o.Add == nil {
		return nil, false
	}
	return o.Add, true
}

// HasAdd returns a boolean if a field has been set.
func (o *GcpRoleLabelsRequest) HasAdd() bool {
	if o != nil && o.Add != nil {
		return true
	}

	return false
}

// SetAdd gets a reference to the given []string and assigns it to the Add field.
func (o *GcpRoleLabelsRequest) SetAdd(v []string) {
	o.Add = v
}

// GetRemove returns the Remove field value if set, zero value otherwise.
func (o *GcpRoleLabelsRequest) GetRemove() []string {
	if o == nil || o.Remove == nil {
		var ret []string
		return ret
	}
	return o.Remove
}

// GetRemoveOk returns a tuple with the Remove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleLabelsRequest) GetRemoveOk() ([]string, bool) {
	if o == nil || o.Remove == nil {
		return nil, false
	}
	return o.Remove, true
}

// HasRemove returns a boolean if a field has been set.
func (o *GcpRoleLabelsRequest) HasRemove() bool {
	if o != nil && o.Remove != nil {
		return true
	}

	return false
}

// SetRemove gets a reference to the given []string and assigns it to the Remove field.
func (o *GcpRoleLabelsRequest) SetRemove(v []string) {
	o.Remove = v
}

func (o GcpRoleLabelsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Add != nil {
		toSerialize["add"] = o.Add
	}
	if o.Remove != nil {
		toSerialize["remove"] = o.Remove
	}
	return json.Marshal(toSerialize)
}

type NullableGcpRoleLabelsRequest struct {
	value *GcpRoleLabelsRequest
	isSet bool
}

func (v NullableGcpRoleLabelsRequest) Get() *GcpRoleLabelsRequest {
	return v.value
}

func (v *NullableGcpRoleLabelsRequest) Set(val *GcpRoleLabelsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpRoleLabelsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpRoleLabelsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpRoleLabelsRequest(val *GcpRoleLabelsRequest) *NullableGcpRoleLabelsRequest {
	return &NullableGcpRoleLabelsRequest{value: val, isSet: true}
}

func (v NullableGcpRoleLabelsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpRoleLabelsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpRoleRequest struct for GcpRoleRequest
type GcpRoleRequest struct {
	// If true, will add group aliases to auth tokens generated under this role. This will add the full list of ancestors (projects, folders, organizations) for the given entity's project. Requires IAM permission `resourcemanager.projects.get` on this project.
	AddGroupAliases *bool `json:"add_group_aliases,omitempty"`
	// 'iam' roles only. If false, Vault will not not allow GCE instances to login in against this role
	AllowGceInference *bool `json:"allow_gce_inference,omitempty"`
	// Deprecated: use \"bound_instance_groups\" instead.
	BoundInstanceGroup *string `json:"bound_instance_group,omitempty"`
	// Comma-separated list of permitted instance groups to which the GCE instance must belong. This option only applies to \"gce\" roles.
	BoundInstanceGroups []string `json:"bound_instance_groups,omitempty"`
	// Comma-separated list of GCP labels formatted as\"key:value\" strings that must be present on the GCE instance in order to authenticate. This option only applies to \"gce\" roles.
	BoundLabels []string `json:"bound_labels,omitempty"`
	// GCP Projects that authenticating entities must belong to.
	BoundProjects []string `json:"bound_projects,omitempty"`
	// Deprecated: use \"bound_regions\" instead.
	BoundRegion *string `json:"bound_region,omitempty"`
	// Comma-separated list of permitted regions to which the GCE instance must belong. If a group is provided, it is assumed to be a regional group. If \"zone\" is provided, this option is ignored. This can be a self-link or region name. This option only applies to \"gce\" roles.
	BoundRegions []string `json:"bound_regions,omitempty"`
	// Can be set for both 'iam' and 'gce' roles (required for 'iam'). A comma-seperated list of authorized service accounts. If the single value \"*\" is given, this is assumed to be all service accounts under the role's project. If this is set on a GCE role, the inferred service account from the instance metadata token will be used.
	BoundServiceAccounts []string `json:"bound_service_accounts,omitempty"`
	// Deprecated: use \"bound_zones\" instead.
	BoundZone *string `json:"bound_zone,omitempty"`
	// Comma-separated list of permitted zones to which the GCE instance must belong. If a group is provided, it is assumed to be a zonal group. This can be a self-link or zone name. This option only applies to \"gce\" roles.
	BoundZones []string `json:"bound_zones,omitempty"`
	// Currently enabled for 'iam' only. Duration in seconds from time of validation that a JWT must expire within.
	MaxJwtExp *int32 `json:"max_jwt_exp,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Deprecated: use \"bound_projects\" instead
	ProjectId *string `json:"project_id,omitempty"`
	// Deprecated: use \"bound_service_accounts\" instead.
	ServiceAccounts []string `json:"service_accounts,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
	// Type of the role. Currently supported: iam, gce
	Type *string `json:"type,omitempty"`
}

// NewGcpRoleRequest instantiates a new GcpRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpRoleRequest() *GcpRoleRequest {
	this := GcpRoleRequest{}
	var addGroupAliases bool = false
	this.AddGroupAliases = &addGroupAliases
	var allowGceInference bool = true
	this.AllowGceInference = &allowGceInference
	var maxJwtExp int32 = 900
	this.MaxJwtExp = &maxJwtExp
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewGcpRoleRequestWithDefaults instantiates a new GcpRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpRoleRequestWithDefaults() *GcpRoleRequest {
	this := GcpRoleRequest{}
	var addGroupAliases bool = false
	this.AddGroupAliases = &addGroupAliases
	var allowGceInference bool = true
	this.AllowGceInference = &allowGceInference
	var maxJwtExp int32 = 900
	this.MaxJwtExp = &maxJwtExp
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetAddGroupAliases returns the AddGroupAliases field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetAddGroupAliases() bool {
	if o == nil || o.AddGroupAliases == nil {
		var ret bool
		return ret
	}
	return *o.AddGroupAliases
}

// GetAddGroupAliasesOk returns a tuple with the AddGroupAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetAddGroupAliasesOk() (*bool, bool) {
	if o == nil || o.AddGroupAliases == nil {
		return nil, false
	}
	return o.AddGroupAliases, true
}

// HasAddGroupAliases returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasAddGroupAliases() bool {
	if o != nil && o.AddGroupAliases != nil {
		return true
	}

	return false
}

// SetAddGroupAliases gets a reference to the given bool and assigns it to the AddGroupAliases field.
func (o *GcpRoleRequest) SetAddGroupAliases(v bool) {
	o.AddGroupAliases = &v
}

// GetAllowGceInference returns the AllowGceInference field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetAllowGceInference() bool {
	if o == nil || o.AllowGceInference == nil {
		var ret bool
		return ret
	}
	return *o.AllowGceInference
}

// GetAllowGceInferenceOk returns a tuple with the AllowGceInference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetAllowGceInferenceOk() (*bool, bool) {
	if o == nil || o.AllowGceInference == nil {
		return nil, false
	}
	return o.AllowGceInference, true
}

// HasAllowGceInference returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasAllowGceInference() bool {
	if o != nil && o.AllowGceInference != nil {
		return true
	}

	return false
}

// SetAllowGceInference gets a reference to the given bool and assigns it to the AllowGceInference field.
func (o *GcpRoleRequest) SetAllowGceInference(v bool) {
	o.AllowGceInference = &v
}

// GetBoundInstanceGroup returns the BoundInstanceGroup field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetBoundInstanceGroup() string {
	if o == nil || o.BoundInstanceGroup == nil {
		var ret string
		return ret
	}
	return *o.BoundInstanceGroup
}

// GetBoundInstanceGroupOk returns a tuple with the BoundInstanceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetBoundInstanceGroupOk() (*string, bool) {
	if o == nil || o.BoundInstanceGroup == nil {
		return nil, false
	}
	return o.BoundInstanceGroup, true
}

// HasBoundInstanceGroup returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasBoundInstanceGroup() bool {
	if o != nil && o.BoundInstanceGroup != nil {
		return true
	}

	return false
}

// SetBoundInstanceGroup gets a reference to the given string and assigns it to the BoundInstanceGroup field.
func (o *GcpRoleRequest) SetBoundInstanceGroup(v string) {
	o.BoundInstanceGroup = &v
}

// GetBoundInstanceGroups returns the BoundInstanceGroups field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetBoundInstanceGroups() []string {
	if o == nil || o.BoundInstanceGroups == nil {
		var ret []string
		return ret
	}
	return o.BoundInstanceGroups
}

// GetBoundInstanceGroupsOk returns a tuple with the BoundInstanceGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetBoundInstanceGroupsOk() ([]string, bool) {
	if o == nil || o.BoundInstanceGroups == nil {
		return nil, false
	}
	return o.BoundInstanceGroups, true
}

// HasBoundInstanceGroups returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasBoundInstanceGroups() bool {
	if o != nil && o.BoundInstanceGroups != nil {
		return true
	}

	return false
}

// SetBoundInstanceGroups gets a reference to the given []string and assigns it to the BoundInstanceGroups field.
func (o *GcpRoleRequest) SetBoundInstanceGroups(v []string) {
	o.BoundInstanceGroups = v
}

// GetBoundLabels returns the BoundLabels field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetBoundLabels() []string {
	if o == nil || o.BoundLabels == nil {
		var ret []string
		return ret
	}
	return o.BoundLabels
}

// GetBoundLabelsOk returns a tuple with the BoundLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetBoundLabelsOk() ([]string, bool) {
	if o == nil || o.BoundLabels == nil {
		return nil, false
	}
	return o.BoundLabels, true
}

// HasBoundLabels returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasBoundLabels() bool {
	if o != nil && o.BoundLabels != nil {
		return true
	}

	return false
}

// SetBoundLabels gets a reference to the given []string and assigns it to the BoundLabels field.
func (o *GcpRoleRequest) SetBoundLabels(v []string) {
	o.BoundLabels = v
}

// GetBoundProjects returns the BoundProjects field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetBoundProjects() []string {
	if o == nil || o.BoundProjects == nil {
		var ret []string
		return ret
	}
	return o.BoundProjects
}

// GetBoundProjectsOk returns a tuple with the BoundProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetBoundProjectsOk() ([]string, bool) {
	if o == nil || o.BoundProjects == nil {
		return nil, false
	}
	return o.BoundProjects, true
}

// HasBoundProjects returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasBoundProjects() bool {
	if o != nil && o.BoundProjects != nil {
		return true
	}

	return false
}

// SetBoundProjects gets a reference to the given []string and assigns it to the BoundProjects field.
func (o *GcpRoleRequest) SetBoundProjects(v []string) {
	o.BoundProjects = v
}

// GetBoundRegion returns the BoundRegion field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetBoundRegion() string {
	if o == nil || o.BoundRegion == nil {
		var ret string
		return ret
	}
	return *o.BoundRegion
}

// GetBoundRegionOk returns a tuple with the BoundRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetBoundRegionOk() (*string, bool) {
	if o == nil || o.BoundRegion == nil {
		return nil, false
	}
	return o.BoundRegion, true
}

// HasBoundRegion returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasBoundRegion() bool {
	if o != nil && o.BoundRegion != nil {
		return true
	}

	return false
}

// SetBoundRegion gets a reference to the given string and assigns it to the BoundRegion field.
func (o *GcpRoleRequest) SetBoundRegion(v string) {
	o.BoundRegion = &v
}

// GetBoundRegions returns the BoundRegions field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetBoundRegions() []string {
	if o == nil || o.BoundRegions == nil {
		var ret []string
		return ret
	}
	return o.BoundRegions
}

// GetBoundRegionsOk returns a tuple with the BoundRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetBoundRegionsOk() ([]string, bool) {
	if o == nil || o.BoundRegions == nil {
		return nil, false
	}
	return o.BoundRegions, true
}

// HasBoundRegions returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasBoundRegions() bool {
	if o != nil && o.BoundRegions != nil {
		return true
	}

	return false
}

// SetBoundRegions gets a reference to the given []string and assigns it to the BoundRegions field.
func (o *GcpRoleRequest) SetBoundRegions(v []string) {
	o.BoundRegions = v
}

// GetBoundServiceAccounts returns the BoundServiceAccounts field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetBoundServiceAccounts() []string {
	if o == nil || o.BoundServiceAccounts == nil {
		var ret []string
		return ret
	}
	return o.BoundServiceAccounts
}

// GetBoundServiceAccountsOk returns a tuple with the BoundServiceAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetBoundServiceAccountsOk() ([]string, bool) {
	if o == nil || o.BoundServiceAccounts == nil {
		return nil, false
	}
	return o.BoundServiceAccounts, true
}

// HasBoundServiceAccounts returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasBoundServiceAccounts() bool {
	if o != nil && o.BoundServiceAccounts != nil {
		return true
	}

	return false
}

// SetBoundServiceAccounts gets a reference to the given []string and assigns it to the BoundServiceAccounts field.
func (o *GcpRoleRequest) SetBoundServiceAccounts(v []string) {
	o.BoundServiceAccounts = v
}

// GetBoundZone returns the BoundZone field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetBoundZone() string {
	if o == nil || o.BoundZone == nil {
		var ret string
		return ret
	}
	return *o.BoundZone
}

// GetBoundZoneOk returns a tuple with the BoundZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetBoundZoneOk() (*string, bool) {
	if o == nil || o.BoundZone == nil {
		return nil, false
	}
	return o.BoundZone, true
}

// HasBoundZone returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasBoundZone() bool {
	if o != nil && o.BoundZone != nil {
		return true
	}

	return false
}

// SetBoundZone gets a reference to the given string and assigns it to the BoundZone field.
func (o *GcpRoleRequest) SetBoundZone(v string) {
	o.BoundZone = &v
}

// GetBoundZones returns the BoundZones field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetBoundZones() []string {
	if o == nil || o.BoundZones == nil {
		var ret []string
		return ret
	}
	return o.BoundZones
}

// GetBoundZonesOk returns a tuple with the BoundZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetBoundZonesOk() ([]string, bool) {
	if o == nil || o.BoundZones == nil {
		return nil, false
	}
	return o.BoundZones, true
}

// HasBoundZones returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasBoundZones() bool {
	if o != nil && o.BoundZones != nil {
		return true
	}

	return false
}

// SetBoundZones gets a reference to the given []string and assigns it to the BoundZones field.
func (o *GcpRoleRequest) SetBoundZones(v []string) {
	o.BoundZones = v
}

// GetMaxJwtExp returns the MaxJwtExp field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetMaxJwtExp() int32 {
	if o == nil || o.MaxJwtExp == nil {
		var ret int32
		return ret
	}
	return *o.MaxJwtExp
}

// GetMaxJwtExpOk returns a tuple with the MaxJwtExp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetMaxJwtExpOk() (*int32, bool) {
	if o == nil || o.MaxJwtExp == nil {
		return nil, false
	}
	return o.MaxJwtExp, true
}

// HasMaxJwtExp returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasMaxJwtExp() bool {
	if o != nil && o.MaxJwtExp != nil {
		return true
	}

	return false
}

// SetMaxJwtExp gets a reference to the given int32 and assigns it to the MaxJwtExp field.
func (o *GcpRoleRequest) SetMaxJwtExp(v int32) {
	o.MaxJwtExp = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *GcpRoleRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GcpRoleRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *GcpRoleRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *GcpRoleRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GcpRoleRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *GcpRoleRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *GcpRoleRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GcpRoleRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *GcpRoleRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *GcpRoleRequest) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetServiceAccounts returns the ServiceAccounts field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetServiceAccounts() []string {
	if o == nil || o.ServiceAccounts == nil {
		var ret []string
		return ret
	}
	return o.ServiceAccounts
}

// GetServiceAccountsOk returns a tuple with the ServiceAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetServiceAccountsOk() ([]string, bool) {
	if o == nil || o.ServiceAccounts == nil {
		return nil, false
	}
	return o.ServiceAccounts, true
}

// HasServiceAccounts returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasServiceAccounts() bool {
	if o != nil && o.ServiceAccounts != nil {
		return true
	}

	return false
}

// SetServiceAccounts gets a reference to the given []string and assigns it to the ServiceAccounts field.
func (o *GcpRoleRequest) SetServiceAccounts(v []string) {
	o.ServiceAccounts = v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *GcpRoleRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *GcpRoleRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *GcpRoleRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *GcpRoleRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *GcpRoleRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *GcpRoleRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *GcpRoleRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *GcpRoleRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *GcpRoleRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *GcpRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GcpRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *GcpRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GcpRoleRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GcpRoleRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GcpRoleRequest) SetType(v string) {
	o.Type = &v
}

func (o GcpRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddGroupAliases != nil {
		toSerialize["add_group_aliases"] = o.AddGroupAliases
	}
	if o.AllowGceInference != nil {
		toSerialize["allow_gce_inference"] = o.AllowGceInference
	}
	if o.BoundInstanceGroup != nil {
		toSerialize["bound_instance_group"] = o.BoundInstanceGroup
	}
	if o.BoundInstanceGroups != nil {
		toSerialize["bound_instance_groups"] = o.BoundInstanceGroups
	}
	if o.BoundLabels != nil {
		toSerialize["bound_labels"] = o.BoundLabels
	}
	if o.BoundProjects != nil {
		toSerialize["bound_projects"] = o.BoundProjects
	}
	if o.BoundRegion != nil {
		toSerialize["bound_region"] = o.BoundRegion
	}
	if o.BoundRegions != nil {
		toSerialize["bound_regions"] = o.BoundRegions
	}
	if o.BoundServiceAccounts != nil {
		toSerialize["bound_service_accounts"] = o.BoundServiceAccounts
	}
	if o.BoundZone != nil {
		toSerialize["bound_zone"] = o.BoundZone
	}
	if o.BoundZones != nil {
		toSerialize["bound_zones"] = o.BoundZones
	}
	if o.MaxJwtExp != nil {
		toSerialize["max_jwt_exp"] = o.MaxJwtExp
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.ProjectId != nil {
		toSerialize["project_id"] = o.ProjectId
	}
	if o.ServiceAccounts != nil {
		toSerialize["service_accounts"] = o.ServiceAccounts
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableGcpRoleRequest struct {
	value *GcpRoleRequest
	isSet bool
}

func (v NullableGcpRoleRequest) Get() *GcpRoleRequest {
	return v.value
}

func (v *NullableGcpRoleRequest) Set(val *GcpRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpRoleRequest(val *GcpRoleRequest) *NullableGcpRoleRequest {
	return &NullableGcpRoleRequest{value: val, isSet: true}
}

func (v NullableGcpRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpRoleServiceAccountsRequest struct for GcpRoleServiceAccountsRequest
type GcpRoleServiceAccountsRequest struct {
	// Service-account emails or IDs to add.
	Add []string `json:"add,omitempty"`
	// Service-account emails or IDs to remove.
	Remove []string `json:"remove,omitempty"`
}

// NewGcpRoleServiceAccountsRequest instantiates a new GcpRoleServiceAccountsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpRoleServiceAccountsRequest() *GcpRoleServiceAccountsRequest {
	this := GcpRoleServiceAccountsRequest{}
	return &this
}

// NewGcpRoleServiceAccountsRequestWithDefaults instantiates a new GcpRoleServiceAccountsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpRoleServiceAccountsRequestWithDefaults() *GcpRoleServiceAccountsRequest {
	this := GcpRoleServiceAccountsRequest{}
	return &this
}

// GetAdd returns the Add field value if set, zero value otherwise.
func (o *GcpRoleServiceAccountsRequest) GetAdd() []string {
	if o == nil || o.Add == nil {
		var ret []string
		return ret
	}
	return o.Add
}

// GetAddOk returns a tuple with the Add field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleServiceAccountsRequest) GetAddOk() ([]string, bool) {
	if o == nil || o.Add == nil {
		return nil, false
	}
	return o.Add, true
}

// HasAdd returns a boolean if a field has been set.
func (o *GcpRoleServiceAccountsRequest) HasAdd() bool {
	if o != nil && o.Add != nil {
		return true
	}

	return false
}

// SetAdd gets a reference to the given []string and assigns it to the Add field.
func (o *GcpRoleServiceAccountsRequest) SetAdd(v []string) {
	o.Add = v
}

// GetRemove returns the Remove field value if set, zero value otherwise.
func (o *GcpRoleServiceAccountsRequest) GetRemove() []string {
	if o == nil || o.Remove == nil {
		var ret []string
		return ret
	}
	return o.Remove
}

// GetRemoveOk returns a tuple with the Remove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRoleServiceAccountsRequest) GetRemoveOk() ([]string, bool) {
	if o == nil || o.Remove == nil {
		return nil, false
	}
	return o.Remove, true
}

// HasRemove returns a boolean if a field has been set.
func (o *GcpRoleServiceAccountsRequest) HasRemove() bool {
	if o != nil && o.Remove != nil {
		return true
	}

	return false
}

// SetRemove gets a reference to the given []string and assigns it to the Remove field.
func (o *GcpRoleServiceAccountsRequest) SetRemove(v []string) {
	o.Remove = v
}

func (o GcpRoleServiceAccountsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Add != nil {
		toSerialize["add"] = o.Add
	}
	if o.Remove != nil {
		toSerialize["remove"] = o.Remove
	}
	return json.Marshal(toSerialize)
}

type NullableGcpRoleServiceAccountsRequest struct {
	value *GcpRoleServiceAccountsRequest
	isSet bool
}

func (v NullableGcpRoleServiceAccountsRequest) Get() *GcpRoleServiceAccountsRequest {
	return v.value
}

func (v *NullableGcpRoleServiceAccountsRequest) Set(val *GcpRoleServiceAccountsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpRoleServiceAccountsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpRoleServiceAccountsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpRoleServiceAccountsRequest(val *GcpRoleServiceAccountsRequest) *NullableGcpRoleServiceAccountsRequest {
	return &NullableGcpRoleServiceAccountsRequest{value: val, isSet: true}
}

func (v NullableGcpRoleServiceAccountsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpRoleServiceAccountsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpRolesetKeyRequest struct for GcpRolesetKeyRequest
type GcpRolesetKeyRequest struct {
	// Private key algorithm for service account key - defaults to KEY_ALG_RSA_2048\"
	KeyAlgorithm *string `json:"key_algorithm,omitempty"`
	// Private key type for service account key - defaults to TYPE_GOOGLE_CREDENTIALS_FILE\"
	KeyType *string `json:"key_type,omitempty"`
	// Lifetime of the service account key
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewGcpRolesetKeyRequest instantiates a new GcpRolesetKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpRolesetKeyRequest() *GcpRolesetKeyRequest {
	this := GcpRolesetKeyRequest{}
	var keyAlgorithm string = "KEY_ALG_RSA_2048"
	this.KeyAlgorithm = &keyAlgorithm
	var keyType string = "TYPE_GOOGLE_CREDENTIALS_FILE"
	this.KeyType = &keyType
	return &this
}

// NewGcpRolesetKeyRequestWithDefaults instantiates a new GcpRolesetKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpRolesetKeyRequestWithDefaults() *GcpRolesetKeyRequest {
	this := GcpRolesetKeyRequest{}
	var keyAlgorithm string = "KEY_ALG_RSA_2048"
	this.KeyAlgorithm = &keyAlgorithm
	var keyType string = "TYPE_GOOGLE_CREDENTIALS_FILE"
	this.KeyType = &keyType
	return &this
}

// GetKeyAlgorithm returns the KeyAlgorithm field value if set, zero value otherwise.
func (o *GcpRolesetKeyRequest) GetKeyAlgorithm() string {
	if o == nil || o.KeyAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.KeyAlgorithm
}

// GetKeyAlgorithmOk returns a tuple with the KeyAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRolesetKeyRequest) GetKeyAlgorithmOk() (*string, bool) {
	if o == nil || o.KeyAlgorithm == nil {
		return nil, false
	}
	return o.KeyAlgorithm, true
}

// HasKeyAlgorithm returns a boolean if a field has been set.
func (o *GcpRolesetKeyRequest) HasKeyAlgorithm() bool {
	if o != nil && o.KeyAlgorithm != nil {
		return true
	}

	return false
}

// SetKeyAlgorithm gets a reference to the given string and assigns it to the KeyAlgorithm field.
func (o *GcpRolesetKeyRequest) SetKeyAlgorithm(v string) {
	o.KeyAlgorithm = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *GcpRolesetKeyRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRolesetKeyRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *GcpRolesetKeyRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *GcpRolesetKeyRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *GcpRolesetKeyRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRolesetKeyRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *GcpRolesetKeyRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *GcpRolesetKeyRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o GcpRolesetKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeyAlgorithm != nil {
		toSerialize["key_algorithm"] = o.KeyAlgorithm
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableGcpRolesetKeyRequest struct {
	value *GcpRolesetKeyRequest
	isSet bool
}

func (v NullableGcpRolesetKeyRequest) Get() *GcpRolesetKeyRequest {
	return v.value
}

func (v *NullableGcpRolesetKeyRequest) Set(val *GcpRolesetKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpRolesetKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpRolesetKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpRolesetKeyRequest(val *GcpRolesetKeyRequest) *NullableGcpRolesetKeyRequest {
	return &NullableGcpRolesetKeyRequest{value: val, isSet: true}
}

func (v NullableGcpRolesetKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpRolesetKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpRolesetRequest struct for GcpRolesetRequest
type GcpRolesetRequest struct {
	// Bindings configuration string.
	Bindings *string `json:"bindings,omitempty"`
	// Name of the GCP project that this roleset's service account will belong to.
	Project *string `json:"project,omitempty"`
	// Type of secret generated for this role set. Defaults to 'access_token'
	SecretType *string `json:"secret_type,omitempty"`
	// List of OAuth scopes to assign to credentials generated under this role set
	TokenScopes []string `json:"token_scopes,omitempty"`
}

// NewGcpRolesetRequest instantiates a new GcpRolesetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpRolesetRequest() *GcpRolesetRequest {
	this := GcpRolesetRequest{}
	var secretType string = "access_token"
	this.SecretType = &secretType
	return &this
}

// NewGcpRolesetRequestWithDefaults instantiates a new GcpRolesetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpRolesetRequestWithDefaults() *GcpRolesetRequest {
	this := GcpRolesetRequest{}
	var secretType string = "access_token"
	this.SecretType = &secretType
	return &this
}

// GetBindings returns the Bindings field value if set, zero value otherwise.
func (o *GcpRolesetRequest) GetBindings() string {
	if o == nil || o.Bindings == nil {
		var ret string
		return ret
	}
	return *o.Bindings
}

// GetBindingsOk returns a tuple with the Bindings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRolesetRequest) GetBindingsOk() (*string, bool) {
	if o == nil || o.Bindings == nil {
		return nil, false
	}
	return o.Bindings, true
}

// HasBindings returns a boolean if a field has been set.
func (o *GcpRolesetRequest) HasBindings() bool {
	if o != nil && o.Bindings != nil {
		return true
	}

	return false
}

// SetBindings gets a reference to the given string and assigns it to the Bindings field.
func (o *GcpRolesetRequest) SetBindings(v string) {
	o.Bindings = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *GcpRolesetRequest) GetProject() string {
	if o == nil || o.Project == nil {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRolesetRequest) GetProjectOk() (*string, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *GcpRolesetRequest) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *GcpRolesetRequest) SetProject(v string) {
	o.Project = &v
}

// GetSecretType returns the SecretType field value if set, zero value otherwise.
func (o *GcpRolesetRequest) GetSecretType() string {
	if o == nil || o.SecretType == nil {
		var ret string
		return ret
	}
	return *o.SecretType
}

// GetSecretTypeOk returns a tuple with the SecretType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRolesetRequest) GetSecretTypeOk() (*string, bool) {
	if o == nil || o.SecretType == nil {
		return nil, false
	}
	return o.SecretType, true
}

// HasSecretType returns a boolean if a field has been set.
func (o *GcpRolesetRequest) HasSecretType() bool {
	if o != nil && o.SecretType != nil {
		return true
	}

	return false
}

// SetSecretType gets a reference to the given string and assigns it to the SecretType field.
func (o *GcpRolesetRequest) SetSecretType(v string) {
	o.SecretType = &v
}

// GetTokenScopes returns the TokenScopes field value if set, zero value otherwise.
func (o *GcpRolesetRequest) GetTokenScopes() []string {
	if o == nil || o.TokenScopes == nil {
		var ret []string
		return ret
	}
	return o.TokenScopes
}

// GetTokenScopesOk returns a tuple with the TokenScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRolesetRequest) GetTokenScopesOk() ([]string, bool) {
	if o == nil || o.TokenScopes == nil {
		return nil, false
	}
	return o.TokenScopes, true
}

// HasTokenScopes returns a boolean if a field has been set.
func (o *GcpRolesetRequest) HasTokenScopes() bool {
	if o != nil && o.TokenScopes != nil {
		return true
	}

	return false
}

// SetTokenScopes gets a reference to the given []string and assigns it to the TokenScopes field.
func (o *GcpRolesetRequest) SetTokenScopes(v []string) {
	o.TokenScopes = v
}

func (o GcpRolesetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bindings != nil {
		toSerialize["bindings"] = o.Bindings
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.SecretType != nil {
		toSerialize["secret_type"] = o.SecretType
	}
	if o.TokenScopes != nil {
		toSerialize["token_scopes"] = o.TokenScopes
	}
	return json.Marshal(toSerialize)
}

type NullableGcpRolesetRequest struct {
	value *GcpRolesetRequest
	isSet bool
}

func (v NullableGcpRolesetRequest) Get() *GcpRolesetRequest {
	return v.value
}

func (v *NullableGcpRolesetRequest) Set(val *GcpRolesetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpRolesetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpRolesetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpRolesetRequest(val *GcpRolesetRequest) *NullableGcpRolesetRequest {
	return &NullableGcpRolesetRequest{value: val, isSet: true}
}

func (v NullableGcpRolesetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpRolesetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpStaticAccountKeyRequest struct for GcpStaticAccountKeyRequest
type GcpStaticAccountKeyRequest struct {
	// Private key algorithm for service account key. Defaults to KEY_ALG_RSA_2048.\"
	KeyAlgorithm *string `json:"key_algorithm,omitempty"`
	// Private key type for service account key. Defaults to TYPE_GOOGLE_CREDENTIALS_FILE.\"
	KeyType *string `json:"key_type,omitempty"`
	// Lifetime of the service account key
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewGcpStaticAccountKeyRequest instantiates a new GcpStaticAccountKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpStaticAccountKeyRequest() *GcpStaticAccountKeyRequest {
	this := GcpStaticAccountKeyRequest{}
	var keyAlgorithm string = "KEY_ALG_RSA_2048"
	this.KeyAlgorithm = &keyAlgorithm
	var keyType string = "TYPE_GOOGLE_CREDENTIALS_FILE"
	this.KeyType = &keyType
	return &this
}

// NewGcpStaticAccountKeyRequestWithDefaults instantiates a new GcpStaticAccountKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpStaticAccountKeyRequestWithDefaults() *GcpStaticAccountKeyRequest {
	this := GcpStaticAccountKeyRequest{}
	var keyAlgorithm string = "KEY_ALG_RSA_2048"
	this.KeyAlgorithm = &keyAlgorithm
	var keyType string = "TYPE_GOOGLE_CREDENTIALS_FILE"
	this.KeyType = &keyType
	return &this
}

// GetKeyAlgorithm returns the KeyAlgorithm field value if set, zero value otherwise.
func (o *GcpStaticAccountKeyRequest) GetKeyAlgorithm() string {
	if o == nil || o.KeyAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.KeyAlgorithm
}

// GetKeyAlgorithmOk returns a tuple with the KeyAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpStaticAccountKeyRequest) GetKeyAlgorithmOk() (*string, bool) {
	if o == nil || o.KeyAlgorithm == nil {
		return nil, false
	}
	return o.KeyAlgorithm, true
}

// HasKeyAlgorithm returns a boolean if a field has been set.
func (o *GcpStaticAccountKeyRequest) HasKeyAlgorithm() bool {
	if o != nil && o.KeyAlgorithm != nil {
		return true
	}

	return false
}

// SetKeyAlgorithm gets a reference to the given string and assigns it to the KeyAlgorithm field.
func (o *GcpStaticAccountKeyRequest) SetKeyAlgorithm(v string) {
	o.KeyAlgorithm = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *GcpStaticAccountKeyRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpStaticAccountKeyRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *GcpStaticAccountKeyRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *GcpStaticAccountKeyRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *GcpStaticAccountKeyRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpStaticAccountKeyRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *GcpStaticAccountKeyRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *GcpStaticAccountKeyRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o GcpStaticAccountKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeyAlgorithm != nil {
		toSerialize["key_algorithm"] = o.KeyAlgorithm
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableGcpStaticAccountKeyRequest struct {
	value *GcpStaticAccountKeyRequest
	isSet bool
}

func (v NullableGcpStaticAccountKeyRequest) Get() *GcpStaticAccountKeyRequest {
	return v.value
}

func (v *NullableGcpStaticAccountKeyRequest) Set(val *GcpStaticAccountKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpStaticAccountKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpStaticAccountKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpStaticAccountKeyRequest(val *GcpStaticAccountKeyRequest) *NullableGcpStaticAccountKeyRequest {
	return &NullableGcpStaticAccountKeyRequest{value: val, isSet: true}
}

func (v NullableGcpStaticAccountKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpStaticAccountKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpStaticAccountRequest struct for GcpStaticAccountRequest
type GcpStaticAccountRequest struct {
	// Bindings configuration string.
	Bindings *string `json:"bindings,omitempty"`
	// Type of secret generated for this account. Cannot be updated. Defaults to \"access_token\"
	SecretType *string `json:"secret_type,omitempty"`
	// Required. Email of the GCP service account to manage. Cannot be updated.
	ServiceAccountEmail *string `json:"service_account_email,omitempty"`
	// List of OAuth scopes to assign to access tokens generated under this account. Ignored if \"secret_type\" is not \"\"access_token\"\"
	TokenScopes []string `json:"token_scopes,omitempty"`
}

// NewGcpStaticAccountRequest instantiates a new GcpStaticAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpStaticAccountRequest() *GcpStaticAccountRequest {
	this := GcpStaticAccountRequest{}
	var secretType string = "access_token"
	this.SecretType = &secretType
	return &this
}

// NewGcpStaticAccountRequestWithDefaults instantiates a new GcpStaticAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpStaticAccountRequestWithDefaults() *GcpStaticAccountRequest {
	this := GcpStaticAccountRequest{}
	var secretType string = "access_token"
	this.SecretType = &secretType
	return &this
}

// GetBindings returns the Bindings field value if set, zero value otherwise.
func (o *GcpStaticAccountRequest) GetBindings() string {
	if o == nil || o.Bindings == nil {
		var ret string
		return ret
	}
	return *o.Bindings
}

// GetBindingsOk returns a tuple with the Bindings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpStaticAccountRequest) GetBindingsOk() (*string, bool) {
	if o == nil || o.Bindings == nil {
		return nil, false
	}
	return o.Bindings, true
}

// HasBindings returns a boolean if a field has been set.
func (o *GcpStaticAccountRequest) HasBindings() bool {
	if o != nil && o.Bindings != nil {
		return true
	}

	return false
}

// SetBindings gets a reference to the given string and assigns it to the Bindings field.
func (o *GcpStaticAccountRequest) SetBindings(v string) {
	o.Bindings = &v
}

// GetSecretType returns the SecretType field value if set, zero value otherwise.
func (o *GcpStaticAccountRequest) GetSecretType() string {
	if o == nil || o.SecretType == nil {
		var ret string
		return ret
	}
	return *o.SecretType
}

// GetSecretTypeOk returns a tuple with the SecretType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpStaticAccountRequest) GetSecretTypeOk() (*string, bool) {
	if o == nil || o.SecretType == nil {
		return nil, false
	}
	return o.SecretType, true
}

// HasSecretType returns a boolean if a field has been set.
func (o *GcpStaticAccountRequest) HasSecretType() bool {
	if o != nil && o.SecretType != nil {
		return true
	}

	return false
}

// SetSecretType gets a reference to the given string and assigns it to the SecretType field.
func (o *GcpStaticAccountRequest) SetSecretType(v string) {
	o.SecretType = &v
}

// GetServiceAccountEmail returns the ServiceAccountEmail field value if set, zero value otherwise.
func (o *GcpStaticAccountRequest) GetServiceAccountEmail() string {
	if o == nil || o.ServiceAccountEmail == nil {
		var ret string
		return ret
	}
	return *o.ServiceAccountEmail
}

// GetServiceAccountEmailOk returns a tuple with the ServiceAccountEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpStaticAccountRequest) GetServiceAccountEmailOk() (*string, bool) {
	if o == nil || o.ServiceAccountEmail == nil {
		return nil, false
	}
	return o.ServiceAccountEmail, true
}

// HasServiceAccountEmail returns a boolean if a field has been set.
func (o *GcpStaticAccountRequest) HasServiceAccountEmail() bool {
	if o != nil && o.ServiceAccountEmail != nil {
		return true
	}

	return false
}

// SetServiceAccountEmail gets a reference to the given string and assigns it to the ServiceAccountEmail field.
func (o *GcpStaticAccountRequest) SetServiceAccountEmail(v string) {
	o.ServiceAccountEmail = &v
}

// GetTokenScopes returns the TokenScopes field value if set, zero value otherwise.
func (o *GcpStaticAccountRequest) GetTokenScopes() []string {
	if o == nil || o.TokenScopes == nil {
		var ret []string
		return ret
	}
	return o.TokenScopes
}

// GetTokenScopesOk returns a tuple with the TokenScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpStaticAccountRequest) GetTokenScopesOk() ([]string, bool) {
	if o == nil || o.TokenScopes == nil {
		return nil, false
	}
	return o.TokenScopes, true
}

// HasTokenScopes returns a boolean if a field has been set.
func (o *GcpStaticAccountRequest) HasTokenScopes() bool {
	if o != nil && o.TokenScopes != nil {
		return true
	}

	return false
}

// SetTokenScopes gets a reference to the given []string and assigns it to the TokenScopes field.
func (o *GcpStaticAccountRequest) SetTokenScopes(v []string) {
	o.TokenScopes = v
}

func (o GcpStaticAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bindings != nil {
		toSerialize["bindings"] = o.Bindings
	}
	if o.SecretType != nil {
		toSerialize["secret_type"] = o.SecretType
	}
	if o.ServiceAccountEmail != nil {
		toSerialize["service_account_email"] = o.ServiceAccountEmail
	}
	if o.TokenScopes != nil {
		toSerialize["token_scopes"] = o.TokenScopes
	}
	return json.Marshal(toSerialize)
}

type NullableGcpStaticAccountRequest struct {
	value *GcpStaticAccountRequest
	isSet bool
}

func (v NullableGcpStaticAccountRequest) Get() *GcpStaticAccountRequest {
	return v.value
}

func (v *NullableGcpStaticAccountRequest) Set(val *GcpStaticAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpStaticAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpStaticAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpStaticAccountRequest(val *GcpStaticAccountRequest) *NullableGcpStaticAccountRequest {
	return &NullableGcpStaticAccountRequest{value: val, isSet: true}
}

func (v NullableGcpStaticAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpStaticAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpkmsConfigRequest struct for GcpkmsConfigRequest
type GcpkmsConfigRequest struct {
	// The credentials to use for authenticating to Google Cloud. Leave this blank to use the Default Application Credentials or instance metadata authentication.
	Credentials *string `json:"credentials,omitempty"`
	// The list of full-URL scopes to request when authenticating. By default, this requests https://www.googleapis.com/auth/cloudkms.
	Scopes []string `json:"scopes,omitempty"`
}

// NewGcpkmsConfigRequest instantiates a new GcpkmsConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsConfigRequest() *GcpkmsConfigRequest {
	this := GcpkmsConfigRequest{}
	return &this
}

// NewGcpkmsConfigRequestWithDefaults instantiates a new GcpkmsConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsConfigRequestWithDefaults() *GcpkmsConfigRequest {
	this := GcpkmsConfigRequest{}
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *GcpkmsConfigRequest) GetCredentials() string {
	if o == nil || o.Credentials == nil {
		var ret string
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsConfigRequest) GetCredentialsOk() (*string, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *GcpkmsConfigRequest) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given string and assigns it to the Credentials field.
func (o *GcpkmsConfigRequest) SetCredentials(v string) {
	o.Credentials = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *GcpkmsConfigRequest) GetScopes() []string {
	if o == nil || o.Scopes == nil {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsConfigRequest) GetScopesOk() ([]string, bool) {
	if o == nil || o.Scopes == nil {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *GcpkmsConfigRequest) HasScopes() bool {
	if o != nil && o.Scopes != nil {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *GcpkmsConfigRequest) SetScopes(v []string) {
	o.Scopes = v
}

func (o GcpkmsConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsConfigRequest struct {
	value *GcpkmsConfigRequest
	isSet bool
}

func (v NullableGcpkmsConfigRequest) Get() *GcpkmsConfigRequest {
	return v.value
}

func (v *NullableGcpkmsConfigRequest) Set(val *GcpkmsConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsConfigRequest(val *GcpkmsConfigRequest) *NullableGcpkmsConfigRequest {
	return &NullableGcpkmsConfigRequest{value: val, isSet: true}
}

func (v NullableGcpkmsConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpkmsDecryptRequest struct for GcpkmsDecryptRequest
type GcpkmsDecryptRequest struct {
	// Optional data that was specified during encryption of this payload.
	AdditionalAuthenticatedData *string `json:"additional_authenticated_data,omitempty"`
	// Ciphertext to decrypt as previously returned from an encrypt operation. This must be base64-encoded ciphertext as previously returned from an encrypt operation.
	Ciphertext *string `json:"ciphertext,omitempty"`
	// Integer version of the crypto key version to use for decryption. This is required for asymmetric keys. For symmetric keys, Cloud KMS will choose the correct version automatically.
	KeyVersion *int32 `json:"key_version,omitempty"`
}

// NewGcpkmsDecryptRequest instantiates a new GcpkmsDecryptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsDecryptRequest() *GcpkmsDecryptRequest {
	this := GcpkmsDecryptRequest{}
	return &this
}

// NewGcpkmsDecryptRequestWithDefaults instantiates a new GcpkmsDecryptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsDecryptRequestWithDefaults() *GcpkmsDecryptRequest {
	this := GcpkmsDecryptRequest{}
	return &this
}

// GetAdditionalAuthenticatedData returns the AdditionalAuthenticatedData field value if set, zero value otherwise.
func (o *GcpkmsDecryptRequest) GetAdditionalAuthenticatedData() string {
	if o == nil || o.AdditionalAuthenticatedData == nil {
		var ret string
		return ret
	}
	return *o.AdditionalAuthenticatedData
}

// GetAdditionalAuthenticatedDataOk returns a tuple with the AdditionalAuthenticatedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsDecryptRequest) GetAdditionalAuthenticatedDataOk() (*string, bool) {
	if o == nil || o.AdditionalAuthenticatedData == nil {
		return nil, false
	}
	return o.AdditionalAuthenticatedData, true
}

// HasAdditionalAuthenticatedData returns a boolean if a field has been set.
func (o *GcpkmsDecryptRequest) HasAdditionalAuthenticatedData() bool {
	if o != nil && o.AdditionalAuthenticatedData != nil {
		return true
	}

	return false
}

// SetAdditionalAuthenticatedData gets a reference to the given string and assigns it to the AdditionalAuthenticatedData field.
func (o *GcpkmsDecryptRequest) SetAdditionalAuthenticatedData(v string) {
	o.AdditionalAuthenticatedData = &v
}

// GetCiphertext returns the Ciphertext field value if set, zero value otherwise.
func (o *GcpkmsDecryptRequest) GetCiphertext() string {
	if o == nil || o.Ciphertext == nil {
		var ret string
		return ret
	}
	return *o.Ciphertext
}

// GetCiphertextOk returns a tuple with the Ciphertext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsDecryptRequest) GetCiphertextOk() (*string, bool) {
	if o == nil || o.Ciphertext == nil {
		return nil, false
	}
	return o.Ciphertext, true
}

// HasCiphertext returns a boolean if a field has been set.
func (o *GcpkmsDecryptRequest) HasCiphertext() bool {
	if o != nil && o.Ciphertext != nil {
		return true
	}

	return false
}

// SetCiphertext gets a reference to the given string and assigns it to the Ciphertext field.
func (o *GcpkmsDecryptRequest) SetCiphertext(v string) {
	o.Ciphertext = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *GcpkmsDecryptRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsDecryptRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *GcpkmsDecryptRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *GcpkmsDecryptRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

func (o GcpkmsDecryptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalAuthenticatedData != nil {
		toSerialize["additional_authenticated_data"] = o.AdditionalAuthenticatedData
	}
	if o.Ciphertext != nil {
		toSerialize["ciphertext"] = o.Ciphertext
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsDecryptRequest struct {
	value *GcpkmsDecryptRequest
	isSet bool
}

func (v NullableGcpkmsDecryptRequest) Get() *GcpkmsDecryptRequest {
	return v.value
}

func (v *NullableGcpkmsDecryptRequest) Set(val *GcpkmsDecryptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsDecryptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsDecryptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsDecryptRequest(val *GcpkmsDecryptRequest) *NullableGcpkmsDecryptRequest {
	return &NullableGcpkmsDecryptRequest{value: val, isSet: true}
}

func (v NullableGcpkmsDecryptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsDecryptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpkmsEncryptRequest struct for GcpkmsEncryptRequest
type GcpkmsEncryptRequest struct {
	// Optional base64-encoded data that, if specified, must also be provided to decrypt this payload.
	AdditionalAuthenticatedData *string `json:"additional_authenticated_data,omitempty"`
	// Integer version of the crypto key version to use for encryption. If unspecified, this defaults to the latest active crypto key version.
	KeyVersion *int32 `json:"key_version,omitempty"`
	// Plaintext value to be encrypted. This can be a string or binary, but the size is limited. See the Google Cloud KMS documentation for information on size limitations by key types.
	Plaintext *string `json:"plaintext,omitempty"`
}

// NewGcpkmsEncryptRequest instantiates a new GcpkmsEncryptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsEncryptRequest() *GcpkmsEncryptRequest {
	this := GcpkmsEncryptRequest{}
	return &this
}

// NewGcpkmsEncryptRequestWithDefaults instantiates a new GcpkmsEncryptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsEncryptRequestWithDefaults() *GcpkmsEncryptRequest {
	this := GcpkmsEncryptRequest{}
	return &this
}

// GetAdditionalAuthenticatedData returns the AdditionalAuthenticatedData field value if set, zero value otherwise.
func (o *GcpkmsEncryptRequest) GetAdditionalAuthenticatedData() string {
	if o == nil || o.AdditionalAuthenticatedData == nil {
		var ret string
		return ret
	}
	return *o.AdditionalAuthenticatedData
}

// GetAdditionalAuthenticatedDataOk returns a tuple with the AdditionalAuthenticatedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsEncryptRequest) GetAdditionalAuthenticatedDataOk() (*string, bool) {
	if o == nil || o.AdditionalAuthenticatedData == nil {
		return nil, false
	}
	return o.AdditionalAuthenticatedData, true
}

// HasAdditionalAuthenticatedData returns a boolean if a field has been set.
func (o *GcpkmsEncryptRequest) HasAdditionalAuthenticatedData() bool {
	if o != nil && o.AdditionalAuthenticatedData != nil {
		return true
	}

	return false
}

// SetAdditionalAuthenticatedData gets a reference to the given string and assigns it to the AdditionalAuthenticatedData field.
func (o *GcpkmsEncryptRequest) SetAdditionalAuthenticatedData(v string) {
	o.AdditionalAuthenticatedData = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *GcpkmsEncryptRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsEncryptRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *GcpkmsEncryptRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *GcpkmsEncryptRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

// GetPlaintext returns the Plaintext field value if set, zero value otherwise.
func (o *GcpkmsEncryptRequest) GetPlaintext() string {
	if o == nil || o.Plaintext == nil {
		var ret string
		return ret
	}
	return *o.Plaintext
}

// GetPlaintextOk returns a tuple with the Plaintext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsEncryptRequest) GetPlaintextOk() (*string, bool) {
	if o == nil || o.Plaintext == nil {
		return nil, false
	}
	return o.Plaintext, true
}

// HasPlaintext returns a boolean if a field has been set.
func (o *GcpkmsEncryptRequest) HasPlaintext() bool {
	if o != nil && o.Plaintext != nil {
		return true
	}

	return false
}

// SetPlaintext gets a reference to the given string and assigns it to the Plaintext field.
func (o *GcpkmsEncryptRequest) SetPlaintext(v string) {
	o.Plaintext = &v
}

func (o GcpkmsEncryptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalAuthenticatedData != nil {
		toSerialize["additional_authenticated_data"] = o.AdditionalAuthenticatedData
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	if o.Plaintext != nil {
		toSerialize["plaintext"] = o.Plaintext
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsEncryptRequest struct {
	value *GcpkmsEncryptRequest
	isSet bool
}

func (v NullableGcpkmsEncryptRequest) Get() *GcpkmsEncryptRequest {
	return v.value
}

func (v *NullableGcpkmsEncryptRequest) Set(val *GcpkmsEncryptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsEncryptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsEncryptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsEncryptRequest(val *GcpkmsEncryptRequest) *NullableGcpkmsEncryptRequest {
	return &NullableGcpkmsEncryptRequest{value: val, isSet: true}
}

func (v NullableGcpkmsEncryptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsEncryptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpkmsKeysConfigRequest struct for GcpkmsKeysConfigRequest
type GcpkmsKeysConfigRequest struct {
	// Maximum allowed crypto key version. If set to a positive value, key versions greater than the given value are not permitted to be used. If set to 0 or a negative value, there is no maximum key version.
	MaxVersion *int32 `json:"max_version,omitempty"`
	// Minimum allowed crypto key version. If set to a positive value, key versions less than the given value are not permitted to be used. If set to 0 or a negative value, there is no minimum key version. This value only affects encryption/re-encryption, not decryption. To restrict old values from being decrypted, increase this value and then perform a trim operation.
	MinVersion *int32 `json:"min_version,omitempty"`
}

// NewGcpkmsKeysConfigRequest instantiates a new GcpkmsKeysConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsKeysConfigRequest() *GcpkmsKeysConfigRequest {
	this := GcpkmsKeysConfigRequest{}
	return &this
}

// NewGcpkmsKeysConfigRequestWithDefaults instantiates a new GcpkmsKeysConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsKeysConfigRequestWithDefaults() *GcpkmsKeysConfigRequest {
	this := GcpkmsKeysConfigRequest{}
	return &this
}

// GetMaxVersion returns the MaxVersion field value if set, zero value otherwise.
func (o *GcpkmsKeysConfigRequest) GetMaxVersion() int32 {
	if o == nil || o.MaxVersion == nil {
		var ret int32
		return ret
	}
	return *o.MaxVersion
}

// GetMaxVersionOk returns a tuple with the MaxVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysConfigRequest) GetMaxVersionOk() (*int32, bool) {
	if o == nil || o.MaxVersion == nil {
		return nil, false
	}
	return o.MaxVersion, true
}

// HasMaxVersion returns a boolean if a field has been set.
func (o *GcpkmsKeysConfigRequest) HasMaxVersion() bool {
	if o != nil && o.MaxVersion != nil {
		return true
	}

	return false
}

// SetMaxVersion gets a reference to the given int32 and assigns it to the MaxVersion field.
func (o *GcpkmsKeysConfigRequest) SetMaxVersion(v int32) {
	o.MaxVersion = &v
}

// GetMinVersion returns the MinVersion field value if set, zero value otherwise.
func (o *GcpkmsKeysConfigRequest) GetMinVersion() int32 {
	if o == nil || o.MinVersion == nil {
		var ret int32
		return ret
	}
	return *o.MinVersion
}

// GetMinVersionOk returns a tuple with the MinVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysConfigRequest) GetMinVersionOk() (*int32, bool) {
	if o == nil || o.MinVersion == nil {
		return nil, false
	}
	return o.MinVersion, true
}

// HasMinVersion returns a boolean if a field has been set.
func (o *GcpkmsKeysConfigRequest) HasMinVersion() bool {
	if o != nil && o.MinVersion != nil {
		return true
	}

	return false
}

// SetMinVersion gets a reference to the given int32 and assigns it to the MinVersion field.
func (o *GcpkmsKeysConfigRequest) SetMinVersion(v int32) {
	o.MinVersion = &v
}

func (o GcpkmsKeysConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxVersion != nil {
		toSerialize["max_version"] = o.MaxVersion
	}
	if o.MinVersion != nil {
		toSerialize["min_version"] = o.MinVersion
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsKeysConfigRequest struct {
	value *GcpkmsKeysConfigRequest
	isSet bool
}

func (v NullableGcpkmsKeysConfigRequest) Get() *GcpkmsKeysConfigRequest {
	return v.value
}

func (v *NullableGcpkmsKeysConfigRequest) Set(val *GcpkmsKeysConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsKeysConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsKeysConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsKeysConfigRequest(val *GcpkmsKeysConfigRequest) *NullableGcpkmsKeysConfigRequest {
	return &NullableGcpkmsKeysConfigRequest{value: val, isSet: true}
}

func (v NullableGcpkmsKeysConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsKeysConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpkmsKeysRegisterRequest struct for GcpkmsKeysRegisterRequest
type GcpkmsKeysRegisterRequest struct {
	// Full resource ID of the crypto key including the project, location, key ring, and crypto key like \"projects/%s/locations/%s/keyRings/%s/cryptoKeys/%s\". This crypto key must already exist in Google Cloud KMS unless verify is set to \"false\".
	CryptoKey *string `json:"crypto_key,omitempty"`
	// Verify that the given Google Cloud KMS crypto key exists and is accessible before creating the storage entry in Vault. Set this to \"false\" if the key will not exist at creation time.
	Verify *bool `json:"verify,omitempty"`
}

// NewGcpkmsKeysRegisterRequest instantiates a new GcpkmsKeysRegisterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsKeysRegisterRequest() *GcpkmsKeysRegisterRequest {
	this := GcpkmsKeysRegisterRequest{}
	var verify bool = true
	this.Verify = &verify
	return &this
}

// NewGcpkmsKeysRegisterRequestWithDefaults instantiates a new GcpkmsKeysRegisterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsKeysRegisterRequestWithDefaults() *GcpkmsKeysRegisterRequest {
	this := GcpkmsKeysRegisterRequest{}
	var verify bool = true
	this.Verify = &verify
	return &this
}

// GetCryptoKey returns the CryptoKey field value if set, zero value otherwise.
func (o *GcpkmsKeysRegisterRequest) GetCryptoKey() string {
	if o == nil || o.CryptoKey == nil {
		var ret string
		return ret
	}
	return *o.CryptoKey
}

// GetCryptoKeyOk returns a tuple with the CryptoKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysRegisterRequest) GetCryptoKeyOk() (*string, bool) {
	if o == nil || o.CryptoKey == nil {
		return nil, false
	}
	return o.CryptoKey, true
}

// HasCryptoKey returns a boolean if a field has been set.
func (o *GcpkmsKeysRegisterRequest) HasCryptoKey() bool {
	if o != nil && o.CryptoKey != nil {
		return true
	}

	return false
}

// SetCryptoKey gets a reference to the given string and assigns it to the CryptoKey field.
func (o *GcpkmsKeysRegisterRequest) SetCryptoKey(v string) {
	o.CryptoKey = &v
}

// GetVerify returns the Verify field value if set, zero value otherwise.
func (o *GcpkmsKeysRegisterRequest) GetVerify() bool {
	if o == nil || o.Verify == nil {
		var ret bool
		return ret
	}
	return *o.Verify
}

// GetVerifyOk returns a tuple with the Verify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysRegisterRequest) GetVerifyOk() (*bool, bool) {
	if o == nil || o.Verify == nil {
		return nil, false
	}
	return o.Verify, true
}

// HasVerify returns a boolean if a field has been set.
func (o *GcpkmsKeysRegisterRequest) HasVerify() bool {
	if o != nil && o.Verify != nil {
		return true
	}

	return false
}

// SetVerify gets a reference to the given bool and assigns it to the Verify field.
func (o *GcpkmsKeysRegisterRequest) SetVerify(v bool) {
	o.Verify = &v
}

func (o GcpkmsKeysRegisterRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CryptoKey != nil {
		toSerialize["crypto_key"] = o.CryptoKey
	}
	if o.Verify != nil {
		toSerialize["verify"] = o.Verify
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsKeysRegisterRequest struct {
	value *GcpkmsKeysRegisterRequest
	isSet bool
}

func (v NullableGcpkmsKeysRegisterRequest) Get() *GcpkmsKeysRegisterRequest {
	return v.value
}

func (v *NullableGcpkmsKeysRegisterRequest) Set(val *GcpkmsKeysRegisterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsKeysRegisterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsKeysRegisterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsKeysRegisterRequest(val *GcpkmsKeysRegisterRequest) *NullableGcpkmsKeysRegisterRequest {
	return &NullableGcpkmsKeysRegisterRequest{value: val, isSet: true}
}

func (v NullableGcpkmsKeysRegisterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsKeysRegisterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpkmsKeysRequest struct for GcpkmsKeysRequest
type GcpkmsKeysRequest struct {
	// Algorithm to use for encryption, decryption, or signing. The value depends on the key purpose. The value cannot be changed after creation. For a key purpose of \"encrypt_decrypt\", the valid values are: - symmetric_encryption (default) For a key purpose of \"asymmetric_sign\", valid values are: - rsa_sign_pss_2048_sha256 - rsa_sign_pss_3072_sha256 - rsa_sign_pss_4096_sha256 - rsa_sign_pkcs1_2048_sha256 - rsa_sign_pkcs1_3072_sha256 - rsa_sign_pkcs1_4096_sha256 - ec_sign_p256_sha256 - ec_sign_p384_sha384 For a key purpose of \"asymmetric_decrypt\", valid values are: - rsa_decrypt_oaep_2048_sha256 - rsa_decrypt_oaep_3072_sha256 - rsa_decrypt_oaep_4096_sha256
	Algorithm *string `json:"algorithm,omitempty"`
	// Name of the crypto key to use. If the given crypto key does not exist, Vault will try to create it. This defaults to the name of the key given to Vault as the parameter if unspecified.
	CryptoKey *string `json:"crypto_key,omitempty"`
	// Full Google Cloud resource ID of the key ring with the project and location (e.g. projects/my-project/locations/global/keyRings/my-keyring). If the given key ring does not exist, Vault will try to create it during a create operation.
	KeyRing *string `json:"key_ring,omitempty"`
	// Arbitrary key=value label to apply to the crypto key. To specify multiple labels, specify this argument multiple times (e.g. labels=\"a=b\" labels=\"c=d\").
	Labels map[string]interface{} `json:"labels,omitempty"`
	// Level of protection to use for the key management. Valid values are \"software\" and \"hsm\". The default value is \"software\". The value cannot be changed after creation.
	ProtectionLevel *string `json:"protection_level,omitempty"`
	// Purpose of the key. Valid options are \"asymmetric_decrypt\", \"asymmetric_sign\", and \"encrypt_decrypt\". The default value is \"encrypt_decrypt\". The value cannot be changed after creation.
	Purpose *string `json:"purpose,omitempty"`
	// Amount of time between crypto key version rotations. This is specified as a time duration value like 72h (72 hours). The smallest possible value is 24h. This value only applies to keys with a purpose of \"encrypt_decrypt\".
	RotationPeriod *int32 `json:"rotation_period,omitempty"`
}

// NewGcpkmsKeysRequest instantiates a new GcpkmsKeysRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsKeysRequest() *GcpkmsKeysRequest {
	this := GcpkmsKeysRequest{}
	return &this
}

// NewGcpkmsKeysRequestWithDefaults instantiates a new GcpkmsKeysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsKeysRequestWithDefaults() *GcpkmsKeysRequest {
	this := GcpkmsKeysRequest{}
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *GcpkmsKeysRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *GcpkmsKeysRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *GcpkmsKeysRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetCryptoKey returns the CryptoKey field value if set, zero value otherwise.
func (o *GcpkmsKeysRequest) GetCryptoKey() string {
	if o == nil || o.CryptoKey == nil {
		var ret string
		return ret
	}
	return *o.CryptoKey
}

// GetCryptoKeyOk returns a tuple with the CryptoKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysRequest) GetCryptoKeyOk() (*string, bool) {
	if o == nil || o.CryptoKey == nil {
		return nil, false
	}
	return o.CryptoKey, true
}

// HasCryptoKey returns a boolean if a field has been set.
func (o *GcpkmsKeysRequest) HasCryptoKey() bool {
	if o != nil && o.CryptoKey != nil {
		return true
	}

	return false
}

// SetCryptoKey gets a reference to the given string and assigns it to the CryptoKey field.
func (o *GcpkmsKeysRequest) SetCryptoKey(v string) {
	o.CryptoKey = &v
}

// GetKeyRing returns the KeyRing field value if set, zero value otherwise.
func (o *GcpkmsKeysRequest) GetKeyRing() string {
	if o == nil || o.KeyRing == nil {
		var ret string
		return ret
	}
	return *o.KeyRing
}

// GetKeyRingOk returns a tuple with the KeyRing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysRequest) GetKeyRingOk() (*string, bool) {
	if o == nil || o.KeyRing == nil {
		return nil, false
	}
	return o.KeyRing, true
}

// HasKeyRing returns a boolean if a field has been set.
func (o *GcpkmsKeysRequest) HasKeyRing() bool {
	if o != nil && o.KeyRing != nil {
		return true
	}

	return false
}

// SetKeyRing gets a reference to the given string and assigns it to the KeyRing field.
func (o *GcpkmsKeysRequest) SetKeyRing(v string) {
	o.KeyRing = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *GcpkmsKeysRequest) GetLabels() map[string]interface{} {
	if o == nil || o.Labels == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysRequest) GetLabelsOk() (map[string]interface{}, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *GcpkmsKeysRequest) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *GcpkmsKeysRequest) SetLabels(v map[string]interface{}) {
	o.Labels = v
}

// GetProtectionLevel returns the ProtectionLevel field value if set, zero value otherwise.
func (o *GcpkmsKeysRequest) GetProtectionLevel() string {
	if o == nil || o.ProtectionLevel == nil {
		var ret string
		return ret
	}
	return *o.ProtectionLevel
}

// GetProtectionLevelOk returns a tuple with the ProtectionLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysRequest) GetProtectionLevelOk() (*string, bool) {
	if o == nil || o.ProtectionLevel == nil {
		return nil, false
	}
	return o.ProtectionLevel, true
}

// HasProtectionLevel returns a boolean if a field has been set.
func (o *GcpkmsKeysRequest) HasProtectionLevel() bool {
	if o != nil && o.ProtectionLevel != nil {
		return true
	}

	return false
}

// SetProtectionLevel gets a reference to the given string and assigns it to the ProtectionLevel field.
func (o *GcpkmsKeysRequest) SetProtectionLevel(v string) {
	o.ProtectionLevel = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *GcpkmsKeysRequest) GetPurpose() string {
	if o == nil || o.Purpose == nil {
		var ret string
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysRequest) GetPurposeOk() (*string, bool) {
	if o == nil || o.Purpose == nil {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *GcpkmsKeysRequest) HasPurpose() bool {
	if o != nil && o.Purpose != nil {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given string and assigns it to the Purpose field.
func (o *GcpkmsKeysRequest) SetPurpose(v string) {
	o.Purpose = &v
}

// GetRotationPeriod returns the RotationPeriod field value if set, zero value otherwise.
func (o *GcpkmsKeysRequest) GetRotationPeriod() int32 {
	if o == nil || o.RotationPeriod == nil {
		var ret int32
		return ret
	}
	return *o.RotationPeriod
}

// GetRotationPeriodOk returns a tuple with the RotationPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsKeysRequest) GetRotationPeriodOk() (*int32, bool) {
	if o == nil || o.RotationPeriod == nil {
		return nil, false
	}
	return o.RotationPeriod, true
}

// HasRotationPeriod returns a boolean if a field has been set.
func (o *GcpkmsKeysRequest) HasRotationPeriod() bool {
	if o != nil && o.RotationPeriod != nil {
		return true
	}

	return false
}

// SetRotationPeriod gets a reference to the given int32 and assigns it to the RotationPeriod field.
func (o *GcpkmsKeysRequest) SetRotationPeriod(v int32) {
	o.RotationPeriod = &v
}

func (o GcpkmsKeysRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.CryptoKey != nil {
		toSerialize["crypto_key"] = o.CryptoKey
	}
	if o.KeyRing != nil {
		toSerialize["key_ring"] = o.KeyRing
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.ProtectionLevel != nil {
		toSerialize["protection_level"] = o.ProtectionLevel
	}
	if o.Purpose != nil {
		toSerialize["purpose"] = o.Purpose
	}
	if o.RotationPeriod != nil {
		toSerialize["rotation_period"] = o.RotationPeriod
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsKeysRequest struct {
	value *GcpkmsKeysRequest
	isSet bool
}

func (v NullableGcpkmsKeysRequest) Get() *GcpkmsKeysRequest {
	return v.value
}

func (v *NullableGcpkmsKeysRequest) Set(val *GcpkmsKeysRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsKeysRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsKeysRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsKeysRequest(val *GcpkmsKeysRequest) *NullableGcpkmsKeysRequest {
	return &NullableGcpkmsKeysRequest{value: val, isSet: true}
}

func (v NullableGcpkmsKeysRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsKeysRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpkmsReencryptRequest struct for GcpkmsReencryptRequest
type GcpkmsReencryptRequest struct {
	// Optional data that, if specified, must also be provided during decryption.
	AdditionalAuthenticatedData *string `json:"additional_authenticated_data,omitempty"`
	// Ciphertext to be re-encrypted to the latest key version. This must be ciphertext that Vault previously generated for this named key.
	Ciphertext *string `json:"ciphertext,omitempty"`
	// Integer version of the crypto key version to use for the new encryption. If unspecified, this defaults to the latest active crypto key version.
	KeyVersion *int32 `json:"key_version,omitempty"`
}

// NewGcpkmsReencryptRequest instantiates a new GcpkmsReencryptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsReencryptRequest() *GcpkmsReencryptRequest {
	this := GcpkmsReencryptRequest{}
	return &this
}

// NewGcpkmsReencryptRequestWithDefaults instantiates a new GcpkmsReencryptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsReencryptRequestWithDefaults() *GcpkmsReencryptRequest {
	this := GcpkmsReencryptRequest{}
	return &this
}

// GetAdditionalAuthenticatedData returns the AdditionalAuthenticatedData field value if set, zero value otherwise.
func (o *GcpkmsReencryptRequest) GetAdditionalAuthenticatedData() string {
	if o == nil || o.AdditionalAuthenticatedData == nil {
		var ret string
		return ret
	}
	return *o.AdditionalAuthenticatedData
}

// GetAdditionalAuthenticatedDataOk returns a tuple with the AdditionalAuthenticatedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsReencryptRequest) GetAdditionalAuthenticatedDataOk() (*string, bool) {
	if o == nil || o.AdditionalAuthenticatedData == nil {
		return nil, false
	}
	return o.AdditionalAuthenticatedData, true
}

// HasAdditionalAuthenticatedData returns a boolean if a field has been set.
func (o *GcpkmsReencryptRequest) HasAdditionalAuthenticatedData() bool {
	if o != nil && o.AdditionalAuthenticatedData != nil {
		return true
	}

	return false
}

// SetAdditionalAuthenticatedData gets a reference to the given string and assigns it to the AdditionalAuthenticatedData field.
func (o *GcpkmsReencryptRequest) SetAdditionalAuthenticatedData(v string) {
	o.AdditionalAuthenticatedData = &v
}

// GetCiphertext returns the Ciphertext field value if set, zero value otherwise.
func (o *GcpkmsReencryptRequest) GetCiphertext() string {
	if o == nil || o.Ciphertext == nil {
		var ret string
		return ret
	}
	return *o.Ciphertext
}

// GetCiphertextOk returns a tuple with the Ciphertext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsReencryptRequest) GetCiphertextOk() (*string, bool) {
	if o == nil || o.Ciphertext == nil {
		return nil, false
	}
	return o.Ciphertext, true
}

// HasCiphertext returns a boolean if a field has been set.
func (o *GcpkmsReencryptRequest) HasCiphertext() bool {
	if o != nil && o.Ciphertext != nil {
		return true
	}

	return false
}

// SetCiphertext gets a reference to the given string and assigns it to the Ciphertext field.
func (o *GcpkmsReencryptRequest) SetCiphertext(v string) {
	o.Ciphertext = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *GcpkmsReencryptRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsReencryptRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *GcpkmsReencryptRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *GcpkmsReencryptRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

func (o GcpkmsReencryptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalAuthenticatedData != nil {
		toSerialize["additional_authenticated_data"] = o.AdditionalAuthenticatedData
	}
	if o.Ciphertext != nil {
		toSerialize["ciphertext"] = o.Ciphertext
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsReencryptRequest struct {
	value *GcpkmsReencryptRequest
	isSet bool
}

func (v NullableGcpkmsReencryptRequest) Get() *GcpkmsReencryptRequest {
	return v.value
}

func (v *NullableGcpkmsReencryptRequest) Set(val *GcpkmsReencryptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsReencryptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsReencryptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsReencryptRequest(val *GcpkmsReencryptRequest) *NullableGcpkmsReencryptRequest {
	return &NullableGcpkmsReencryptRequest{value: val, isSet: true}
}

func (v NullableGcpkmsReencryptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsReencryptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpkmsSignRequest struct for GcpkmsSignRequest
type GcpkmsSignRequest struct {
	// Digest to sign. This digest must use the same SHA algorithm as the underlying Cloud KMS key. The digest must be the base64-encoded binary value. This field is required.
	Digest *string `json:"digest,omitempty"`
	// Integer version of the crypto key version to use for signing. This field is required.
	KeyVersion *int32 `json:"key_version,omitempty"`
}

// NewGcpkmsSignRequest instantiates a new GcpkmsSignRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsSignRequest() *GcpkmsSignRequest {
	this := GcpkmsSignRequest{}
	return &this
}

// NewGcpkmsSignRequestWithDefaults instantiates a new GcpkmsSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsSignRequestWithDefaults() *GcpkmsSignRequest {
	this := GcpkmsSignRequest{}
	return &this
}

// GetDigest returns the Digest field value if set, zero value otherwise.
func (o *GcpkmsSignRequest) GetDigest() string {
	if o == nil || o.Digest == nil {
		var ret string
		return ret
	}
	return *o.Digest
}

// GetDigestOk returns a tuple with the Digest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsSignRequest) GetDigestOk() (*string, bool) {
	if o == nil || o.Digest == nil {
		return nil, false
	}
	return o.Digest, true
}

// HasDigest returns a boolean if a field has been set.
func (o *GcpkmsSignRequest) HasDigest() bool {
	if o != nil && o.Digest != nil {
		return true
	}

	return false
}

// SetDigest gets a reference to the given string and assigns it to the Digest field.
func (o *GcpkmsSignRequest) SetDigest(v string) {
	o.Digest = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *GcpkmsSignRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsSignRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *GcpkmsSignRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *GcpkmsSignRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

func (o GcpkmsSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Digest != nil {
		toSerialize["digest"] = o.Digest
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsSignRequest struct {
	value *GcpkmsSignRequest
	isSet bool
}

func (v NullableGcpkmsSignRequest) Get() *GcpkmsSignRequest {
	return v.value
}

func (v *NullableGcpkmsSignRequest) Set(val *GcpkmsSignRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsSignRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsSignRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsSignRequest(val *GcpkmsSignRequest) *NullableGcpkmsSignRequest {
	return &NullableGcpkmsSignRequest{value: val, isSet: true}
}

func (v NullableGcpkmsSignRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsSignRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GcpkmsVerifyRequest struct for GcpkmsVerifyRequest
type GcpkmsVerifyRequest struct {
	// Digest to verify. This digest must use the same SHA algorithm as the underlying Cloud KMS key. The digest must be the base64-encoded binary value. This field is required.
	Digest *string `json:"digest,omitempty"`
	// Integer version of the crypto key version to use for verification. This field is required.
	KeyVersion *int32 `json:"key_version,omitempty"`
	// Base64-encoded signature to use for verification. This field is required.
	Signature *string `json:"signature,omitempty"`
}

// NewGcpkmsVerifyRequest instantiates a new GcpkmsVerifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsVerifyRequest() *GcpkmsVerifyRequest {
	this := GcpkmsVerifyRequest{}
	return &this
}

// NewGcpkmsVerifyRequestWithDefaults instantiates a new GcpkmsVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsVerifyRequestWithDefaults() *GcpkmsVerifyRequest {
	this := GcpkmsVerifyRequest{}
	return &this
}

// GetDigest returns the Digest field value if set, zero value otherwise.
func (o *GcpkmsVerifyRequest) GetDigest() string {
	if o == nil || o.Digest == nil {
		var ret string
		return ret
	}
	return *o.Digest
}

// GetDigestOk returns a tuple with the Digest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsVerifyRequest) GetDigestOk() (*string, bool) {
	if o == nil || o.Digest == nil {
		return nil, false
	}
	return o.Digest, true
}

// HasDigest returns a boolean if a field has been set.
func (o *GcpkmsVerifyRequest) HasDigest() bool {
	if o != nil && o.Digest != nil {
		return true
	}

	return false
}

// SetDigest gets a reference to the given string and assigns it to the Digest field.
func (o *GcpkmsVerifyRequest) SetDigest(v string) {
	o.Digest = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *GcpkmsVerifyRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsVerifyRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *GcpkmsVerifyRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *GcpkmsVerifyRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *GcpkmsVerifyRequest) GetSignature() string {
	if o == nil || o.Signature == nil {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsVerifyRequest) GetSignatureOk() (*string, bool) {
	if o == nil || o.Signature == nil {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *GcpkmsVerifyRequest) HasSignature() bool {
	if o != nil && o.Signature != nil {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *GcpkmsVerifyRequest) SetSignature(v string) {
	o.Signature = &v
}

func (o GcpkmsVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Digest != nil {
		toSerialize["digest"] = o.Digest
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	if o.Signature != nil {
		toSerialize["signature"] = o.Signature
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsVerifyRequest struct {
	value *GcpkmsVerifyRequest
	isSet bool
}

func (v NullableGcpkmsVerifyRequest) Get() *GcpkmsVerifyRequest {
	return v.value
}

func (v *NullableGcpkmsVerifyRequest) Set(val *GcpkmsVerifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsVerifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsVerifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsVerifyRequest(val *GcpkmsVerifyRequest) *NullableGcpkmsVerifyRequest {
	return &NullableGcpkmsVerifyRequest{value: val, isSet: true}
}

func (v NullableGcpkmsVerifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsVerifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GithubConfigRequest struct for GithubConfigRequest
type GithubConfigRequest struct {
	// The API endpoint to use. Useful if you are running GitHub Enterprise or an API-compatible authentication server.
	BaseUrl *string `json:"base_url,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// The organization users must be part of
	Organization string `json:"organization"`
	// The ID of the organization users must be part of
	OrganizationId *int64 `json:"organization_id,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies. This will apply to all tokens generated by this auth method, in addition to any policies configured for specific users/groups.
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewGithubConfigRequest instantiates a new GithubConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubConfigRequest(organization string) *GithubConfigRequest {
	this := GithubConfigRequest{}
	this.Organization = organization
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewGithubConfigRequestWithDefaults instantiates a new GithubConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubConfigRequestWithDefaults() *GithubConfigRequest {
	this := GithubConfigRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetBaseUrl returns the BaseUrl field value if set, zero value otherwise.
func (o *GithubConfigRequest) GetBaseUrl() string {
	if o == nil || o.BaseUrl == nil {
		var ret string
		return ret
	}
	return *o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubConfigRequest) GetBaseUrlOk() (*string, bool) {
	if o == nil || o.BaseUrl == nil {
		return nil, false
	}
	return o.BaseUrl, true
}

// HasBaseUrl returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasBaseUrl() bool {
	if o != nil && o.BaseUrl != nil {
		return true
	}

	return false
}

// SetBaseUrl gets a reference to the given string and assigns it to the BaseUrl field.
func (o *GithubConfigRequest) SetBaseUrl(v string) {
	o.BaseUrl = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *GithubConfigRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GithubConfigRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *GithubConfigRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetOrganization returns the Organization field value
func (o *GithubConfigRequest) GetOrganization() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *GithubConfigRequest) GetOrganizationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *GithubConfigRequest) SetOrganization(v string) {
	o.Organization = v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *GithubConfigRequest) GetOrganizationId() int64 {
	if o == nil || o.OrganizationId == nil {
		var ret int64
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubConfigRequest) GetOrganizationIdOk() (*int64, bool) {
	if o == nil || o.OrganizationId == nil {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasOrganizationId() bool {
	if o != nil && o.OrganizationId != nil {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int64 and assigns it to the OrganizationId field.
func (o *GithubConfigRequest) SetOrganizationId(v int64) {
	o.OrganizationId = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *GithubConfigRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubConfigRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *GithubConfigRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *GithubConfigRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubConfigRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *GithubConfigRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *GithubConfigRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubConfigRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *GithubConfigRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *GithubConfigRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubConfigRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *GithubConfigRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *GithubConfigRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubConfigRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *GithubConfigRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *GithubConfigRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubConfigRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *GithubConfigRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *GithubConfigRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubConfigRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *GithubConfigRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *GithubConfigRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubConfigRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *GithubConfigRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *GithubConfigRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubConfigRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *GithubConfigRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *GithubConfigRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GithubConfigRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *GithubConfigRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *GithubConfigRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o GithubConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BaseUrl != nil {
		toSerialize["base_url"] = o.BaseUrl
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if true {
		toSerialize["organization"] = o.Organization
	}
	if o.OrganizationId != nil {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableGithubConfigRequest struct {
	value *GithubConfigRequest
	isSet bool
}

func (v NullableGithubConfigRequest) Get() *GithubConfigRequest {
	return v.value
}

func (v *NullableGithubConfigRequest) Set(val *GithubConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubConfigRequest(val *GithubConfigRequest) *NullableGithubConfigRequest {
	return &NullableGithubConfigRequest{value: val, isSet: true}
}

func (v NullableGithubConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GithubLoginRequest struct for GithubLoginRequest
type GithubLoginRequest struct {
	// GitHub personal API token
	Token *string `json:"token,omitempty"`
}

// NewGithubLoginRequest instantiates a new GithubLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubLoginRequest() *GithubLoginRequest {
	this := GithubLoginRequest{}
	return &this
}

// NewGithubLoginRequestWithDefaults instantiates a new GithubLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubLoginRequestWithDefaults() *GithubLoginRequest {
	this := GithubLoginRequest{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *GithubLoginRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubLoginRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *GithubLoginRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *GithubLoginRequest) SetToken(v string) {
	o.Token = &v
}

func (o GithubLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableGithubLoginRequest struct {
	value *GithubLoginRequest
	isSet bool
}

func (v NullableGithubLoginRequest) Get() *GithubLoginRequest {
	return v.value
}

func (v *NullableGithubLoginRequest) Set(val *GithubLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubLoginRequest(val *GithubLoginRequest) *NullableGithubLoginRequest {
	return &NullableGithubLoginRequest{value: val, isSet: true}
}

func (v NullableGithubLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GithubMapTeamsRequest struct for GithubMapTeamsRequest
type GithubMapTeamsRequest struct {
	// Value for teams mapping
	Value *string `json:"value,omitempty"`
}

// NewGithubMapTeamsRequest instantiates a new GithubMapTeamsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubMapTeamsRequest() *GithubMapTeamsRequest {
	this := GithubMapTeamsRequest{}
	return &this
}

// NewGithubMapTeamsRequestWithDefaults instantiates a new GithubMapTeamsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubMapTeamsRequestWithDefaults() *GithubMapTeamsRequest {
	this := GithubMapTeamsRequest{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *GithubMapTeamsRequest) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubMapTeamsRequest) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *GithubMapTeamsRequest) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *GithubMapTeamsRequest) SetValue(v string) {
	o.Value = &v
}

func (o GithubMapTeamsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableGithubMapTeamsRequest struct {
	value *GithubMapTeamsRequest
	isSet bool
}

func (v NullableGithubMapTeamsRequest) Get() *GithubMapTeamsRequest {
	return v.value
}

func (v *NullableGithubMapTeamsRequest) Set(val *GithubMapTeamsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubMapTeamsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubMapTeamsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubMapTeamsRequest(val *GithubMapTeamsRequest) *NullableGithubMapTeamsRequest {
	return &NullableGithubMapTeamsRequest{value: val, isSet: true}
}

func (v NullableGithubMapTeamsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubMapTeamsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GithubMapUsersRequest struct for GithubMapUsersRequest
type GithubMapUsersRequest struct {
	// Value for users mapping
	Value *string `json:"value,omitempty"`
}

// NewGithubMapUsersRequest instantiates a new GithubMapUsersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubMapUsersRequest() *GithubMapUsersRequest {
	this := GithubMapUsersRequest{}
	return &this
}

// NewGithubMapUsersRequestWithDefaults instantiates a new GithubMapUsersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubMapUsersRequestWithDefaults() *GithubMapUsersRequest {
	this := GithubMapUsersRequest{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *GithubMapUsersRequest) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubMapUsersRequest) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *GithubMapUsersRequest) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *GithubMapUsersRequest) SetValue(v string) {
	o.Value = &v
}

func (o GithubMapUsersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableGithubMapUsersRequest struct {
	value *GithubMapUsersRequest
	isSet bool
}

func (v NullableGithubMapUsersRequest) Get() *GithubMapUsersRequest {
	return v.value
}

func (v *NullableGithubMapUsersRequest) Set(val *GithubMapUsersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubMapUsersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubMapUsersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubMapUsersRequest(val *GithubMapUsersRequest) *NullableGithubMapUsersRequest {
	return &NullableGithubMapUsersRequest{value: val, isSet: true}
}

func (v NullableGithubMapUsersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubMapUsersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityAliasIdRequest struct for IdentityAliasIdRequest
type IdentityAliasIdRequest struct {
	// Entity ID to which this alias should be tied to
	CanonicalId *string `json:"canonical_id,omitempty"`
	// Entity ID to which this alias should be tied to. This field is deprecated in favor of 'canonical_id'.
	EntityId *string `json:"entity_id,omitempty"`
	// Mount accessor to which this alias belongs to
	MountAccessor *string `json:"mount_accessor,omitempty"`
	// Name of the alias
	Name *string `json:"name,omitempty"`
}

// NewIdentityAliasIdRequest instantiates a new IdentityAliasIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityAliasIdRequest() *IdentityAliasIdRequest {
	this := IdentityAliasIdRequest{}
	return &this
}

// NewIdentityAliasIdRequestWithDefaults instantiates a new IdentityAliasIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityAliasIdRequestWithDefaults() *IdentityAliasIdRequest {
	this := IdentityAliasIdRequest{}
	return &this
}

// GetCanonicalId returns the CanonicalId field value if set, zero value otherwise.
func (o *IdentityAliasIdRequest) GetCanonicalId() string {
	if o == nil || o.CanonicalId == nil {
		var ret string
		return ret
	}
	return *o.CanonicalId
}

// GetCanonicalIdOk returns a tuple with the CanonicalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityAliasIdRequest) GetCanonicalIdOk() (*string, bool) {
	if o == nil || o.CanonicalId == nil {
		return nil, false
	}
	return o.CanonicalId, true
}

// HasCanonicalId returns a boolean if a field has been set.
func (o *IdentityAliasIdRequest) HasCanonicalId() bool {
	if o != nil && o.CanonicalId != nil {
		return true
	}

	return false
}

// SetCanonicalId gets a reference to the given string and assigns it to the CanonicalId field.
func (o *IdentityAliasIdRequest) SetCanonicalId(v string) {
	o.CanonicalId = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *IdentityAliasIdRequest) GetEntityId() string {
	if o == nil || o.EntityId == nil {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityAliasIdRequest) GetEntityIdOk() (*string, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *IdentityAliasIdRequest) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *IdentityAliasIdRequest) SetEntityId(v string) {
	o.EntityId = &v
}

// GetMountAccessor returns the MountAccessor field value if set, zero value otherwise.
func (o *IdentityAliasIdRequest) GetMountAccessor() string {
	if o == nil || o.MountAccessor == nil {
		var ret string
		return ret
	}
	return *o.MountAccessor
}

// GetMountAccessorOk returns a tuple with the MountAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityAliasIdRequest) GetMountAccessorOk() (*string, bool) {
	if o == nil || o.MountAccessor == nil {
		return nil, false
	}
	return o.MountAccessor, true
}

// HasMountAccessor returns a boolean if a field has been set.
func (o *IdentityAliasIdRequest) HasMountAccessor() bool {
	if o != nil && o.MountAccessor != nil {
		return true
	}

	return false
}

// SetMountAccessor gets a reference to the given string and assigns it to the MountAccessor field.
func (o *IdentityAliasIdRequest) SetMountAccessor(v string) {
	o.MountAccessor = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityAliasIdRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityAliasIdRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityAliasIdRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityAliasIdRequest) SetName(v string) {
	o.Name = &v
}

func (o IdentityAliasIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanonicalId != nil {
		toSerialize["canonical_id"] = o.CanonicalId
	}
	if o.EntityId != nil {
		toSerialize["entity_id"] = o.EntityId
	}
	if o.MountAccessor != nil {
		toSerialize["mount_accessor"] = o.MountAccessor
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityAliasIdRequest struct {
	value *IdentityAliasIdRequest
	isSet bool
}

func (v NullableIdentityAliasIdRequest) Get() *IdentityAliasIdRequest {
	return v.value
}

func (v *NullableIdentityAliasIdRequest) Set(val *IdentityAliasIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityAliasIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityAliasIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityAliasIdRequest(val *IdentityAliasIdRequest) *NullableIdentityAliasIdRequest {
	return &NullableIdentityAliasIdRequest{value: val, isSet: true}
}

func (v NullableIdentityAliasIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityAliasIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityAliasRequest struct for IdentityAliasRequest
type IdentityAliasRequest struct {
	// Entity ID to which this alias belongs to
	CanonicalId *string `json:"canonical_id,omitempty"`
	// Entity ID to which this alias belongs to. This field is deprecated in favor of 'canonical_id'.
	EntityId *string `json:"entity_id,omitempty"`
	// ID of the alias
	Id *string `json:"id,omitempty"`
	// Mount accessor to which this alias belongs to
	MountAccessor *string `json:"mount_accessor,omitempty"`
	// Name of the alias
	Name *string `json:"name,omitempty"`
}

// NewIdentityAliasRequest instantiates a new IdentityAliasRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityAliasRequest() *IdentityAliasRequest {
	this := IdentityAliasRequest{}
	return &this
}

// NewIdentityAliasRequestWithDefaults instantiates a new IdentityAliasRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityAliasRequestWithDefaults() *IdentityAliasRequest {
	this := IdentityAliasRequest{}
	return &this
}

// GetCanonicalId returns the CanonicalId field value if set, zero value otherwise.
func (o *IdentityAliasRequest) GetCanonicalId() string {
	if o == nil || o.CanonicalId == nil {
		var ret string
		return ret
	}
	return *o.CanonicalId
}

// GetCanonicalIdOk returns a tuple with the CanonicalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityAliasRequest) GetCanonicalIdOk() (*string, bool) {
	if o == nil || o.CanonicalId == nil {
		return nil, false
	}
	return o.CanonicalId, true
}

// HasCanonicalId returns a boolean if a field has been set.
func (o *IdentityAliasRequest) HasCanonicalId() bool {
	if o != nil && o.CanonicalId != nil {
		return true
	}

	return false
}

// SetCanonicalId gets a reference to the given string and assigns it to the CanonicalId field.
func (o *IdentityAliasRequest) SetCanonicalId(v string) {
	o.CanonicalId = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *IdentityAliasRequest) GetEntityId() string {
	if o == nil || o.EntityId == nil {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityAliasRequest) GetEntityIdOk() (*string, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *IdentityAliasRequest) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *IdentityAliasRequest) SetEntityId(v string) {
	o.EntityId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityAliasRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityAliasRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityAliasRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityAliasRequest) SetId(v string) {
	o.Id = &v
}

// GetMountAccessor returns the MountAccessor field value if set, zero value otherwise.
func (o *IdentityAliasRequest) GetMountAccessor() string {
	if o == nil || o.MountAccessor == nil {
		var ret string
		return ret
	}
	return *o.MountAccessor
}

// GetMountAccessorOk returns a tuple with the MountAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityAliasRequest) GetMountAccessorOk() (*string, bool) {
	if o == nil || o.MountAccessor == nil {
		return nil, false
	}
	return o.MountAccessor, true
}

// HasMountAccessor returns a boolean if a field has been set.
func (o *IdentityAliasRequest) HasMountAccessor() bool {
	if o != nil && o.MountAccessor != nil {
		return true
	}

	return false
}

// SetMountAccessor gets a reference to the given string and assigns it to the MountAccessor field.
func (o *IdentityAliasRequest) SetMountAccessor(v string) {
	o.MountAccessor = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityAliasRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityAliasRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityAliasRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityAliasRequest) SetName(v string) {
	o.Name = &v
}

func (o IdentityAliasRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanonicalId != nil {
		toSerialize["canonical_id"] = o.CanonicalId
	}
	if o.EntityId != nil {
		toSerialize["entity_id"] = o.EntityId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MountAccessor != nil {
		toSerialize["mount_accessor"] = o.MountAccessor
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityAliasRequest struct {
	value *IdentityAliasRequest
	isSet bool
}

func (v NullableIdentityAliasRequest) Get() *IdentityAliasRequest {
	return v.value
}

func (v *NullableIdentityAliasRequest) Set(val *IdentityAliasRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityAliasRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityAliasRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityAliasRequest(val *IdentityAliasRequest) *NullableIdentityAliasRequest {
	return &NullableIdentityAliasRequest{value: val, isSet: true}
}

func (v NullableIdentityAliasRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityAliasRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityEntityAliasIdRequest struct for IdentityEntityAliasIdRequest
type IdentityEntityAliasIdRequest struct {
	// Entity ID to which this alias should be tied to
	CanonicalId *string `json:"canonical_id,omitempty"`
	// User provided key-value pairs
	CustomMetadata map[string]interface{} `json:"custom_metadata,omitempty"`
	// Entity ID to which this alias belongs to. This field is deprecated, use canonical_id.
	EntityId *string `json:"entity_id,omitempty"`
	// (Unused)
	MountAccessor *string `json:"mount_accessor,omitempty"`
	// (Unused)
	Name *string `json:"name,omitempty"`
}

// NewIdentityEntityAliasIdRequest instantiates a new IdentityEntityAliasIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEntityAliasIdRequest() *IdentityEntityAliasIdRequest {
	this := IdentityEntityAliasIdRequest{}
	return &this
}

// NewIdentityEntityAliasIdRequestWithDefaults instantiates a new IdentityEntityAliasIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEntityAliasIdRequestWithDefaults() *IdentityEntityAliasIdRequest {
	this := IdentityEntityAliasIdRequest{}
	return &this
}

// GetCanonicalId returns the CanonicalId field value if set, zero value otherwise.
func (o *IdentityEntityAliasIdRequest) GetCanonicalId() string {
	if o == nil || o.CanonicalId == nil {
		var ret string
		return ret
	}
	return *o.CanonicalId
}

// GetCanonicalIdOk returns a tuple with the CanonicalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityAliasIdRequest) GetCanonicalIdOk() (*string, bool) {
	if o == nil || o.CanonicalId == nil {
		return nil, false
	}
	return o.CanonicalId, true
}

// HasCanonicalId returns a boolean if a field has been set.
func (o *IdentityEntityAliasIdRequest) HasCanonicalId() bool {
	if o != nil && o.CanonicalId != nil {
		return true
	}

	return false
}

// SetCanonicalId gets a reference to the given string and assigns it to the CanonicalId field.
func (o *IdentityEntityAliasIdRequest) SetCanonicalId(v string) {
	o.CanonicalId = &v
}

// GetCustomMetadata returns the CustomMetadata field value if set, zero value otherwise.
func (o *IdentityEntityAliasIdRequest) GetCustomMetadata() map[string]interface{} {
	if o == nil || o.CustomMetadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomMetadata
}

// GetCustomMetadataOk returns a tuple with the CustomMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityAliasIdRequest) GetCustomMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomMetadata == nil {
		return nil, false
	}
	return o.CustomMetadata, true
}

// HasCustomMetadata returns a boolean if a field has been set.
func (o *IdentityEntityAliasIdRequest) HasCustomMetadata() bool {
	if o != nil && o.CustomMetadata != nil {
		return true
	}

	return false
}

// SetCustomMetadata gets a reference to the given map[string]interface{} and assigns it to the CustomMetadata field.
func (o *IdentityEntityAliasIdRequest) SetCustomMetadata(v map[string]interface{}) {
	o.CustomMetadata = v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *IdentityEntityAliasIdRequest) GetEntityId() string {
	if o == nil || o.EntityId == nil {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityAliasIdRequest) GetEntityIdOk() (*string, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *IdentityEntityAliasIdRequest) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *IdentityEntityAliasIdRequest) SetEntityId(v string) {
	o.EntityId = &v
}

// GetMountAccessor returns the MountAccessor field value if set, zero value otherwise.
func (o *IdentityEntityAliasIdRequest) GetMountAccessor() string {
	if o == nil || o.MountAccessor == nil {
		var ret string
		return ret
	}
	return *o.MountAccessor
}

// GetMountAccessorOk returns a tuple with the MountAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityAliasIdRequest) GetMountAccessorOk() (*string, bool) {
	if o == nil || o.MountAccessor == nil {
		return nil, false
	}
	return o.MountAccessor, true
}

// HasMountAccessor returns a boolean if a field has been set.
func (o *IdentityEntityAliasIdRequest) HasMountAccessor() bool {
	if o != nil && o.MountAccessor != nil {
		return true
	}

	return false
}

// SetMountAccessor gets a reference to the given string and assigns it to the MountAccessor field.
func (o *IdentityEntityAliasIdRequest) SetMountAccessor(v string) {
	o.MountAccessor = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityEntityAliasIdRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityAliasIdRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityEntityAliasIdRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityEntityAliasIdRequest) SetName(v string) {
	o.Name = &v
}

func (o IdentityEntityAliasIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanonicalId != nil {
		toSerialize["canonical_id"] = o.CanonicalId
	}
	if o.CustomMetadata != nil {
		toSerialize["custom_metadata"] = o.CustomMetadata
	}
	if o.EntityId != nil {
		toSerialize["entity_id"] = o.EntityId
	}
	if o.MountAccessor != nil {
		toSerialize["mount_accessor"] = o.MountAccessor
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityEntityAliasIdRequest struct {
	value *IdentityEntityAliasIdRequest
	isSet bool
}

func (v NullableIdentityEntityAliasIdRequest) Get() *IdentityEntityAliasIdRequest {
	return v.value
}

func (v *NullableIdentityEntityAliasIdRequest) Set(val *IdentityEntityAliasIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEntityAliasIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEntityAliasIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEntityAliasIdRequest(val *IdentityEntityAliasIdRequest) *NullableIdentityEntityAliasIdRequest {
	return &NullableIdentityEntityAliasIdRequest{value: val, isSet: true}
}

func (v NullableIdentityEntityAliasIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEntityAliasIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityEntityAliasRequest struct for IdentityEntityAliasRequest
type IdentityEntityAliasRequest struct {
	// Entity ID to which this alias belongs
	CanonicalId *string `json:"canonical_id,omitempty"`
	// User provided key-value pairs
	CustomMetadata map[string]interface{} `json:"custom_metadata,omitempty"`
	// Entity ID to which this alias belongs. This field is deprecated, use canonical_id.
	EntityId *string `json:"entity_id,omitempty"`
	// ID of the entity alias. If set, updates the corresponding entity alias.
	Id *string `json:"id,omitempty"`
	// Mount accessor to which this alias belongs to; unused for a modify
	MountAccessor *string `json:"mount_accessor,omitempty"`
	// Name of the alias; unused for a modify
	Name *string `json:"name,omitempty"`
}

// NewIdentityEntityAliasRequest instantiates a new IdentityEntityAliasRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEntityAliasRequest() *IdentityEntityAliasRequest {
	this := IdentityEntityAliasRequest{}
	return &this
}

// NewIdentityEntityAliasRequestWithDefaults instantiates a new IdentityEntityAliasRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEntityAliasRequestWithDefaults() *IdentityEntityAliasRequest {
	this := IdentityEntityAliasRequest{}
	return &this
}

// GetCanonicalId returns the CanonicalId field value if set, zero value otherwise.
func (o *IdentityEntityAliasRequest) GetCanonicalId() string {
	if o == nil || o.CanonicalId == nil {
		var ret string
		return ret
	}
	return *o.CanonicalId
}

// GetCanonicalIdOk returns a tuple with the CanonicalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityAliasRequest) GetCanonicalIdOk() (*string, bool) {
	if o == nil || o.CanonicalId == nil {
		return nil, false
	}
	return o.CanonicalId, true
}

// HasCanonicalId returns a boolean if a field has been set.
func (o *IdentityEntityAliasRequest) HasCanonicalId() bool {
	if o != nil && o.CanonicalId != nil {
		return true
	}

	return false
}

// SetCanonicalId gets a reference to the given string and assigns it to the CanonicalId field.
func (o *IdentityEntityAliasRequest) SetCanonicalId(v string) {
	o.CanonicalId = &v
}

// GetCustomMetadata returns the CustomMetadata field value if set, zero value otherwise.
func (o *IdentityEntityAliasRequest) GetCustomMetadata() map[string]interface{} {
	if o == nil || o.CustomMetadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomMetadata
}

// GetCustomMetadataOk returns a tuple with the CustomMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityAliasRequest) GetCustomMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomMetadata == nil {
		return nil, false
	}
	return o.CustomMetadata, true
}

// HasCustomMetadata returns a boolean if a field has been set.
func (o *IdentityEntityAliasRequest) HasCustomMetadata() bool {
	if o != nil && o.CustomMetadata != nil {
		return true
	}

	return false
}

// SetCustomMetadata gets a reference to the given map[string]interface{} and assigns it to the CustomMetadata field.
func (o *IdentityEntityAliasRequest) SetCustomMetadata(v map[string]interface{}) {
	o.CustomMetadata = v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *IdentityEntityAliasRequest) GetEntityId() string {
	if o == nil || o.EntityId == nil {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityAliasRequest) GetEntityIdOk() (*string, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *IdentityEntityAliasRequest) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *IdentityEntityAliasRequest) SetEntityId(v string) {
	o.EntityId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityEntityAliasRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityAliasRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityEntityAliasRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityEntityAliasRequest) SetId(v string) {
	o.Id = &v
}

// GetMountAccessor returns the MountAccessor field value if set, zero value otherwise.
func (o *IdentityEntityAliasRequest) GetMountAccessor() string {
	if o == nil || o.MountAccessor == nil {
		var ret string
		return ret
	}
	return *o.MountAccessor
}

// GetMountAccessorOk returns a tuple with the MountAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityAliasRequest) GetMountAccessorOk() (*string, bool) {
	if o == nil || o.MountAccessor == nil {
		return nil, false
	}
	return o.MountAccessor, true
}

// HasMountAccessor returns a boolean if a field has been set.
func (o *IdentityEntityAliasRequest) HasMountAccessor() bool {
	if o != nil && o.MountAccessor != nil {
		return true
	}

	return false
}

// SetMountAccessor gets a reference to the given string and assigns it to the MountAccessor field.
func (o *IdentityEntityAliasRequest) SetMountAccessor(v string) {
	o.MountAccessor = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityEntityAliasRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityAliasRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityEntityAliasRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityEntityAliasRequest) SetName(v string) {
	o.Name = &v
}

func (o IdentityEntityAliasRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanonicalId != nil {
		toSerialize["canonical_id"] = o.CanonicalId
	}
	if o.CustomMetadata != nil {
		toSerialize["custom_metadata"] = o.CustomMetadata
	}
	if o.EntityId != nil {
		toSerialize["entity_id"] = o.EntityId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MountAccessor != nil {
		toSerialize["mount_accessor"] = o.MountAccessor
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityEntityAliasRequest struct {
	value *IdentityEntityAliasRequest
	isSet bool
}

func (v NullableIdentityEntityAliasRequest) Get() *IdentityEntityAliasRequest {
	return v.value
}

func (v *NullableIdentityEntityAliasRequest) Set(val *IdentityEntityAliasRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEntityAliasRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEntityAliasRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEntityAliasRequest(val *IdentityEntityAliasRequest) *NullableIdentityEntityAliasRequest {
	return &NullableIdentityEntityAliasRequest{value: val, isSet: true}
}

func (v NullableIdentityEntityAliasRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEntityAliasRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityEntityBatchDeleteRequest struct for IdentityEntityBatchDeleteRequest
type IdentityEntityBatchDeleteRequest struct {
	// Entity IDs to delete
	EntityIds []string `json:"entity_ids,omitempty"`
}

// NewIdentityEntityBatchDeleteRequest instantiates a new IdentityEntityBatchDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEntityBatchDeleteRequest() *IdentityEntityBatchDeleteRequest {
	this := IdentityEntityBatchDeleteRequest{}
	return &this
}

// NewIdentityEntityBatchDeleteRequestWithDefaults instantiates a new IdentityEntityBatchDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEntityBatchDeleteRequestWithDefaults() *IdentityEntityBatchDeleteRequest {
	this := IdentityEntityBatchDeleteRequest{}
	return &this
}

// GetEntityIds returns the EntityIds field value if set, zero value otherwise.
func (o *IdentityEntityBatchDeleteRequest) GetEntityIds() []string {
	if o == nil || o.EntityIds == nil {
		var ret []string
		return ret
	}
	return o.EntityIds
}

// GetEntityIdsOk returns a tuple with the EntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityBatchDeleteRequest) GetEntityIdsOk() ([]string, bool) {
	if o == nil || o.EntityIds == nil {
		return nil, false
	}
	return o.EntityIds, true
}

// HasEntityIds returns a boolean if a field has been set.
func (o *IdentityEntityBatchDeleteRequest) HasEntityIds() bool {
	if o != nil && o.EntityIds != nil {
		return true
	}

	return false
}

// SetEntityIds gets a reference to the given []string and assigns it to the EntityIds field.
func (o *IdentityEntityBatchDeleteRequest) SetEntityIds(v []string) {
	o.EntityIds = v
}

func (o IdentityEntityBatchDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntityIds != nil {
		toSerialize["entity_ids"] = o.EntityIds
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityEntityBatchDeleteRequest struct {
	value *IdentityEntityBatchDeleteRequest
	isSet bool
}

func (v NullableIdentityEntityBatchDeleteRequest) Get() *IdentityEntityBatchDeleteRequest {
	return v.value
}

func (v *NullableIdentityEntityBatchDeleteRequest) Set(val *IdentityEntityBatchDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEntityBatchDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEntityBatchDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEntityBatchDeleteRequest(val *IdentityEntityBatchDeleteRequest) *NullableIdentityEntityBatchDeleteRequest {
	return &NullableIdentityEntityBatchDeleteRequest{value: val, isSet: true}
}

func (v NullableIdentityEntityBatchDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEntityBatchDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityEntityIdRequest struct for IdentityEntityIdRequest
type IdentityEntityIdRequest struct {
	// If set true, tokens tied to this identity will not be able to be used (but will not be revoked).
	Disabled *bool `json:"disabled,omitempty"`
	// Metadata to be associated with the entity. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Name of the entity
	Name *string `json:"name,omitempty"`
	// Policies to be tied to the entity.
	Policies []string `json:"policies,omitempty"`
}

// NewIdentityEntityIdRequest instantiates a new IdentityEntityIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEntityIdRequest() *IdentityEntityIdRequest {
	this := IdentityEntityIdRequest{}
	return &this
}

// NewIdentityEntityIdRequestWithDefaults instantiates a new IdentityEntityIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEntityIdRequestWithDefaults() *IdentityEntityIdRequest {
	this := IdentityEntityIdRequest{}
	return &this
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *IdentityEntityIdRequest) GetDisabled() bool {
	if o == nil || o.Disabled == nil {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityIdRequest) GetDisabledOk() (*bool, bool) {
	if o == nil || o.Disabled == nil {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *IdentityEntityIdRequest) HasDisabled() bool {
	if o != nil && o.Disabled != nil {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *IdentityEntityIdRequest) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IdentityEntityIdRequest) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityIdRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IdentityEntityIdRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *IdentityEntityIdRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityEntityIdRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityIdRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityEntityIdRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityEntityIdRequest) SetName(v string) {
	o.Name = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *IdentityEntityIdRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityIdRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *IdentityEntityIdRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *IdentityEntityIdRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o IdentityEntityIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Disabled != nil {
		toSerialize["disabled"] = o.Disabled
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityEntityIdRequest struct {
	value *IdentityEntityIdRequest
	isSet bool
}

func (v NullableIdentityEntityIdRequest) Get() *IdentityEntityIdRequest {
	return v.value
}

func (v *NullableIdentityEntityIdRequest) Set(val *IdentityEntityIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEntityIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEntityIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEntityIdRequest(val *IdentityEntityIdRequest) *NullableIdentityEntityIdRequest {
	return &NullableIdentityEntityIdRequest{value: val, isSet: true}
}

func (v NullableIdentityEntityIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEntityIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityEntityMergeRequest struct for IdentityEntityMergeRequest
type IdentityEntityMergeRequest struct {
	// Setting this will follow the 'mine' strategy for merging MFA secrets. If there are secrets of the same type both in entities that are merged from and in entity into which all others are getting merged, secrets in the destination will be unaltered. If not set, this API will throw an error containing all the conflicts.
	Force *bool `json:"force,omitempty"`
	// Entity IDs which needs to get merged
	FromEntityIds []string `json:"from_entity_ids,omitempty"`
	// Entity ID into which all the other entities need to get merged
	ToEntityId *string `json:"to_entity_id,omitempty"`
}

// NewIdentityEntityMergeRequest instantiates a new IdentityEntityMergeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEntityMergeRequest() *IdentityEntityMergeRequest {
	this := IdentityEntityMergeRequest{}
	return &this
}

// NewIdentityEntityMergeRequestWithDefaults instantiates a new IdentityEntityMergeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEntityMergeRequestWithDefaults() *IdentityEntityMergeRequest {
	this := IdentityEntityMergeRequest{}
	return &this
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *IdentityEntityMergeRequest) GetForce() bool {
	if o == nil || o.Force == nil {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityMergeRequest) GetForceOk() (*bool, bool) {
	if o == nil || o.Force == nil {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *IdentityEntityMergeRequest) HasForce() bool {
	if o != nil && o.Force != nil {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *IdentityEntityMergeRequest) SetForce(v bool) {
	o.Force = &v
}

// GetFromEntityIds returns the FromEntityIds field value if set, zero value otherwise.
func (o *IdentityEntityMergeRequest) GetFromEntityIds() []string {
	if o == nil || o.FromEntityIds == nil {
		var ret []string
		return ret
	}
	return o.FromEntityIds
}

// GetFromEntityIdsOk returns a tuple with the FromEntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityMergeRequest) GetFromEntityIdsOk() ([]string, bool) {
	if o == nil || o.FromEntityIds == nil {
		return nil, false
	}
	return o.FromEntityIds, true
}

// HasFromEntityIds returns a boolean if a field has been set.
func (o *IdentityEntityMergeRequest) HasFromEntityIds() bool {
	if o != nil && o.FromEntityIds != nil {
		return true
	}

	return false
}

// SetFromEntityIds gets a reference to the given []string and assigns it to the FromEntityIds field.
func (o *IdentityEntityMergeRequest) SetFromEntityIds(v []string) {
	o.FromEntityIds = v
}

// GetToEntityId returns the ToEntityId field value if set, zero value otherwise.
func (o *IdentityEntityMergeRequest) GetToEntityId() string {
	if o == nil || o.ToEntityId == nil {
		var ret string
		return ret
	}
	return *o.ToEntityId
}

// GetToEntityIdOk returns a tuple with the ToEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityMergeRequest) GetToEntityIdOk() (*string, bool) {
	if o == nil || o.ToEntityId == nil {
		return nil, false
	}
	return o.ToEntityId, true
}

// HasToEntityId returns a boolean if a field has been set.
func (o *IdentityEntityMergeRequest) HasToEntityId() bool {
	if o != nil && o.ToEntityId != nil {
		return true
	}

	return false
}

// SetToEntityId gets a reference to the given string and assigns it to the ToEntityId field.
func (o *IdentityEntityMergeRequest) SetToEntityId(v string) {
	o.ToEntityId = &v
}

func (o IdentityEntityMergeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Force != nil {
		toSerialize["force"] = o.Force
	}
	if o.FromEntityIds != nil {
		toSerialize["from_entity_ids"] = o.FromEntityIds
	}
	if o.ToEntityId != nil {
		toSerialize["to_entity_id"] = o.ToEntityId
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityEntityMergeRequest struct {
	value *IdentityEntityMergeRequest
	isSet bool
}

func (v NullableIdentityEntityMergeRequest) Get() *IdentityEntityMergeRequest {
	return v.value
}

func (v *NullableIdentityEntityMergeRequest) Set(val *IdentityEntityMergeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEntityMergeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEntityMergeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEntityMergeRequest(val *IdentityEntityMergeRequest) *NullableIdentityEntityMergeRequest {
	return &NullableIdentityEntityMergeRequest{value: val, isSet: true}
}

func (v NullableIdentityEntityMergeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEntityMergeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityEntityNameRequest struct for IdentityEntityNameRequest
type IdentityEntityNameRequest struct {
	// If set true, tokens tied to this identity will not be able to be used (but will not be revoked).
	Disabled *bool `json:"disabled,omitempty"`
	// ID of the entity. If set, updates the corresponding existing entity.
	Id *string `json:"id,omitempty"`
	// Metadata to be associated with the entity. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Policies to be tied to the entity.
	Policies []string `json:"policies,omitempty"`
}

// NewIdentityEntityNameRequest instantiates a new IdentityEntityNameRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEntityNameRequest() *IdentityEntityNameRequest {
	this := IdentityEntityNameRequest{}
	return &this
}

// NewIdentityEntityNameRequestWithDefaults instantiates a new IdentityEntityNameRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEntityNameRequestWithDefaults() *IdentityEntityNameRequest {
	this := IdentityEntityNameRequest{}
	return &this
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *IdentityEntityNameRequest) GetDisabled() bool {
	if o == nil || o.Disabled == nil {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityNameRequest) GetDisabledOk() (*bool, bool) {
	if o == nil || o.Disabled == nil {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *IdentityEntityNameRequest) HasDisabled() bool {
	if o != nil && o.Disabled != nil {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *IdentityEntityNameRequest) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityEntityNameRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityNameRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityEntityNameRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityEntityNameRequest) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IdentityEntityNameRequest) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityNameRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IdentityEntityNameRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *IdentityEntityNameRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *IdentityEntityNameRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityNameRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *IdentityEntityNameRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *IdentityEntityNameRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o IdentityEntityNameRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Disabled != nil {
		toSerialize["disabled"] = o.Disabled
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityEntityNameRequest struct {
	value *IdentityEntityNameRequest
	isSet bool
}

func (v NullableIdentityEntityNameRequest) Get() *IdentityEntityNameRequest {
	return v.value
}

func (v *NullableIdentityEntityNameRequest) Set(val *IdentityEntityNameRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEntityNameRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEntityNameRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEntityNameRequest(val *IdentityEntityNameRequest) *NullableIdentityEntityNameRequest {
	return &NullableIdentityEntityNameRequest{value: val, isSet: true}
}

func (v NullableIdentityEntityNameRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEntityNameRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityEntityRequest struct for IdentityEntityRequest
type IdentityEntityRequest struct {
	// If set true, tokens tied to this identity will not be able to be used (but will not be revoked).
	Disabled *bool `json:"disabled,omitempty"`
	// ID of the entity. If set, updates the corresponding existing entity.
	Id *string `json:"id,omitempty"`
	// Metadata to be associated with the entity. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Name of the entity
	Name *string `json:"name,omitempty"`
	// Policies to be tied to the entity.
	Policies []string `json:"policies,omitempty"`
}

// NewIdentityEntityRequest instantiates a new IdentityEntityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEntityRequest() *IdentityEntityRequest {
	this := IdentityEntityRequest{}
	return &this
}

// NewIdentityEntityRequestWithDefaults instantiates a new IdentityEntityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEntityRequestWithDefaults() *IdentityEntityRequest {
	this := IdentityEntityRequest{}
	return &this
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *IdentityEntityRequest) GetDisabled() bool {
	if o == nil || o.Disabled == nil {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityRequest) GetDisabledOk() (*bool, bool) {
	if o == nil || o.Disabled == nil {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *IdentityEntityRequest) HasDisabled() bool {
	if o != nil && o.Disabled != nil {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *IdentityEntityRequest) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityEntityRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityEntityRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityEntityRequest) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IdentityEntityRequest) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IdentityEntityRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *IdentityEntityRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityEntityRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityEntityRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityEntityRequest) SetName(v string) {
	o.Name = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *IdentityEntityRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *IdentityEntityRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *IdentityEntityRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o IdentityEntityRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Disabled != nil {
		toSerialize["disabled"] = o.Disabled
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityEntityRequest struct {
	value *IdentityEntityRequest
	isSet bool
}

func (v NullableIdentityEntityRequest) Get() *IdentityEntityRequest {
	return v.value
}

func (v *NullableIdentityEntityRequest) Set(val *IdentityEntityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEntityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEntityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEntityRequest(val *IdentityEntityRequest) *NullableIdentityEntityRequest {
	return &NullableIdentityEntityRequest{value: val, isSet: true}
}

func (v NullableIdentityEntityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEntityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityGroupAliasIdRequest struct for IdentityGroupAliasIdRequest
type IdentityGroupAliasIdRequest struct {
	// ID of the group to which this is an alias.
	CanonicalId *string `json:"canonical_id,omitempty"`
	// Mount accessor to which this alias belongs to.
	MountAccessor *string `json:"mount_accessor,omitempty"`
	// Alias of the group.
	Name *string `json:"name,omitempty"`
}

// NewIdentityGroupAliasIdRequest instantiates a new IdentityGroupAliasIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityGroupAliasIdRequest() *IdentityGroupAliasIdRequest {
	this := IdentityGroupAliasIdRequest{}
	return &this
}

// NewIdentityGroupAliasIdRequestWithDefaults instantiates a new IdentityGroupAliasIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityGroupAliasIdRequestWithDefaults() *IdentityGroupAliasIdRequest {
	this := IdentityGroupAliasIdRequest{}
	return &this
}

// GetCanonicalId returns the CanonicalId field value if set, zero value otherwise.
func (o *IdentityGroupAliasIdRequest) GetCanonicalId() string {
	if o == nil || o.CanonicalId == nil {
		var ret string
		return ret
	}
	return *o.CanonicalId
}

// GetCanonicalIdOk returns a tuple with the CanonicalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupAliasIdRequest) GetCanonicalIdOk() (*string, bool) {
	if o == nil || o.CanonicalId == nil {
		return nil, false
	}
	return o.CanonicalId, true
}

// HasCanonicalId returns a boolean if a field has been set.
func (o *IdentityGroupAliasIdRequest) HasCanonicalId() bool {
	if o != nil && o.CanonicalId != nil {
		return true
	}

	return false
}

// SetCanonicalId gets a reference to the given string and assigns it to the CanonicalId field.
func (o *IdentityGroupAliasIdRequest) SetCanonicalId(v string) {
	o.CanonicalId = &v
}

// GetMountAccessor returns the MountAccessor field value if set, zero value otherwise.
func (o *IdentityGroupAliasIdRequest) GetMountAccessor() string {
	if o == nil || o.MountAccessor == nil {
		var ret string
		return ret
	}
	return *o.MountAccessor
}

// GetMountAccessorOk returns a tuple with the MountAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupAliasIdRequest) GetMountAccessorOk() (*string, bool) {
	if o == nil || o.MountAccessor == nil {
		return nil, false
	}
	return o.MountAccessor, true
}

// HasMountAccessor returns a boolean if a field has been set.
func (o *IdentityGroupAliasIdRequest) HasMountAccessor() bool {
	if o != nil && o.MountAccessor != nil {
		return true
	}

	return false
}

// SetMountAccessor gets a reference to the given string and assigns it to the MountAccessor field.
func (o *IdentityGroupAliasIdRequest) SetMountAccessor(v string) {
	o.MountAccessor = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityGroupAliasIdRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupAliasIdRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityGroupAliasIdRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityGroupAliasIdRequest) SetName(v string) {
	o.Name = &v
}

func (o IdentityGroupAliasIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanonicalId != nil {
		toSerialize["canonical_id"] = o.CanonicalId
	}
	if o.MountAccessor != nil {
		toSerialize["mount_accessor"] = o.MountAccessor
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityGroupAliasIdRequest struct {
	value *IdentityGroupAliasIdRequest
	isSet bool
}

func (v NullableIdentityGroupAliasIdRequest) Get() *IdentityGroupAliasIdRequest {
	return v.value
}

func (v *NullableIdentityGroupAliasIdRequest) Set(val *IdentityGroupAliasIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityGroupAliasIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityGroupAliasIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityGroupAliasIdRequest(val *IdentityGroupAliasIdRequest) *NullableIdentityGroupAliasIdRequest {
	return &NullableIdentityGroupAliasIdRequest{value: val, isSet: true}
}

func (v NullableIdentityGroupAliasIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityGroupAliasIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityGroupAliasRequest struct for IdentityGroupAliasRequest
type IdentityGroupAliasRequest struct {
	// ID of the group to which this is an alias.
	CanonicalId *string `json:"canonical_id,omitempty"`
	// ID of the group alias.
	Id *string `json:"id,omitempty"`
	// Mount accessor to which this alias belongs to.
	MountAccessor *string `json:"mount_accessor,omitempty"`
	// Alias of the group.
	Name *string `json:"name,omitempty"`
}

// NewIdentityGroupAliasRequest instantiates a new IdentityGroupAliasRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityGroupAliasRequest() *IdentityGroupAliasRequest {
	this := IdentityGroupAliasRequest{}
	return &this
}

// NewIdentityGroupAliasRequestWithDefaults instantiates a new IdentityGroupAliasRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityGroupAliasRequestWithDefaults() *IdentityGroupAliasRequest {
	this := IdentityGroupAliasRequest{}
	return &this
}

// GetCanonicalId returns the CanonicalId field value if set, zero value otherwise.
func (o *IdentityGroupAliasRequest) GetCanonicalId() string {
	if o == nil || o.CanonicalId == nil {
		var ret string
		return ret
	}
	return *o.CanonicalId
}

// GetCanonicalIdOk returns a tuple with the CanonicalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupAliasRequest) GetCanonicalIdOk() (*string, bool) {
	if o == nil || o.CanonicalId == nil {
		return nil, false
	}
	return o.CanonicalId, true
}

// HasCanonicalId returns a boolean if a field has been set.
func (o *IdentityGroupAliasRequest) HasCanonicalId() bool {
	if o != nil && o.CanonicalId != nil {
		return true
	}

	return false
}

// SetCanonicalId gets a reference to the given string and assigns it to the CanonicalId field.
func (o *IdentityGroupAliasRequest) SetCanonicalId(v string) {
	o.CanonicalId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityGroupAliasRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupAliasRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityGroupAliasRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityGroupAliasRequest) SetId(v string) {
	o.Id = &v
}

// GetMountAccessor returns the MountAccessor field value if set, zero value otherwise.
func (o *IdentityGroupAliasRequest) GetMountAccessor() string {
	if o == nil || o.MountAccessor == nil {
		var ret string
		return ret
	}
	return *o.MountAccessor
}

// GetMountAccessorOk returns a tuple with the MountAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupAliasRequest) GetMountAccessorOk() (*string, bool) {
	if o == nil || o.MountAccessor == nil {
		return nil, false
	}
	return o.MountAccessor, true
}

// HasMountAccessor returns a boolean if a field has been set.
func (o *IdentityGroupAliasRequest) HasMountAccessor() bool {
	if o != nil && o.MountAccessor != nil {
		return true
	}

	return false
}

// SetMountAccessor gets a reference to the given string and assigns it to the MountAccessor field.
func (o *IdentityGroupAliasRequest) SetMountAccessor(v string) {
	o.MountAccessor = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityGroupAliasRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupAliasRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityGroupAliasRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityGroupAliasRequest) SetName(v string) {
	o.Name = &v
}

func (o IdentityGroupAliasRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanonicalId != nil {
		toSerialize["canonical_id"] = o.CanonicalId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MountAccessor != nil {
		toSerialize["mount_accessor"] = o.MountAccessor
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityGroupAliasRequest struct {
	value *IdentityGroupAliasRequest
	isSet bool
}

func (v NullableIdentityGroupAliasRequest) Get() *IdentityGroupAliasRequest {
	return v.value
}

func (v *NullableIdentityGroupAliasRequest) Set(val *IdentityGroupAliasRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityGroupAliasRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityGroupAliasRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityGroupAliasRequest(val *IdentityGroupAliasRequest) *NullableIdentityGroupAliasRequest {
	return &NullableIdentityGroupAliasRequest{value: val, isSet: true}
}

func (v NullableIdentityGroupAliasRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityGroupAliasRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityGroupIdRequest struct for IdentityGroupIdRequest
type IdentityGroupIdRequest struct {
	// Entity IDs to be assigned as group members.
	MemberEntityIds []string `json:"member_entity_ids,omitempty"`
	// Group IDs to be assigned as group members.
	MemberGroupIds []string `json:"member_group_ids,omitempty"`
	// Metadata to be associated with the group. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Name of the group.
	Name *string `json:"name,omitempty"`
	// Policies to be tied to the group.
	Policies []string `json:"policies,omitempty"`
	// Type of the group, 'internal' or 'external'. Defaults to 'internal'
	Type *string `json:"type,omitempty"`
}

// NewIdentityGroupIdRequest instantiates a new IdentityGroupIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityGroupIdRequest() *IdentityGroupIdRequest {
	this := IdentityGroupIdRequest{}
	return &this
}

// NewIdentityGroupIdRequestWithDefaults instantiates a new IdentityGroupIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityGroupIdRequestWithDefaults() *IdentityGroupIdRequest {
	this := IdentityGroupIdRequest{}
	return &this
}

// GetMemberEntityIds returns the MemberEntityIds field value if set, zero value otherwise.
func (o *IdentityGroupIdRequest) GetMemberEntityIds() []string {
	if o == nil || o.MemberEntityIds == nil {
		var ret []string
		return ret
	}
	return o.MemberEntityIds
}

// GetMemberEntityIdsOk returns a tuple with the MemberEntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupIdRequest) GetMemberEntityIdsOk() ([]string, bool) {
	if o == nil || o.MemberEntityIds == nil {
		return nil, false
	}
	return o.MemberEntityIds, true
}

// HasMemberEntityIds returns a boolean if a field has been set.
func (o *IdentityGroupIdRequest) HasMemberEntityIds() bool {
	if o != nil && o.MemberEntityIds != nil {
		return true
	}

	return false
}

// SetMemberEntityIds gets a reference to the given []string and assigns it to the MemberEntityIds field.
func (o *IdentityGroupIdRequest) SetMemberEntityIds(v []string) {
	o.MemberEntityIds = v
}

// GetMemberGroupIds returns the MemberGroupIds field value if set, zero value otherwise.
func (o *IdentityGroupIdRequest) GetMemberGroupIds() []string {
	if o == nil || o.MemberGroupIds == nil {
		var ret []string
		return ret
	}
	return o.MemberGroupIds
}

// GetMemberGroupIdsOk returns a tuple with the MemberGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupIdRequest) GetMemberGroupIdsOk() ([]string, bool) {
	if o == nil || o.MemberGroupIds == nil {
		return nil, false
	}
	return o.MemberGroupIds, true
}

// HasMemberGroupIds returns a boolean if a field has been set.
func (o *IdentityGroupIdRequest) HasMemberGroupIds() bool {
	if o != nil && o.MemberGroupIds != nil {
		return true
	}

	return false
}

// SetMemberGroupIds gets a reference to the given []string and assigns it to the MemberGroupIds field.
func (o *IdentityGroupIdRequest) SetMemberGroupIds(v []string) {
	o.MemberGroupIds = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IdentityGroupIdRequest) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupIdRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IdentityGroupIdRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *IdentityGroupIdRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityGroupIdRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupIdRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityGroupIdRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityGroupIdRequest) SetName(v string) {
	o.Name = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *IdentityGroupIdRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupIdRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *IdentityGroupIdRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *IdentityGroupIdRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IdentityGroupIdRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupIdRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IdentityGroupIdRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IdentityGroupIdRequest) SetType(v string) {
	o.Type = &v
}

func (o IdentityGroupIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MemberEntityIds != nil {
		toSerialize["member_entity_ids"] = o.MemberEntityIds
	}
	if o.MemberGroupIds != nil {
		toSerialize["member_group_ids"] = o.MemberGroupIds
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityGroupIdRequest struct {
	value *IdentityGroupIdRequest
	isSet bool
}

func (v NullableIdentityGroupIdRequest) Get() *IdentityGroupIdRequest {
	return v.value
}

func (v *NullableIdentityGroupIdRequest) Set(val *IdentityGroupIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityGroupIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityGroupIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityGroupIdRequest(val *IdentityGroupIdRequest) *NullableIdentityGroupIdRequest {
	return &NullableIdentityGroupIdRequest{value: val, isSet: true}
}

func (v NullableIdentityGroupIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityGroupIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityGroupNameRequest struct for IdentityGroupNameRequest
type IdentityGroupNameRequest struct {
	// ID of the group. If set, updates the corresponding existing group.
	Id *string `json:"id,omitempty"`
	// Entity IDs to be assigned as group members.
	MemberEntityIds []string `json:"member_entity_ids,omitempty"`
	// Group IDs to be assigned as group members.
	MemberGroupIds []string `json:"member_group_ids,omitempty"`
	// Metadata to be associated with the group. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Policies to be tied to the group.
	Policies []string `json:"policies,omitempty"`
	// Type of the group, 'internal' or 'external'. Defaults to 'internal'
	Type *string `json:"type,omitempty"`
}

// NewIdentityGroupNameRequest instantiates a new IdentityGroupNameRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityGroupNameRequest() *IdentityGroupNameRequest {
	this := IdentityGroupNameRequest{}
	return &this
}

// NewIdentityGroupNameRequestWithDefaults instantiates a new IdentityGroupNameRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityGroupNameRequestWithDefaults() *IdentityGroupNameRequest {
	this := IdentityGroupNameRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityGroupNameRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupNameRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityGroupNameRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityGroupNameRequest) SetId(v string) {
	o.Id = &v
}

// GetMemberEntityIds returns the MemberEntityIds field value if set, zero value otherwise.
func (o *IdentityGroupNameRequest) GetMemberEntityIds() []string {
	if o == nil || o.MemberEntityIds == nil {
		var ret []string
		return ret
	}
	return o.MemberEntityIds
}

// GetMemberEntityIdsOk returns a tuple with the MemberEntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupNameRequest) GetMemberEntityIdsOk() ([]string, bool) {
	if o == nil || o.MemberEntityIds == nil {
		return nil, false
	}
	return o.MemberEntityIds, true
}

// HasMemberEntityIds returns a boolean if a field has been set.
func (o *IdentityGroupNameRequest) HasMemberEntityIds() bool {
	if o != nil && o.MemberEntityIds != nil {
		return true
	}

	return false
}

// SetMemberEntityIds gets a reference to the given []string and assigns it to the MemberEntityIds field.
func (o *IdentityGroupNameRequest) SetMemberEntityIds(v []string) {
	o.MemberEntityIds = v
}

// GetMemberGroupIds returns the MemberGroupIds field value if set, zero value otherwise.
func (o *IdentityGroupNameRequest) GetMemberGroupIds() []string {
	if o == nil || o.MemberGroupIds == nil {
		var ret []string
		return ret
	}
	return o.MemberGroupIds
}

// GetMemberGroupIdsOk returns a tuple with the MemberGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupNameRequest) GetMemberGroupIdsOk() ([]string, bool) {
	if o == nil || o.MemberGroupIds == nil {
		return nil, false
	}
	return o.MemberGroupIds, true
}

// HasMemberGroupIds returns a boolean if a field has been set.
func (o *IdentityGroupNameRequest) HasMemberGroupIds() bool {
	if o != nil && o.MemberGroupIds != nil {
		return true
	}

	return false
}

// SetMemberGroupIds gets a reference to the given []string and assigns it to the MemberGroupIds field.
func (o *IdentityGroupNameRequest) SetMemberGroupIds(v []string) {
	o.MemberGroupIds = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IdentityGroupNameRequest) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupNameRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IdentityGroupNameRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *IdentityGroupNameRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *IdentityGroupNameRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupNameRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *IdentityGroupNameRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *IdentityGroupNameRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IdentityGroupNameRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupNameRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IdentityGroupNameRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IdentityGroupNameRequest) SetType(v string) {
	o.Type = &v
}

func (o IdentityGroupNameRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MemberEntityIds != nil {
		toSerialize["member_entity_ids"] = o.MemberEntityIds
	}
	if o.MemberGroupIds != nil {
		toSerialize["member_group_ids"] = o.MemberGroupIds
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityGroupNameRequest struct {
	value *IdentityGroupNameRequest
	isSet bool
}

func (v NullableIdentityGroupNameRequest) Get() *IdentityGroupNameRequest {
	return v.value
}

func (v *NullableIdentityGroupNameRequest) Set(val *IdentityGroupNameRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityGroupNameRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityGroupNameRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityGroupNameRequest(val *IdentityGroupNameRequest) *NullableIdentityGroupNameRequest {
	return &NullableIdentityGroupNameRequest{value: val, isSet: true}
}

func (v NullableIdentityGroupNameRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityGroupNameRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityGroupRequest struct for IdentityGroupRequest
type IdentityGroupRequest struct {
	// ID of the group. If set, updates the corresponding existing group.
	Id *string `json:"id,omitempty"`
	// Entity IDs to be assigned as group members.
	MemberEntityIds []string `json:"member_entity_ids,omitempty"`
	// Group IDs to be assigned as group members.
	MemberGroupIds []string `json:"member_group_ids,omitempty"`
	// Metadata to be associated with the group. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Name of the group.
	Name *string `json:"name,omitempty"`
	// Policies to be tied to the group.
	Policies []string `json:"policies,omitempty"`
	// Type of the group, 'internal' or 'external'. Defaults to 'internal'
	Type *string `json:"type,omitempty"`
}

// NewIdentityGroupRequest instantiates a new IdentityGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityGroupRequest() *IdentityGroupRequest {
	this := IdentityGroupRequest{}
	return &this
}

// NewIdentityGroupRequestWithDefaults instantiates a new IdentityGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityGroupRequestWithDefaults() *IdentityGroupRequest {
	this := IdentityGroupRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityGroupRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityGroupRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityGroupRequest) SetId(v string) {
	o.Id = &v
}

// GetMemberEntityIds returns the MemberEntityIds field value if set, zero value otherwise.
func (o *IdentityGroupRequest) GetMemberEntityIds() []string {
	if o == nil || o.MemberEntityIds == nil {
		var ret []string
		return ret
	}
	return o.MemberEntityIds
}

// GetMemberEntityIdsOk returns a tuple with the MemberEntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupRequest) GetMemberEntityIdsOk() ([]string, bool) {
	if o == nil || o.MemberEntityIds == nil {
		return nil, false
	}
	return o.MemberEntityIds, true
}

// HasMemberEntityIds returns a boolean if a field has been set.
func (o *IdentityGroupRequest) HasMemberEntityIds() bool {
	if o != nil && o.MemberEntityIds != nil {
		return true
	}

	return false
}

// SetMemberEntityIds gets a reference to the given []string and assigns it to the MemberEntityIds field.
func (o *IdentityGroupRequest) SetMemberEntityIds(v []string) {
	o.MemberEntityIds = v
}

// GetMemberGroupIds returns the MemberGroupIds field value if set, zero value otherwise.
func (o *IdentityGroupRequest) GetMemberGroupIds() []string {
	if o == nil || o.MemberGroupIds == nil {
		var ret []string
		return ret
	}
	return o.MemberGroupIds
}

// GetMemberGroupIdsOk returns a tuple with the MemberGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupRequest) GetMemberGroupIdsOk() ([]string, bool) {
	if o == nil || o.MemberGroupIds == nil {
		return nil, false
	}
	return o.MemberGroupIds, true
}

// HasMemberGroupIds returns a boolean if a field has been set.
func (o *IdentityGroupRequest) HasMemberGroupIds() bool {
	if o != nil && o.MemberGroupIds != nil {
		return true
	}

	return false
}

// SetMemberGroupIds gets a reference to the given []string and assigns it to the MemberGroupIds field.
func (o *IdentityGroupRequest) SetMemberGroupIds(v []string) {
	o.MemberGroupIds = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IdentityGroupRequest) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IdentityGroupRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *IdentityGroupRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityGroupRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityGroupRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityGroupRequest) SetName(v string) {
	o.Name = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *IdentityGroupRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *IdentityGroupRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *IdentityGroupRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IdentityGroupRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IdentityGroupRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IdentityGroupRequest) SetType(v string) {
	o.Type = &v
}

func (o IdentityGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MemberEntityIds != nil {
		toSerialize["member_entity_ids"] = o.MemberEntityIds
	}
	if o.MemberGroupIds != nil {
		toSerialize["member_group_ids"] = o.MemberGroupIds
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityGroupRequest struct {
	value *IdentityGroupRequest
	isSet bool
}

func (v NullableIdentityGroupRequest) Get() *IdentityGroupRequest {
	return v.value
}

func (v *NullableIdentityGroupRequest) Set(val *IdentityGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityGroupRequest(val *IdentityGroupRequest) *NullableIdentityGroupRequest {
	return &NullableIdentityGroupRequest{value: val, isSet: true}
}

func (v NullableIdentityGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityLookupEntityRequest struct for IdentityLookupEntityRequest
type IdentityLookupEntityRequest struct {
	// ID of the alias.
	AliasId *string `json:"alias_id,omitempty"`
	// Accessor of the mount to which the alias belongs to. This should be supplied in conjunction with 'alias_name'.
	AliasMountAccessor *string `json:"alias_mount_accessor,omitempty"`
	// Name of the alias. This should be supplied in conjunction with 'alias_mount_accessor'.
	AliasName *string `json:"alias_name,omitempty"`
	// ID of the entity.
	Id *string `json:"id,omitempty"`
	// Name of the entity.
	Name *string `json:"name,omitempty"`
}

// NewIdentityLookupEntityRequest instantiates a new IdentityLookupEntityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityLookupEntityRequest() *IdentityLookupEntityRequest {
	this := IdentityLookupEntityRequest{}
	return &this
}

// NewIdentityLookupEntityRequestWithDefaults instantiates a new IdentityLookupEntityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityLookupEntityRequestWithDefaults() *IdentityLookupEntityRequest {
	this := IdentityLookupEntityRequest{}
	return &this
}

// GetAliasId returns the AliasId field value if set, zero value otherwise.
func (o *IdentityLookupEntityRequest) GetAliasId() string {
	if o == nil || o.AliasId == nil {
		var ret string
		return ret
	}
	return *o.AliasId
}

// GetAliasIdOk returns a tuple with the AliasId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupEntityRequest) GetAliasIdOk() (*string, bool) {
	if o == nil || o.AliasId == nil {
		return nil, false
	}
	return o.AliasId, true
}

// HasAliasId returns a boolean if a field has been set.
func (o *IdentityLookupEntityRequest) HasAliasId() bool {
	if o != nil && o.AliasId != nil {
		return true
	}

	return false
}

// SetAliasId gets a reference to the given string and assigns it to the AliasId field.
func (o *IdentityLookupEntityRequest) SetAliasId(v string) {
	o.AliasId = &v
}

// GetAliasMountAccessor returns the AliasMountAccessor field value if set, zero value otherwise.
func (o *IdentityLookupEntityRequest) GetAliasMountAccessor() string {
	if o == nil || o.AliasMountAccessor == nil {
		var ret string
		return ret
	}
	return *o.AliasMountAccessor
}

// GetAliasMountAccessorOk returns a tuple with the AliasMountAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupEntityRequest) GetAliasMountAccessorOk() (*string, bool) {
	if o == nil || o.AliasMountAccessor == nil {
		return nil, false
	}
	return o.AliasMountAccessor, true
}

// HasAliasMountAccessor returns a boolean if a field has been set.
func (o *IdentityLookupEntityRequest) HasAliasMountAccessor() bool {
	if o != nil && o.AliasMountAccessor != nil {
		return true
	}

	return false
}

// SetAliasMountAccessor gets a reference to the given string and assigns it to the AliasMountAccessor field.
func (o *IdentityLookupEntityRequest) SetAliasMountAccessor(v string) {
	o.AliasMountAccessor = &v
}

// GetAliasName returns the AliasName field value if set, zero value otherwise.
func (o *IdentityLookupEntityRequest) GetAliasName() string {
	if o == nil || o.AliasName == nil {
		var ret string
		return ret
	}
	return *o.AliasName
}

// GetAliasNameOk returns a tuple with the AliasName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupEntityRequest) GetAliasNameOk() (*string, bool) {
	if o == nil || o.AliasName == nil {
		return nil, false
	}
	return o.AliasName, true
}

// HasAliasName returns a boolean if a field has been set.
func (o *IdentityLookupEntityRequest) HasAliasName() bool {
	if o != nil && o.AliasName != nil {
		return true
	}

	return false
}

// SetAliasName gets a reference to the given string and assigns it to the AliasName field.
func (o *IdentityLookupEntityRequest) SetAliasName(v string) {
	o.AliasName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityLookupEntityRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupEntityRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityLookupEntityRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityLookupEntityRequest) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityLookupEntityRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupEntityRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityLookupEntityRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityLookupEntityRequest) SetName(v string) {
	o.Name = &v
}

func (o IdentityLookupEntityRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AliasId != nil {
		toSerialize["alias_id"] = o.AliasId
	}
	if o.AliasMountAccessor != nil {
		toSerialize["alias_mount_accessor"] = o.AliasMountAccessor
	}
	if o.AliasName != nil {
		toSerialize["alias_name"] = o.AliasName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityLookupEntityRequest struct {
	value *IdentityLookupEntityRequest
	isSet bool
}

func (v NullableIdentityLookupEntityRequest) Get() *IdentityLookupEntityRequest {
	return v.value
}

func (v *NullableIdentityLookupEntityRequest) Set(val *IdentityLookupEntityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityLookupEntityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityLookupEntityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityLookupEntityRequest(val *IdentityLookupEntityRequest) *NullableIdentityLookupEntityRequest {
	return &NullableIdentityLookupEntityRequest{value: val, isSet: true}
}

func (v NullableIdentityLookupEntityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityLookupEntityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityLookupGroupRequest struct for IdentityLookupGroupRequest
type IdentityLookupGroupRequest struct {
	// ID of the alias.
	AliasId *string `json:"alias_id,omitempty"`
	// Accessor of the mount to which the alias belongs to. This should be supplied in conjunction with 'alias_name'.
	AliasMountAccessor *string `json:"alias_mount_accessor,omitempty"`
	// Name of the alias. This should be supplied in conjunction with 'alias_mount_accessor'.
	AliasName *string `json:"alias_name,omitempty"`
	// ID of the group.
	Id *string `json:"id,omitempty"`
	// Name of the group.
	Name *string `json:"name,omitempty"`
}

// NewIdentityLookupGroupRequest instantiates a new IdentityLookupGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityLookupGroupRequest() *IdentityLookupGroupRequest {
	this := IdentityLookupGroupRequest{}
	return &this
}

// NewIdentityLookupGroupRequestWithDefaults instantiates a new IdentityLookupGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityLookupGroupRequestWithDefaults() *IdentityLookupGroupRequest {
	this := IdentityLookupGroupRequest{}
	return &this
}

// GetAliasId returns the AliasId field value if set, zero value otherwise.
func (o *IdentityLookupGroupRequest) GetAliasId() string {
	if o == nil || o.AliasId == nil {
		var ret string
		return ret
	}
	return *o.AliasId
}

// GetAliasIdOk returns a tuple with the AliasId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupGroupRequest) GetAliasIdOk() (*string, bool) {
	if o == nil || o.AliasId == nil {
		return nil, false
	}
	return o.AliasId, true
}

// HasAliasId returns a boolean if a field has been set.
func (o *IdentityLookupGroupRequest) HasAliasId() bool {
	if o != nil && o.AliasId != nil {
		return true
	}

	return false
}

// SetAliasId gets a reference to the given string and assigns it to the AliasId field.
func (o *IdentityLookupGroupRequest) SetAliasId(v string) {
	o.AliasId = &v
}

// GetAliasMountAccessor returns the AliasMountAccessor field value if set, zero value otherwise.
func (o *IdentityLookupGroupRequest) GetAliasMountAccessor() string {
	if o == nil || o.AliasMountAccessor == nil {
		var ret string
		return ret
	}
	return *o.AliasMountAccessor
}

// GetAliasMountAccessorOk returns a tuple with the AliasMountAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupGroupRequest) GetAliasMountAccessorOk() (*string, bool) {
	if o == nil || o.AliasMountAccessor == nil {
		return nil, false
	}
	return o.AliasMountAccessor, true
}

// HasAliasMountAccessor returns a boolean if a field has been set.
func (o *IdentityLookupGroupRequest) HasAliasMountAccessor() bool {
	if o != nil && o.AliasMountAccessor != nil {
		return true
	}

	return false
}

// SetAliasMountAccessor gets a reference to the given string and assigns it to the AliasMountAccessor field.
func (o *IdentityLookupGroupRequest) SetAliasMountAccessor(v string) {
	o.AliasMountAccessor = &v
}

// GetAliasName returns the AliasName field value if set, zero value otherwise.
func (o *IdentityLookupGroupRequest) GetAliasName() string {
	if o == nil || o.AliasName == nil {
		var ret string
		return ret
	}
	return *o.AliasName
}

// GetAliasNameOk returns a tuple with the AliasName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupGroupRequest) GetAliasNameOk() (*string, bool) {
	if o == nil || o.AliasName == nil {
		return nil, false
	}
	return o.AliasName, true
}

// HasAliasName returns a boolean if a field has been set.
func (o *IdentityLookupGroupRequest) HasAliasName() bool {
	if o != nil && o.AliasName != nil {
		return true
	}

	return false
}

// SetAliasName gets a reference to the given string and assigns it to the AliasName field.
func (o *IdentityLookupGroupRequest) SetAliasName(v string) {
	o.AliasName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityLookupGroupRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupGroupRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityLookupGroupRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityLookupGroupRequest) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityLookupGroupRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityLookupGroupRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityLookupGroupRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityLookupGroupRequest) SetName(v string) {
	o.Name = &v
}

func (o IdentityLookupGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AliasId != nil {
		toSerialize["alias_id"] = o.AliasId
	}
	if o.AliasMountAccessor != nil {
		toSerialize["alias_mount_accessor"] = o.AliasMountAccessor
	}
	if o.AliasName != nil {
		toSerialize["alias_name"] = o.AliasName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityLookupGroupRequest struct {
	value *IdentityLookupGroupRequest
	isSet bool
}

func (v NullableIdentityLookupGroupRequest) Get() *IdentityLookupGroupRequest {
	return v.value
}

func (v *NullableIdentityLookupGroupRequest) Set(val *IdentityLookupGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityLookupGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityLookupGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityLookupGroupRequest(val *IdentityLookupGroupRequest) *NullableIdentityLookupGroupRequest {
	return &NullableIdentityLookupGroupRequest{value: val, isSet: true}
}

func (v NullableIdentityLookupGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityLookupGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityMfaLoginEnforcementRequest struct for IdentityMfaLoginEnforcementRequest
type IdentityMfaLoginEnforcementRequest struct {
	// Array of auth mount accessor IDs
	AuthMethodAccessors []string `json:"auth_method_accessors,omitempty"`
	// Array of auth mount types
	AuthMethodTypes []string `json:"auth_method_types,omitempty"`
	// Array of identity entity IDs
	IdentityEntityIds []string `json:"identity_entity_ids,omitempty"`
	// Array of identity group IDs
	IdentityGroupIds []string `json:"identity_group_ids,omitempty"`
	// Array of Method IDs that determine what methods will be enforced
	MfaMethodIds []string `json:"mfa_method_ids"`
}

// NewIdentityMfaLoginEnforcementRequest instantiates a new IdentityMfaLoginEnforcementRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityMfaLoginEnforcementRequest(mfaMethodIds []string) *IdentityMfaLoginEnforcementRequest {
	this := IdentityMfaLoginEnforcementRequest{}
	this.MfaMethodIds = mfaMethodIds
	return &this
}

// NewIdentityMfaLoginEnforcementRequestWithDefaults instantiates a new IdentityMfaLoginEnforcementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityMfaLoginEnforcementRequestWithDefaults() *IdentityMfaLoginEnforcementRequest {
	this := IdentityMfaLoginEnforcementRequest{}
	return &this
}

// GetAuthMethodAccessors returns the AuthMethodAccessors field value if set, zero value otherwise.
func (o *IdentityMfaLoginEnforcementRequest) GetAuthMethodAccessors() []string {
	if o == nil || o.AuthMethodAccessors == nil {
		var ret []string
		return ret
	}
	return o.AuthMethodAccessors
}

// GetAuthMethodAccessorsOk returns a tuple with the AuthMethodAccessors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaLoginEnforcementRequest) GetAuthMethodAccessorsOk() ([]string, bool) {
	if o == nil || o.AuthMethodAccessors == nil {
		return nil, false
	}
	return o.AuthMethodAccessors, true
}

// HasAuthMethodAccessors returns a boolean if a field has been set.
func (o *IdentityMfaLoginEnforcementRequest) HasAuthMethodAccessors() bool {
	if o != nil && o.AuthMethodAccessors != nil {
		return true
	}

	return false
}

// SetAuthMethodAccessors gets a reference to the given []string and assigns it to the AuthMethodAccessors field.
func (o *IdentityMfaLoginEnforcementRequest) SetAuthMethodAccessors(v []string) {
	o.AuthMethodAccessors = v
}

// GetAuthMethodTypes returns the AuthMethodTypes field value if set, zero value otherwise.
func (o *IdentityMfaLoginEnforcementRequest) GetAuthMethodTypes() []string {
	if o == nil || o.AuthMethodTypes == nil {
		var ret []string
		return ret
	}
	return o.AuthMethodTypes
}

// GetAuthMethodTypesOk returns a tuple with the AuthMethodTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaLoginEnforcementRequest) GetAuthMethodTypesOk() ([]string, bool) {
	if o == nil || o.AuthMethodTypes == nil {
		return nil, false
	}
	return o.AuthMethodTypes, true
}

// HasAuthMethodTypes returns a boolean if a field has been set.
func (o *IdentityMfaLoginEnforcementRequest) HasAuthMethodTypes() bool {
	if o != nil && o.AuthMethodTypes != nil {
		return true
	}

	return false
}

// SetAuthMethodTypes gets a reference to the given []string and assigns it to the AuthMethodTypes field.
func (o *IdentityMfaLoginEnforcementRequest) SetAuthMethodTypes(v []string) {
	o.AuthMethodTypes = v
}

// GetIdentityEntityIds returns the IdentityEntityIds field value if set, zero value otherwise.
func (o *IdentityMfaLoginEnforcementRequest) GetIdentityEntityIds() []string {
	if o == nil || o.IdentityEntityIds == nil {
		var ret []string
		return ret
	}
	return o.IdentityEntityIds
}

// GetIdentityEntityIdsOk returns a tuple with the IdentityEntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaLoginEnforcementRequest) GetIdentityEntityIdsOk() ([]string, bool) {
	if o == nil || o.IdentityEntityIds == nil {
		return nil, false
	}
	return o.IdentityEntityIds, true
}

// HasIdentityEntityIds returns a boolean if a field has been set.
func (o *IdentityMfaLoginEnforcementRequest) HasIdentityEntityIds() bool {
	if o != nil && o.IdentityEntityIds != nil {
		return true
	}

	return false
}

// SetIdentityEntityIds gets a reference to the given []string and assigns it to the IdentityEntityIds field.
func (o *IdentityMfaLoginEnforcementRequest) SetIdentityEntityIds(v []string) {
	o.IdentityEntityIds = v
}

// GetIdentityGroupIds returns the IdentityGroupIds field value if set, zero value otherwise.
func (o *IdentityMfaLoginEnforcementRequest) GetIdentityGroupIds() []string {
	if o == nil || o.IdentityGroupIds == nil {
		var ret []string
		return ret
	}
	return o.IdentityGroupIds
}

// GetIdentityGroupIdsOk returns a tuple with the IdentityGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaLoginEnforcementRequest) GetIdentityGroupIdsOk() ([]string, bool) {
	if o == nil || o.IdentityGroupIds == nil {
		return nil, false
	}
	return o.IdentityGroupIds, true
}

// HasIdentityGroupIds returns a boolean if a field has been set.
func (o *IdentityMfaLoginEnforcementRequest) HasIdentityGroupIds() bool {
	if o != nil && o.IdentityGroupIds != nil {
		return true
	}

	return false
}

// SetIdentityGroupIds gets a reference to the given []string and assigns it to the IdentityGroupIds field.
func (o *IdentityMfaLoginEnforcementRequest) SetIdentityGroupIds(v []string) {
	o.IdentityGroupIds = v
}

// GetMfaMethodIds returns the MfaMethodIds field value
func (o *IdentityMfaLoginEnforcementRequest) GetMfaMethodIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MfaMethodIds
}

// GetMfaMethodIdsOk returns a tuple with the MfaMethodIds field value
// and a boolean to check if the value has been set.
func (o *IdentityMfaLoginEnforcementRequest) GetMfaMethodIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MfaMethodIds, true
}

// SetMfaMethodIds sets field value
func (o *IdentityMfaLoginEnforcementRequest) SetMfaMethodIds(v []string) {
	o.MfaMethodIds = v
}

func (o IdentityMfaLoginEnforcementRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthMethodAccessors != nil {
		toSerialize["auth_method_accessors"] = o.AuthMethodAccessors
	}
	if o.AuthMethodTypes != nil {
		toSerialize["auth_method_types"] = o.AuthMethodTypes
	}
	if o.IdentityEntityIds != nil {
		toSerialize["identity_entity_ids"] = o.IdentityEntityIds
	}
	if o.IdentityGroupIds != nil {
		toSerialize["identity_group_ids"] = o.IdentityGroupIds
	}
	if true {
		toSerialize["mfa_method_ids"] = o.MfaMethodIds
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityMfaLoginEnforcementRequest struct {
	value *IdentityMfaLoginEnforcementRequest
	isSet bool
}

func (v NullableIdentityMfaLoginEnforcementRequest) Get() *IdentityMfaLoginEnforcementRequest {
	return v.value
}

func (v *NullableIdentityMfaLoginEnforcementRequest) Set(val *IdentityMfaLoginEnforcementRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityMfaLoginEnforcementRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityMfaLoginEnforcementRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityMfaLoginEnforcementRequest(val *IdentityMfaLoginEnforcementRequest) *NullableIdentityMfaLoginEnforcementRequest {
	return &NullableIdentityMfaLoginEnforcementRequest{value: val, isSet: true}
}

func (v NullableIdentityMfaLoginEnforcementRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityMfaLoginEnforcementRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityMfaMethodDuoRequest struct for IdentityMfaMethodDuoRequest
type IdentityMfaMethodDuoRequest struct {
	// API host name for Duo.
	ApiHostname *string `json:"api_hostname,omitempty"`
	// Integration key for Duo.
	IntegrationKey *string `json:"integration_key,omitempty"`
	// The unique identifier for this MFA method.
	MethodId *string `json:"method_id,omitempty"`
	// Push information for Duo.
	PushInfo *string `json:"push_info,omitempty"`
	// Secret key for Duo.
	SecretKey *string `json:"secret_key,omitempty"`
	// If true, the user is reminded to use the passcode upon MFA validation. This option does not enforce using the passcode. Defaults to false.
	UsePasscode *bool `json:"use_passcode,omitempty"`
	// A template string for mapping Identity names to MFA method names. Values to subtitute should be placed in {{}}. For example, \"{{alias.name}}@example.com\". Currently-supported mappings: alias.name: The name returned by the mount configured via the mount_accessor parameter If blank, the Alias's name field will be used as-is.
	UsernameFormat *string `json:"username_format,omitempty"`
}

// NewIdentityMfaMethodDuoRequest instantiates a new IdentityMfaMethodDuoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityMfaMethodDuoRequest() *IdentityMfaMethodDuoRequest {
	this := IdentityMfaMethodDuoRequest{}
	return &this
}

// NewIdentityMfaMethodDuoRequestWithDefaults instantiates a new IdentityMfaMethodDuoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityMfaMethodDuoRequestWithDefaults() *IdentityMfaMethodDuoRequest {
	this := IdentityMfaMethodDuoRequest{}
	return &this
}

// GetApiHostname returns the ApiHostname field value if set, zero value otherwise.
func (o *IdentityMfaMethodDuoRequest) GetApiHostname() string {
	if o == nil || o.ApiHostname == nil {
		var ret string
		return ret
	}
	return *o.ApiHostname
}

// GetApiHostnameOk returns a tuple with the ApiHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodDuoRequest) GetApiHostnameOk() (*string, bool) {
	if o == nil || o.ApiHostname == nil {
		return nil, false
	}
	return o.ApiHostname, true
}

// HasApiHostname returns a boolean if a field has been set.
func (o *IdentityMfaMethodDuoRequest) HasApiHostname() bool {
	if o != nil && o.ApiHostname != nil {
		return true
	}

	return false
}

// SetApiHostname gets a reference to the given string and assigns it to the ApiHostname field.
func (o *IdentityMfaMethodDuoRequest) SetApiHostname(v string) {
	o.ApiHostname = &v
}

// GetIntegrationKey returns the IntegrationKey field value if set, zero value otherwise.
func (o *IdentityMfaMethodDuoRequest) GetIntegrationKey() string {
	if o == nil || o.IntegrationKey == nil {
		var ret string
		return ret
	}
	return *o.IntegrationKey
}

// GetIntegrationKeyOk returns a tuple with the IntegrationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodDuoRequest) GetIntegrationKeyOk() (*string, bool) {
	if o == nil || o.IntegrationKey == nil {
		return nil, false
	}
	return o.IntegrationKey, true
}

// HasIntegrationKey returns a boolean if a field has been set.
func (o *IdentityMfaMethodDuoRequest) HasIntegrationKey() bool {
	if o != nil && o.IntegrationKey != nil {
		return true
	}

	return false
}

// SetIntegrationKey gets a reference to the given string and assigns it to the IntegrationKey field.
func (o *IdentityMfaMethodDuoRequest) SetIntegrationKey(v string) {
	o.IntegrationKey = &v
}

// GetMethodId returns the MethodId field value if set, zero value otherwise.
func (o *IdentityMfaMethodDuoRequest) GetMethodId() string {
	if o == nil || o.MethodId == nil {
		var ret string
		return ret
	}
	return *o.MethodId
}

// GetMethodIdOk returns a tuple with the MethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodDuoRequest) GetMethodIdOk() (*string, bool) {
	if o == nil || o.MethodId == nil {
		return nil, false
	}
	return o.MethodId, true
}

// HasMethodId returns a boolean if a field has been set.
func (o *IdentityMfaMethodDuoRequest) HasMethodId() bool {
	if o != nil && o.MethodId != nil {
		return true
	}

	return false
}

// SetMethodId gets a reference to the given string and assigns it to the MethodId field.
func (o *IdentityMfaMethodDuoRequest) SetMethodId(v string) {
	o.MethodId = &v
}

// GetPushInfo returns the PushInfo field value if set, zero value otherwise.
func (o *IdentityMfaMethodDuoRequest) GetPushInfo() string {
	if o == nil || o.PushInfo == nil {
		var ret string
		return ret
	}
	return *o.PushInfo
}

// GetPushInfoOk returns a tuple with the PushInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodDuoRequest) GetPushInfoOk() (*string, bool) {
	if o == nil || o.PushInfo == nil {
		return nil, false
	}
	return o.PushInfo, true
}

// HasPushInfo returns a boolean if a field has been set.
func (o *IdentityMfaMethodDuoRequest) HasPushInfo() bool {
	if o != nil && o.PushInfo != nil {
		return true
	}

	return false
}

// SetPushInfo gets a reference to the given string and assigns it to the PushInfo field.
func (o *IdentityMfaMethodDuoRequest) SetPushInfo(v string) {
	o.PushInfo = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *IdentityMfaMethodDuoRequest) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodDuoRequest) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *IdentityMfaMethodDuoRequest) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *IdentityMfaMethodDuoRequest) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetUsePasscode returns the UsePasscode field value if set, zero value otherwise.
func (o *IdentityMfaMethodDuoRequest) GetUsePasscode() bool {
	if o == nil || o.UsePasscode == nil {
		var ret bool
		return ret
	}
	return *o.UsePasscode
}

// GetUsePasscodeOk returns a tuple with the UsePasscode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodDuoRequest) GetUsePasscodeOk() (*bool, bool) {
	if o == nil || o.UsePasscode == nil {
		return nil, false
	}
	return o.UsePasscode, true
}

// HasUsePasscode returns a boolean if a field has been set.
func (o *IdentityMfaMethodDuoRequest) HasUsePasscode() bool {
	if o != nil && o.UsePasscode != nil {
		return true
	}

	return false
}

// SetUsePasscode gets a reference to the given bool and assigns it to the UsePasscode field.
func (o *IdentityMfaMethodDuoRequest) SetUsePasscode(v bool) {
	o.UsePasscode = &v
}

// GetUsernameFormat returns the UsernameFormat field value if set, zero value otherwise.
func (o *IdentityMfaMethodDuoRequest) GetUsernameFormat() string {
	if o == nil || o.UsernameFormat == nil {
		var ret string
		return ret
	}
	return *o.UsernameFormat
}

// GetUsernameFormatOk returns a tuple with the UsernameFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodDuoRequest) GetUsernameFormatOk() (*string, bool) {
	if o == nil || o.UsernameFormat == nil {
		return nil, false
	}
	return o.UsernameFormat, true
}

// HasUsernameFormat returns a boolean if a field has been set.
func (o *IdentityMfaMethodDuoRequest) HasUsernameFormat() bool {
	if o != nil && o.UsernameFormat != nil {
		return true
	}

	return false
}

// SetUsernameFormat gets a reference to the given string and assigns it to the UsernameFormat field.
func (o *IdentityMfaMethodDuoRequest) SetUsernameFormat(v string) {
	o.UsernameFormat = &v
}

func (o IdentityMfaMethodDuoRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiHostname != nil {
		toSerialize["api_hostname"] = o.ApiHostname
	}
	if o.IntegrationKey != nil {
		toSerialize["integration_key"] = o.IntegrationKey
	}
	if o.MethodId != nil {
		toSerialize["method_id"] = o.MethodId
	}
	if o.PushInfo != nil {
		toSerialize["push_info"] = o.PushInfo
	}
	if o.SecretKey != nil {
		toSerialize["secret_key"] = o.SecretKey
	}
	if o.UsePasscode != nil {
		toSerialize["use_passcode"] = o.UsePasscode
	}
	if o.UsernameFormat != nil {
		toSerialize["username_format"] = o.UsernameFormat
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityMfaMethodDuoRequest struct {
	value *IdentityMfaMethodDuoRequest
	isSet bool
}

func (v NullableIdentityMfaMethodDuoRequest) Get() *IdentityMfaMethodDuoRequest {
	return v.value
}

func (v *NullableIdentityMfaMethodDuoRequest) Set(val *IdentityMfaMethodDuoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityMfaMethodDuoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityMfaMethodDuoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityMfaMethodDuoRequest(val *IdentityMfaMethodDuoRequest) *NullableIdentityMfaMethodDuoRequest {
	return &NullableIdentityMfaMethodDuoRequest{value: val, isSet: true}
}

func (v NullableIdentityMfaMethodDuoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityMfaMethodDuoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityMfaMethodOktaRequest struct for IdentityMfaMethodOktaRequest
type IdentityMfaMethodOktaRequest struct {
	// Okta API key.
	ApiToken *string `json:"api_token,omitempty"`
	// The base domain to use for the Okta API. When not specified in the configuration, \"okta.com\" is used.
	BaseUrl *string `json:"base_url,omitempty"`
	// The unique identifier for this MFA method.
	MethodId *string `json:"method_id,omitempty"`
	// Name of the organization to be used in the Okta API.
	OrgName *string `json:"org_name,omitempty"`
	// If true, the username will only match the primary email for the account. Defaults to false.
	PrimaryEmail *bool `json:"primary_email,omitempty"`
	// (DEPRECATED) Use base_url instead.
	Production *bool `json:"production,omitempty"`
	// A template string for mapping Identity names to MFA method names. Values to substitute should be placed in {{}}. For example, \"{{entity.name}}@example.com\". If blank, the Entity's name field will be used as-is.
	UsernameFormat *string `json:"username_format,omitempty"`
}

// NewIdentityMfaMethodOktaRequest instantiates a new IdentityMfaMethodOktaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityMfaMethodOktaRequest() *IdentityMfaMethodOktaRequest {
	this := IdentityMfaMethodOktaRequest{}
	return &this
}

// NewIdentityMfaMethodOktaRequestWithDefaults instantiates a new IdentityMfaMethodOktaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityMfaMethodOktaRequestWithDefaults() *IdentityMfaMethodOktaRequest {
	this := IdentityMfaMethodOktaRequest{}
	return &this
}

// GetApiToken returns the ApiToken field value if set, zero value otherwise.
func (o *IdentityMfaMethodOktaRequest) GetApiToken() string {
	if o == nil || o.ApiToken == nil {
		var ret string
		return ret
	}
	return *o.ApiToken
}

// GetApiTokenOk returns a tuple with the ApiToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodOktaRequest) GetApiTokenOk() (*string, bool) {
	if o == nil || o.ApiToken == nil {
		return nil, false
	}
	return o.ApiToken, true
}

// HasApiToken returns a boolean if a field has been set.
func (o *IdentityMfaMethodOktaRequest) HasApiToken() bool {
	if o != nil && o.ApiToken != nil {
		return true
	}

	return false
}

// SetApiToken gets a reference to the given string and assigns it to the ApiToken field.
func (o *IdentityMfaMethodOktaRequest) SetApiToken(v string) {
	o.ApiToken = &v
}

// GetBaseUrl returns the BaseUrl field value if set, zero value otherwise.
func (o *IdentityMfaMethodOktaRequest) GetBaseUrl() string {
	if o == nil || o.BaseUrl == nil {
		var ret string
		return ret
	}
	return *o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodOktaRequest) GetBaseUrlOk() (*string, bool) {
	if o == nil || o.BaseUrl == nil {
		return nil, false
	}
	return o.BaseUrl, true
}

// HasBaseUrl returns a boolean if a field has been set.
func (o *IdentityMfaMethodOktaRequest) HasBaseUrl() bool {
	if o != nil && o.BaseUrl != nil {
		return true
	}

	return false
}

// SetBaseUrl gets a reference to the given string and assigns it to the BaseUrl field.
func (o *IdentityMfaMethodOktaRequest) SetBaseUrl(v string) {
	o.BaseUrl = &v
}

// GetMethodId returns the MethodId field value if set, zero value otherwise.
func (o *IdentityMfaMethodOktaRequest) GetMethodId() string {
	if o == nil || o.MethodId == nil {
		var ret string
		return ret
	}
	return *o.MethodId
}

// GetMethodIdOk returns a tuple with the MethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodOktaRequest) GetMethodIdOk() (*string, bool) {
	if o == nil || o.MethodId == nil {
		return nil, false
	}
	return o.MethodId, true
}

// HasMethodId returns a boolean if a field has been set.
func (o *IdentityMfaMethodOktaRequest) HasMethodId() bool {
	if o != nil && o.MethodId != nil {
		return true
	}

	return false
}

// SetMethodId gets a reference to the given string and assigns it to the MethodId field.
func (o *IdentityMfaMethodOktaRequest) SetMethodId(v string) {
	o.MethodId = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *IdentityMfaMethodOktaRequest) GetOrgName() string {
	if o == nil || o.OrgName == nil {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodOktaRequest) GetOrgNameOk() (*string, bool) {
	if o == nil || o.OrgName == nil {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *IdentityMfaMethodOktaRequest) HasOrgName() bool {
	if o != nil && o.OrgName != nil {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *IdentityMfaMethodOktaRequest) SetOrgName(v string) {
	o.OrgName = &v
}

// GetPrimaryEmail returns the PrimaryEmail field value if set, zero value otherwise.
func (o *IdentityMfaMethodOktaRequest) GetPrimaryEmail() bool {
	if o == nil || o.PrimaryEmail == nil {
		var ret bool
		return ret
	}
	return *o.PrimaryEmail
}

// GetPrimaryEmailOk returns a tuple with the PrimaryEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodOktaRequest) GetPrimaryEmailOk() (*bool, bool) {
	if o == nil || o.PrimaryEmail == nil {
		return nil, false
	}
	return o.PrimaryEmail, true
}

// HasPrimaryEmail returns a boolean if a field has been set.
func (o *IdentityMfaMethodOktaRequest) HasPrimaryEmail() bool {
	if o != nil && o.PrimaryEmail != nil {
		return true
	}

	return false
}

// SetPrimaryEmail gets a reference to the given bool and assigns it to the PrimaryEmail field.
func (o *IdentityMfaMethodOktaRequest) SetPrimaryEmail(v bool) {
	o.PrimaryEmail = &v
}

// GetProduction returns the Production field value if set, zero value otherwise.
func (o *IdentityMfaMethodOktaRequest) GetProduction() bool {
	if o == nil || o.Production == nil {
		var ret bool
		return ret
	}
	return *o.Production
}

// GetProductionOk returns a tuple with the Production field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodOktaRequest) GetProductionOk() (*bool, bool) {
	if o == nil || o.Production == nil {
		return nil, false
	}
	return o.Production, true
}

// HasProduction returns a boolean if a field has been set.
func (o *IdentityMfaMethodOktaRequest) HasProduction() bool {
	if o != nil && o.Production != nil {
		return true
	}

	return false
}

// SetProduction gets a reference to the given bool and assigns it to the Production field.
func (o *IdentityMfaMethodOktaRequest) SetProduction(v bool) {
	o.Production = &v
}

// GetUsernameFormat returns the UsernameFormat field value if set, zero value otherwise.
func (o *IdentityMfaMethodOktaRequest) GetUsernameFormat() string {
	if o == nil || o.UsernameFormat == nil {
		var ret string
		return ret
	}
	return *o.UsernameFormat
}

// GetUsernameFormatOk returns a tuple with the UsernameFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodOktaRequest) GetUsernameFormatOk() (*string, bool) {
	if o == nil || o.UsernameFormat == nil {
		return nil, false
	}
	return o.UsernameFormat, true
}

// HasUsernameFormat returns a boolean if a field has been set.
func (o *IdentityMfaMethodOktaRequest) HasUsernameFormat() bool {
	if o != nil && o.UsernameFormat != nil {
		return true
	}

	return false
}

// SetUsernameFormat gets a reference to the given string and assigns it to the UsernameFormat field.
func (o *IdentityMfaMethodOktaRequest) SetUsernameFormat(v string) {
	o.UsernameFormat = &v
}

func (o IdentityMfaMethodOktaRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiToken != nil {
		toSerialize["api_token"] = o.ApiToken
	}
	if o.BaseUrl != nil {
		toSerialize["base_url"] = o.BaseUrl
	}
	if o.MethodId != nil {
		toSerialize["method_id"] = o.MethodId
	}
	if o.OrgName != nil {
		toSerialize["org_name"] = o.OrgName
	}
	if o.PrimaryEmail != nil {
		toSerialize["primary_email"] = o.PrimaryEmail
	}
	if o.Production != nil {
		toSerialize["production"] = o.Production
	}
	if o.UsernameFormat != nil {
		toSerialize["username_format"] = o.UsernameFormat
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityMfaMethodOktaRequest struct {
	value *IdentityMfaMethodOktaRequest
	isSet bool
}

func (v NullableIdentityMfaMethodOktaRequest) Get() *IdentityMfaMethodOktaRequest {
	return v.value
}

func (v *NullableIdentityMfaMethodOktaRequest) Set(val *IdentityMfaMethodOktaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityMfaMethodOktaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityMfaMethodOktaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityMfaMethodOktaRequest(val *IdentityMfaMethodOktaRequest) *NullableIdentityMfaMethodOktaRequest {
	return &NullableIdentityMfaMethodOktaRequest{value: val, isSet: true}
}

func (v NullableIdentityMfaMethodOktaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityMfaMethodOktaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityMfaMethodPingidRequest struct for IdentityMfaMethodPingidRequest
type IdentityMfaMethodPingidRequest struct {
	// The unique identifier for this MFA method.
	MethodId *string `json:"method_id,omitempty"`
	// The settings file provided by Ping, Base64-encoded. This must be a settings file suitable for third-party clients, not the PingID SDK or PingFederate.
	SettingsFileBase64 *string `json:"settings_file_base64,omitempty"`
	// A template string for mapping Identity names to MFA method names. Values to subtitute should be placed in {{}}. For example, \"{{alias.name}}@example.com\". Currently-supported mappings: alias.name: The name returned by the mount configured via the mount_accessor parameter If blank, the Alias's name field will be used as-is.
	UsernameFormat *string `json:"username_format,omitempty"`
}

// NewIdentityMfaMethodPingidRequest instantiates a new IdentityMfaMethodPingidRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityMfaMethodPingidRequest() *IdentityMfaMethodPingidRequest {
	this := IdentityMfaMethodPingidRequest{}
	return &this
}

// NewIdentityMfaMethodPingidRequestWithDefaults instantiates a new IdentityMfaMethodPingidRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityMfaMethodPingidRequestWithDefaults() *IdentityMfaMethodPingidRequest {
	this := IdentityMfaMethodPingidRequest{}
	return &this
}

// GetMethodId returns the MethodId field value if set, zero value otherwise.
func (o *IdentityMfaMethodPingidRequest) GetMethodId() string {
	if o == nil || o.MethodId == nil {
		var ret string
		return ret
	}
	return *o.MethodId
}

// GetMethodIdOk returns a tuple with the MethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodPingidRequest) GetMethodIdOk() (*string, bool) {
	if o == nil || o.MethodId == nil {
		return nil, false
	}
	return o.MethodId, true
}

// HasMethodId returns a boolean if a field has been set.
func (o *IdentityMfaMethodPingidRequest) HasMethodId() bool {
	if o != nil && o.MethodId != nil {
		return true
	}

	return false
}

// SetMethodId gets a reference to the given string and assigns it to the MethodId field.
func (o *IdentityMfaMethodPingidRequest) SetMethodId(v string) {
	o.MethodId = &v
}

// GetSettingsFileBase64 returns the SettingsFileBase64 field value if set, zero value otherwise.
func (o *IdentityMfaMethodPingidRequest) GetSettingsFileBase64() string {
	if o == nil || o.SettingsFileBase64 == nil {
		var ret string
		return ret
	}
	return *o.SettingsFileBase64
}

// GetSettingsFileBase64Ok returns a tuple with the SettingsFileBase64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodPingidRequest) GetSettingsFileBase64Ok() (*string, bool) {
	if o == nil || o.SettingsFileBase64 == nil {
		return nil, false
	}
	return o.SettingsFileBase64, true
}

// HasSettingsFileBase64 returns a boolean if a field has been set.
func (o *IdentityMfaMethodPingidRequest) HasSettingsFileBase64() bool {
	if o != nil && o.SettingsFileBase64 != nil {
		return true
	}

	return false
}

// SetSettingsFileBase64 gets a reference to the given string and assigns it to the SettingsFileBase64 field.
func (o *IdentityMfaMethodPingidRequest) SetSettingsFileBase64(v string) {
	o.SettingsFileBase64 = &v
}

// GetUsernameFormat returns the UsernameFormat field value if set, zero value otherwise.
func (o *IdentityMfaMethodPingidRequest) GetUsernameFormat() string {
	if o == nil || o.UsernameFormat == nil {
		var ret string
		return ret
	}
	return *o.UsernameFormat
}

// GetUsernameFormatOk returns a tuple with the UsernameFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodPingidRequest) GetUsernameFormatOk() (*string, bool) {
	if o == nil || o.UsernameFormat == nil {
		return nil, false
	}
	return o.UsernameFormat, true
}

// HasUsernameFormat returns a boolean if a field has been set.
func (o *IdentityMfaMethodPingidRequest) HasUsernameFormat() bool {
	if o != nil && o.UsernameFormat != nil {
		return true
	}

	return false
}

// SetUsernameFormat gets a reference to the given string and assigns it to the UsernameFormat field.
func (o *IdentityMfaMethodPingidRequest) SetUsernameFormat(v string) {
	o.UsernameFormat = &v
}

func (o IdentityMfaMethodPingidRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MethodId != nil {
		toSerialize["method_id"] = o.MethodId
	}
	if o.SettingsFileBase64 != nil {
		toSerialize["settings_file_base64"] = o.SettingsFileBase64
	}
	if o.UsernameFormat != nil {
		toSerialize["username_format"] = o.UsernameFormat
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityMfaMethodPingidRequest struct {
	value *IdentityMfaMethodPingidRequest
	isSet bool
}

func (v NullableIdentityMfaMethodPingidRequest) Get() *IdentityMfaMethodPingidRequest {
	return v.value
}

func (v *NullableIdentityMfaMethodPingidRequest) Set(val *IdentityMfaMethodPingidRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityMfaMethodPingidRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityMfaMethodPingidRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityMfaMethodPingidRequest(val *IdentityMfaMethodPingidRequest) *NullableIdentityMfaMethodPingidRequest {
	return &NullableIdentityMfaMethodPingidRequest{value: val, isSet: true}
}

func (v NullableIdentityMfaMethodPingidRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityMfaMethodPingidRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityMfaMethodTotpAdminDestroyRequest struct for IdentityMfaMethodTotpAdminDestroyRequest
type IdentityMfaMethodTotpAdminDestroyRequest struct {
	// Identifier of the entity from which the MFA method secret needs to be removed.
	EntityId string `json:"entity_id"`
	// The unique identifier for this MFA method.
	MethodId string `json:"method_id"`
}

// NewIdentityMfaMethodTotpAdminDestroyRequest instantiates a new IdentityMfaMethodTotpAdminDestroyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityMfaMethodTotpAdminDestroyRequest(entityId string, methodId string) *IdentityMfaMethodTotpAdminDestroyRequest {
	this := IdentityMfaMethodTotpAdminDestroyRequest{}
	this.EntityId = entityId
	this.MethodId = methodId
	return &this
}

// NewIdentityMfaMethodTotpAdminDestroyRequestWithDefaults instantiates a new IdentityMfaMethodTotpAdminDestroyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityMfaMethodTotpAdminDestroyRequestWithDefaults() *IdentityMfaMethodTotpAdminDestroyRequest {
	this := IdentityMfaMethodTotpAdminDestroyRequest{}
	return &this
}

// GetEntityId returns the EntityId field value
func (o *IdentityMfaMethodTotpAdminDestroyRequest) GetEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpAdminDestroyRequest) GetEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityId, true
}

// SetEntityId sets field value
func (o *IdentityMfaMethodTotpAdminDestroyRequest) SetEntityId(v string) {
	o.EntityId = v
}

// GetMethodId returns the MethodId field value
func (o *IdentityMfaMethodTotpAdminDestroyRequest) GetMethodId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MethodId
}

// GetMethodIdOk returns a tuple with the MethodId field value
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpAdminDestroyRequest) GetMethodIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MethodId, true
}

// SetMethodId sets field value
func (o *IdentityMfaMethodTotpAdminDestroyRequest) SetMethodId(v string) {
	o.MethodId = v
}

func (o IdentityMfaMethodTotpAdminDestroyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entity_id"] = o.EntityId
	}
	if true {
		toSerialize["method_id"] = o.MethodId
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityMfaMethodTotpAdminDestroyRequest struct {
	value *IdentityMfaMethodTotpAdminDestroyRequest
	isSet bool
}

func (v NullableIdentityMfaMethodTotpAdminDestroyRequest) Get() *IdentityMfaMethodTotpAdminDestroyRequest {
	return v.value
}

func (v *NullableIdentityMfaMethodTotpAdminDestroyRequest) Set(val *IdentityMfaMethodTotpAdminDestroyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityMfaMethodTotpAdminDestroyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityMfaMethodTotpAdminDestroyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityMfaMethodTotpAdminDestroyRequest(val *IdentityMfaMethodTotpAdminDestroyRequest) *NullableIdentityMfaMethodTotpAdminDestroyRequest {
	return &NullableIdentityMfaMethodTotpAdminDestroyRequest{value: val, isSet: true}
}

func (v NullableIdentityMfaMethodTotpAdminDestroyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityMfaMethodTotpAdminDestroyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityMfaMethodTotpAdminGenerateRequest struct for IdentityMfaMethodTotpAdminGenerateRequest
type IdentityMfaMethodTotpAdminGenerateRequest struct {
	// Entity ID on which the generated secret needs to get stored.
	EntityId string `json:"entity_id"`
	// The unique identifier for this MFA method.
	MethodId string `json:"method_id"`
}

// NewIdentityMfaMethodTotpAdminGenerateRequest instantiates a new IdentityMfaMethodTotpAdminGenerateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityMfaMethodTotpAdminGenerateRequest(entityId string, methodId string) *IdentityMfaMethodTotpAdminGenerateRequest {
	this := IdentityMfaMethodTotpAdminGenerateRequest{}
	this.EntityId = entityId
	this.MethodId = methodId
	return &this
}

// NewIdentityMfaMethodTotpAdminGenerateRequestWithDefaults instantiates a new IdentityMfaMethodTotpAdminGenerateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityMfaMethodTotpAdminGenerateRequestWithDefaults() *IdentityMfaMethodTotpAdminGenerateRequest {
	this := IdentityMfaMethodTotpAdminGenerateRequest{}
	return &this
}

// GetEntityId returns the EntityId field value
func (o *IdentityMfaMethodTotpAdminGenerateRequest) GetEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpAdminGenerateRequest) GetEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityId, true
}

// SetEntityId sets field value
func (o *IdentityMfaMethodTotpAdminGenerateRequest) SetEntityId(v string) {
	o.EntityId = v
}

// GetMethodId returns the MethodId field value
func (o *IdentityMfaMethodTotpAdminGenerateRequest) GetMethodId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MethodId
}

// GetMethodIdOk returns a tuple with the MethodId field value
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpAdminGenerateRequest) GetMethodIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MethodId, true
}

// SetMethodId sets field value
func (o *IdentityMfaMethodTotpAdminGenerateRequest) SetMethodId(v string) {
	o.MethodId = v
}

func (o IdentityMfaMethodTotpAdminGenerateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entity_id"] = o.EntityId
	}
	if true {
		toSerialize["method_id"] = o.MethodId
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityMfaMethodTotpAdminGenerateRequest struct {
	value *IdentityMfaMethodTotpAdminGenerateRequest
	isSet bool
}

func (v NullableIdentityMfaMethodTotpAdminGenerateRequest) Get() *IdentityMfaMethodTotpAdminGenerateRequest {
	return v.value
}

func (v *NullableIdentityMfaMethodTotpAdminGenerateRequest) Set(val *IdentityMfaMethodTotpAdminGenerateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityMfaMethodTotpAdminGenerateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityMfaMethodTotpAdminGenerateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityMfaMethodTotpAdminGenerateRequest(val *IdentityMfaMethodTotpAdminGenerateRequest) *NullableIdentityMfaMethodTotpAdminGenerateRequest {
	return &NullableIdentityMfaMethodTotpAdminGenerateRequest{value: val, isSet: true}
}

func (v NullableIdentityMfaMethodTotpAdminGenerateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityMfaMethodTotpAdminGenerateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityMfaMethodTotpGenerateRequest struct for IdentityMfaMethodTotpGenerateRequest
type IdentityMfaMethodTotpGenerateRequest struct {
	// The unique identifier for this MFA method.
	MethodId string `json:"method_id"`
}

// NewIdentityMfaMethodTotpGenerateRequest instantiates a new IdentityMfaMethodTotpGenerateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityMfaMethodTotpGenerateRequest(methodId string) *IdentityMfaMethodTotpGenerateRequest {
	this := IdentityMfaMethodTotpGenerateRequest{}
	this.MethodId = methodId
	return &this
}

// NewIdentityMfaMethodTotpGenerateRequestWithDefaults instantiates a new IdentityMfaMethodTotpGenerateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityMfaMethodTotpGenerateRequestWithDefaults() *IdentityMfaMethodTotpGenerateRequest {
	this := IdentityMfaMethodTotpGenerateRequest{}
	return &this
}

// GetMethodId returns the MethodId field value
func (o *IdentityMfaMethodTotpGenerateRequest) GetMethodId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MethodId
}

// GetMethodIdOk returns a tuple with the MethodId field value
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpGenerateRequest) GetMethodIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MethodId, true
}

// SetMethodId sets field value
func (o *IdentityMfaMethodTotpGenerateRequest) SetMethodId(v string) {
	o.MethodId = v
}

func (o IdentityMfaMethodTotpGenerateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["method_id"] = o.MethodId
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityMfaMethodTotpGenerateRequest struct {
	value *IdentityMfaMethodTotpGenerateRequest
	isSet bool
}

func (v NullableIdentityMfaMethodTotpGenerateRequest) Get() *IdentityMfaMethodTotpGenerateRequest {
	return v.value
}

func (v *NullableIdentityMfaMethodTotpGenerateRequest) Set(val *IdentityMfaMethodTotpGenerateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityMfaMethodTotpGenerateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityMfaMethodTotpGenerateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityMfaMethodTotpGenerateRequest(val *IdentityMfaMethodTotpGenerateRequest) *NullableIdentityMfaMethodTotpGenerateRequest {
	return &NullableIdentityMfaMethodTotpGenerateRequest{value: val, isSet: true}
}

func (v NullableIdentityMfaMethodTotpGenerateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityMfaMethodTotpGenerateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityMfaMethodTotpRequest struct for IdentityMfaMethodTotpRequest
type IdentityMfaMethodTotpRequest struct {
	// The hashing algorithm used to generate the TOTP token. Options include SHA1, SHA256 and SHA512.
	Algorithm *string `json:"algorithm,omitempty"`
	// The number of digits in the generated TOTP token. This value can either be 6 or 8.
	Digits *int32 `json:"digits,omitempty"`
	// The name of the key's issuing organization.
	Issuer *string `json:"issuer,omitempty"`
	// Determines the size in bytes of the generated key.
	KeySize *int32 `json:"key_size,omitempty"`
	// Max number of allowed validation attempts.
	MaxValidationAttempts *int32 `json:"max_validation_attempts,omitempty"`
	// The unique identifier for this MFA method.
	MethodId *string `json:"method_id,omitempty"`
	// The length of time used to generate a counter for the TOTP token calculation.
	Period *int32 `json:"period,omitempty"`
	// The pixel size of the generated square QR code.
	QrSize *int32 `json:"qr_size,omitempty"`
	// The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1.
	Skew *int32 `json:"skew,omitempty"`
}

// NewIdentityMfaMethodTotpRequest instantiates a new IdentityMfaMethodTotpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityMfaMethodTotpRequest() *IdentityMfaMethodTotpRequest {
	this := IdentityMfaMethodTotpRequest{}
	var algorithm string = "SHA1"
	this.Algorithm = &algorithm
	var digits int32 = 6
	this.Digits = &digits
	var keySize int32 = 20
	this.KeySize = &keySize
	var period int32 = 30
	this.Period = &period
	var qrSize int32 = 200
	this.QrSize = &qrSize
	var skew int32 = 1
	this.Skew = &skew
	return &this
}

// NewIdentityMfaMethodTotpRequestWithDefaults instantiates a new IdentityMfaMethodTotpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityMfaMethodTotpRequestWithDefaults() *IdentityMfaMethodTotpRequest {
	this := IdentityMfaMethodTotpRequest{}
	var algorithm string = "SHA1"
	this.Algorithm = &algorithm
	var digits int32 = 6
	this.Digits = &digits
	var keySize int32 = 20
	this.KeySize = &keySize
	var period int32 = 30
	this.Period = &period
	var qrSize int32 = 200
	this.QrSize = &qrSize
	var skew int32 = 1
	this.Skew = &skew
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *IdentityMfaMethodTotpRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetDigits returns the Digits field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetDigits() int32 {
	if o == nil || o.Digits == nil {
		var ret int32
		return ret
	}
	return *o.Digits
}

// GetDigitsOk returns a tuple with the Digits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetDigitsOk() (*int32, bool) {
	if o == nil || o.Digits == nil {
		return nil, false
	}
	return o.Digits, true
}

// HasDigits returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasDigits() bool {
	if o != nil && o.Digits != nil {
		return true
	}

	return false
}

// SetDigits gets a reference to the given int32 and assigns it to the Digits field.
func (o *IdentityMfaMethodTotpRequest) SetDigits(v int32) {
	o.Digits = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *IdentityMfaMethodTotpRequest) SetIssuer(v string) {
	o.Issuer = &v
}

// GetKeySize returns the KeySize field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetKeySize() int32 {
	if o == nil || o.KeySize == nil {
		var ret int32
		return ret
	}
	return *o.KeySize
}

// GetKeySizeOk returns a tuple with the KeySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetKeySizeOk() (*int32, bool) {
	if o == nil || o.KeySize == nil {
		return nil, false
	}
	return o.KeySize, true
}

// HasKeySize returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasKeySize() bool {
	if o != nil && o.KeySize != nil {
		return true
	}

	return false
}

// SetKeySize gets a reference to the given int32 and assigns it to the KeySize field.
func (o *IdentityMfaMethodTotpRequest) SetKeySize(v int32) {
	o.KeySize = &v
}

// GetMaxValidationAttempts returns the MaxValidationAttempts field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetMaxValidationAttempts() int32 {
	if o == nil || o.MaxValidationAttempts == nil {
		var ret int32
		return ret
	}
	return *o.MaxValidationAttempts
}

// GetMaxValidationAttemptsOk returns a tuple with the MaxValidationAttempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetMaxValidationAttemptsOk() (*int32, bool) {
	if o == nil || o.MaxValidationAttempts == nil {
		return nil, false
	}
	return o.MaxValidationAttempts, true
}

// HasMaxValidationAttempts returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasMaxValidationAttempts() bool {
	if o != nil && o.MaxValidationAttempts != nil {
		return true
	}

	return false
}

// SetMaxValidationAttempts gets a reference to the given int32 and assigns it to the MaxValidationAttempts field.
func (o *IdentityMfaMethodTotpRequest) SetMaxValidationAttempts(v int32) {
	o.MaxValidationAttempts = &v
}

// GetMethodId returns the MethodId field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetMethodId() string {
	if o == nil || o.MethodId == nil {
		var ret string
		return ret
	}
	return *o.MethodId
}

// GetMethodIdOk returns a tuple with the MethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetMethodIdOk() (*string, bool) {
	if o == nil || o.MethodId == nil {
		return nil, false
	}
	return o.MethodId, true
}

// HasMethodId returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasMethodId() bool {
	if o != nil && o.MethodId != nil {
		return true
	}

	return false
}

// SetMethodId gets a reference to the given string and assigns it to the MethodId field.
func (o *IdentityMfaMethodTotpRequest) SetMethodId(v string) {
	o.MethodId = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
func (o *IdentityMfaMethodTotpRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetQrSize returns the QrSize field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetQrSize() int32 {
	if o == nil || o.QrSize == nil {
		var ret int32
		return ret
	}
	return *o.QrSize
}

// GetQrSizeOk returns a tuple with the QrSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetQrSizeOk() (*int32, bool) {
	if o == nil || o.QrSize == nil {
		return nil, false
	}
	return o.QrSize, true
}

// HasQrSize returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasQrSize() bool {
	if o != nil && o.QrSize != nil {
		return true
	}

	return false
}

// SetQrSize gets a reference to the given int32 and assigns it to the QrSize field.
func (o *IdentityMfaMethodTotpRequest) SetQrSize(v int32) {
	o.QrSize = &v
}

// GetSkew returns the Skew field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetSkew() int32 {
	if o == nil || o.Skew == nil {
		var ret int32
		return ret
	}
	return *o.Skew
}

// GetSkewOk returns a tuple with the Skew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetSkewOk() (*int32, bool) {
	if o == nil || o.Skew == nil {
		return nil, false
	}
	return o.Skew, true
}

// HasSkew returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasSkew() bool {
	if o != nil && o.Skew != nil {
		return true
	}

	return false
}

// SetSkew gets a reference to the given int32 and assigns it to the Skew field.
func (o *IdentityMfaMethodTotpRequest) SetSkew(v int32) {
	o.Skew = &v
}

func (o IdentityMfaMethodTotpRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.Digits != nil {
		toSerialize["digits"] = o.Digits
	}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	if o.KeySize != nil {
		toSerialize["key_size"] = o.KeySize
	}
	if o.MaxValidationAttempts != nil {
		toSerialize["max_validation_attempts"] = o.MaxValidationAttempts
	}
	if o.MethodId != nil {
		toSerialize["method_id"] = o.MethodId
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.QrSize != nil {
		toSerialize["qr_size"] = o.QrSize
	}
	if o.Skew != nil {
		toSerialize["skew"] = o.Skew
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityMfaMethodTotpRequest struct {
	value *IdentityMfaMethodTotpRequest
	isSet bool
}

func (v NullableIdentityMfaMethodTotpRequest) Get() *IdentityMfaMethodTotpRequest {
	return v.value
}

func (v *NullableIdentityMfaMethodTotpRequest) Set(val *IdentityMfaMethodTotpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityMfaMethodTotpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityMfaMethodTotpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityMfaMethodTotpRequest(val *IdentityMfaMethodTotpRequest) *NullableIdentityMfaMethodTotpRequest {
	return &NullableIdentityMfaMethodTotpRequest{value: val, isSet: true}
}

func (v NullableIdentityMfaMethodTotpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityMfaMethodTotpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityOidcAssignmentRequest struct for IdentityOidcAssignmentRequest
type IdentityOidcAssignmentRequest struct {
	// Comma separated string or array of identity entity IDs
	EntityIds []string `json:"entity_ids,omitempty"`
	// Comma separated string or array of identity group IDs
	GroupIds []string `json:"group_ids,omitempty"`
}

// NewIdentityOidcAssignmentRequest instantiates a new IdentityOidcAssignmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcAssignmentRequest() *IdentityOidcAssignmentRequest {
	this := IdentityOidcAssignmentRequest{}
	return &this
}

// NewIdentityOidcAssignmentRequestWithDefaults instantiates a new IdentityOidcAssignmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcAssignmentRequestWithDefaults() *IdentityOidcAssignmentRequest {
	this := IdentityOidcAssignmentRequest{}
	return &this
}

// GetEntityIds returns the EntityIds field value if set, zero value otherwise.
func (o *IdentityOidcAssignmentRequest) GetEntityIds() []string {
	if o == nil || o.EntityIds == nil {
		var ret []string
		return ret
	}
	return o.EntityIds
}

// GetEntityIdsOk returns a tuple with the EntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcAssignmentRequest) GetEntityIdsOk() ([]string, bool) {
	if o == nil || o.EntityIds == nil {
		return nil, false
	}
	return o.EntityIds, true
}

// HasEntityIds returns a boolean if a field has been set.
func (o *IdentityOidcAssignmentRequest) HasEntityIds() bool {
	if o != nil && o.EntityIds != nil {
		return true
	}

	return false
}

// SetEntityIds gets a reference to the given []string and assigns it to the EntityIds field.
func (o *IdentityOidcAssignmentRequest) SetEntityIds(v []string) {
	o.EntityIds = v
}

// GetGroupIds returns the GroupIds field value if set, zero value otherwise.
func (o *IdentityOidcAssignmentRequest) GetGroupIds() []string {
	if o == nil || o.GroupIds == nil {
		var ret []string
		return ret
	}
	return o.GroupIds
}

// GetGroupIdsOk returns a tuple with the GroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcAssignmentRequest) GetGroupIdsOk() ([]string, bool) {
	if o == nil || o.GroupIds == nil {
		return nil, false
	}
	return o.GroupIds, true
}

// HasGroupIds returns a boolean if a field has been set.
func (o *IdentityOidcAssignmentRequest) HasGroupIds() bool {
	if o != nil && o.GroupIds != nil {
		return true
	}

	return false
}

// SetGroupIds gets a reference to the given []string and assigns it to the GroupIds field.
func (o *IdentityOidcAssignmentRequest) SetGroupIds(v []string) {
	o.GroupIds = v
}

func (o IdentityOidcAssignmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntityIds != nil {
		toSerialize["entity_ids"] = o.EntityIds
	}
	if o.GroupIds != nil {
		toSerialize["group_ids"] = o.GroupIds
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcAssignmentRequest struct {
	value *IdentityOidcAssignmentRequest
	isSet bool
}

func (v NullableIdentityOidcAssignmentRequest) Get() *IdentityOidcAssignmentRequest {
	return v.value
}

func (v *NullableIdentityOidcAssignmentRequest) Set(val *IdentityOidcAssignmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcAssignmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcAssignmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcAssignmentRequest(val *IdentityOidcAssignmentRequest) *NullableIdentityOidcAssignmentRequest {
	return &NullableIdentityOidcAssignmentRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcAssignmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcAssignmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityOidcClientRequest struct for IdentityOidcClientRequest
type IdentityOidcClientRequest struct {
	// The time-to-live for access tokens obtained by the client.
	AccessTokenTtl *int32 `json:"access_token_ttl,omitempty"`
	// Comma separated string or array of assignment resources.
	Assignments []string `json:"assignments,omitempty"`
	// The client type based on its ability to maintain confidentiality of credentials. The following client types are supported: 'confidential', 'public'. Defaults to 'confidential'.
	ClientType *string `json:"client_type,omitempty"`
	// The time-to-live for ID tokens obtained by the client.
	IdTokenTtl *int32 `json:"id_token_ttl,omitempty"`
	// A reference to a named key resource. Cannot be modified after creation. Defaults to the 'default' key.
	Key *string `json:"key,omitempty"`
	// Comma separated string or array of redirect URIs used by the client. One of these values must exactly match the redirect_uri parameter value used in each authentication request.
	RedirectUris []string `json:"redirect_uris,omitempty"`
}

// NewIdentityOidcClientRequest instantiates a new IdentityOidcClientRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcClientRequest() *IdentityOidcClientRequest {
	this := IdentityOidcClientRequest{}
	var clientType string = "confidential"
	this.ClientType = &clientType
	var key string = "default"
	this.Key = &key
	return &this
}

// NewIdentityOidcClientRequestWithDefaults instantiates a new IdentityOidcClientRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcClientRequestWithDefaults() *IdentityOidcClientRequest {
	this := IdentityOidcClientRequest{}
	var clientType string = "confidential"
	this.ClientType = &clientType
	var key string = "default"
	this.Key = &key
	return &this
}

// GetAccessTokenTtl returns the AccessTokenTtl field value if set, zero value otherwise.
func (o *IdentityOidcClientRequest) GetAccessTokenTtl() int32 {
	if o == nil || o.AccessTokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.AccessTokenTtl
}

// GetAccessTokenTtlOk returns a tuple with the AccessTokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcClientRequest) GetAccessTokenTtlOk() (*int32, bool) {
	if o == nil || o.AccessTokenTtl == nil {
		return nil, false
	}
	return o.AccessTokenTtl, true
}

// HasAccessTokenTtl returns a boolean if a field has been set.
func (o *IdentityOidcClientRequest) HasAccessTokenTtl() bool {
	if o != nil && o.AccessTokenTtl != nil {
		return true
	}

	return false
}

// SetAccessTokenTtl gets a reference to the given int32 and assigns it to the AccessTokenTtl field.
func (o *IdentityOidcClientRequest) SetAccessTokenTtl(v int32) {
	o.AccessTokenTtl = &v
}

// GetAssignments returns the Assignments field value if set, zero value otherwise.
func (o *IdentityOidcClientRequest) GetAssignments() []string {
	if o == nil || o.Assignments == nil {
		var ret []string
		return ret
	}
	return o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcClientRequest) GetAssignmentsOk() ([]string, bool) {
	if o == nil || o.Assignments == nil {
		return nil, false
	}
	return o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *IdentityOidcClientRequest) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []string and assigns it to the Assignments field.
func (o *IdentityOidcClientRequest) SetAssignments(v []string) {
	o.Assignments = v
}

// GetClientType returns the ClientType field value if set, zero value otherwise.
func (o *IdentityOidcClientRequest) GetClientType() string {
	if o == nil || o.ClientType == nil {
		var ret string
		return ret
	}
	return *o.ClientType
}

// GetClientTypeOk returns a tuple with the ClientType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcClientRequest) GetClientTypeOk() (*string, bool) {
	if o == nil || o.ClientType == nil {
		return nil, false
	}
	return o.ClientType, true
}

// HasClientType returns a boolean if a field has been set.
func (o *IdentityOidcClientRequest) HasClientType() bool {
	if o != nil && o.ClientType != nil {
		return true
	}

	return false
}

// SetClientType gets a reference to the given string and assigns it to the ClientType field.
func (o *IdentityOidcClientRequest) SetClientType(v string) {
	o.ClientType = &v
}

// GetIdTokenTtl returns the IdTokenTtl field value if set, zero value otherwise.
func (o *IdentityOidcClientRequest) GetIdTokenTtl() int32 {
	if o == nil || o.IdTokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.IdTokenTtl
}

// GetIdTokenTtlOk returns a tuple with the IdTokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcClientRequest) GetIdTokenTtlOk() (*int32, bool) {
	if o == nil || o.IdTokenTtl == nil {
		return nil, false
	}
	return o.IdTokenTtl, true
}

// HasIdTokenTtl returns a boolean if a field has been set.
func (o *IdentityOidcClientRequest) HasIdTokenTtl() bool {
	if o != nil && o.IdTokenTtl != nil {
		return true
	}

	return false
}

// SetIdTokenTtl gets a reference to the given int32 and assigns it to the IdTokenTtl field.
func (o *IdentityOidcClientRequest) SetIdTokenTtl(v int32) {
	o.IdTokenTtl = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *IdentityOidcClientRequest) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcClientRequest) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *IdentityOidcClientRequest) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *IdentityOidcClientRequest) SetKey(v string) {
	o.Key = &v
}

// GetRedirectUris returns the RedirectUris field value if set, zero value otherwise.
func (o *IdentityOidcClientRequest) GetRedirectUris() []string {
	if o == nil || o.RedirectUris == nil {
		var ret []string
		return ret
	}
	return o.RedirectUris
}

// GetRedirectUrisOk returns a tuple with the RedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcClientRequest) GetRedirectUrisOk() ([]string, bool) {
	if o == nil || o.RedirectUris == nil {
		return nil, false
	}
	return o.RedirectUris, true
}

// HasRedirectUris returns a boolean if a field has been set.
func (o *IdentityOidcClientRequest) HasRedirectUris() bool {
	if o != nil && o.RedirectUris != nil {
		return true
	}

	return false
}

// SetRedirectUris gets a reference to the given []string and assigns it to the RedirectUris field.
func (o *IdentityOidcClientRequest) SetRedirectUris(v []string) {
	o.RedirectUris = v
}

func (o IdentityOidcClientRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessTokenTtl != nil {
		toSerialize["access_token_ttl"] = o.AccessTokenTtl
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	if o.ClientType != nil {
		toSerialize["client_type"] = o.ClientType
	}
	if o.IdTokenTtl != nil {
		toSerialize["id_token_ttl"] = o.IdTokenTtl
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.RedirectUris != nil {
		toSerialize["redirect_uris"] = o.RedirectUris
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcClientRequest struct {
	value *IdentityOidcClientRequest
	isSet bool
}

func (v NullableIdentityOidcClientRequest) Get() *IdentityOidcClientRequest {
	return v.value
}

func (v *NullableIdentityOidcClientRequest) Set(val *IdentityOidcClientRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcClientRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcClientRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcClientRequest(val *IdentityOidcClientRequest) *NullableIdentityOidcClientRequest {
	return &NullableIdentityOidcClientRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcClientRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcClientRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityOidcConfigRequest struct for IdentityOidcConfigRequest
type IdentityOidcConfigRequest struct {
	// Issuer URL to be used in the iss claim of the token. If not set, Vault's app_addr will be used.
	Issuer *string `json:"issuer,omitempty"`
}

// NewIdentityOidcConfigRequest instantiates a new IdentityOidcConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcConfigRequest() *IdentityOidcConfigRequest {
	this := IdentityOidcConfigRequest{}
	return &this
}

// NewIdentityOidcConfigRequestWithDefaults instantiates a new IdentityOidcConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcConfigRequestWithDefaults() *IdentityOidcConfigRequest {
	this := IdentityOidcConfigRequest{}
	return &this
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *IdentityOidcConfigRequest) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcConfigRequest) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *IdentityOidcConfigRequest) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *IdentityOidcConfigRequest) SetIssuer(v string) {
	o.Issuer = &v
}

func (o IdentityOidcConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcConfigRequest struct {
	value *IdentityOidcConfigRequest
	isSet bool
}

func (v NullableIdentityOidcConfigRequest) Get() *IdentityOidcConfigRequest {
	return v.value
}

func (v *NullableIdentityOidcConfigRequest) Set(val *IdentityOidcConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcConfigRequest(val *IdentityOidcConfigRequest) *NullableIdentityOidcConfigRequest {
	return &NullableIdentityOidcConfigRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityOidcIntrospectRequest struct for IdentityOidcIntrospectRequest
type IdentityOidcIntrospectRequest struct {
	// Optional client_id to verify
	ClientId *string `json:"client_id,omitempty"`
	// Token to verify
	Token *string `json:"token,omitempty"`
}

// NewIdentityOidcIntrospectRequest instantiates a new IdentityOidcIntrospectRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcIntrospectRequest() *IdentityOidcIntrospectRequest {
	this := IdentityOidcIntrospectRequest{}
	return &this
}

// NewIdentityOidcIntrospectRequestWithDefaults instantiates a new IdentityOidcIntrospectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcIntrospectRequestWithDefaults() *IdentityOidcIntrospectRequest {
	this := IdentityOidcIntrospectRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *IdentityOidcIntrospectRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcIntrospectRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *IdentityOidcIntrospectRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *IdentityOidcIntrospectRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *IdentityOidcIntrospectRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcIntrospectRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *IdentityOidcIntrospectRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *IdentityOidcIntrospectRequest) SetToken(v string) {
	o.Token = &v
}

func (o IdentityOidcIntrospectRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcIntrospectRequest struct {
	value *IdentityOidcIntrospectRequest
	isSet bool
}

func (v NullableIdentityOidcIntrospectRequest) Get() *IdentityOidcIntrospectRequest {
	return v.value
}

func (v *NullableIdentityOidcIntrospectRequest) Set(val *IdentityOidcIntrospectRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcIntrospectRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcIntrospectRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcIntrospectRequest(val *IdentityOidcIntrospectRequest) *NullableIdentityOidcIntrospectRequest {
	return &NullableIdentityOidcIntrospectRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcIntrospectRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcIntrospectRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityOidcKeyRequest struct for IdentityOidcKeyRequest
type IdentityOidcKeyRequest struct {
	// Signing algorithm to use. This will default to RS256.
	Algorithm *string `json:"algorithm,omitempty"`
	// Comma separated string or array of role client ids allowed to use this key for signing. If empty no roles are allowed. If \"*\" all roles are allowed.
	AllowedClientIds []string `json:"allowed_client_ids,omitempty"`
	// How often to generate a new keypair.
	RotationPeriod *int32 `json:"rotation_period,omitempty"`
	// Controls how long the public portion of a key will be available for verification after being rotated.
	VerificationTtl *int32 `json:"verification_ttl,omitempty"`
}

// NewIdentityOidcKeyRequest instantiates a new IdentityOidcKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcKeyRequest() *IdentityOidcKeyRequest {
	this := IdentityOidcKeyRequest{}
	var algorithm string = "RS256"
	this.Algorithm = &algorithm
	return &this
}

// NewIdentityOidcKeyRequestWithDefaults instantiates a new IdentityOidcKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcKeyRequestWithDefaults() *IdentityOidcKeyRequest {
	this := IdentityOidcKeyRequest{}
	var algorithm string = "RS256"
	this.Algorithm = &algorithm
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *IdentityOidcKeyRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcKeyRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *IdentityOidcKeyRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *IdentityOidcKeyRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetAllowedClientIds returns the AllowedClientIds field value if set, zero value otherwise.
func (o *IdentityOidcKeyRequest) GetAllowedClientIds() []string {
	if o == nil || o.AllowedClientIds == nil {
		var ret []string
		return ret
	}
	return o.AllowedClientIds
}

// GetAllowedClientIdsOk returns a tuple with the AllowedClientIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcKeyRequest) GetAllowedClientIdsOk() ([]string, bool) {
	if o == nil || o.AllowedClientIds == nil {
		return nil, false
	}
	return o.AllowedClientIds, true
}

// HasAllowedClientIds returns a boolean if a field has been set.
func (o *IdentityOidcKeyRequest) HasAllowedClientIds() bool {
	if o != nil && o.AllowedClientIds != nil {
		return true
	}

	return false
}

// SetAllowedClientIds gets a reference to the given []string and assigns it to the AllowedClientIds field.
func (o *IdentityOidcKeyRequest) SetAllowedClientIds(v []string) {
	o.AllowedClientIds = v
}

// GetRotationPeriod returns the RotationPeriod field value if set, zero value otherwise.
func (o *IdentityOidcKeyRequest) GetRotationPeriod() int32 {
	if o == nil || o.RotationPeriod == nil {
		var ret int32
		return ret
	}
	return *o.RotationPeriod
}

// GetRotationPeriodOk returns a tuple with the RotationPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcKeyRequest) GetRotationPeriodOk() (*int32, bool) {
	if o == nil || o.RotationPeriod == nil {
		return nil, false
	}
	return o.RotationPeriod, true
}

// HasRotationPeriod returns a boolean if a field has been set.
func (o *IdentityOidcKeyRequest) HasRotationPeriod() bool {
	if o != nil && o.RotationPeriod != nil {
		return true
	}

	return false
}

// SetRotationPeriod gets a reference to the given int32 and assigns it to the RotationPeriod field.
func (o *IdentityOidcKeyRequest) SetRotationPeriod(v int32) {
	o.RotationPeriod = &v
}

// GetVerificationTtl returns the VerificationTtl field value if set, zero value otherwise.
func (o *IdentityOidcKeyRequest) GetVerificationTtl() int32 {
	if o == nil || o.VerificationTtl == nil {
		var ret int32
		return ret
	}
	return *o.VerificationTtl
}

// GetVerificationTtlOk returns a tuple with the VerificationTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcKeyRequest) GetVerificationTtlOk() (*int32, bool) {
	if o == nil || o.VerificationTtl == nil {
		return nil, false
	}
	return o.VerificationTtl, true
}

// HasVerificationTtl returns a boolean if a field has been set.
func (o *IdentityOidcKeyRequest) HasVerificationTtl() bool {
	if o != nil && o.VerificationTtl != nil {
		return true
	}

	return false
}

// SetVerificationTtl gets a reference to the given int32 and assigns it to the VerificationTtl field.
func (o *IdentityOidcKeyRequest) SetVerificationTtl(v int32) {
	o.VerificationTtl = &v
}

func (o IdentityOidcKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.AllowedClientIds != nil {
		toSerialize["allowed_client_ids"] = o.AllowedClientIds
	}
	if o.RotationPeriod != nil {
		toSerialize["rotation_period"] = o.RotationPeriod
	}
	if o.VerificationTtl != nil {
		toSerialize["verification_ttl"] = o.VerificationTtl
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcKeyRequest struct {
	value *IdentityOidcKeyRequest
	isSet bool
}

func (v NullableIdentityOidcKeyRequest) Get() *IdentityOidcKeyRequest {
	return v.value
}

func (v *NullableIdentityOidcKeyRequest) Set(val *IdentityOidcKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcKeyRequest(val *IdentityOidcKeyRequest) *NullableIdentityOidcKeyRequest {
	return &NullableIdentityOidcKeyRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityOidcKeyRotateRequest struct for IdentityOidcKeyRotateRequest
type IdentityOidcKeyRotateRequest struct {
	// Controls how long the public portion of a key will be available for verification after being rotated. Setting verification_ttl here will override the verification_ttl set on the key.
	VerificationTtl *int32 `json:"verification_ttl,omitempty"`
}

// NewIdentityOidcKeyRotateRequest instantiates a new IdentityOidcKeyRotateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcKeyRotateRequest() *IdentityOidcKeyRotateRequest {
	this := IdentityOidcKeyRotateRequest{}
	return &this
}

// NewIdentityOidcKeyRotateRequestWithDefaults instantiates a new IdentityOidcKeyRotateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcKeyRotateRequestWithDefaults() *IdentityOidcKeyRotateRequest {
	this := IdentityOidcKeyRotateRequest{}
	return &this
}

// GetVerificationTtl returns the VerificationTtl field value if set, zero value otherwise.
func (o *IdentityOidcKeyRotateRequest) GetVerificationTtl() int32 {
	if o == nil || o.VerificationTtl == nil {
		var ret int32
		return ret
	}
	return *o.VerificationTtl
}

// GetVerificationTtlOk returns a tuple with the VerificationTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcKeyRotateRequest) GetVerificationTtlOk() (*int32, bool) {
	if o == nil || o.VerificationTtl == nil {
		return nil, false
	}
	return o.VerificationTtl, true
}

// HasVerificationTtl returns a boolean if a field has been set.
func (o *IdentityOidcKeyRotateRequest) HasVerificationTtl() bool {
	if o != nil && o.VerificationTtl != nil {
		return true
	}

	return false
}

// SetVerificationTtl gets a reference to the given int32 and assigns it to the VerificationTtl field.
func (o *IdentityOidcKeyRotateRequest) SetVerificationTtl(v int32) {
	o.VerificationTtl = &v
}

func (o IdentityOidcKeyRotateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VerificationTtl != nil {
		toSerialize["verification_ttl"] = o.VerificationTtl
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcKeyRotateRequest struct {
	value *IdentityOidcKeyRotateRequest
	isSet bool
}

func (v NullableIdentityOidcKeyRotateRequest) Get() *IdentityOidcKeyRotateRequest {
	return v.value
}

func (v *NullableIdentityOidcKeyRotateRequest) Set(val *IdentityOidcKeyRotateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcKeyRotateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcKeyRotateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcKeyRotateRequest(val *IdentityOidcKeyRotateRequest) *NullableIdentityOidcKeyRotateRequest {
	return &NullableIdentityOidcKeyRotateRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcKeyRotateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcKeyRotateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityOidcProviderAuthorizeRequest struct for IdentityOidcProviderAuthorizeRequest
type IdentityOidcProviderAuthorizeRequest struct {
	// The ID of the requesting client.
	ClientId string `json:"client_id"`
	// The code challenge derived from the code verifier.
	CodeChallenge *string `json:"code_challenge,omitempty"`
	// The method that was used to derive the code challenge. The following methods are supported: 'S256', 'plain'. Defaults to 'plain'.
	CodeChallengeMethod *string `json:"code_challenge_method,omitempty"`
	// The allowable elapsed time in seconds since the last time the end-user was actively authenticated.
	MaxAge *int32 `json:"max_age,omitempty"`
	// The value that will be returned in the ID token nonce claim after a token exchange.
	Nonce *string `json:"nonce,omitempty"`
	// The redirection URI to which the response will be sent.
	RedirectUri string `json:"redirect_uri"`
	// The OIDC authentication flow to be used. The following response types are supported: 'code'
	ResponseType string `json:"response_type"`
	// A space-delimited, case-sensitive list of scopes to be requested. The 'openid' scope is required.
	Scope string `json:"scope"`
	// The value used to maintain state between the authentication request and client.
	State string `json:"state"`
}

// NewIdentityOidcProviderAuthorizeRequest instantiates a new IdentityOidcProviderAuthorizeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcProviderAuthorizeRequest(clientId string, redirectUri string, responseType string, scope string, state string) *IdentityOidcProviderAuthorizeRequest {
	this := IdentityOidcProviderAuthorizeRequest{}
	this.ClientId = clientId
	var codeChallengeMethod string = "plain"
	this.CodeChallengeMethod = &codeChallengeMethod
	this.RedirectUri = redirectUri
	this.ResponseType = responseType
	this.Scope = scope
	this.State = state
	return &this
}

// NewIdentityOidcProviderAuthorizeRequestWithDefaults instantiates a new IdentityOidcProviderAuthorizeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcProviderAuthorizeRequestWithDefaults() *IdentityOidcProviderAuthorizeRequest {
	this := IdentityOidcProviderAuthorizeRequest{}
	var codeChallengeMethod string = "plain"
	this.CodeChallengeMethod = &codeChallengeMethod
	return &this
}

// GetClientId returns the ClientId field value
func (o *IdentityOidcProviderAuthorizeRequest) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *IdentityOidcProviderAuthorizeRequest) SetClientId(v string) {
	o.ClientId = v
}

// GetCodeChallenge returns the CodeChallenge field value if set, zero value otherwise.
func (o *IdentityOidcProviderAuthorizeRequest) GetCodeChallenge() string {
	if o == nil || o.CodeChallenge == nil {
		var ret string
		return ret
	}
	return *o.CodeChallenge
}

// GetCodeChallengeOk returns a tuple with the CodeChallenge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetCodeChallengeOk() (*string, bool) {
	if o == nil || o.CodeChallenge == nil {
		return nil, false
	}
	return o.CodeChallenge, true
}

// HasCodeChallenge returns a boolean if a field has been set.
func (o *IdentityOidcProviderAuthorizeRequest) HasCodeChallenge() bool {
	if o != nil && o.CodeChallenge != nil {
		return true
	}

	return false
}

// SetCodeChallenge gets a reference to the given string and assigns it to the CodeChallenge field.
func (o *IdentityOidcProviderAuthorizeRequest) SetCodeChallenge(v string) {
	o.CodeChallenge = &v
}

// GetCodeChallengeMethod returns the CodeChallengeMethod field value if set, zero value otherwise.
func (o *IdentityOidcProviderAuthorizeRequest) GetCodeChallengeMethod() string {
	if o == nil || o.CodeChallengeMethod == nil {
		var ret string
		return ret
	}
	return *o.CodeChallengeMethod
}

// GetCodeChallengeMethodOk returns a tuple with the CodeChallengeMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetCodeChallengeMethodOk() (*string, bool) {
	if o == nil || o.CodeChallengeMethod == nil {
		return nil, false
	}
	return o.CodeChallengeMethod, true
}

// HasCodeChallengeMethod returns a boolean if a field has been set.
func (o *IdentityOidcProviderAuthorizeRequest) HasCodeChallengeMethod() bool {
	if o != nil && o.CodeChallengeMethod != nil {
		return true
	}

	return false
}

// SetCodeChallengeMethod gets a reference to the given string and assigns it to the CodeChallengeMethod field.
func (o *IdentityOidcProviderAuthorizeRequest) SetCodeChallengeMethod(v string) {
	o.CodeChallengeMethod = &v
}

// GetMaxAge returns the MaxAge field value if set, zero value otherwise.
func (o *IdentityOidcProviderAuthorizeRequest) GetMaxAge() int32 {
	if o == nil || o.MaxAge == nil {
		var ret int32
		return ret
	}
	return *o.MaxAge
}

// GetMaxAgeOk returns a tuple with the MaxAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetMaxAgeOk() (*int32, bool) {
	if o == nil || o.MaxAge == nil {
		return nil, false
	}
	return o.MaxAge, true
}

// HasMaxAge returns a boolean if a field has been set.
func (o *IdentityOidcProviderAuthorizeRequest) HasMaxAge() bool {
	if o != nil && o.MaxAge != nil {
		return true
	}

	return false
}

// SetMaxAge gets a reference to the given int32 and assigns it to the MaxAge field.
func (o *IdentityOidcProviderAuthorizeRequest) SetMaxAge(v int32) {
	o.MaxAge = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *IdentityOidcProviderAuthorizeRequest) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *IdentityOidcProviderAuthorizeRequest) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *IdentityOidcProviderAuthorizeRequest) SetNonce(v string) {
	o.Nonce = &v
}

// GetRedirectUri returns the RedirectUri field value
func (o *IdentityOidcProviderAuthorizeRequest) GetRedirectUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetRedirectUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedirectUri, true
}

// SetRedirectUri sets field value
func (o *IdentityOidcProviderAuthorizeRequest) SetRedirectUri(v string) {
	o.RedirectUri = v
}

// GetResponseType returns the ResponseType field value
func (o *IdentityOidcProviderAuthorizeRequest) GetResponseType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponseType
}

// GetResponseTypeOk returns a tuple with the ResponseType field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetResponseTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseType, true
}

// SetResponseType sets field value
func (o *IdentityOidcProviderAuthorizeRequest) SetResponseType(v string) {
	o.ResponseType = v
}

// GetScope returns the Scope field value
func (o *IdentityOidcProviderAuthorizeRequest) GetScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetScopeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *IdentityOidcProviderAuthorizeRequest) SetScope(v string) {
	o.Scope = v
}

// GetState returns the State field value
func (o *IdentityOidcProviderAuthorizeRequest) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderAuthorizeRequest) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *IdentityOidcProviderAuthorizeRequest) SetState(v string) {
	o.State = v
}

func (o IdentityOidcProviderAuthorizeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["client_id"] = o.ClientId
	}
	if o.CodeChallenge != nil {
		toSerialize["code_challenge"] = o.CodeChallenge
	}
	if o.CodeChallengeMethod != nil {
		toSerialize["code_challenge_method"] = o.CodeChallengeMethod
	}
	if o.MaxAge != nil {
		toSerialize["max_age"] = o.MaxAge
	}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	if true {
		toSerialize["redirect_uri"] = o.RedirectUri
	}
	if true {
		toSerialize["response_type"] = o.ResponseType
	}
	if true {
		toSerialize["scope"] = o.Scope
	}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcProviderAuthorizeRequest struct {
	value *IdentityOidcProviderAuthorizeRequest
	isSet bool
}

func (v NullableIdentityOidcProviderAuthorizeRequest) Get() *IdentityOidcProviderAuthorizeRequest {
	return v.value
}

func (v *NullableIdentityOidcProviderAuthorizeRequest) Set(val *IdentityOidcProviderAuthorizeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcProviderAuthorizeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcProviderAuthorizeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcProviderAuthorizeRequest(val *IdentityOidcProviderAuthorizeRequest) *NullableIdentityOidcProviderAuthorizeRequest {
	return &NullableIdentityOidcProviderAuthorizeRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcProviderAuthorizeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcProviderAuthorizeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityOidcProviderRequest struct for IdentityOidcProviderRequest
type IdentityOidcProviderRequest struct {
	// The client IDs that are permitted to use the provider
	AllowedClientIds []string `json:"allowed_client_ids,omitempty"`
	// Specifies what will be used for the iss claim of ID tokens.
	Issuer *string `json:"issuer,omitempty"`
	// The scopes supported for requesting on the provider
	ScopesSupported []string `json:"scopes_supported,omitempty"`
}

// NewIdentityOidcProviderRequest instantiates a new IdentityOidcProviderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcProviderRequest() *IdentityOidcProviderRequest {
	this := IdentityOidcProviderRequest{}
	return &this
}

// NewIdentityOidcProviderRequestWithDefaults instantiates a new IdentityOidcProviderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcProviderRequestWithDefaults() *IdentityOidcProviderRequest {
	this := IdentityOidcProviderRequest{}
	return &this
}

// GetAllowedClientIds returns the AllowedClientIds field value if set, zero value otherwise.
func (o *IdentityOidcProviderRequest) GetAllowedClientIds() []string {
	if o == nil || o.AllowedClientIds == nil {
		var ret []string
		return ret
	}
	return o.AllowedClientIds
}

// GetAllowedClientIdsOk returns a tuple with the AllowedClientIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderRequest) GetAllowedClientIdsOk() ([]string, bool) {
	if o == nil || o.AllowedClientIds == nil {
		return nil, false
	}
	return o.AllowedClientIds, true
}

// HasAllowedClientIds returns a boolean if a field has been set.
func (o *IdentityOidcProviderRequest) HasAllowedClientIds() bool {
	if o != nil && o.AllowedClientIds != nil {
		return true
	}

	return false
}

// SetAllowedClientIds gets a reference to the given []string and assigns it to the AllowedClientIds field.
func (o *IdentityOidcProviderRequest) SetAllowedClientIds(v []string) {
	o.AllowedClientIds = v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *IdentityOidcProviderRequest) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderRequest) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *IdentityOidcProviderRequest) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *IdentityOidcProviderRequest) SetIssuer(v string) {
	o.Issuer = &v
}

// GetScopesSupported returns the ScopesSupported field value if set, zero value otherwise.
func (o *IdentityOidcProviderRequest) GetScopesSupported() []string {
	if o == nil || o.ScopesSupported == nil {
		var ret []string
		return ret
	}
	return o.ScopesSupported
}

// GetScopesSupportedOk returns a tuple with the ScopesSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderRequest) GetScopesSupportedOk() ([]string, bool) {
	if o == nil || o.ScopesSupported == nil {
		return nil, false
	}
	return o.ScopesSupported, true
}

// HasScopesSupported returns a boolean if a field has been set.
func (o *IdentityOidcProviderRequest) HasScopesSupported() bool {
	if o != nil && o.ScopesSupported != nil {
		return true
	}

	return false
}

// SetScopesSupported gets a reference to the given []string and assigns it to the ScopesSupported field.
func (o *IdentityOidcProviderRequest) SetScopesSupported(v []string) {
	o.ScopesSupported = v
}

func (o IdentityOidcProviderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedClientIds != nil {
		toSerialize["allowed_client_ids"] = o.AllowedClientIds
	}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	if o.ScopesSupported != nil {
		toSerialize["scopes_supported"] = o.ScopesSupported
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcProviderRequest struct {
	value *IdentityOidcProviderRequest
	isSet bool
}

func (v NullableIdentityOidcProviderRequest) Get() *IdentityOidcProviderRequest {
	return v.value
}

func (v *NullableIdentityOidcProviderRequest) Set(val *IdentityOidcProviderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcProviderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcProviderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcProviderRequest(val *IdentityOidcProviderRequest) *NullableIdentityOidcProviderRequest {
	return &NullableIdentityOidcProviderRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcProviderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcProviderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityOidcProviderTokenRequest struct for IdentityOidcProviderTokenRequest
type IdentityOidcProviderTokenRequest struct {
	// The ID of the requesting client.
	ClientId *string `json:"client_id,omitempty"`
	// The authorization code received from the provider's authorization endpoint.
	Code string `json:"code"`
	// The code verifier associated with the authorization code.
	CodeVerifier *string `json:"code_verifier,omitempty"`
	// The authorization grant type. The following grant types are supported: 'authorization_code'.
	GrantType string `json:"grant_type"`
	// The callback location where the authentication response was sent.
	RedirectUri string `json:"redirect_uri"`
}

// NewIdentityOidcProviderTokenRequest instantiates a new IdentityOidcProviderTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcProviderTokenRequest(code string, grantType string, redirectUri string) *IdentityOidcProviderTokenRequest {
	this := IdentityOidcProviderTokenRequest{}
	this.Code = code
	this.GrantType = grantType
	this.RedirectUri = redirectUri
	return &this
}

// NewIdentityOidcProviderTokenRequestWithDefaults instantiates a new IdentityOidcProviderTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcProviderTokenRequestWithDefaults() *IdentityOidcProviderTokenRequest {
	this := IdentityOidcProviderTokenRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *IdentityOidcProviderTokenRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderTokenRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *IdentityOidcProviderTokenRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *IdentityOidcProviderTokenRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetCode returns the Code field value
func (o *IdentityOidcProviderTokenRequest) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderTokenRequest) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *IdentityOidcProviderTokenRequest) SetCode(v string) {
	o.Code = v
}

// GetCodeVerifier returns the CodeVerifier field value if set, zero value otherwise.
func (o *IdentityOidcProviderTokenRequest) GetCodeVerifier() string {
	if o == nil || o.CodeVerifier == nil {
		var ret string
		return ret
	}
	return *o.CodeVerifier
}

// GetCodeVerifierOk returns a tuple with the CodeVerifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderTokenRequest) GetCodeVerifierOk() (*string, bool) {
	if o == nil || o.CodeVerifier == nil {
		return nil, false
	}
	return o.CodeVerifier, true
}

// HasCodeVerifier returns a boolean if a field has been set.
func (o *IdentityOidcProviderTokenRequest) HasCodeVerifier() bool {
	if o != nil && o.CodeVerifier != nil {
		return true
	}

	return false
}

// SetCodeVerifier gets a reference to the given string and assigns it to the CodeVerifier field.
func (o *IdentityOidcProviderTokenRequest) SetCodeVerifier(v string) {
	o.CodeVerifier = &v
}

// GetGrantType returns the GrantType field value
func (o *IdentityOidcProviderTokenRequest) GetGrantType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderTokenRequest) GetGrantTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *IdentityOidcProviderTokenRequest) SetGrantType(v string) {
	o.GrantType = v
}

// GetRedirectUri returns the RedirectUri field value
func (o *IdentityOidcProviderTokenRequest) GetRedirectUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcProviderTokenRequest) GetRedirectUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedirectUri, true
}

// SetRedirectUri sets field value
func (o *IdentityOidcProviderTokenRequest) SetRedirectUri(v string) {
	o.RedirectUri = v
}

func (o IdentityOidcProviderTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if true {
		toSerialize["code"] = o.Code
	}
	if o.CodeVerifier != nil {
		toSerialize["code_verifier"] = o.CodeVerifier
	}
	if true {
		toSerialize["grant_type"] = o.GrantType
	}
	if true {
		toSerialize["redirect_uri"] = o.RedirectUri
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcProviderTokenRequest struct {
	value *IdentityOidcProviderTokenRequest
	isSet bool
}

func (v NullableIdentityOidcProviderTokenRequest) Get() *IdentityOidcProviderTokenRequest {
	return v.value
}

func (v *NullableIdentityOidcProviderTokenRequest) Set(val *IdentityOidcProviderTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcProviderTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcProviderTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcProviderTokenRequest(val *IdentityOidcProviderTokenRequest) *NullableIdentityOidcProviderTokenRequest {
	return &NullableIdentityOidcProviderTokenRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcProviderTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcProviderTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityOidcRoleRequest struct for IdentityOidcRoleRequest
type IdentityOidcRoleRequest struct {
	// Optional client_id
	ClientId *string `json:"client_id,omitempty"`
	// The OIDC key to use for generating tokens. The specified key must already exist.
	Key string `json:"key"`
	// The template string to use for generating tokens. This may be in string-ified JSON or base64 format.
	Template *string `json:"template,omitempty"`
	// TTL of the tokens generated against the role.
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewIdentityOidcRoleRequest instantiates a new IdentityOidcRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcRoleRequest(key string) *IdentityOidcRoleRequest {
	this := IdentityOidcRoleRequest{}
	this.Key = key
	return &this
}

// NewIdentityOidcRoleRequestWithDefaults instantiates a new IdentityOidcRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcRoleRequestWithDefaults() *IdentityOidcRoleRequest {
	this := IdentityOidcRoleRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *IdentityOidcRoleRequest) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcRoleRequest) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *IdentityOidcRoleRequest) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *IdentityOidcRoleRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetKey returns the Key field value
func (o *IdentityOidcRoleRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *IdentityOidcRoleRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *IdentityOidcRoleRequest) SetKey(v string) {
	o.Key = v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *IdentityOidcRoleRequest) GetTemplate() string {
	if o == nil || o.Template == nil {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcRoleRequest) GetTemplateOk() (*string, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *IdentityOidcRoleRequest) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *IdentityOidcRoleRequest) SetTemplate(v string) {
	o.Template = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *IdentityOidcRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *IdentityOidcRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *IdentityOidcRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o IdentityOidcRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcRoleRequest struct {
	value *IdentityOidcRoleRequest
	isSet bool
}

func (v NullableIdentityOidcRoleRequest) Get() *IdentityOidcRoleRequest {
	return v.value
}

func (v *NullableIdentityOidcRoleRequest) Set(val *IdentityOidcRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcRoleRequest(val *IdentityOidcRoleRequest) *NullableIdentityOidcRoleRequest {
	return &NullableIdentityOidcRoleRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityOidcScopeRequest struct for IdentityOidcScopeRequest
type IdentityOidcScopeRequest struct {
	// The description of the scope
	Description *string `json:"description,omitempty"`
	// The template string to use for the scope. This may be in string-ified JSON or base64 format.
	Template *string `json:"template,omitempty"`
}

// NewIdentityOidcScopeRequest instantiates a new IdentityOidcScopeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcScopeRequest() *IdentityOidcScopeRequest {
	this := IdentityOidcScopeRequest{}
	return &this
}

// NewIdentityOidcScopeRequestWithDefaults instantiates a new IdentityOidcScopeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcScopeRequestWithDefaults() *IdentityOidcScopeRequest {
	this := IdentityOidcScopeRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *IdentityOidcScopeRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcScopeRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *IdentityOidcScopeRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *IdentityOidcScopeRequest) SetDescription(v string) {
	o.Description = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *IdentityOidcScopeRequest) GetTemplate() string {
	if o == nil || o.Template == nil {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcScopeRequest) GetTemplateOk() (*string, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *IdentityOidcScopeRequest) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *IdentityOidcScopeRequest) SetTemplate(v string) {
	o.Template = &v
}

func (o IdentityOidcScopeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcScopeRequest struct {
	value *IdentityOidcScopeRequest
	isSet bool
}

func (v NullableIdentityOidcScopeRequest) Get() *IdentityOidcScopeRequest {
	return v.value
}

func (v *NullableIdentityOidcScopeRequest) Set(val *IdentityOidcScopeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcScopeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcScopeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcScopeRequest(val *IdentityOidcScopeRequest) *NullableIdentityOidcScopeRequest {
	return &NullableIdentityOidcScopeRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcScopeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcScopeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityPersonaIdRequest struct for IdentityPersonaIdRequest
type IdentityPersonaIdRequest struct {
	// Entity ID to which this persona should be tied to
	EntityId *string `json:"entity_id,omitempty"`
	// Metadata to be associated with the persona. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Mount accessor to which this persona belongs to
	MountAccessor *string `json:"mount_accessor,omitempty"`
	// Name of the persona
	Name *string `json:"name,omitempty"`
}

// NewIdentityPersonaIdRequest instantiates a new IdentityPersonaIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityPersonaIdRequest() *IdentityPersonaIdRequest {
	this := IdentityPersonaIdRequest{}
	return &this
}

// NewIdentityPersonaIdRequestWithDefaults instantiates a new IdentityPersonaIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityPersonaIdRequestWithDefaults() *IdentityPersonaIdRequest {
	this := IdentityPersonaIdRequest{}
	return &this
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *IdentityPersonaIdRequest) GetEntityId() string {
	if o == nil || o.EntityId == nil {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPersonaIdRequest) GetEntityIdOk() (*string, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *IdentityPersonaIdRequest) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *IdentityPersonaIdRequest) SetEntityId(v string) {
	o.EntityId = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IdentityPersonaIdRequest) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPersonaIdRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IdentityPersonaIdRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *IdentityPersonaIdRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetMountAccessor returns the MountAccessor field value if set, zero value otherwise.
func (o *IdentityPersonaIdRequest) GetMountAccessor() string {
	if o == nil || o.MountAccessor == nil {
		var ret string
		return ret
	}
	return *o.MountAccessor
}

// GetMountAccessorOk returns a tuple with the MountAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPersonaIdRequest) GetMountAccessorOk() (*string, bool) {
	if o == nil || o.MountAccessor == nil {
		return nil, false
	}
	return o.MountAccessor, true
}

// HasMountAccessor returns a boolean if a field has been set.
func (o *IdentityPersonaIdRequest) HasMountAccessor() bool {
	if o != nil && o.MountAccessor != nil {
		return true
	}

	return false
}

// SetMountAccessor gets a reference to the given string and assigns it to the MountAccessor field.
func (o *IdentityPersonaIdRequest) SetMountAccessor(v string) {
	o.MountAccessor = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityPersonaIdRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPersonaIdRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityPersonaIdRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityPersonaIdRequest) SetName(v string) {
	o.Name = &v
}

func (o IdentityPersonaIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntityId != nil {
		toSerialize["entity_id"] = o.EntityId
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.MountAccessor != nil {
		toSerialize["mount_accessor"] = o.MountAccessor
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityPersonaIdRequest struct {
	value *IdentityPersonaIdRequest
	isSet bool
}

func (v NullableIdentityPersonaIdRequest) Get() *IdentityPersonaIdRequest {
	return v.value
}

func (v *NullableIdentityPersonaIdRequest) Set(val *IdentityPersonaIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityPersonaIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityPersonaIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityPersonaIdRequest(val *IdentityPersonaIdRequest) *NullableIdentityPersonaIdRequest {
	return &NullableIdentityPersonaIdRequest{value: val, isSet: true}
}

func (v NullableIdentityPersonaIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityPersonaIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// IdentityPersonaRequest struct for IdentityPersonaRequest
type IdentityPersonaRequest struct {
	// Entity ID to which this persona belongs to
	EntityId *string `json:"entity_id,omitempty"`
	// ID of the persona
	Id *string `json:"id,omitempty"`
	// Metadata to be associated with the persona. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Mount accessor to which this persona belongs to
	MountAccessor *string `json:"mount_accessor,omitempty"`
	// Name of the persona
	Name *string `json:"name,omitempty"`
}

// NewIdentityPersonaRequest instantiates a new IdentityPersonaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityPersonaRequest() *IdentityPersonaRequest {
	this := IdentityPersonaRequest{}
	return &this
}

// NewIdentityPersonaRequestWithDefaults instantiates a new IdentityPersonaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityPersonaRequestWithDefaults() *IdentityPersonaRequest {
	this := IdentityPersonaRequest{}
	return &this
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *IdentityPersonaRequest) GetEntityId() string {
	if o == nil || o.EntityId == nil {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPersonaRequest) GetEntityIdOk() (*string, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *IdentityPersonaRequest) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *IdentityPersonaRequest) SetEntityId(v string) {
	o.EntityId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityPersonaRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPersonaRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityPersonaRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityPersonaRequest) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IdentityPersonaRequest) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPersonaRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IdentityPersonaRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *IdentityPersonaRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetMountAccessor returns the MountAccessor field value if set, zero value otherwise.
func (o *IdentityPersonaRequest) GetMountAccessor() string {
	if o == nil || o.MountAccessor == nil {
		var ret string
		return ret
	}
	return *o.MountAccessor
}

// GetMountAccessorOk returns a tuple with the MountAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPersonaRequest) GetMountAccessorOk() (*string, bool) {
	if o == nil || o.MountAccessor == nil {
		return nil, false
	}
	return o.MountAccessor, true
}

// HasMountAccessor returns a boolean if a field has been set.
func (o *IdentityPersonaRequest) HasMountAccessor() bool {
	if o != nil && o.MountAccessor != nil {
		return true
	}

	return false
}

// SetMountAccessor gets a reference to the given string and assigns it to the MountAccessor field.
func (o *IdentityPersonaRequest) SetMountAccessor(v string) {
	o.MountAccessor = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityPersonaRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPersonaRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityPersonaRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityPersonaRequest) SetName(v string) {
	o.Name = &v
}

func (o IdentityPersonaRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntityId != nil {
		toSerialize["entity_id"] = o.EntityId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.MountAccessor != nil {
		toSerialize["mount_accessor"] = o.MountAccessor
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityPersonaRequest struct {
	value *IdentityPersonaRequest
	isSet bool
}

func (v NullableIdentityPersonaRequest) Get() *IdentityPersonaRequest {
	return v.value
}

func (v *NullableIdentityPersonaRequest) Set(val *IdentityPersonaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityPersonaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityPersonaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityPersonaRequest(val *IdentityPersonaRequest) *NullableIdentityPersonaRequest {
	return &NullableIdentityPersonaRequest{value: val, isSet: true}
}

func (v NullableIdentityPersonaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityPersonaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// JwtConfigRequest struct for JwtConfigRequest
type JwtConfigRequest struct {
	// The value against which to match the 'iss' claim in a JWT. Optional.
	BoundIssuer *string `json:"bound_issuer,omitempty"`
	// The default role to use if none is provided during login. If not set, a role is required during login.
	DefaultRole *string `json:"default_role,omitempty"`
	// The CA certificate or chain of certificates, in PEM format, to use to validate connections to the JWKS URL. If not set, system certificates are used.
	JwksCaPem *string `json:"jwks_ca_pem,omitempty"`
	// JWKS URL to use to authenticate signatures. Cannot be used with \"oidc_discovery_url\" or \"jwt_validation_pubkeys\".
	JwksUrl *string `json:"jwks_url,omitempty"`
	// A list of supported signing algorithms. Defaults to RS256.
	JwtSupportedAlgs []string `json:"jwt_supported_algs,omitempty"`
	// A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used with \"jwks_url\" or \"oidc_discovery_url\".
	JwtValidationPubkeys []string `json:"jwt_validation_pubkeys,omitempty"`
	// Pass namespace in the OIDC state parameter instead of as a separate query parameter. With this setting, the allowed redirect URL(s) in Vault and on the provider side should not contain a namespace query parameter. This means only one redirect URL entry needs to be maintained on the provider side for all vault namespaces that will be authenticating against it. Defaults to true for new configs.
	NamespaceInState *bool `json:"namespace_in_state,omitempty"`
	// The OAuth Client ID configured with your OIDC provider.
	OidcClientId *string `json:"oidc_client_id,omitempty"`
	// The OAuth Client Secret configured with your OIDC provider.
	OidcClientSecret *string `json:"oidc_client_secret,omitempty"`
	// The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used.
	OidcDiscoveryCaPem *string `json:"oidc_discovery_ca_pem,omitempty"`
	// OIDC Discovery URL, without any .well-known component (base path). Cannot be used with \"jwks_url\" or \"jwt_validation_pubkeys\".
	OidcDiscoveryUrl *string `json:"oidc_discovery_url,omitempty"`
	// The response mode to be used in the OAuth2 request. Allowed values are 'query' and 'form_post'.
	OidcResponseMode *string `json:"oidc_response_mode,omitempty"`
	// The response types to request. Allowed values are 'code' and 'id_token'. Defaults to 'code'.
	OidcResponseTypes []string `json:"oidc_response_types,omitempty"`
	// Provider-specific configuration. Optional.
	ProviderConfig map[string]interface{} `json:"provider_config,omitempty"`
}

// NewJwtConfigRequest instantiates a new JwtConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJwtConfigRequest() *JwtConfigRequest {
	this := JwtConfigRequest{}
	return &this
}

// NewJwtConfigRequestWithDefaults instantiates a new JwtConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJwtConfigRequestWithDefaults() *JwtConfigRequest {
	this := JwtConfigRequest{}
	return &this
}

// GetBoundIssuer returns the BoundIssuer field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetBoundIssuer() string {
	if o == nil || o.BoundIssuer == nil {
		var ret string
		return ret
	}
	return *o.BoundIssuer
}

// GetBoundIssuerOk returns a tuple with the BoundIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetBoundIssuerOk() (*string, bool) {
	if o == nil || o.BoundIssuer == nil {
		return nil, false
	}
	return o.BoundIssuer, true
}

// HasBoundIssuer returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasBoundIssuer() bool {
	if o != nil && o.BoundIssuer != nil {
		return true
	}

	return false
}

// SetBoundIssuer gets a reference to the given string and assigns it to the BoundIssuer field.
func (o *JwtConfigRequest) SetBoundIssuer(v string) {
	o.BoundIssuer = &v
}

// GetDefaultRole returns the DefaultRole field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetDefaultRole() string {
	if o == nil || o.DefaultRole == nil {
		var ret string
		return ret
	}
	return *o.DefaultRole
}

// GetDefaultRoleOk returns a tuple with the DefaultRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetDefaultRoleOk() (*string, bool) {
	if o == nil || o.DefaultRole == nil {
		return nil, false
	}
	return o.DefaultRole, true
}

// HasDefaultRole returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasDefaultRole() bool {
	if o != nil && o.DefaultRole != nil {
		return true
	}

	return false
}

// SetDefaultRole gets a reference to the given string and assigns it to the DefaultRole field.
func (o *JwtConfigRequest) SetDefaultRole(v string) {
	o.DefaultRole = &v
}

// GetJwksCaPem returns the JwksCaPem field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetJwksCaPem() string {
	if o == nil || o.JwksCaPem == nil {
		var ret string
		return ret
	}
	return *o.JwksCaPem
}

// GetJwksCaPemOk returns a tuple with the JwksCaPem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetJwksCaPemOk() (*string, bool) {
	if o == nil || o.JwksCaPem == nil {
		return nil, false
	}
	return o.JwksCaPem, true
}

// HasJwksCaPem returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasJwksCaPem() bool {
	if o != nil && o.JwksCaPem != nil {
		return true
	}

	return false
}

// SetJwksCaPem gets a reference to the given string and assigns it to the JwksCaPem field.
func (o *JwtConfigRequest) SetJwksCaPem(v string) {
	o.JwksCaPem = &v
}

// GetJwksUrl returns the JwksUrl field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetJwksUrl() string {
	if o == nil || o.JwksUrl == nil {
		var ret string
		return ret
	}
	return *o.JwksUrl
}

// GetJwksUrlOk returns a tuple with the JwksUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetJwksUrlOk() (*string, bool) {
	if o == nil || o.JwksUrl == nil {
		return nil, false
	}
	return o.JwksUrl, true
}

// HasJwksUrl returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasJwksUrl() bool {
	if o != nil && o.JwksUrl != nil {
		return true
	}

	return false
}

// SetJwksUrl gets a reference to the given string and assigns it to the JwksUrl field.
func (o *JwtConfigRequest) SetJwksUrl(v string) {
	o.JwksUrl = &v
}

// GetJwtSupportedAlgs returns the JwtSupportedAlgs field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetJwtSupportedAlgs() []string {
	if o == nil || o.JwtSupportedAlgs == nil {
		var ret []string
		return ret
	}
	return o.JwtSupportedAlgs
}

// GetJwtSupportedAlgsOk returns a tuple with the JwtSupportedAlgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetJwtSupportedAlgsOk() ([]string, bool) {
	if o == nil || o.JwtSupportedAlgs == nil {
		return nil, false
	}
	return o.JwtSupportedAlgs, true
}

// HasJwtSupportedAlgs returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasJwtSupportedAlgs() bool {
	if o != nil && o.JwtSupportedAlgs != nil {
		return true
	}

	return false
}

// SetJwtSupportedAlgs gets a reference to the given []string and assigns it to the JwtSupportedAlgs field.
func (o *JwtConfigRequest) SetJwtSupportedAlgs(v []string) {
	o.JwtSupportedAlgs = v
}

// GetJwtValidationPubkeys returns the JwtValidationPubkeys field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetJwtValidationPubkeys() []string {
	if o == nil || o.JwtValidationPubkeys == nil {
		var ret []string
		return ret
	}
	return o.JwtValidationPubkeys
}

// GetJwtValidationPubkeysOk returns a tuple with the JwtValidationPubkeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetJwtValidationPubkeysOk() ([]string, bool) {
	if o == nil || o.JwtValidationPubkeys == nil {
		return nil, false
	}
	return o.JwtValidationPubkeys, true
}

// HasJwtValidationPubkeys returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasJwtValidationPubkeys() bool {
	if o != nil && o.JwtValidationPubkeys != nil {
		return true
	}

	return false
}

// SetJwtValidationPubkeys gets a reference to the given []string and assigns it to the JwtValidationPubkeys field.
func (o *JwtConfigRequest) SetJwtValidationPubkeys(v []string) {
	o.JwtValidationPubkeys = v
}

// GetNamespaceInState returns the NamespaceInState field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetNamespaceInState() bool {
	if o == nil || o.NamespaceInState == nil {
		var ret bool
		return ret
	}
	return *o.NamespaceInState
}

// GetNamespaceInStateOk returns a tuple with the NamespaceInState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetNamespaceInStateOk() (*bool, bool) {
	if o == nil || o.NamespaceInState == nil {
		return nil, false
	}
	return o.NamespaceInState, true
}

// HasNamespaceInState returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasNamespaceInState() bool {
	if o != nil && o.NamespaceInState != nil {
		return true
	}

	return false
}

// SetNamespaceInState gets a reference to the given bool and assigns it to the NamespaceInState field.
func (o *JwtConfigRequest) SetNamespaceInState(v bool) {
	o.NamespaceInState = &v
}

// GetOidcClientId returns the OidcClientId field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetOidcClientId() string {
	if o == nil || o.OidcClientId == nil {
		var ret string
		return ret
	}
	return *o.OidcClientId
}

// GetOidcClientIdOk returns a tuple with the OidcClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetOidcClientIdOk() (*string, bool) {
	if o == nil || o.OidcClientId == nil {
		return nil, false
	}
	return o.OidcClientId, true
}

// HasOidcClientId returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasOidcClientId() bool {
	if o != nil && o.OidcClientId != nil {
		return true
	}

	return false
}

// SetOidcClientId gets a reference to the given string and assigns it to the OidcClientId field.
func (o *JwtConfigRequest) SetOidcClientId(v string) {
	o.OidcClientId = &v
}

// GetOidcClientSecret returns the OidcClientSecret field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetOidcClientSecret() string {
	if o == nil || o.OidcClientSecret == nil {
		var ret string
		return ret
	}
	return *o.OidcClientSecret
}

// GetOidcClientSecretOk returns a tuple with the OidcClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetOidcClientSecretOk() (*string, bool) {
	if o == nil || o.OidcClientSecret == nil {
		return nil, false
	}
	return o.OidcClientSecret, true
}

// HasOidcClientSecret returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasOidcClientSecret() bool {
	if o != nil && o.OidcClientSecret != nil {
		return true
	}

	return false
}

// SetOidcClientSecret gets a reference to the given string and assigns it to the OidcClientSecret field.
func (o *JwtConfigRequest) SetOidcClientSecret(v string) {
	o.OidcClientSecret = &v
}

// GetOidcDiscoveryCaPem returns the OidcDiscoveryCaPem field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetOidcDiscoveryCaPem() string {
	if o == nil || o.OidcDiscoveryCaPem == nil {
		var ret string
		return ret
	}
	return *o.OidcDiscoveryCaPem
}

// GetOidcDiscoveryCaPemOk returns a tuple with the OidcDiscoveryCaPem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetOidcDiscoveryCaPemOk() (*string, bool) {
	if o == nil || o.OidcDiscoveryCaPem == nil {
		return nil, false
	}
	return o.OidcDiscoveryCaPem, true
}

// HasOidcDiscoveryCaPem returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasOidcDiscoveryCaPem() bool {
	if o != nil && o.OidcDiscoveryCaPem != nil {
		return true
	}

	return false
}

// SetOidcDiscoveryCaPem gets a reference to the given string and assigns it to the OidcDiscoveryCaPem field.
func (o *JwtConfigRequest) SetOidcDiscoveryCaPem(v string) {
	o.OidcDiscoveryCaPem = &v
}

// GetOidcDiscoveryUrl returns the OidcDiscoveryUrl field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetOidcDiscoveryUrl() string {
	if o == nil || o.OidcDiscoveryUrl == nil {
		var ret string
		return ret
	}
	return *o.OidcDiscoveryUrl
}

// GetOidcDiscoveryUrlOk returns a tuple with the OidcDiscoveryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetOidcDiscoveryUrlOk() (*string, bool) {
	if o == nil || o.OidcDiscoveryUrl == nil {
		return nil, false
	}
	return o.OidcDiscoveryUrl, true
}

// HasOidcDiscoveryUrl returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasOidcDiscoveryUrl() bool {
	if o != nil && o.OidcDiscoveryUrl != nil {
		return true
	}

	return false
}

// SetOidcDiscoveryUrl gets a reference to the given string and assigns it to the OidcDiscoveryUrl field.
func (o *JwtConfigRequest) SetOidcDiscoveryUrl(v string) {
	o.OidcDiscoveryUrl = &v
}

// GetOidcResponseMode returns the OidcResponseMode field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetOidcResponseMode() string {
	if o == nil || o.OidcResponseMode == nil {
		var ret string
		return ret
	}
	return *o.OidcResponseMode
}

// GetOidcResponseModeOk returns a tuple with the OidcResponseMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetOidcResponseModeOk() (*string, bool) {
	if o == nil || o.OidcResponseMode == nil {
		return nil, false
	}
	return o.OidcResponseMode, true
}

// HasOidcResponseMode returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasOidcResponseMode() bool {
	if o != nil && o.OidcResponseMode != nil {
		return true
	}

	return false
}

// SetOidcResponseMode gets a reference to the given string and assigns it to the OidcResponseMode field.
func (o *JwtConfigRequest) SetOidcResponseMode(v string) {
	o.OidcResponseMode = &v
}

// GetOidcResponseTypes returns the OidcResponseTypes field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetOidcResponseTypes() []string {
	if o == nil || o.OidcResponseTypes == nil {
		var ret []string
		return ret
	}
	return o.OidcResponseTypes
}

// GetOidcResponseTypesOk returns a tuple with the OidcResponseTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetOidcResponseTypesOk() ([]string, bool) {
	if o == nil || o.OidcResponseTypes == nil {
		return nil, false
	}
	return o.OidcResponseTypes, true
}

// HasOidcResponseTypes returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasOidcResponseTypes() bool {
	if o != nil && o.OidcResponseTypes != nil {
		return true
	}

	return false
}

// SetOidcResponseTypes gets a reference to the given []string and assigns it to the OidcResponseTypes field.
func (o *JwtConfigRequest) SetOidcResponseTypes(v []string) {
	o.OidcResponseTypes = v
}

// GetProviderConfig returns the ProviderConfig field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetProviderConfig() map[string]interface{} {
	if o == nil || o.ProviderConfig == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ProviderConfig
}

// GetProviderConfigOk returns a tuple with the ProviderConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetProviderConfigOk() (map[string]interface{}, bool) {
	if o == nil || o.ProviderConfig == nil {
		return nil, false
	}
	return o.ProviderConfig, true
}

// HasProviderConfig returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasProviderConfig() bool {
	if o != nil && o.ProviderConfig != nil {
		return true
	}

	return false
}

// SetProviderConfig gets a reference to the given map[string]interface{} and assigns it to the ProviderConfig field.
func (o *JwtConfigRequest) SetProviderConfig(v map[string]interface{}) {
	o.ProviderConfig = v
}

func (o JwtConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BoundIssuer != nil {
		toSerialize["bound_issuer"] = o.BoundIssuer
	}
	if o.DefaultRole != nil {
		toSerialize["default_role"] = o.DefaultRole
	}
	if o.JwksCaPem != nil {
		toSerialize["jwks_ca_pem"] = o.JwksCaPem
	}
	if o.JwksUrl != nil {
		toSerialize["jwks_url"] = o.JwksUrl
	}
	if o.JwtSupportedAlgs != nil {
		toSerialize["jwt_supported_algs"] = o.JwtSupportedAlgs
	}
	if o.JwtValidationPubkeys != nil {
		toSerialize["jwt_validation_pubkeys"] = o.JwtValidationPubkeys
	}
	if o.NamespaceInState != nil {
		toSerialize["namespace_in_state"] = o.NamespaceInState
	}
	if o.OidcClientId != nil {
		toSerialize["oidc_client_id"] = o.OidcClientId
	}
	if o.OidcClientSecret != nil {
		toSerialize["oidc_client_secret"] = o.OidcClientSecret
	}
	if o.OidcDiscoveryCaPem != nil {
		toSerialize["oidc_discovery_ca_pem"] = o.OidcDiscoveryCaPem
	}
	if o.OidcDiscoveryUrl != nil {
		toSerialize["oidc_discovery_url"] = o.OidcDiscoveryUrl
	}
	if o.OidcResponseMode != nil {
		toSerialize["oidc_response_mode"] = o.OidcResponseMode
	}
	if o.OidcResponseTypes != nil {
		toSerialize["oidc_response_types"] = o.OidcResponseTypes
	}
	if o.ProviderConfig != nil {
		toSerialize["provider_config"] = o.ProviderConfig
	}
	return json.Marshal(toSerialize)
}

type NullableJwtConfigRequest struct {
	value *JwtConfigRequest
	isSet bool
}

func (v NullableJwtConfigRequest) Get() *JwtConfigRequest {
	return v.value
}

func (v *NullableJwtConfigRequest) Set(val *JwtConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJwtConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJwtConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJwtConfigRequest(val *JwtConfigRequest) *NullableJwtConfigRequest {
	return &NullableJwtConfigRequest{value: val, isSet: true}
}

func (v NullableJwtConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJwtConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// JwtLoginRequest struct for JwtLoginRequest
type JwtLoginRequest struct {
	// The signed JWT to validate.
	Jwt *string `json:"jwt,omitempty"`
	// The role to log in against.
	Role *string `json:"role,omitempty"`
}

// NewJwtLoginRequest instantiates a new JwtLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJwtLoginRequest() *JwtLoginRequest {
	this := JwtLoginRequest{}
	return &this
}

// NewJwtLoginRequestWithDefaults instantiates a new JwtLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJwtLoginRequestWithDefaults() *JwtLoginRequest {
	this := JwtLoginRequest{}
	return &this
}

// GetJwt returns the Jwt field value if set, zero value otherwise.
func (o *JwtLoginRequest) GetJwt() string {
	if o == nil || o.Jwt == nil {
		var ret string
		return ret
	}
	return *o.Jwt
}

// GetJwtOk returns a tuple with the Jwt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtLoginRequest) GetJwtOk() (*string, bool) {
	if o == nil || o.Jwt == nil {
		return nil, false
	}
	return o.Jwt, true
}

// HasJwt returns a boolean if a field has been set.
func (o *JwtLoginRequest) HasJwt() bool {
	if o != nil && o.Jwt != nil {
		return true
	}

	return false
}

// SetJwt gets a reference to the given string and assigns it to the Jwt field.
func (o *JwtLoginRequest) SetJwt(v string) {
	o.Jwt = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *JwtLoginRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtLoginRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *JwtLoginRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *JwtLoginRequest) SetRole(v string) {
	o.Role = &v
}

func (o JwtLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Jwt != nil {
		toSerialize["jwt"] = o.Jwt
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableJwtLoginRequest struct {
	value *JwtLoginRequest
	isSet bool
}

func (v NullableJwtLoginRequest) Get() *JwtLoginRequest {
	return v.value
}

func (v *NullableJwtLoginRequest) Set(val *JwtLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJwtLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJwtLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJwtLoginRequest(val *JwtLoginRequest) *NullableJwtLoginRequest {
	return &NullableJwtLoginRequest{value: val, isSet: true}
}

func (v NullableJwtLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJwtLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// JwtOidcAuthUrlRequest struct for JwtOidcAuthUrlRequest
type JwtOidcAuthUrlRequest struct {
	// Optional client-provided nonce that must match during callback, if present.
	ClientNonce *string `json:"client_nonce,omitempty"`
	// The OAuth redirect_uri to use in the authorization URL.
	RedirectUri *string `json:"redirect_uri,omitempty"`
	// The role to issue an OIDC authorization URL against.
	Role *string `json:"role,omitempty"`
}

// NewJwtOidcAuthUrlRequest instantiates a new JwtOidcAuthUrlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJwtOidcAuthUrlRequest() *JwtOidcAuthUrlRequest {
	this := JwtOidcAuthUrlRequest{}
	return &this
}

// NewJwtOidcAuthUrlRequestWithDefaults instantiates a new JwtOidcAuthUrlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJwtOidcAuthUrlRequestWithDefaults() *JwtOidcAuthUrlRequest {
	this := JwtOidcAuthUrlRequest{}
	return &this
}

// GetClientNonce returns the ClientNonce field value if set, zero value otherwise.
func (o *JwtOidcAuthUrlRequest) GetClientNonce() string {
	if o == nil || o.ClientNonce == nil {
		var ret string
		return ret
	}
	return *o.ClientNonce
}

// GetClientNonceOk returns a tuple with the ClientNonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtOidcAuthUrlRequest) GetClientNonceOk() (*string, bool) {
	if o == nil || o.ClientNonce == nil {
		return nil, false
	}
	return o.ClientNonce, true
}

// HasClientNonce returns a boolean if a field has been set.
func (o *JwtOidcAuthUrlRequest) HasClientNonce() bool {
	if o != nil && o.ClientNonce != nil {
		return true
	}

	return false
}

// SetClientNonce gets a reference to the given string and assigns it to the ClientNonce field.
func (o *JwtOidcAuthUrlRequest) SetClientNonce(v string) {
	o.ClientNonce = &v
}

// GetRedirectUri returns the RedirectUri field value if set, zero value otherwise.
func (o *JwtOidcAuthUrlRequest) GetRedirectUri() string {
	if o == nil || o.RedirectUri == nil {
		var ret string
		return ret
	}
	return *o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtOidcAuthUrlRequest) GetRedirectUriOk() (*string, bool) {
	if o == nil || o.RedirectUri == nil {
		return nil, false
	}
	return o.RedirectUri, true
}

// HasRedirectUri returns a boolean if a field has been set.
func (o *JwtOidcAuthUrlRequest) HasRedirectUri() bool {
	if o != nil && o.RedirectUri != nil {
		return true
	}

	return false
}

// SetRedirectUri gets a reference to the given string and assigns it to the RedirectUri field.
func (o *JwtOidcAuthUrlRequest) SetRedirectUri(v string) {
	o.RedirectUri = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *JwtOidcAuthUrlRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtOidcAuthUrlRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *JwtOidcAuthUrlRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *JwtOidcAuthUrlRequest) SetRole(v string) {
	o.Role = &v
}

func (o JwtOidcAuthUrlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientNonce != nil {
		toSerialize["client_nonce"] = o.ClientNonce
	}
	if o.RedirectUri != nil {
		toSerialize["redirect_uri"] = o.RedirectUri
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableJwtOidcAuthUrlRequest struct {
	value *JwtOidcAuthUrlRequest
	isSet bool
}

func (v NullableJwtOidcAuthUrlRequest) Get() *JwtOidcAuthUrlRequest {
	return v.value
}

func (v *NullableJwtOidcAuthUrlRequest) Set(val *JwtOidcAuthUrlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJwtOidcAuthUrlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJwtOidcAuthUrlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJwtOidcAuthUrlRequest(val *JwtOidcAuthUrlRequest) *NullableJwtOidcAuthUrlRequest {
	return &NullableJwtOidcAuthUrlRequest{value: val, isSet: true}
}

func (v NullableJwtOidcAuthUrlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJwtOidcAuthUrlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// JwtOidcCallbackRequest struct for JwtOidcCallbackRequest
type JwtOidcCallbackRequest struct {
	ClientNonce *string `json:"client_nonce,omitempty"`
	Code        *string `json:"code,omitempty"`
	IdToken     *string `json:"id_token,omitempty"`
	State       *string `json:"state,omitempty"`
}

// NewJwtOidcCallbackRequest instantiates a new JwtOidcCallbackRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJwtOidcCallbackRequest() *JwtOidcCallbackRequest {
	this := JwtOidcCallbackRequest{}
	return &this
}

// NewJwtOidcCallbackRequestWithDefaults instantiates a new JwtOidcCallbackRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJwtOidcCallbackRequestWithDefaults() *JwtOidcCallbackRequest {
	this := JwtOidcCallbackRequest{}
	return &this
}

// GetClientNonce returns the ClientNonce field value if set, zero value otherwise.
func (o *JwtOidcCallbackRequest) GetClientNonce() string {
	if o == nil || o.ClientNonce == nil {
		var ret string
		return ret
	}
	return *o.ClientNonce
}

// GetClientNonceOk returns a tuple with the ClientNonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtOidcCallbackRequest) GetClientNonceOk() (*string, bool) {
	if o == nil || o.ClientNonce == nil {
		return nil, false
	}
	return o.ClientNonce, true
}

// HasClientNonce returns a boolean if a field has been set.
func (o *JwtOidcCallbackRequest) HasClientNonce() bool {
	if o != nil && o.ClientNonce != nil {
		return true
	}

	return false
}

// SetClientNonce gets a reference to the given string and assigns it to the ClientNonce field.
func (o *JwtOidcCallbackRequest) SetClientNonce(v string) {
	o.ClientNonce = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *JwtOidcCallbackRequest) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtOidcCallbackRequest) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *JwtOidcCallbackRequest) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *JwtOidcCallbackRequest) SetCode(v string) {
	o.Code = &v
}

// GetIdToken returns the IdToken field value if set, zero value otherwise.
func (o *JwtOidcCallbackRequest) GetIdToken() string {
	if o == nil || o.IdToken == nil {
		var ret string
		return ret
	}
	return *o.IdToken
}

// GetIdTokenOk returns a tuple with the IdToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtOidcCallbackRequest) GetIdTokenOk() (*string, bool) {
	if o == nil || o.IdToken == nil {
		return nil, false
	}
	return o.IdToken, true
}

// HasIdToken returns a boolean if a field has been set.
func (o *JwtOidcCallbackRequest) HasIdToken() bool {
	if o != nil && o.IdToken != nil {
		return true
	}

	return false
}

// SetIdToken gets a reference to the given string and assigns it to the IdToken field.
func (o *JwtOidcCallbackRequest) SetIdToken(v string) {
	o.IdToken = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *JwtOidcCallbackRequest) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtOidcCallbackRequest) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *JwtOidcCallbackRequest) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *JwtOidcCallbackRequest) SetState(v string) {
	o.State = &v
}

func (o JwtOidcCallbackRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientNonce != nil {
		toSerialize["client_nonce"] = o.ClientNonce
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.IdToken != nil {
		toSerialize["id_token"] = o.IdToken
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableJwtOidcCallbackRequest struct {
	value *JwtOidcCallbackRequest
	isSet bool
}

func (v NullableJwtOidcCallbackRequest) Get() *JwtOidcCallbackRequest {
	return v.value
}

func (v *NullableJwtOidcCallbackRequest) Set(val *JwtOidcCallbackRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJwtOidcCallbackRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJwtOidcCallbackRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJwtOidcCallbackRequest(val *JwtOidcCallbackRequest) *NullableJwtOidcCallbackRequest {
	return &NullableJwtOidcCallbackRequest{value: val, isSet: true}
}

func (v NullableJwtOidcCallbackRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJwtOidcCallbackRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// JwtRoleRequest struct for JwtRoleRequest
type JwtRoleRequest struct {
	// Comma-separated list of allowed values for redirect_uri
	AllowedRedirectUris []string `json:"allowed_redirect_uris,omitempty"`
	// Comma-separated list of 'aud' claims that are valid for login; any match is sufficient
	BoundAudiences []string `json:"bound_audiences,omitempty"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs,omitempty"`
	// Map of claims/values which must match for login
	BoundClaims map[string]interface{} `json:"bound_claims,omitempty"`
	// How to interpret values in the map of claims/values (which must match for login): allowed values are 'string' or 'glob'
	BoundClaimsType *string `json:"bound_claims_type,omitempty"`
	// The 'sub' claim that is valid for login. Optional.
	BoundSubject *string `json:"bound_subject,omitempty"`
	// Mappings of claims (key) that will be copied to a metadata field (value)
	ClaimMappings map[string]interface{} `json:"claim_mappings,omitempty"`
	// Duration in seconds of leeway when validating all claims to account for clock skew. Defaults to 60 (1 minute) if set to 0 and can be disabled if set to -1.
	ClockSkewLeeway *int32 `json:"clock_skew_leeway,omitempty"`
	// Duration in seconds of leeway when validating expiration of a token to account for clock skew. Defaults to 150 (2.5 minutes) if set to 0 and can be disabled if set to -1.
	ExpirationLeeway *int32 `json:"expiration_leeway,omitempty"`
	// The claim to use for the Identity group alias names
	GroupsClaim *string `json:"groups_claim,omitempty"`
	// Specifies the allowable elapsed time in seconds since the last time the user was actively authenticated.
	MaxAge *int32 `json:"max_age,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Duration in seconds of leeway when validating not before values of a token to account for clock skew. Defaults to 150 (2.5 minutes) if set to 0 and can be disabled if set to -1.
	NotBeforeLeeway *int32 `json:"not_before_leeway,omitempty"`
	// Use \"token_num_uses\" instead. If this and \"token_num_uses\" are both specified, only \"token_num_uses\" will be used.
	// Deprecated
	NumUses *int32 `json:"num_uses,omitempty"`
	// Comma-separated list of OIDC scopes
	OidcScopes []string `json:"oidc_scopes,omitempty"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Type of the role, either 'jwt' or 'oidc'.
	RoleType *string `json:"role_type,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
	// The claim to use for the Identity entity alias name
	UserClaim *string `json:"user_claim,omitempty"`
	// If true, the user_claim value will use JSON pointer syntax for referencing claims.
	UserClaimJsonPointer *bool `json:"user_claim_json_pointer,omitempty"`
	// Log received OIDC tokens and claims when debug-level logging is active. Not recommended in production since sensitive information may be present in OIDC responses.
	VerboseOidcLogging *bool `json:"verbose_oidc_logging,omitempty"`
}

// NewJwtRoleRequest instantiates a new JwtRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJwtRoleRequest() *JwtRoleRequest {
	this := JwtRoleRequest{}
	var boundClaimsType string = "string"
	this.BoundClaimsType = &boundClaimsType
	var expirationLeeway int32 = 150
	this.ExpirationLeeway = &expirationLeeway
	var notBeforeLeeway int32 = 150
	this.NotBeforeLeeway = &notBeforeLeeway
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewJwtRoleRequestWithDefaults instantiates a new JwtRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJwtRoleRequestWithDefaults() *JwtRoleRequest {
	this := JwtRoleRequest{}
	var boundClaimsType string = "string"
	this.BoundClaimsType = &boundClaimsType
	var expirationLeeway int32 = 150
	this.ExpirationLeeway = &expirationLeeway
	var notBeforeLeeway int32 = 150
	this.NotBeforeLeeway = &notBeforeLeeway
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetAllowedRedirectUris returns the AllowedRedirectUris field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetAllowedRedirectUris() []string {
	if o == nil || o.AllowedRedirectUris == nil {
		var ret []string
		return ret
	}
	return o.AllowedRedirectUris
}

// GetAllowedRedirectUrisOk returns a tuple with the AllowedRedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetAllowedRedirectUrisOk() ([]string, bool) {
	if o == nil || o.AllowedRedirectUris == nil {
		return nil, false
	}
	return o.AllowedRedirectUris, true
}

// HasAllowedRedirectUris returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasAllowedRedirectUris() bool {
	if o != nil && o.AllowedRedirectUris != nil {
		return true
	}

	return false
}

// SetAllowedRedirectUris gets a reference to the given []string and assigns it to the AllowedRedirectUris field.
func (o *JwtRoleRequest) SetAllowedRedirectUris(v []string) {
	o.AllowedRedirectUris = v
}

// GetBoundAudiences returns the BoundAudiences field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetBoundAudiences() []string {
	if o == nil || o.BoundAudiences == nil {
		var ret []string
		return ret
	}
	return o.BoundAudiences
}

// GetBoundAudiencesOk returns a tuple with the BoundAudiences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetBoundAudiencesOk() ([]string, bool) {
	if o == nil || o.BoundAudiences == nil {
		return nil, false
	}
	return o.BoundAudiences, true
}

// HasBoundAudiences returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasBoundAudiences() bool {
	if o != nil && o.BoundAudiences != nil {
		return true
	}

	return false
}

// SetBoundAudiences gets a reference to the given []string and assigns it to the BoundAudiences field.
func (o *JwtRoleRequest) SetBoundAudiences(v []string) {
	o.BoundAudiences = v
}

// GetBoundCidrs returns the BoundCidrs field value if set, zero value otherwise.
// Deprecated
func (o *JwtRoleRequest) GetBoundCidrs() []string {
	if o == nil || o.BoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrs
}

// GetBoundCidrsOk returns a tuple with the BoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *JwtRoleRequest) GetBoundCidrsOk() ([]string, bool) {
	if o == nil || o.BoundCidrs == nil {
		return nil, false
	}
	return o.BoundCidrs, true
}

// HasBoundCidrs returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasBoundCidrs() bool {
	if o != nil && o.BoundCidrs != nil {
		return true
	}

	return false
}

// SetBoundCidrs gets a reference to the given []string and assigns it to the BoundCidrs field.
// Deprecated
func (o *JwtRoleRequest) SetBoundCidrs(v []string) {
	o.BoundCidrs = v
}

// GetBoundClaims returns the BoundClaims field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetBoundClaims() map[string]interface{} {
	if o == nil || o.BoundClaims == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.BoundClaims
}

// GetBoundClaimsOk returns a tuple with the BoundClaims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetBoundClaimsOk() (map[string]interface{}, bool) {
	if o == nil || o.BoundClaims == nil {
		return nil, false
	}
	return o.BoundClaims, true
}

// HasBoundClaims returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasBoundClaims() bool {
	if o != nil && o.BoundClaims != nil {
		return true
	}

	return false
}

// SetBoundClaims gets a reference to the given map[string]interface{} and assigns it to the BoundClaims field.
func (o *JwtRoleRequest) SetBoundClaims(v map[string]interface{}) {
	o.BoundClaims = v
}

// GetBoundClaimsType returns the BoundClaimsType field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetBoundClaimsType() string {
	if o == nil || o.BoundClaimsType == nil {
		var ret string
		return ret
	}
	return *o.BoundClaimsType
}

// GetBoundClaimsTypeOk returns a tuple with the BoundClaimsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetBoundClaimsTypeOk() (*string, bool) {
	if o == nil || o.BoundClaimsType == nil {
		return nil, false
	}
	return o.BoundClaimsType, true
}

// HasBoundClaimsType returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasBoundClaimsType() bool {
	if o != nil && o.BoundClaimsType != nil {
		return true
	}

	return false
}

// SetBoundClaimsType gets a reference to the given string and assigns it to the BoundClaimsType field.
func (o *JwtRoleRequest) SetBoundClaimsType(v string) {
	o.BoundClaimsType = &v
}

// GetBoundSubject returns the BoundSubject field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetBoundSubject() string {
	if o == nil || o.BoundSubject == nil {
		var ret string
		return ret
	}
	return *o.BoundSubject
}

// GetBoundSubjectOk returns a tuple with the BoundSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetBoundSubjectOk() (*string, bool) {
	if o == nil || o.BoundSubject == nil {
		return nil, false
	}
	return o.BoundSubject, true
}

// HasBoundSubject returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasBoundSubject() bool {
	if o != nil && o.BoundSubject != nil {
		return true
	}

	return false
}

// SetBoundSubject gets a reference to the given string and assigns it to the BoundSubject field.
func (o *JwtRoleRequest) SetBoundSubject(v string) {
	o.BoundSubject = &v
}

// GetClaimMappings returns the ClaimMappings field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetClaimMappings() map[string]interface{} {
	if o == nil || o.ClaimMappings == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ClaimMappings
}

// GetClaimMappingsOk returns a tuple with the ClaimMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetClaimMappingsOk() (map[string]interface{}, bool) {
	if o == nil || o.ClaimMappings == nil {
		return nil, false
	}
	return o.ClaimMappings, true
}

// HasClaimMappings returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasClaimMappings() bool {
	if o != nil && o.ClaimMappings != nil {
		return true
	}

	return false
}

// SetClaimMappings gets a reference to the given map[string]interface{} and assigns it to the ClaimMappings field.
func (o *JwtRoleRequest) SetClaimMappings(v map[string]interface{}) {
	o.ClaimMappings = v
}

// GetClockSkewLeeway returns the ClockSkewLeeway field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetClockSkewLeeway() int32 {
	if o == nil || o.ClockSkewLeeway == nil {
		var ret int32
		return ret
	}
	return *o.ClockSkewLeeway
}

// GetClockSkewLeewayOk returns a tuple with the ClockSkewLeeway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetClockSkewLeewayOk() (*int32, bool) {
	if o == nil || o.ClockSkewLeeway == nil {
		return nil, false
	}
	return o.ClockSkewLeeway, true
}

// HasClockSkewLeeway returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasClockSkewLeeway() bool {
	if o != nil && o.ClockSkewLeeway != nil {
		return true
	}

	return false
}

// SetClockSkewLeeway gets a reference to the given int32 and assigns it to the ClockSkewLeeway field.
func (o *JwtRoleRequest) SetClockSkewLeeway(v int32) {
	o.ClockSkewLeeway = &v
}

// GetExpirationLeeway returns the ExpirationLeeway field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetExpirationLeeway() int32 {
	if o == nil || o.ExpirationLeeway == nil {
		var ret int32
		return ret
	}
	return *o.ExpirationLeeway
}

// GetExpirationLeewayOk returns a tuple with the ExpirationLeeway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetExpirationLeewayOk() (*int32, bool) {
	if o == nil || o.ExpirationLeeway == nil {
		return nil, false
	}
	return o.ExpirationLeeway, true
}

// HasExpirationLeeway returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasExpirationLeeway() bool {
	if o != nil && o.ExpirationLeeway != nil {
		return true
	}

	return false
}

// SetExpirationLeeway gets a reference to the given int32 and assigns it to the ExpirationLeeway field.
func (o *JwtRoleRequest) SetExpirationLeeway(v int32) {
	o.ExpirationLeeway = &v
}

// GetGroupsClaim returns the GroupsClaim field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetGroupsClaim() string {
	if o == nil || o.GroupsClaim == nil {
		var ret string
		return ret
	}
	return *o.GroupsClaim
}

// GetGroupsClaimOk returns a tuple with the GroupsClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetGroupsClaimOk() (*string, bool) {
	if o == nil || o.GroupsClaim == nil {
		return nil, false
	}
	return o.GroupsClaim, true
}

// HasGroupsClaim returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasGroupsClaim() bool {
	if o != nil && o.GroupsClaim != nil {
		return true
	}

	return false
}

// SetGroupsClaim gets a reference to the given string and assigns it to the GroupsClaim field.
func (o *JwtRoleRequest) SetGroupsClaim(v string) {
	o.GroupsClaim = &v
}

// GetMaxAge returns the MaxAge field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetMaxAge() int32 {
	if o == nil || o.MaxAge == nil {
		var ret int32
		return ret
	}
	return *o.MaxAge
}

// GetMaxAgeOk returns a tuple with the MaxAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetMaxAgeOk() (*int32, bool) {
	if o == nil || o.MaxAge == nil {
		return nil, false
	}
	return o.MaxAge, true
}

// HasMaxAge returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasMaxAge() bool {
	if o != nil && o.MaxAge != nil {
		return true
	}

	return false
}

// SetMaxAge gets a reference to the given int32 and assigns it to the MaxAge field.
func (o *JwtRoleRequest) SetMaxAge(v int32) {
	o.MaxAge = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *JwtRoleRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *JwtRoleRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *JwtRoleRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetNotBeforeLeeway returns the NotBeforeLeeway field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetNotBeforeLeeway() int32 {
	if o == nil || o.NotBeforeLeeway == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeLeeway
}

// GetNotBeforeLeewayOk returns a tuple with the NotBeforeLeeway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetNotBeforeLeewayOk() (*int32, bool) {
	if o == nil || o.NotBeforeLeeway == nil {
		return nil, false
	}
	return o.NotBeforeLeeway, true
}

// HasNotBeforeLeeway returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasNotBeforeLeeway() bool {
	if o != nil && o.NotBeforeLeeway != nil {
		return true
	}

	return false
}

// SetNotBeforeLeeway gets a reference to the given int32 and assigns it to the NotBeforeLeeway field.
func (o *JwtRoleRequest) SetNotBeforeLeeway(v int32) {
	o.NotBeforeLeeway = &v
}

// GetNumUses returns the NumUses field value if set, zero value otherwise.
// Deprecated
func (o *JwtRoleRequest) GetNumUses() int32 {
	if o == nil || o.NumUses == nil {
		var ret int32
		return ret
	}
	return *o.NumUses
}

// GetNumUsesOk returns a tuple with the NumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *JwtRoleRequest) GetNumUsesOk() (*int32, bool) {
	if o == nil || o.NumUses == nil {
		return nil, false
	}
	return o.NumUses, true
}

// HasNumUses returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasNumUses() bool {
	if o != nil && o.NumUses != nil {
		return true
	}

	return false
}

// SetNumUses gets a reference to the given int32 and assigns it to the NumUses field.
// Deprecated
func (o *JwtRoleRequest) SetNumUses(v int32) {
	o.NumUses = &v
}

// GetOidcScopes returns the OidcScopes field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetOidcScopes() []string {
	if o == nil || o.OidcScopes == nil {
		var ret []string
		return ret
	}
	return o.OidcScopes
}

// GetOidcScopesOk returns a tuple with the OidcScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetOidcScopesOk() ([]string, bool) {
	if o == nil || o.OidcScopes == nil {
		return nil, false
	}
	return o.OidcScopes, true
}

// HasOidcScopes returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasOidcScopes() bool {
	if o != nil && o.OidcScopes != nil {
		return true
	}

	return false
}

// SetOidcScopes gets a reference to the given []string and assigns it to the OidcScopes field.
func (o *JwtRoleRequest) SetOidcScopes(v []string) {
	o.OidcScopes = v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *JwtRoleRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *JwtRoleRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *JwtRoleRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *JwtRoleRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *JwtRoleRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *JwtRoleRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetRoleType returns the RoleType field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetRoleType() string {
	if o == nil || o.RoleType == nil {
		var ret string
		return ret
	}
	return *o.RoleType
}

// GetRoleTypeOk returns a tuple with the RoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetRoleTypeOk() (*string, bool) {
	if o == nil || o.RoleType == nil {
		return nil, false
	}
	return o.RoleType, true
}

// HasRoleType returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasRoleType() bool {
	if o != nil && o.RoleType != nil {
		return true
	}

	return false
}

// SetRoleType gets a reference to the given string and assigns it to the RoleType field.
func (o *JwtRoleRequest) SetRoleType(v string) {
	o.RoleType = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *JwtRoleRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *JwtRoleRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *JwtRoleRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *JwtRoleRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *JwtRoleRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *JwtRoleRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *JwtRoleRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *JwtRoleRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *JwtRoleRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *JwtRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *JwtRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *JwtRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUserClaim returns the UserClaim field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetUserClaim() string {
	if o == nil || o.UserClaim == nil {
		var ret string
		return ret
	}
	return *o.UserClaim
}

// GetUserClaimOk returns a tuple with the UserClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetUserClaimOk() (*string, bool) {
	if o == nil || o.UserClaim == nil {
		return nil, false
	}
	return o.UserClaim, true
}

// HasUserClaim returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasUserClaim() bool {
	if o != nil && o.UserClaim != nil {
		return true
	}

	return false
}

// SetUserClaim gets a reference to the given string and assigns it to the UserClaim field.
func (o *JwtRoleRequest) SetUserClaim(v string) {
	o.UserClaim = &v
}

// GetUserClaimJsonPointer returns the UserClaimJsonPointer field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetUserClaimJsonPointer() bool {
	if o == nil || o.UserClaimJsonPointer == nil {
		var ret bool
		return ret
	}
	return *o.UserClaimJsonPointer
}

// GetUserClaimJsonPointerOk returns a tuple with the UserClaimJsonPointer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetUserClaimJsonPointerOk() (*bool, bool) {
	if o == nil || o.UserClaimJsonPointer == nil {
		return nil, false
	}
	return o.UserClaimJsonPointer, true
}

// HasUserClaimJsonPointer returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasUserClaimJsonPointer() bool {
	if o != nil && o.UserClaimJsonPointer != nil {
		return true
	}

	return false
}

// SetUserClaimJsonPointer gets a reference to the given bool and assigns it to the UserClaimJsonPointer field.
func (o *JwtRoleRequest) SetUserClaimJsonPointer(v bool) {
	o.UserClaimJsonPointer = &v
}

// GetVerboseOidcLogging returns the VerboseOidcLogging field value if set, zero value otherwise.
func (o *JwtRoleRequest) GetVerboseOidcLogging() bool {
	if o == nil || o.VerboseOidcLogging == nil {
		var ret bool
		return ret
	}
	return *o.VerboseOidcLogging
}

// GetVerboseOidcLoggingOk returns a tuple with the VerboseOidcLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtRoleRequest) GetVerboseOidcLoggingOk() (*bool, bool) {
	if o == nil || o.VerboseOidcLogging == nil {
		return nil, false
	}
	return o.VerboseOidcLogging, true
}

// HasVerboseOidcLogging returns a boolean if a field has been set.
func (o *JwtRoleRequest) HasVerboseOidcLogging() bool {
	if o != nil && o.VerboseOidcLogging != nil {
		return true
	}

	return false
}

// SetVerboseOidcLogging gets a reference to the given bool and assigns it to the VerboseOidcLogging field.
func (o *JwtRoleRequest) SetVerboseOidcLogging(v bool) {
	o.VerboseOidcLogging = &v
}

func (o JwtRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedRedirectUris != nil {
		toSerialize["allowed_redirect_uris"] = o.AllowedRedirectUris
	}
	if o.BoundAudiences != nil {
		toSerialize["bound_audiences"] = o.BoundAudiences
	}
	if o.BoundCidrs != nil {
		toSerialize["bound_cidrs"] = o.BoundCidrs
	}
	if o.BoundClaims != nil {
		toSerialize["bound_claims"] = o.BoundClaims
	}
	if o.BoundClaimsType != nil {
		toSerialize["bound_claims_type"] = o.BoundClaimsType
	}
	if o.BoundSubject != nil {
		toSerialize["bound_subject"] = o.BoundSubject
	}
	if o.ClaimMappings != nil {
		toSerialize["claim_mappings"] = o.ClaimMappings
	}
	if o.ClockSkewLeeway != nil {
		toSerialize["clock_skew_leeway"] = o.ClockSkewLeeway
	}
	if o.ExpirationLeeway != nil {
		toSerialize["expiration_leeway"] = o.ExpirationLeeway
	}
	if o.GroupsClaim != nil {
		toSerialize["groups_claim"] = o.GroupsClaim
	}
	if o.MaxAge != nil {
		toSerialize["max_age"] = o.MaxAge
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.NotBeforeLeeway != nil {
		toSerialize["not_before_leeway"] = o.NotBeforeLeeway
	}
	if o.NumUses != nil {
		toSerialize["num_uses"] = o.NumUses
	}
	if o.OidcScopes != nil {
		toSerialize["oidc_scopes"] = o.OidcScopes
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.RoleType != nil {
		toSerialize["role_type"] = o.RoleType
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UserClaim != nil {
		toSerialize["user_claim"] = o.UserClaim
	}
	if o.UserClaimJsonPointer != nil {
		toSerialize["user_claim_json_pointer"] = o.UserClaimJsonPointer
	}
	if o.VerboseOidcLogging != nil {
		toSerialize["verbose_oidc_logging"] = o.VerboseOidcLogging
	}
	return json.Marshal(toSerialize)
}

type NullableJwtRoleRequest struct {
	value *JwtRoleRequest
	isSet bool
}

func (v NullableJwtRoleRequest) Get() *JwtRoleRequest {
	return v.value
}

func (v *NullableJwtRoleRequest) Set(val *JwtRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJwtRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJwtRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJwtRoleRequest(val *JwtRoleRequest) *NullableJwtRoleRequest {
	return &NullableJwtRoleRequest{value: val, isSet: true}
}

func (v NullableJwtRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJwtRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KerberosConfigLdapRequest struct for KerberosConfigLdapRequest
type KerberosConfigLdapRequest struct {
	// Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).
	AnonymousGroupSearch *bool `json:"anonymous_group_search,omitempty"`
	// LDAP DN for searching for the user DN (optional)
	Binddn *string `json:"binddn,omitempty"`
	// LDAP password for searching for the user DN (optional)
	Bindpass *string `json:"bindpass,omitempty"`
	// If true, case sensitivity will be used when comparing usernames and groups for matching policies.
	CaseSensitiveNames *bool `json:"case_sensitive_names,omitempty"`
	// CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded (optional)
	Certificate *string `json:"certificate,omitempty"`
	// Client certificate to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsCert *string `json:"client_tls_cert,omitempty"`
	// Client certificate key to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsKey *string `json:"client_tls_key,omitempty"`
	// Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true
	DenyNullBind *bool `json:"deny_null_bind,omitempty"`
	// Use anonymous bind to discover the bind DN of a user (optional)
	Discoverdn *bool `json:"discoverdn,omitempty"`
	// LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: \"cn\" or \"memberOf\", etc. Default: cn
	Groupattr *string `json:"groupattr,omitempty"`
	// LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)
	Groupdn *string `json:"groupdn,omitempty"`
	// Go template for querying group membership of user (optional) The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
	Groupfilter *string `json:"groupfilter,omitempty"`
	// Skip LDAP server SSL Certificate verification - VERY insecure (optional)
	InsecureTls *bool `json:"insecure_tls,omitempty"`
	// Timeout, in seconds, for the connection when making requests against the server before returning back an error.
	RequestTimeout *int32 `json:"request_timeout,omitempty"`
	// Issue a StartTLS command after establishing unencrypted connection (optional)
	Starttls *bool `json:"starttls,omitempty"`
	// Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMaxVersion *string `json:"tls_max_version,omitempty"`
	// Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMinVersion *string `json:"tls_min_version,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies. This will apply to all tokens generated by this auth method, in addition to any configured for specific users/groups.
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Enables userPrincipalDomain login with [username]@UPNDomain (optional)
	Upndomain *string `json:"upndomain,omitempty"`
	// LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.
	Url *string `json:"url,omitempty"`
	// In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.
	UsePre111GroupCnBehavior *bool `json:"use_pre111_group_cn_behavior,omitempty"`
	// If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.
	UseTokenGroups *bool `json:"use_token_groups,omitempty"`
	// Attribute used for users (default: cn)
	Userattr *string `json:"userattr,omitempty"`
	// LDAP domain to use for users (eg: ou=People,dc=example,dc=org)
	Userdn *string `json:"userdn,omitempty"`
	// Go template for LDAP user search filer (optional) The template can access the following context variables: UserAttr, Username Default: ({{.UserAttr}}={{.Username}})
	Userfilter *string `json:"userfilter,omitempty"`
	// If true, sets the alias name to the username
	UsernameAsAlias *bool `json:"username_as_alias,omitempty"`
}

// NewKerberosConfigLdapRequest instantiates a new KerberosConfigLdapRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKerberosConfigLdapRequest() *KerberosConfigLdapRequest {
	this := KerberosConfigLdapRequest{}
	var anonymousGroupSearch bool = false
	this.AnonymousGroupSearch = &anonymousGroupSearch
	var denyNullBind bool = true
	this.DenyNullBind = &denyNullBind
	var groupattr string = "cn"
	this.Groupattr = &groupattr
	var groupfilter string = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.Groupfilter = &groupfilter
	var tlsMaxVersion string = "tls12"
	this.TlsMaxVersion = &tlsMaxVersion
	var tlsMinVersion string = "tls12"
	this.TlsMinVersion = &tlsMinVersion
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	var url string = "ldap://127.0.0.1"
	this.Url = &url
	var useTokenGroups bool = false
	this.UseTokenGroups = &useTokenGroups
	var userattr string = "cn"
	this.Userattr = &userattr
	var userfilter string = "({{.UserAttr}}={{.Username}})"
	this.Userfilter = &userfilter
	var usernameAsAlias bool = false
	this.UsernameAsAlias = &usernameAsAlias
	return &this
}

// NewKerberosConfigLdapRequestWithDefaults instantiates a new KerberosConfigLdapRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKerberosConfigLdapRequestWithDefaults() *KerberosConfigLdapRequest {
	this := KerberosConfigLdapRequest{}
	var anonymousGroupSearch bool = false
	this.AnonymousGroupSearch = &anonymousGroupSearch
	var denyNullBind bool = true
	this.DenyNullBind = &denyNullBind
	var groupattr string = "cn"
	this.Groupattr = &groupattr
	var groupfilter string = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.Groupfilter = &groupfilter
	var tlsMaxVersion string = "tls12"
	this.TlsMaxVersion = &tlsMaxVersion
	var tlsMinVersion string = "tls12"
	this.TlsMinVersion = &tlsMinVersion
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	var url string = "ldap://127.0.0.1"
	this.Url = &url
	var useTokenGroups bool = false
	this.UseTokenGroups = &useTokenGroups
	var userattr string = "cn"
	this.Userattr = &userattr
	var userfilter string = "({{.UserAttr}}={{.Username}})"
	this.Userfilter = &userfilter
	var usernameAsAlias bool = false
	this.UsernameAsAlias = &usernameAsAlias
	return &this
}

// GetAnonymousGroupSearch returns the AnonymousGroupSearch field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetAnonymousGroupSearch() bool {
	if o == nil || o.AnonymousGroupSearch == nil {
		var ret bool
		return ret
	}
	return *o.AnonymousGroupSearch
}

// GetAnonymousGroupSearchOk returns a tuple with the AnonymousGroupSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetAnonymousGroupSearchOk() (*bool, bool) {
	if o == nil || o.AnonymousGroupSearch == nil {
		return nil, false
	}
	return o.AnonymousGroupSearch, true
}

// HasAnonymousGroupSearch returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasAnonymousGroupSearch() bool {
	if o != nil && o.AnonymousGroupSearch != nil {
		return true
	}

	return false
}

// SetAnonymousGroupSearch gets a reference to the given bool and assigns it to the AnonymousGroupSearch field.
func (o *KerberosConfigLdapRequest) SetAnonymousGroupSearch(v bool) {
	o.AnonymousGroupSearch = &v
}

// GetBinddn returns the Binddn field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetBinddn() string {
	if o == nil || o.Binddn == nil {
		var ret string
		return ret
	}
	return *o.Binddn
}

// GetBinddnOk returns a tuple with the Binddn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetBinddnOk() (*string, bool) {
	if o == nil || o.Binddn == nil {
		return nil, false
	}
	return o.Binddn, true
}

// HasBinddn returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasBinddn() bool {
	if o != nil && o.Binddn != nil {
		return true
	}

	return false
}

// SetBinddn gets a reference to the given string and assigns it to the Binddn field.
func (o *KerberosConfigLdapRequest) SetBinddn(v string) {
	o.Binddn = &v
}

// GetBindpass returns the Bindpass field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetBindpass() string {
	if o == nil || o.Bindpass == nil {
		var ret string
		return ret
	}
	return *o.Bindpass
}

// GetBindpassOk returns a tuple with the Bindpass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetBindpassOk() (*string, bool) {
	if o == nil || o.Bindpass == nil {
		return nil, false
	}
	return o.Bindpass, true
}

// HasBindpass returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasBindpass() bool {
	if o != nil && o.Bindpass != nil {
		return true
	}

	return false
}

// SetBindpass gets a reference to the given string and assigns it to the Bindpass field.
func (o *KerberosConfigLdapRequest) SetBindpass(v string) {
	o.Bindpass = &v
}

// GetCaseSensitiveNames returns the CaseSensitiveNames field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetCaseSensitiveNames() bool {
	if o == nil || o.CaseSensitiveNames == nil {
		var ret bool
		return ret
	}
	return *o.CaseSensitiveNames
}

// GetCaseSensitiveNamesOk returns a tuple with the CaseSensitiveNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetCaseSensitiveNamesOk() (*bool, bool) {
	if o == nil || o.CaseSensitiveNames == nil {
		return nil, false
	}
	return o.CaseSensitiveNames, true
}

// HasCaseSensitiveNames returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasCaseSensitiveNames() bool {
	if o != nil && o.CaseSensitiveNames != nil {
		return true
	}

	return false
}

// SetCaseSensitiveNames gets a reference to the given bool and assigns it to the CaseSensitiveNames field.
func (o *KerberosConfigLdapRequest) SetCaseSensitiveNames(v bool) {
	o.CaseSensitiveNames = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *KerberosConfigLdapRequest) SetCertificate(v string) {
	o.Certificate = &v
}

// GetClientTlsCert returns the ClientTlsCert field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetClientTlsCert() string {
	if o == nil || o.ClientTlsCert == nil {
		var ret string
		return ret
	}
	return *o.ClientTlsCert
}

// GetClientTlsCertOk returns a tuple with the ClientTlsCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetClientTlsCertOk() (*string, bool) {
	if o == nil || o.ClientTlsCert == nil {
		return nil, false
	}
	return o.ClientTlsCert, true
}

// HasClientTlsCert returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasClientTlsCert() bool {
	if o != nil && o.ClientTlsCert != nil {
		return true
	}

	return false
}

// SetClientTlsCert gets a reference to the given string and assigns it to the ClientTlsCert field.
func (o *KerberosConfigLdapRequest) SetClientTlsCert(v string) {
	o.ClientTlsCert = &v
}

// GetClientTlsKey returns the ClientTlsKey field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetClientTlsKey() string {
	if o == nil || o.ClientTlsKey == nil {
		var ret string
		return ret
	}
	return *o.ClientTlsKey
}

// GetClientTlsKeyOk returns a tuple with the ClientTlsKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetClientTlsKeyOk() (*string, bool) {
	if o == nil || o.ClientTlsKey == nil {
		return nil, false
	}
	return o.ClientTlsKey, true
}

// HasClientTlsKey returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasClientTlsKey() bool {
	if o != nil && o.ClientTlsKey != nil {
		return true
	}

	return false
}

// SetClientTlsKey gets a reference to the given string and assigns it to the ClientTlsKey field.
func (o *KerberosConfigLdapRequest) SetClientTlsKey(v string) {
	o.ClientTlsKey = &v
}

// GetDenyNullBind returns the DenyNullBind field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetDenyNullBind() bool {
	if o == nil || o.DenyNullBind == nil {
		var ret bool
		return ret
	}
	return *o.DenyNullBind
}

// GetDenyNullBindOk returns a tuple with the DenyNullBind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetDenyNullBindOk() (*bool, bool) {
	if o == nil || o.DenyNullBind == nil {
		return nil, false
	}
	return o.DenyNullBind, true
}

// HasDenyNullBind returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasDenyNullBind() bool {
	if o != nil && o.DenyNullBind != nil {
		return true
	}

	return false
}

// SetDenyNullBind gets a reference to the given bool and assigns it to the DenyNullBind field.
func (o *KerberosConfigLdapRequest) SetDenyNullBind(v bool) {
	o.DenyNullBind = &v
}

// GetDiscoverdn returns the Discoverdn field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetDiscoverdn() bool {
	if o == nil || o.Discoverdn == nil {
		var ret bool
		return ret
	}
	return *o.Discoverdn
}

// GetDiscoverdnOk returns a tuple with the Discoverdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetDiscoverdnOk() (*bool, bool) {
	if o == nil || o.Discoverdn == nil {
		return nil, false
	}
	return o.Discoverdn, true
}

// HasDiscoverdn returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasDiscoverdn() bool {
	if o != nil && o.Discoverdn != nil {
		return true
	}

	return false
}

// SetDiscoverdn gets a reference to the given bool and assigns it to the Discoverdn field.
func (o *KerberosConfigLdapRequest) SetDiscoverdn(v bool) {
	o.Discoverdn = &v
}

// GetGroupattr returns the Groupattr field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetGroupattr() string {
	if o == nil || o.Groupattr == nil {
		var ret string
		return ret
	}
	return *o.Groupattr
}

// GetGroupattrOk returns a tuple with the Groupattr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetGroupattrOk() (*string, bool) {
	if o == nil || o.Groupattr == nil {
		return nil, false
	}
	return o.Groupattr, true
}

// HasGroupattr returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasGroupattr() bool {
	if o != nil && o.Groupattr != nil {
		return true
	}

	return false
}

// SetGroupattr gets a reference to the given string and assigns it to the Groupattr field.
func (o *KerberosConfigLdapRequest) SetGroupattr(v string) {
	o.Groupattr = &v
}

// GetGroupdn returns the Groupdn field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetGroupdn() string {
	if o == nil || o.Groupdn == nil {
		var ret string
		return ret
	}
	return *o.Groupdn
}

// GetGroupdnOk returns a tuple with the Groupdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetGroupdnOk() (*string, bool) {
	if o == nil || o.Groupdn == nil {
		return nil, false
	}
	return o.Groupdn, true
}

// HasGroupdn returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasGroupdn() bool {
	if o != nil && o.Groupdn != nil {
		return true
	}

	return false
}

// SetGroupdn gets a reference to the given string and assigns it to the Groupdn field.
func (o *KerberosConfigLdapRequest) SetGroupdn(v string) {
	o.Groupdn = &v
}

// GetGroupfilter returns the Groupfilter field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetGroupfilter() string {
	if o == nil || o.Groupfilter == nil {
		var ret string
		return ret
	}
	return *o.Groupfilter
}

// GetGroupfilterOk returns a tuple with the Groupfilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetGroupfilterOk() (*string, bool) {
	if o == nil || o.Groupfilter == nil {
		return nil, false
	}
	return o.Groupfilter, true
}

// HasGroupfilter returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasGroupfilter() bool {
	if o != nil && o.Groupfilter != nil {
		return true
	}

	return false
}

// SetGroupfilter gets a reference to the given string and assigns it to the Groupfilter field.
func (o *KerberosConfigLdapRequest) SetGroupfilter(v string) {
	o.Groupfilter = &v
}

// GetInsecureTls returns the InsecureTls field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetInsecureTls() bool {
	if o == nil || o.InsecureTls == nil {
		var ret bool
		return ret
	}
	return *o.InsecureTls
}

// GetInsecureTlsOk returns a tuple with the InsecureTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetInsecureTlsOk() (*bool, bool) {
	if o == nil || o.InsecureTls == nil {
		return nil, false
	}
	return o.InsecureTls, true
}

// HasInsecureTls returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasInsecureTls() bool {
	if o != nil && o.InsecureTls != nil {
		return true
	}

	return false
}

// SetInsecureTls gets a reference to the given bool and assigns it to the InsecureTls field.
func (o *KerberosConfigLdapRequest) SetInsecureTls(v bool) {
	o.InsecureTls = &v
}

// GetRequestTimeout returns the RequestTimeout field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetRequestTimeout() int32 {
	if o == nil || o.RequestTimeout == nil {
		var ret int32
		return ret
	}
	return *o.RequestTimeout
}

// GetRequestTimeoutOk returns a tuple with the RequestTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetRequestTimeoutOk() (*int32, bool) {
	if o == nil || o.RequestTimeout == nil {
		return nil, false
	}
	return o.RequestTimeout, true
}

// HasRequestTimeout returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasRequestTimeout() bool {
	if o != nil && o.RequestTimeout != nil {
		return true
	}

	return false
}

// SetRequestTimeout gets a reference to the given int32 and assigns it to the RequestTimeout field.
func (o *KerberosConfigLdapRequest) SetRequestTimeout(v int32) {
	o.RequestTimeout = &v
}

// GetStarttls returns the Starttls field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetStarttls() bool {
	if o == nil || o.Starttls == nil {
		var ret bool
		return ret
	}
	return *o.Starttls
}

// GetStarttlsOk returns a tuple with the Starttls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetStarttlsOk() (*bool, bool) {
	if o == nil || o.Starttls == nil {
		return nil, false
	}
	return o.Starttls, true
}

// HasStarttls returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasStarttls() bool {
	if o != nil && o.Starttls != nil {
		return true
	}

	return false
}

// SetStarttls gets a reference to the given bool and assigns it to the Starttls field.
func (o *KerberosConfigLdapRequest) SetStarttls(v bool) {
	o.Starttls = &v
}

// GetTlsMaxVersion returns the TlsMaxVersion field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetTlsMaxVersion() string {
	if o == nil || o.TlsMaxVersion == nil {
		var ret string
		return ret
	}
	return *o.TlsMaxVersion
}

// GetTlsMaxVersionOk returns a tuple with the TlsMaxVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetTlsMaxVersionOk() (*string, bool) {
	if o == nil || o.TlsMaxVersion == nil {
		return nil, false
	}
	return o.TlsMaxVersion, true
}

// HasTlsMaxVersion returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasTlsMaxVersion() bool {
	if o != nil && o.TlsMaxVersion != nil {
		return true
	}

	return false
}

// SetTlsMaxVersion gets a reference to the given string and assigns it to the TlsMaxVersion field.
func (o *KerberosConfigLdapRequest) SetTlsMaxVersion(v string) {
	o.TlsMaxVersion = &v
}

// GetTlsMinVersion returns the TlsMinVersion field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetTlsMinVersion() string {
	if o == nil || o.TlsMinVersion == nil {
		var ret string
		return ret
	}
	return *o.TlsMinVersion
}

// GetTlsMinVersionOk returns a tuple with the TlsMinVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetTlsMinVersionOk() (*string, bool) {
	if o == nil || o.TlsMinVersion == nil {
		return nil, false
	}
	return o.TlsMinVersion, true
}

// HasTlsMinVersion returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasTlsMinVersion() bool {
	if o != nil && o.TlsMinVersion != nil {
		return true
	}

	return false
}

// SetTlsMinVersion gets a reference to the given string and assigns it to the TlsMinVersion field.
func (o *KerberosConfigLdapRequest) SetTlsMinVersion(v string) {
	o.TlsMinVersion = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *KerberosConfigLdapRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *KerberosConfigLdapRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *KerberosConfigLdapRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *KerberosConfigLdapRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *KerberosConfigLdapRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *KerberosConfigLdapRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *KerberosConfigLdapRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *KerberosConfigLdapRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *KerberosConfigLdapRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetUpndomain returns the Upndomain field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetUpndomain() string {
	if o == nil || o.Upndomain == nil {
		var ret string
		return ret
	}
	return *o.Upndomain
}

// GetUpndomainOk returns a tuple with the Upndomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetUpndomainOk() (*string, bool) {
	if o == nil || o.Upndomain == nil {
		return nil, false
	}
	return o.Upndomain, true
}

// HasUpndomain returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasUpndomain() bool {
	if o != nil && o.Upndomain != nil {
		return true
	}

	return false
}

// SetUpndomain gets a reference to the given string and assigns it to the Upndomain field.
func (o *KerberosConfigLdapRequest) SetUpndomain(v string) {
	o.Upndomain = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *KerberosConfigLdapRequest) SetUrl(v string) {
	o.Url = &v
}

// GetUsePre111GroupCnBehavior returns the UsePre111GroupCnBehavior field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetUsePre111GroupCnBehavior() bool {
	if o == nil || o.UsePre111GroupCnBehavior == nil {
		var ret bool
		return ret
	}
	return *o.UsePre111GroupCnBehavior
}

// GetUsePre111GroupCnBehaviorOk returns a tuple with the UsePre111GroupCnBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetUsePre111GroupCnBehaviorOk() (*bool, bool) {
	if o == nil || o.UsePre111GroupCnBehavior == nil {
		return nil, false
	}
	return o.UsePre111GroupCnBehavior, true
}

// HasUsePre111GroupCnBehavior returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasUsePre111GroupCnBehavior() bool {
	if o != nil && o.UsePre111GroupCnBehavior != nil {
		return true
	}

	return false
}

// SetUsePre111GroupCnBehavior gets a reference to the given bool and assigns it to the UsePre111GroupCnBehavior field.
func (o *KerberosConfigLdapRequest) SetUsePre111GroupCnBehavior(v bool) {
	o.UsePre111GroupCnBehavior = &v
}

// GetUseTokenGroups returns the UseTokenGroups field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetUseTokenGroups() bool {
	if o == nil || o.UseTokenGroups == nil {
		var ret bool
		return ret
	}
	return *o.UseTokenGroups
}

// GetUseTokenGroupsOk returns a tuple with the UseTokenGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetUseTokenGroupsOk() (*bool, bool) {
	if o == nil || o.UseTokenGroups == nil {
		return nil, false
	}
	return o.UseTokenGroups, true
}

// HasUseTokenGroups returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasUseTokenGroups() bool {
	if o != nil && o.UseTokenGroups != nil {
		return true
	}

	return false
}

// SetUseTokenGroups gets a reference to the given bool and assigns it to the UseTokenGroups field.
func (o *KerberosConfigLdapRequest) SetUseTokenGroups(v bool) {
	o.UseTokenGroups = &v
}

// GetUserattr returns the Userattr field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetUserattr() string {
	if o == nil || o.Userattr == nil {
		var ret string
		return ret
	}
	return *o.Userattr
}

// GetUserattrOk returns a tuple with the Userattr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetUserattrOk() (*string, bool) {
	if o == nil || o.Userattr == nil {
		return nil, false
	}
	return o.Userattr, true
}

// HasUserattr returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasUserattr() bool {
	if o != nil && o.Userattr != nil {
		return true
	}

	return false
}

// SetUserattr gets a reference to the given string and assigns it to the Userattr field.
func (o *KerberosConfigLdapRequest) SetUserattr(v string) {
	o.Userattr = &v
}

// GetUserdn returns the Userdn field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetUserdn() string {
	if o == nil || o.Userdn == nil {
		var ret string
		return ret
	}
	return *o.Userdn
}

// GetUserdnOk returns a tuple with the Userdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetUserdnOk() (*string, bool) {
	if o == nil || o.Userdn == nil {
		return nil, false
	}
	return o.Userdn, true
}

// HasUserdn returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasUserdn() bool {
	if o != nil && o.Userdn != nil {
		return true
	}

	return false
}

// SetUserdn gets a reference to the given string and assigns it to the Userdn field.
func (o *KerberosConfigLdapRequest) SetUserdn(v string) {
	o.Userdn = &v
}

// GetUserfilter returns the Userfilter field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetUserfilter() string {
	if o == nil || o.Userfilter == nil {
		var ret string
		return ret
	}
	return *o.Userfilter
}

// GetUserfilterOk returns a tuple with the Userfilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetUserfilterOk() (*string, bool) {
	if o == nil || o.Userfilter == nil {
		return nil, false
	}
	return o.Userfilter, true
}

// HasUserfilter returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasUserfilter() bool {
	if o != nil && o.Userfilter != nil {
		return true
	}

	return false
}

// SetUserfilter gets a reference to the given string and assigns it to the Userfilter field.
func (o *KerberosConfigLdapRequest) SetUserfilter(v string) {
	o.Userfilter = &v
}

// GetUsernameAsAlias returns the UsernameAsAlias field value if set, zero value otherwise.
func (o *KerberosConfigLdapRequest) GetUsernameAsAlias() bool {
	if o == nil || o.UsernameAsAlias == nil {
		var ret bool
		return ret
	}
	return *o.UsernameAsAlias
}

// GetUsernameAsAliasOk returns a tuple with the UsernameAsAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigLdapRequest) GetUsernameAsAliasOk() (*bool, bool) {
	if o == nil || o.UsernameAsAlias == nil {
		return nil, false
	}
	return o.UsernameAsAlias, true
}

// HasUsernameAsAlias returns a boolean if a field has been set.
func (o *KerberosConfigLdapRequest) HasUsernameAsAlias() bool {
	if o != nil && o.UsernameAsAlias != nil {
		return true
	}

	return false
}

// SetUsernameAsAlias gets a reference to the given bool and assigns it to the UsernameAsAlias field.
func (o *KerberosConfigLdapRequest) SetUsernameAsAlias(v bool) {
	o.UsernameAsAlias = &v
}

func (o KerberosConfigLdapRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AnonymousGroupSearch != nil {
		toSerialize["anonymous_group_search"] = o.AnonymousGroupSearch
	}
	if o.Binddn != nil {
		toSerialize["binddn"] = o.Binddn
	}
	if o.Bindpass != nil {
		toSerialize["bindpass"] = o.Bindpass
	}
	if o.CaseSensitiveNames != nil {
		toSerialize["case_sensitive_names"] = o.CaseSensitiveNames
	}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.ClientTlsCert != nil {
		toSerialize["client_tls_cert"] = o.ClientTlsCert
	}
	if o.ClientTlsKey != nil {
		toSerialize["client_tls_key"] = o.ClientTlsKey
	}
	if o.DenyNullBind != nil {
		toSerialize["deny_null_bind"] = o.DenyNullBind
	}
	if o.Discoverdn != nil {
		toSerialize["discoverdn"] = o.Discoverdn
	}
	if o.Groupattr != nil {
		toSerialize["groupattr"] = o.Groupattr
	}
	if o.Groupdn != nil {
		toSerialize["groupdn"] = o.Groupdn
	}
	if o.Groupfilter != nil {
		toSerialize["groupfilter"] = o.Groupfilter
	}
	if o.InsecureTls != nil {
		toSerialize["insecure_tls"] = o.InsecureTls
	}
	if o.RequestTimeout != nil {
		toSerialize["request_timeout"] = o.RequestTimeout
	}
	if o.Starttls != nil {
		toSerialize["starttls"] = o.Starttls
	}
	if o.TlsMaxVersion != nil {
		toSerialize["tls_max_version"] = o.TlsMaxVersion
	}
	if o.TlsMinVersion != nil {
		toSerialize["tls_min_version"] = o.TlsMinVersion
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Upndomain != nil {
		toSerialize["upndomain"] = o.Upndomain
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.UsePre111GroupCnBehavior != nil {
		toSerialize["use_pre111_group_cn_behavior"] = o.UsePre111GroupCnBehavior
	}
	if o.UseTokenGroups != nil {
		toSerialize["use_token_groups"] = o.UseTokenGroups
	}
	if o.Userattr != nil {
		toSerialize["userattr"] = o.Userattr
	}
	if o.Userdn != nil {
		toSerialize["userdn"] = o.Userdn
	}
	if o.Userfilter != nil {
		toSerialize["userfilter"] = o.Userfilter
	}
	if o.UsernameAsAlias != nil {
		toSerialize["username_as_alias"] = o.UsernameAsAlias
	}
	return json.Marshal(toSerialize)
}

type NullableKerberosConfigLdapRequest struct {
	value *KerberosConfigLdapRequest
	isSet bool
}

func (v NullableKerberosConfigLdapRequest) Get() *KerberosConfigLdapRequest {
	return v.value
}

func (v *NullableKerberosConfigLdapRequest) Set(val *KerberosConfigLdapRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKerberosConfigLdapRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKerberosConfigLdapRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKerberosConfigLdapRequest(val *KerberosConfigLdapRequest) *NullableKerberosConfigLdapRequest {
	return &NullableKerberosConfigLdapRequest{value: val, isSet: true}
}

func (v NullableKerberosConfigLdapRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKerberosConfigLdapRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KerberosConfigRequest struct for KerberosConfigRequest
type KerberosConfigRequest struct {
	// Base64 encoded keytab
	Keytab *string `json:"keytab,omitempty"`
	// Service Account
	ServiceAccount *string `json:"service_account,omitempty"`
}

// NewKerberosConfigRequest instantiates a new KerberosConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKerberosConfigRequest() *KerberosConfigRequest {
	this := KerberosConfigRequest{}
	return &this
}

// NewKerberosConfigRequestWithDefaults instantiates a new KerberosConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKerberosConfigRequestWithDefaults() *KerberosConfigRequest {
	this := KerberosConfigRequest{}
	return &this
}

// GetKeytab returns the Keytab field value if set, zero value otherwise.
func (o *KerberosConfigRequest) GetKeytab() string {
	if o == nil || o.Keytab == nil {
		var ret string
		return ret
	}
	return *o.Keytab
}

// GetKeytabOk returns a tuple with the Keytab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigRequest) GetKeytabOk() (*string, bool) {
	if o == nil || o.Keytab == nil {
		return nil, false
	}
	return o.Keytab, true
}

// HasKeytab returns a boolean if a field has been set.
func (o *KerberosConfigRequest) HasKeytab() bool {
	if o != nil && o.Keytab != nil {
		return true
	}

	return false
}

// SetKeytab gets a reference to the given string and assigns it to the Keytab field.
func (o *KerberosConfigRequest) SetKeytab(v string) {
	o.Keytab = &v
}

// GetServiceAccount returns the ServiceAccount field value if set, zero value otherwise.
func (o *KerberosConfigRequest) GetServiceAccount() string {
	if o == nil || o.ServiceAccount == nil {
		var ret string
		return ret
	}
	return *o.ServiceAccount
}

// GetServiceAccountOk returns a tuple with the ServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosConfigRequest) GetServiceAccountOk() (*string, bool) {
	if o == nil || o.ServiceAccount == nil {
		return nil, false
	}
	return o.ServiceAccount, true
}

// HasServiceAccount returns a boolean if a field has been set.
func (o *KerberosConfigRequest) HasServiceAccount() bool {
	if o != nil && o.ServiceAccount != nil {
		return true
	}

	return false
}

// SetServiceAccount gets a reference to the given string and assigns it to the ServiceAccount field.
func (o *KerberosConfigRequest) SetServiceAccount(v string) {
	o.ServiceAccount = &v
}

func (o KerberosConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Keytab != nil {
		toSerialize["keytab"] = o.Keytab
	}
	if o.ServiceAccount != nil {
		toSerialize["service_account"] = o.ServiceAccount
	}
	return json.Marshal(toSerialize)
}

type NullableKerberosConfigRequest struct {
	value *KerberosConfigRequest
	isSet bool
}

func (v NullableKerberosConfigRequest) Get() *KerberosConfigRequest {
	return v.value
}

func (v *NullableKerberosConfigRequest) Set(val *KerberosConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKerberosConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKerberosConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKerberosConfigRequest(val *KerberosConfigRequest) *NullableKerberosConfigRequest {
	return &NullableKerberosConfigRequest{value: val, isSet: true}
}

func (v NullableKerberosConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKerberosConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KerberosGroupsRequest struct for KerberosGroupsRequest
type KerberosGroupsRequest struct {
	// Comma-separated list of policies associated to the group.
	Policies []string `json:"policies,omitempty"`
}

// NewKerberosGroupsRequest instantiates a new KerberosGroupsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKerberosGroupsRequest() *KerberosGroupsRequest {
	this := KerberosGroupsRequest{}
	return &this
}

// NewKerberosGroupsRequestWithDefaults instantiates a new KerberosGroupsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKerberosGroupsRequestWithDefaults() *KerberosGroupsRequest {
	this := KerberosGroupsRequest{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *KerberosGroupsRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosGroupsRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *KerberosGroupsRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *KerberosGroupsRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o KerberosGroupsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableKerberosGroupsRequest struct {
	value *KerberosGroupsRequest
	isSet bool
}

func (v NullableKerberosGroupsRequest) Get() *KerberosGroupsRequest {
	return v.value
}

func (v *NullableKerberosGroupsRequest) Set(val *KerberosGroupsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKerberosGroupsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKerberosGroupsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKerberosGroupsRequest(val *KerberosGroupsRequest) *NullableKerberosGroupsRequest {
	return &NullableKerberosGroupsRequest{value: val, isSet: true}
}

func (v NullableKerberosGroupsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKerberosGroupsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KerberosLoginRequest struct for KerberosLoginRequest
type KerberosLoginRequest struct {
	// SPNEGO Authorization header. Required.
	Authorization *string `json:"authorization,omitempty"`
}

// NewKerberosLoginRequest instantiates a new KerberosLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKerberosLoginRequest() *KerberosLoginRequest {
	this := KerberosLoginRequest{}
	return &this
}

// NewKerberosLoginRequestWithDefaults instantiates a new KerberosLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKerberosLoginRequestWithDefaults() *KerberosLoginRequest {
	this := KerberosLoginRequest{}
	return &this
}

// GetAuthorization returns the Authorization field value if set, zero value otherwise.
func (o *KerberosLoginRequest) GetAuthorization() string {
	if o == nil || o.Authorization == nil {
		var ret string
		return ret
	}
	return *o.Authorization
}

// GetAuthorizationOk returns a tuple with the Authorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KerberosLoginRequest) GetAuthorizationOk() (*string, bool) {
	if o == nil || o.Authorization == nil {
		return nil, false
	}
	return o.Authorization, true
}

// HasAuthorization returns a boolean if a field has been set.
func (o *KerberosLoginRequest) HasAuthorization() bool {
	if o != nil && o.Authorization != nil {
		return true
	}

	return false
}

// SetAuthorization gets a reference to the given string and assigns it to the Authorization field.
func (o *KerberosLoginRequest) SetAuthorization(v string) {
	o.Authorization = &v
}

func (o KerberosLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Authorization != nil {
		toSerialize["authorization"] = o.Authorization
	}
	return json.Marshal(toSerialize)
}

type NullableKerberosLoginRequest struct {
	value *KerberosLoginRequest
	isSet bool
}

func (v NullableKerberosLoginRequest) Get() *KerberosLoginRequest {
	return v.value
}

func (v *NullableKerberosLoginRequest) Set(val *KerberosLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKerberosLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKerberosLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKerberosLoginRequest(val *KerberosLoginRequest) *NullableKerberosLoginRequest {
	return &NullableKerberosLoginRequest{value: val, isSet: true}
}

func (v NullableKerberosLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKerberosLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KubernetesConfigRequest struct for KubernetesConfigRequest
type KubernetesConfigRequest struct {
	// Disable JWT issuer validation (Deprecated, will be removed in a future release)
	// Deprecated
	DisableIssValidation *bool `json:"disable_iss_validation,omitempty"`
	// Disable defaulting to the local CA cert and service account JWT when running in a Kubernetes pod
	DisableLocalCaJwt *bool `json:"disable_local_ca_jwt,omitempty"`
	// Optional JWT issuer. If no issuer is specified, then this plugin will use kubernetes.io/serviceaccount as the default issuer. (Deprecated, will be removed in a future release)
	// Deprecated
	Issuer *string `json:"issuer,omitempty"`
	// PEM encoded CA cert for use by the TLS client used to talk with the API.
	KubernetesCaCert *string `json:"kubernetes_ca_cert,omitempty"`
	// Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server.
	KubernetesHost *string `json:"kubernetes_host,omitempty"`
	// Optional list of PEM-formated public keys or certificates used to verify the signatures of kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys.
	PemKeys []string `json:"pem_keys,omitempty"`
	// A service account JWT used to access the TokenReview API to validate other JWTs during login. If not set the JWT used for login will be used to access the API.
	TokenReviewerJwt *string `json:"token_reviewer_jwt,omitempty"`
}

// NewKubernetesConfigRequest instantiates a new KubernetesConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesConfigRequest() *KubernetesConfigRequest {
	this := KubernetesConfigRequest{}
	var disableIssValidation bool = true
	this.DisableIssValidation = &disableIssValidation
	var disableLocalCaJwt bool = false
	this.DisableLocalCaJwt = &disableLocalCaJwt
	return &this
}

// NewKubernetesConfigRequestWithDefaults instantiates a new KubernetesConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesConfigRequestWithDefaults() *KubernetesConfigRequest {
	this := KubernetesConfigRequest{}
	var disableIssValidation bool = true
	this.DisableIssValidation = &disableIssValidation
	var disableLocalCaJwt bool = false
	this.DisableLocalCaJwt = &disableLocalCaJwt
	return &this
}

// GetDisableIssValidation returns the DisableIssValidation field value if set, zero value otherwise.
// Deprecated
func (o *KubernetesConfigRequest) GetDisableIssValidation() bool {
	if o == nil || o.DisableIssValidation == nil {
		var ret bool
		return ret
	}
	return *o.DisableIssValidation
}

// GetDisableIssValidationOk returns a tuple with the DisableIssValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KubernetesConfigRequest) GetDisableIssValidationOk() (*bool, bool) {
	if o == nil || o.DisableIssValidation == nil {
		return nil, false
	}
	return o.DisableIssValidation, true
}

// HasDisableIssValidation returns a boolean if a field has been set.
func (o *KubernetesConfigRequest) HasDisableIssValidation() bool {
	if o != nil && o.DisableIssValidation != nil {
		return true
	}

	return false
}

// SetDisableIssValidation gets a reference to the given bool and assigns it to the DisableIssValidation field.
// Deprecated
func (o *KubernetesConfigRequest) SetDisableIssValidation(v bool) {
	o.DisableIssValidation = &v
}

// GetDisableLocalCaJwt returns the DisableLocalCaJwt field value if set, zero value otherwise.
func (o *KubernetesConfigRequest) GetDisableLocalCaJwt() bool {
	if o == nil || o.DisableLocalCaJwt == nil {
		var ret bool
		return ret
	}
	return *o.DisableLocalCaJwt
}

// GetDisableLocalCaJwtOk returns a tuple with the DisableLocalCaJwt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesConfigRequest) GetDisableLocalCaJwtOk() (*bool, bool) {
	if o == nil || o.DisableLocalCaJwt == nil {
		return nil, false
	}
	return o.DisableLocalCaJwt, true
}

// HasDisableLocalCaJwt returns a boolean if a field has been set.
func (o *KubernetesConfigRequest) HasDisableLocalCaJwt() bool {
	if o != nil && o.DisableLocalCaJwt != nil {
		return true
	}

	return false
}

// SetDisableLocalCaJwt gets a reference to the given bool and assigns it to the DisableLocalCaJwt field.
func (o *KubernetesConfigRequest) SetDisableLocalCaJwt(v bool) {
	o.DisableLocalCaJwt = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
// Deprecated
func (o *KubernetesConfigRequest) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KubernetesConfigRequest) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *KubernetesConfigRequest) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
// Deprecated
func (o *KubernetesConfigRequest) SetIssuer(v string) {
	o.Issuer = &v
}

// GetKubernetesCaCert returns the KubernetesCaCert field value if set, zero value otherwise.
func (o *KubernetesConfigRequest) GetKubernetesCaCert() string {
	if o == nil || o.KubernetesCaCert == nil {
		var ret string
		return ret
	}
	return *o.KubernetesCaCert
}

// GetKubernetesCaCertOk returns a tuple with the KubernetesCaCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesConfigRequest) GetKubernetesCaCertOk() (*string, bool) {
	if o == nil || o.KubernetesCaCert == nil {
		return nil, false
	}
	return o.KubernetesCaCert, true
}

// HasKubernetesCaCert returns a boolean if a field has been set.
func (o *KubernetesConfigRequest) HasKubernetesCaCert() bool {
	if o != nil && o.KubernetesCaCert != nil {
		return true
	}

	return false
}

// SetKubernetesCaCert gets a reference to the given string and assigns it to the KubernetesCaCert field.
func (o *KubernetesConfigRequest) SetKubernetesCaCert(v string) {
	o.KubernetesCaCert = &v
}

// GetKubernetesHost returns the KubernetesHost field value if set, zero value otherwise.
func (o *KubernetesConfigRequest) GetKubernetesHost() string {
	if o == nil || o.KubernetesHost == nil {
		var ret string
		return ret
	}
	return *o.KubernetesHost
}

// GetKubernetesHostOk returns a tuple with the KubernetesHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesConfigRequest) GetKubernetesHostOk() (*string, bool) {
	if o == nil || o.KubernetesHost == nil {
		return nil, false
	}
	return o.KubernetesHost, true
}

// HasKubernetesHost returns a boolean if a field has been set.
func (o *KubernetesConfigRequest) HasKubernetesHost() bool {
	if o != nil && o.KubernetesHost != nil {
		return true
	}

	return false
}

// SetKubernetesHost gets a reference to the given string and assigns it to the KubernetesHost field.
func (o *KubernetesConfigRequest) SetKubernetesHost(v string) {
	o.KubernetesHost = &v
}

// GetPemKeys returns the PemKeys field value if set, zero value otherwise.
func (o *KubernetesConfigRequest) GetPemKeys() []string {
	if o == nil || o.PemKeys == nil {
		var ret []string
		return ret
	}
	return o.PemKeys
}

// GetPemKeysOk returns a tuple with the PemKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesConfigRequest) GetPemKeysOk() ([]string, bool) {
	if o == nil || o.PemKeys == nil {
		return nil, false
	}
	return o.PemKeys, true
}

// HasPemKeys returns a boolean if a field has been set.
func (o *KubernetesConfigRequest) HasPemKeys() bool {
	if o != nil && o.PemKeys != nil {
		return true
	}

	return false
}

// SetPemKeys gets a reference to the given []string and assigns it to the PemKeys field.
func (o *KubernetesConfigRequest) SetPemKeys(v []string) {
	o.PemKeys = v
}

// GetTokenReviewerJwt returns the TokenReviewerJwt field value if set, zero value otherwise.
func (o *KubernetesConfigRequest) GetTokenReviewerJwt() string {
	if o == nil || o.TokenReviewerJwt == nil {
		var ret string
		return ret
	}
	return *o.TokenReviewerJwt
}

// GetTokenReviewerJwtOk returns a tuple with the TokenReviewerJwt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesConfigRequest) GetTokenReviewerJwtOk() (*string, bool) {
	if o == nil || o.TokenReviewerJwt == nil {
		return nil, false
	}
	return o.TokenReviewerJwt, true
}

// HasTokenReviewerJwt returns a boolean if a field has been set.
func (o *KubernetesConfigRequest) HasTokenReviewerJwt() bool {
	if o != nil && o.TokenReviewerJwt != nil {
		return true
	}

	return false
}

// SetTokenReviewerJwt gets a reference to the given string and assigns it to the TokenReviewerJwt field.
func (o *KubernetesConfigRequest) SetTokenReviewerJwt(v string) {
	o.TokenReviewerJwt = &v
}

func (o KubernetesConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisableIssValidation != nil {
		toSerialize["disable_iss_validation"] = o.DisableIssValidation
	}
	if o.DisableLocalCaJwt != nil {
		toSerialize["disable_local_ca_jwt"] = o.DisableLocalCaJwt
	}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	if o.KubernetesCaCert != nil {
		toSerialize["kubernetes_ca_cert"] = o.KubernetesCaCert
	}
	if o.KubernetesHost != nil {
		toSerialize["kubernetes_host"] = o.KubernetesHost
	}
	if o.PemKeys != nil {
		toSerialize["pem_keys"] = o.PemKeys
	}
	if o.TokenReviewerJwt != nil {
		toSerialize["token_reviewer_jwt"] = o.TokenReviewerJwt
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesConfigRequest struct {
	value *KubernetesConfigRequest
	isSet bool
}

func (v NullableKubernetesConfigRequest) Get() *KubernetesConfigRequest {
	return v.value
}

func (v *NullableKubernetesConfigRequest) Set(val *KubernetesConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesConfigRequest(val *KubernetesConfigRequest) *NullableKubernetesConfigRequest {
	return &NullableKubernetesConfigRequest{value: val, isSet: true}
}

func (v NullableKubernetesConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KubernetesCredsRequest struct for KubernetesCredsRequest
type KubernetesCredsRequest struct {
	// If true, generate a ClusterRoleBinding to grant permissions across the whole cluster instead of within a namespace. Requires the Vault role to have kubernetes_role_type set to ClusterRole.
	ClusterRoleBinding *bool `json:"cluster_role_binding,omitempty"`
	// The name of the Kubernetes namespace in which to generate the credentials
	KubernetesNamespace string `json:"kubernetes_namespace"`
	// The TTL of the generated credentials
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewKubernetesCredsRequest instantiates a new KubernetesCredsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesCredsRequest(kubernetesNamespace string) *KubernetesCredsRequest {
	this := KubernetesCredsRequest{}
	this.KubernetesNamespace = kubernetesNamespace
	return &this
}

// NewKubernetesCredsRequestWithDefaults instantiates a new KubernetesCredsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesCredsRequestWithDefaults() *KubernetesCredsRequest {
	this := KubernetesCredsRequest{}
	return &this
}

// GetClusterRoleBinding returns the ClusterRoleBinding field value if set, zero value otherwise.
func (o *KubernetesCredsRequest) GetClusterRoleBinding() bool {
	if o == nil || o.ClusterRoleBinding == nil {
		var ret bool
		return ret
	}
	return *o.ClusterRoleBinding
}

// GetClusterRoleBindingOk returns a tuple with the ClusterRoleBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCredsRequest) GetClusterRoleBindingOk() (*bool, bool) {
	if o == nil || o.ClusterRoleBinding == nil {
		return nil, false
	}
	return o.ClusterRoleBinding, true
}

// HasClusterRoleBinding returns a boolean if a field has been set.
func (o *KubernetesCredsRequest) HasClusterRoleBinding() bool {
	if o != nil && o.ClusterRoleBinding != nil {
		return true
	}

	return false
}

// SetClusterRoleBinding gets a reference to the given bool and assigns it to the ClusterRoleBinding field.
func (o *KubernetesCredsRequest) SetClusterRoleBinding(v bool) {
	o.ClusterRoleBinding = &v
}

// GetKubernetesNamespace returns the KubernetesNamespace field value
func (o *KubernetesCredsRequest) GetKubernetesNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KubernetesNamespace
}

// GetKubernetesNamespaceOk returns a tuple with the KubernetesNamespace field value
// and a boolean to check if the value has been set.
func (o *KubernetesCredsRequest) GetKubernetesNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubernetesNamespace, true
}

// SetKubernetesNamespace sets field value
func (o *KubernetesCredsRequest) SetKubernetesNamespace(v string) {
	o.KubernetesNamespace = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *KubernetesCredsRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCredsRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *KubernetesCredsRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *KubernetesCredsRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o KubernetesCredsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterRoleBinding != nil {
		toSerialize["cluster_role_binding"] = o.ClusterRoleBinding
	}
	if true {
		toSerialize["kubernetes_namespace"] = o.KubernetesNamespace
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesCredsRequest struct {
	value *KubernetesCredsRequest
	isSet bool
}

func (v NullableKubernetesCredsRequest) Get() *KubernetesCredsRequest {
	return v.value
}

func (v *NullableKubernetesCredsRequest) Set(val *KubernetesCredsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesCredsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesCredsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesCredsRequest(val *KubernetesCredsRequest) *NullableKubernetesCredsRequest {
	return &NullableKubernetesCredsRequest{value: val, isSet: true}
}

func (v NullableKubernetesCredsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesCredsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KubernetesLoginRequest struct for KubernetesLoginRequest
type KubernetesLoginRequest struct {
	// A signed JWT for authenticating a service account. This field is required.
	Jwt *string `json:"jwt,omitempty"`
	// Name of the role against which the login is being attempted. This field is required
	Role *string `json:"role,omitempty"`
}

// NewKubernetesLoginRequest instantiates a new KubernetesLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesLoginRequest() *KubernetesLoginRequest {
	this := KubernetesLoginRequest{}
	return &this
}

// NewKubernetesLoginRequestWithDefaults instantiates a new KubernetesLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesLoginRequestWithDefaults() *KubernetesLoginRequest {
	this := KubernetesLoginRequest{}
	return &this
}

// GetJwt returns the Jwt field value if set, zero value otherwise.
func (o *KubernetesLoginRequest) GetJwt() string {
	if o == nil || o.Jwt == nil {
		var ret string
		return ret
	}
	return *o.Jwt
}

// GetJwtOk returns a tuple with the Jwt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesLoginRequest) GetJwtOk() (*string, bool) {
	if o == nil || o.Jwt == nil {
		return nil, false
	}
	return o.Jwt, true
}

// HasJwt returns a boolean if a field has been set.
func (o *KubernetesLoginRequest) HasJwt() bool {
	if o != nil && o.Jwt != nil {
		return true
	}

	return false
}

// SetJwt gets a reference to the given string and assigns it to the Jwt field.
func (o *KubernetesLoginRequest) SetJwt(v string) {
	o.Jwt = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *KubernetesLoginRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesLoginRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *KubernetesLoginRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *KubernetesLoginRequest) SetRole(v string) {
	o.Role = &v
}

func (o KubernetesLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Jwt != nil {
		toSerialize["jwt"] = o.Jwt
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesLoginRequest struct {
	value *KubernetesLoginRequest
	isSet bool
}

func (v NullableKubernetesLoginRequest) Get() *KubernetesLoginRequest {
	return v.value
}

func (v *NullableKubernetesLoginRequest) Set(val *KubernetesLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesLoginRequest(val *KubernetesLoginRequest) *NullableKubernetesLoginRequest {
	return &NullableKubernetesLoginRequest{value: val, isSet: true}
}

func (v NullableKubernetesLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KubernetesRoleRequest struct for KubernetesRoleRequest
type KubernetesRoleRequest struct {
	// Source to use when deriving the Alias name. valid choices: \"serviceaccount_uid\" : <token.uid> e.g. 474b11b5-0f20-4f9d-8ca5-65715ab325e0 (most secure choice) \"serviceaccount_name\" : <namespace>/<serviceaccount> e.g. vault/vault-agent default: \"serviceaccount_uid\"
	AliasNameSource *string `json:"alias_name_source,omitempty"`
	// Optional Audience claim to verify in the jwt.
	Audience *string `json:"audience,omitempty"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs,omitempty"`
	// List of service account names able to access this role. If set to \"*\" all names are allowed.
	BoundServiceAccountNames []string `json:"bound_service_account_names,omitempty"`
	// List of namespaces allowed to access this role. If set to \"*\" all namespaces are allowed.
	BoundServiceAccountNamespaces []string `json:"bound_service_account_namespaces,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Use \"token_num_uses\" instead. If this and \"token_num_uses\" are both specified, only \"token_num_uses\" will be used.
	// Deprecated
	NumUses *int32 `json:"num_uses,omitempty"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewKubernetesRoleRequest instantiates a new KubernetesRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesRoleRequest() *KubernetesRoleRequest {
	this := KubernetesRoleRequest{}
	var aliasNameSource string = "serviceaccount_uid"
	this.AliasNameSource = &aliasNameSource
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewKubernetesRoleRequestWithDefaults instantiates a new KubernetesRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesRoleRequestWithDefaults() *KubernetesRoleRequest {
	this := KubernetesRoleRequest{}
	var aliasNameSource string = "serviceaccount_uid"
	this.AliasNameSource = &aliasNameSource
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetAliasNameSource returns the AliasNameSource field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetAliasNameSource() string {
	if o == nil || o.AliasNameSource == nil {
		var ret string
		return ret
	}
	return *o.AliasNameSource
}

// GetAliasNameSourceOk returns a tuple with the AliasNameSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetAliasNameSourceOk() (*string, bool) {
	if o == nil || o.AliasNameSource == nil {
		return nil, false
	}
	return o.AliasNameSource, true
}

// HasAliasNameSource returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasAliasNameSource() bool {
	if o != nil && o.AliasNameSource != nil {
		return true
	}

	return false
}

// SetAliasNameSource gets a reference to the given string and assigns it to the AliasNameSource field.
func (o *KubernetesRoleRequest) SetAliasNameSource(v string) {
	o.AliasNameSource = &v
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetAudience() string {
	if o == nil || o.Audience == nil {
		var ret string
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetAudienceOk() (*string, bool) {
	if o == nil || o.Audience == nil {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasAudience() bool {
	if o != nil && o.Audience != nil {
		return true
	}

	return false
}

// SetAudience gets a reference to the given string and assigns it to the Audience field.
func (o *KubernetesRoleRequest) SetAudience(v string) {
	o.Audience = &v
}

// GetBoundCidrs returns the BoundCidrs field value if set, zero value otherwise.
// Deprecated
func (o *KubernetesRoleRequest) GetBoundCidrs() []string {
	if o == nil || o.BoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrs
}

// GetBoundCidrsOk returns a tuple with the BoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KubernetesRoleRequest) GetBoundCidrsOk() ([]string, bool) {
	if o == nil || o.BoundCidrs == nil {
		return nil, false
	}
	return o.BoundCidrs, true
}

// HasBoundCidrs returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasBoundCidrs() bool {
	if o != nil && o.BoundCidrs != nil {
		return true
	}

	return false
}

// SetBoundCidrs gets a reference to the given []string and assigns it to the BoundCidrs field.
// Deprecated
func (o *KubernetesRoleRequest) SetBoundCidrs(v []string) {
	o.BoundCidrs = v
}

// GetBoundServiceAccountNames returns the BoundServiceAccountNames field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetBoundServiceAccountNames() []string {
	if o == nil || o.BoundServiceAccountNames == nil {
		var ret []string
		return ret
	}
	return o.BoundServiceAccountNames
}

// GetBoundServiceAccountNamesOk returns a tuple with the BoundServiceAccountNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetBoundServiceAccountNamesOk() ([]string, bool) {
	if o == nil || o.BoundServiceAccountNames == nil {
		return nil, false
	}
	return o.BoundServiceAccountNames, true
}

// HasBoundServiceAccountNames returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasBoundServiceAccountNames() bool {
	if o != nil && o.BoundServiceAccountNames != nil {
		return true
	}

	return false
}

// SetBoundServiceAccountNames gets a reference to the given []string and assigns it to the BoundServiceAccountNames field.
func (o *KubernetesRoleRequest) SetBoundServiceAccountNames(v []string) {
	o.BoundServiceAccountNames = v
}

// GetBoundServiceAccountNamespaces returns the BoundServiceAccountNamespaces field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetBoundServiceAccountNamespaces() []string {
	if o == nil || o.BoundServiceAccountNamespaces == nil {
		var ret []string
		return ret
	}
	return o.BoundServiceAccountNamespaces
}

// GetBoundServiceAccountNamespacesOk returns a tuple with the BoundServiceAccountNamespaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetBoundServiceAccountNamespacesOk() ([]string, bool) {
	if o == nil || o.BoundServiceAccountNamespaces == nil {
		return nil, false
	}
	return o.BoundServiceAccountNamespaces, true
}

// HasBoundServiceAccountNamespaces returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasBoundServiceAccountNamespaces() bool {
	if o != nil && o.BoundServiceAccountNamespaces != nil {
		return true
	}

	return false
}

// SetBoundServiceAccountNamespaces gets a reference to the given []string and assigns it to the BoundServiceAccountNamespaces field.
func (o *KubernetesRoleRequest) SetBoundServiceAccountNamespaces(v []string) {
	o.BoundServiceAccountNamespaces = v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *KubernetesRoleRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KubernetesRoleRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *KubernetesRoleRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetNumUses returns the NumUses field value if set, zero value otherwise.
// Deprecated
func (o *KubernetesRoleRequest) GetNumUses() int32 {
	if o == nil || o.NumUses == nil {
		var ret int32
		return ret
	}
	return *o.NumUses
}

// GetNumUsesOk returns a tuple with the NumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KubernetesRoleRequest) GetNumUsesOk() (*int32, bool) {
	if o == nil || o.NumUses == nil {
		return nil, false
	}
	return o.NumUses, true
}

// HasNumUses returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasNumUses() bool {
	if o != nil && o.NumUses != nil {
		return true
	}

	return false
}

// SetNumUses gets a reference to the given int32 and assigns it to the NumUses field.
// Deprecated
func (o *KubernetesRoleRequest) SetNumUses(v int32) {
	o.NumUses = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *KubernetesRoleRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KubernetesRoleRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *KubernetesRoleRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *KubernetesRoleRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KubernetesRoleRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *KubernetesRoleRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *KubernetesRoleRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *KubernetesRoleRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *KubernetesRoleRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *KubernetesRoleRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *KubernetesRoleRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *KubernetesRoleRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *KubernetesRoleRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *KubernetesRoleRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *KubernetesRoleRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRoleRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *KubernetesRoleRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *KubernetesRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *KubernetesRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *KubernetesRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *KubernetesRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o KubernetesRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AliasNameSource != nil {
		toSerialize["alias_name_source"] = o.AliasNameSource
	}
	if o.Audience != nil {
		toSerialize["audience"] = o.Audience
	}
	if o.BoundCidrs != nil {
		toSerialize["bound_cidrs"] = o.BoundCidrs
	}
	if o.BoundServiceAccountNames != nil {
		toSerialize["bound_service_account_names"] = o.BoundServiceAccountNames
	}
	if o.BoundServiceAccountNamespaces != nil {
		toSerialize["bound_service_account_namespaces"] = o.BoundServiceAccountNamespaces
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.NumUses != nil {
		toSerialize["num_uses"] = o.NumUses
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesRoleRequest struct {
	value *KubernetesRoleRequest
	isSet bool
}

func (v NullableKubernetesRoleRequest) Get() *KubernetesRoleRequest {
	return v.value
}

func (v *NullableKubernetesRoleRequest) Set(val *KubernetesRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesRoleRequest(val *KubernetesRoleRequest) *NullableKubernetesRoleRequest {
	return &NullableKubernetesRoleRequest{value: val, isSet: true}
}

func (v NullableKubernetesRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KubernetesRolesRequest struct for KubernetesRolesRequest
type KubernetesRolesRequest struct {
	// A list of the Kubernetes namespaces in which credentials can be generated. If set to \"*\" all namespaces are allowed.
	AllowedKubernetesNamespaces []string `json:"allowed_kubernetes_namespaces"`
	// Additional annotations to apply to all generated Kubernetes objects.
	ExtraAnnotations map[string]interface{} `json:"extra_annotations,omitempty"`
	// Additional labels to apply to all generated Kubernetes objects.
	ExtraLabels map[string]interface{} `json:"extra_labels,omitempty"`
	// The Role or ClusterRole rules to use when generating a role. Accepts either a JSON or YAML object. If set, the entire chain of Kubernetes objects will be generated.
	GeneratedRoleRules *string `json:"generated_role_rules,omitempty"`
	// The pre-existing Role or ClusterRole to bind a generated service account to. If set, Kubernetes token, service account, and role binding objects will be created.
	KubernetesRoleName *string `json:"kubernetes_role_name,omitempty"`
	// Specifies whether the Kubernetes role is a Role or ClusterRole.
	KubernetesRoleType *string `json:"kubernetes_role_type,omitempty"`
	// The name template to use when generating service accounts, roles and role bindings. If unset, a default template is used.
	NameTemplate *string `json:"name_template,omitempty"`
	// The pre-existing service account to generate tokens for. Mutually exclusive with all role parameters. If set, only a Kubernetes service account token will be created.
	ServiceAccountName *string `json:"service_account_name,omitempty"`
	// The default ttl for generated Kubernetes service account tokens. If not set or set to 0, will use system default.
	TokenDefaultTtl *int32 `json:"token_default_ttl,omitempty"`
	// The maximum ttl for generated Kubernetes service account tokens. If not set or set to 0, will use system default.
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
}

// NewKubernetesRolesRequest instantiates a new KubernetesRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesRolesRequest(allowedKubernetesNamespaces []string) *KubernetesRolesRequest {
	this := KubernetesRolesRequest{}
	this.AllowedKubernetesNamespaces = allowedKubernetesNamespaces
	var kubernetesRoleType string = "Role"
	this.KubernetesRoleType = &kubernetesRoleType
	return &this
}

// NewKubernetesRolesRequestWithDefaults instantiates a new KubernetesRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesRolesRequestWithDefaults() *KubernetesRolesRequest {
	this := KubernetesRolesRequest{}
	var kubernetesRoleType string = "Role"
	this.KubernetesRoleType = &kubernetesRoleType
	return &this
}

// GetAllowedKubernetesNamespaces returns the AllowedKubernetesNamespaces field value
func (o *KubernetesRolesRequest) GetAllowedKubernetesNamespaces() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AllowedKubernetesNamespaces
}

// GetAllowedKubernetesNamespacesOk returns a tuple with the AllowedKubernetesNamespaces field value
// and a boolean to check if the value has been set.
func (o *KubernetesRolesRequest) GetAllowedKubernetesNamespacesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowedKubernetesNamespaces, true
}

// SetAllowedKubernetesNamespaces sets field value
func (o *KubernetesRolesRequest) SetAllowedKubernetesNamespaces(v []string) {
	o.AllowedKubernetesNamespaces = v
}

// GetExtraAnnotations returns the ExtraAnnotations field value if set, zero value otherwise.
func (o *KubernetesRolesRequest) GetExtraAnnotations() map[string]interface{} {
	if o == nil || o.ExtraAnnotations == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtraAnnotations
}

// GetExtraAnnotationsOk returns a tuple with the ExtraAnnotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRolesRequest) GetExtraAnnotationsOk() (map[string]interface{}, bool) {
	if o == nil || o.ExtraAnnotations == nil {
		return nil, false
	}
	return o.ExtraAnnotations, true
}

// HasExtraAnnotations returns a boolean if a field has been set.
func (o *KubernetesRolesRequest) HasExtraAnnotations() bool {
	if o != nil && o.ExtraAnnotations != nil {
		return true
	}

	return false
}

// SetExtraAnnotations gets a reference to the given map[string]interface{} and assigns it to the ExtraAnnotations field.
func (o *KubernetesRolesRequest) SetExtraAnnotations(v map[string]interface{}) {
	o.ExtraAnnotations = v
}

// GetExtraLabels returns the ExtraLabels field value if set, zero value otherwise.
func (o *KubernetesRolesRequest) GetExtraLabels() map[string]interface{} {
	if o == nil || o.ExtraLabels == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtraLabels
}

// GetExtraLabelsOk returns a tuple with the ExtraLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRolesRequest) GetExtraLabelsOk() (map[string]interface{}, bool) {
	if o == nil || o.ExtraLabels == nil {
		return nil, false
	}
	return o.ExtraLabels, true
}

// HasExtraLabels returns a boolean if a field has been set.
func (o *KubernetesRolesRequest) HasExtraLabels() bool {
	if o != nil && o.ExtraLabels != nil {
		return true
	}

	return false
}

// SetExtraLabels gets a reference to the given map[string]interface{} and assigns it to the ExtraLabels field.
func (o *KubernetesRolesRequest) SetExtraLabels(v map[string]interface{}) {
	o.ExtraLabels = v
}

// GetGeneratedRoleRules returns the GeneratedRoleRules field value if set, zero value otherwise.
func (o *KubernetesRolesRequest) GetGeneratedRoleRules() string {
	if o == nil || o.GeneratedRoleRules == nil {
		var ret string
		return ret
	}
	return *o.GeneratedRoleRules
}

// GetGeneratedRoleRulesOk returns a tuple with the GeneratedRoleRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRolesRequest) GetGeneratedRoleRulesOk() (*string, bool) {
	if o == nil || o.GeneratedRoleRules == nil {
		return nil, false
	}
	return o.GeneratedRoleRules, true
}

// HasGeneratedRoleRules returns a boolean if a field has been set.
func (o *KubernetesRolesRequest) HasGeneratedRoleRules() bool {
	if o != nil && o.GeneratedRoleRules != nil {
		return true
	}

	return false
}

// SetGeneratedRoleRules gets a reference to the given string and assigns it to the GeneratedRoleRules field.
func (o *KubernetesRolesRequest) SetGeneratedRoleRules(v string) {
	o.GeneratedRoleRules = &v
}

// GetKubernetesRoleName returns the KubernetesRoleName field value if set, zero value otherwise.
func (o *KubernetesRolesRequest) GetKubernetesRoleName() string {
	if o == nil || o.KubernetesRoleName == nil {
		var ret string
		return ret
	}
	return *o.KubernetesRoleName
}

// GetKubernetesRoleNameOk returns a tuple with the KubernetesRoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRolesRequest) GetKubernetesRoleNameOk() (*string, bool) {
	if o == nil || o.KubernetesRoleName == nil {
		return nil, false
	}
	return o.KubernetesRoleName, true
}

// HasKubernetesRoleName returns a boolean if a field has been set.
func (o *KubernetesRolesRequest) HasKubernetesRoleName() bool {
	if o != nil && o.KubernetesRoleName != nil {
		return true
	}

	return false
}

// SetKubernetesRoleName gets a reference to the given string and assigns it to the KubernetesRoleName field.
func (o *KubernetesRolesRequest) SetKubernetesRoleName(v string) {
	o.KubernetesRoleName = &v
}

// GetKubernetesRoleType returns the KubernetesRoleType field value if set, zero value otherwise.
func (o *KubernetesRolesRequest) GetKubernetesRoleType() string {
	if o == nil || o.KubernetesRoleType == nil {
		var ret string
		return ret
	}
	return *o.KubernetesRoleType
}

// GetKubernetesRoleTypeOk returns a tuple with the KubernetesRoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRolesRequest) GetKubernetesRoleTypeOk() (*string, bool) {
	if o == nil || o.KubernetesRoleType == nil {
		return nil, false
	}
	return o.KubernetesRoleType, true
}

// HasKubernetesRoleType returns a boolean if a field has been set.
func (o *KubernetesRolesRequest) HasKubernetesRoleType() bool {
	if o != nil && o.KubernetesRoleType != nil {
		return true
	}

	return false
}

// SetKubernetesRoleType gets a reference to the given string and assigns it to the KubernetesRoleType field.
func (o *KubernetesRolesRequest) SetKubernetesRoleType(v string) {
	o.KubernetesRoleType = &v
}

// GetNameTemplate returns the NameTemplate field value if set, zero value otherwise.
func (o *KubernetesRolesRequest) GetNameTemplate() string {
	if o == nil || o.NameTemplate == nil {
		var ret string
		return ret
	}
	return *o.NameTemplate
}

// GetNameTemplateOk returns a tuple with the NameTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRolesRequest) GetNameTemplateOk() (*string, bool) {
	if o == nil || o.NameTemplate == nil {
		return nil, false
	}
	return o.NameTemplate, true
}

// HasNameTemplate returns a boolean if a field has been set.
func (o *KubernetesRolesRequest) HasNameTemplate() bool {
	if o != nil && o.NameTemplate != nil {
		return true
	}

	return false
}

// SetNameTemplate gets a reference to the given string and assigns it to the NameTemplate field.
func (o *KubernetesRolesRequest) SetNameTemplate(v string) {
	o.NameTemplate = &v
}

// GetServiceAccountName returns the ServiceAccountName field value if set, zero value otherwise.
func (o *KubernetesRolesRequest) GetServiceAccountName() string {
	if o == nil || o.ServiceAccountName == nil {
		var ret string
		return ret
	}
	return *o.ServiceAccountName
}

// GetServiceAccountNameOk returns a tuple with the ServiceAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRolesRequest) GetServiceAccountNameOk() (*string, bool) {
	if o == nil || o.ServiceAccountName == nil {
		return nil, false
	}
	return o.ServiceAccountName, true
}

// HasServiceAccountName returns a boolean if a field has been set.
func (o *KubernetesRolesRequest) HasServiceAccountName() bool {
	if o != nil && o.ServiceAccountName != nil {
		return true
	}

	return false
}

// SetServiceAccountName gets a reference to the given string and assigns it to the ServiceAccountName field.
func (o *KubernetesRolesRequest) SetServiceAccountName(v string) {
	o.ServiceAccountName = &v
}

// GetTokenDefaultTtl returns the TokenDefaultTtl field value if set, zero value otherwise.
func (o *KubernetesRolesRequest) GetTokenDefaultTtl() int32 {
	if o == nil || o.TokenDefaultTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenDefaultTtl
}

// GetTokenDefaultTtlOk returns a tuple with the TokenDefaultTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRolesRequest) GetTokenDefaultTtlOk() (*int32, bool) {
	if o == nil || o.TokenDefaultTtl == nil {
		return nil, false
	}
	return o.TokenDefaultTtl, true
}

// HasTokenDefaultTtl returns a boolean if a field has been set.
func (o *KubernetesRolesRequest) HasTokenDefaultTtl() bool {
	if o != nil && o.TokenDefaultTtl != nil {
		return true
	}

	return false
}

// SetTokenDefaultTtl gets a reference to the given int32 and assigns it to the TokenDefaultTtl field.
func (o *KubernetesRolesRequest) SetTokenDefaultTtl(v int32) {
	o.TokenDefaultTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *KubernetesRolesRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRolesRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *KubernetesRolesRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *KubernetesRolesRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

func (o KubernetesRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["allowed_kubernetes_namespaces"] = o.AllowedKubernetesNamespaces
	}
	if o.ExtraAnnotations != nil {
		toSerialize["extra_annotations"] = o.ExtraAnnotations
	}
	if o.ExtraLabels != nil {
		toSerialize["extra_labels"] = o.ExtraLabels
	}
	if o.GeneratedRoleRules != nil {
		toSerialize["generated_role_rules"] = o.GeneratedRoleRules
	}
	if o.KubernetesRoleName != nil {
		toSerialize["kubernetes_role_name"] = o.KubernetesRoleName
	}
	if o.KubernetesRoleType != nil {
		toSerialize["kubernetes_role_type"] = o.KubernetesRoleType
	}
	if o.NameTemplate != nil {
		toSerialize["name_template"] = o.NameTemplate
	}
	if o.ServiceAccountName != nil {
		toSerialize["service_account_name"] = o.ServiceAccountName
	}
	if o.TokenDefaultTtl != nil {
		toSerialize["token_default_ttl"] = o.TokenDefaultTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesRolesRequest struct {
	value *KubernetesRolesRequest
	isSet bool
}

func (v NullableKubernetesRolesRequest) Get() *KubernetesRolesRequest {
	return v.value
}

func (v *NullableKubernetesRolesRequest) Set(val *KubernetesRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesRolesRequest(val *KubernetesRolesRequest) *NullableKubernetesRolesRequest {
	return &NullableKubernetesRolesRequest{value: val, isSet: true}
}

func (v NullableKubernetesRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KvConfigRequest struct for KvConfigRequest
type KvConfigRequest struct {
	// If true, the backend will require the cas parameter to be set for each write
	CasRequired *bool `json:"cas_required,omitempty"`
	// If set, the length of time before a version is deleted. A negative duration disables the use of delete_version_after on all keys. A zero duration clears the current setting. Accepts a Go duration format string.
	DeleteVersionAfter *int32 `json:"delete_version_after,omitempty"`
	// The number of versions to keep for each key. Defaults to 10
	MaxVersions *int32 `json:"max_versions,omitempty"`
}

// NewKvConfigRequest instantiates a new KvConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKvConfigRequest() *KvConfigRequest {
	this := KvConfigRequest{}
	return &this
}

// NewKvConfigRequestWithDefaults instantiates a new KvConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKvConfigRequestWithDefaults() *KvConfigRequest {
	this := KvConfigRequest{}
	return &this
}

// GetCasRequired returns the CasRequired field value if set, zero value otherwise.
func (o *KvConfigRequest) GetCasRequired() bool {
	if o == nil || o.CasRequired == nil {
		var ret bool
		return ret
	}
	return *o.CasRequired
}

// GetCasRequiredOk returns a tuple with the CasRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvConfigRequest) GetCasRequiredOk() (*bool, bool) {
	if o == nil || o.CasRequired == nil {
		return nil, false
	}
	return o.CasRequired, true
}

// HasCasRequired returns a boolean if a field has been set.
func (o *KvConfigRequest) HasCasRequired() bool {
	if o != nil && o.CasRequired != nil {
		return true
	}

	return false
}

// SetCasRequired gets a reference to the given bool and assigns it to the CasRequired field.
func (o *KvConfigRequest) SetCasRequired(v bool) {
	o.CasRequired = &v
}

// GetDeleteVersionAfter returns the DeleteVersionAfter field value if set, zero value otherwise.
func (o *KvConfigRequest) GetDeleteVersionAfter() int32 {
	if o == nil || o.DeleteVersionAfter == nil {
		var ret int32
		return ret
	}
	return *o.DeleteVersionAfter
}

// GetDeleteVersionAfterOk returns a tuple with the DeleteVersionAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvConfigRequest) GetDeleteVersionAfterOk() (*int32, bool) {
	if o == nil || o.DeleteVersionAfter == nil {
		return nil, false
	}
	return o.DeleteVersionAfter, true
}

// HasDeleteVersionAfter returns a boolean if a field has been set.
func (o *KvConfigRequest) HasDeleteVersionAfter() bool {
	if o != nil && o.DeleteVersionAfter != nil {
		return true
	}

	return false
}

// SetDeleteVersionAfter gets a reference to the given int32 and assigns it to the DeleteVersionAfter field.
func (o *KvConfigRequest) SetDeleteVersionAfter(v int32) {
	o.DeleteVersionAfter = &v
}

// GetMaxVersions returns the MaxVersions field value if set, zero value otherwise.
func (o *KvConfigRequest) GetMaxVersions() int32 {
	if o == nil || o.MaxVersions == nil {
		var ret int32
		return ret
	}
	return *o.MaxVersions
}

// GetMaxVersionsOk returns a tuple with the MaxVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvConfigRequest) GetMaxVersionsOk() (*int32, bool) {
	if o == nil || o.MaxVersions == nil {
		return nil, false
	}
	return o.MaxVersions, true
}

// HasMaxVersions returns a boolean if a field has been set.
func (o *KvConfigRequest) HasMaxVersions() bool {
	if o != nil && o.MaxVersions != nil {
		return true
	}

	return false
}

// SetMaxVersions gets a reference to the given int32 and assigns it to the MaxVersions field.
func (o *KvConfigRequest) SetMaxVersions(v int32) {
	o.MaxVersions = &v
}

func (o KvConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CasRequired != nil {
		toSerialize["cas_required"] = o.CasRequired
	}
	if o.DeleteVersionAfter != nil {
		toSerialize["delete_version_after"] = o.DeleteVersionAfter
	}
	if o.MaxVersions != nil {
		toSerialize["max_versions"] = o.MaxVersions
	}
	return json.Marshal(toSerialize)
}

type NullableKvConfigRequest struct {
	value *KvConfigRequest
	isSet bool
}

func (v NullableKvConfigRequest) Get() *KvConfigRequest {
	return v.value
}

func (v *NullableKvConfigRequest) Set(val *KvConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKvConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKvConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKvConfigRequest(val *KvConfigRequest) *NullableKvConfigRequest {
	return &NullableKvConfigRequest{value: val, isSet: true}
}

func (v NullableKvConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKvConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KvDataRequest struct for KvDataRequest
type KvDataRequest struct {
	// The contents of the data map will be stored and returned on read.
	Data map[string]interface{} `json:"data,omitempty"`
	// Options for writing a KV entry. Set the \"cas\" value to use a Check-And-Set operation. If not set the write will be allowed. If set to 0 a write will only be allowed if the key doesn’t exist. If the index is non-zero the write will only be allowed if the key’s current version matches the version specified in the cas parameter.
	Options map[string]interface{} `json:"options,omitempty"`
	// If provided during a read, the value at the version number will be returned
	Version *int32 `json:"version,omitempty"`
}

// NewKvDataRequest instantiates a new KvDataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKvDataRequest() *KvDataRequest {
	this := KvDataRequest{}
	return &this
}

// NewKvDataRequestWithDefaults instantiates a new KvDataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKvDataRequestWithDefaults() *KvDataRequest {
	this := KvDataRequest{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *KvDataRequest) GetData() map[string]interface{} {
	if o == nil || o.Data == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvDataRequest) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *KvDataRequest) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *KvDataRequest) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *KvDataRequest) GetOptions() map[string]interface{} {
	if o == nil || o.Options == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvDataRequest) GetOptionsOk() (map[string]interface{}, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *KvDataRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given map[string]interface{} and assigns it to the Options field.
func (o *KvDataRequest) SetOptions(v map[string]interface{}) {
	o.Options = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *KvDataRequest) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvDataRequest) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *KvDataRequest) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *KvDataRequest) SetVersion(v int32) {
	o.Version = &v
}

func (o KvDataRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableKvDataRequest struct {
	value *KvDataRequest
	isSet bool
}

func (v NullableKvDataRequest) Get() *KvDataRequest {
	return v.value
}

func (v *NullableKvDataRequest) Set(val *KvDataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKvDataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKvDataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKvDataRequest(val *KvDataRequest) *NullableKvDataRequest {
	return &NullableKvDataRequest{value: val, isSet: true}
}

func (v NullableKvDataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKvDataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KvDeleteRequest struct for KvDeleteRequest
type KvDeleteRequest struct {
	// The versions to be archived. The versioned data will not be deleted, but it will no longer be returned in normal get requests.
	Versions []int32 `json:"versions,omitempty"`
}

// NewKvDeleteRequest instantiates a new KvDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKvDeleteRequest() *KvDeleteRequest {
	this := KvDeleteRequest{}
	return &this
}

// NewKvDeleteRequestWithDefaults instantiates a new KvDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKvDeleteRequestWithDefaults() *KvDeleteRequest {
	this := KvDeleteRequest{}
	return &this
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *KvDeleteRequest) GetVersions() []int32 {
	if o == nil || o.Versions == nil {
		var ret []int32
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvDeleteRequest) GetVersionsOk() ([]int32, bool) {
	if o == nil || o.Versions == nil {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *KvDeleteRequest) HasVersions() bool {
	if o != nil && o.Versions != nil {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []int32 and assigns it to the Versions field.
func (o *KvDeleteRequest) SetVersions(v []int32) {
	o.Versions = v
}

func (o KvDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Versions != nil {
		toSerialize["versions"] = o.Versions
	}
	return json.Marshal(toSerialize)
}

type NullableKvDeleteRequest struct {
	value *KvDeleteRequest
	isSet bool
}

func (v NullableKvDeleteRequest) Get() *KvDeleteRequest {
	return v.value
}

func (v *NullableKvDeleteRequest) Set(val *KvDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKvDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKvDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKvDeleteRequest(val *KvDeleteRequest) *NullableKvDeleteRequest {
	return &NullableKvDeleteRequest{value: val, isSet: true}
}

func (v NullableKvDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKvDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KvDestroyRequest struct for KvDestroyRequest
type KvDestroyRequest struct {
	// The versions to destroy. Their data will be permanently deleted.
	Versions []int32 `json:"versions,omitempty"`
}

// NewKvDestroyRequest instantiates a new KvDestroyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKvDestroyRequest() *KvDestroyRequest {
	this := KvDestroyRequest{}
	return &this
}

// NewKvDestroyRequestWithDefaults instantiates a new KvDestroyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKvDestroyRequestWithDefaults() *KvDestroyRequest {
	this := KvDestroyRequest{}
	return &this
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *KvDestroyRequest) GetVersions() []int32 {
	if o == nil || o.Versions == nil {
		var ret []int32
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvDestroyRequest) GetVersionsOk() ([]int32, bool) {
	if o == nil || o.Versions == nil {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *KvDestroyRequest) HasVersions() bool {
	if o != nil && o.Versions != nil {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []int32 and assigns it to the Versions field.
func (o *KvDestroyRequest) SetVersions(v []int32) {
	o.Versions = v
}

func (o KvDestroyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Versions != nil {
		toSerialize["versions"] = o.Versions
	}
	return json.Marshal(toSerialize)
}

type NullableKvDestroyRequest struct {
	value *KvDestroyRequest
	isSet bool
}

func (v NullableKvDestroyRequest) Get() *KvDestroyRequest {
	return v.value
}

func (v *NullableKvDestroyRequest) Set(val *KvDestroyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKvDestroyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKvDestroyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKvDestroyRequest(val *KvDestroyRequest) *NullableKvDestroyRequest {
	return &NullableKvDestroyRequest{value: val, isSet: true}
}

func (v NullableKvDestroyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKvDestroyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KvMetadataRequest struct for KvMetadataRequest
type KvMetadataRequest struct {
	// If true the key will require the cas parameter to be set on all write requests. If false, the backend’s configuration will be used.
	CasRequired *bool `json:"cas_required,omitempty"`
	// User-provided key-value pairs that are used to describe arbitrary and version-agnostic information about a secret.
	CustomMetadata map[string]interface{} `json:"custom_metadata,omitempty"`
	// The length of time before a version is deleted. If not set, the backend's configured delete_version_after is used. Cannot be greater than the backend's delete_version_after. A zero duration clears the current setting. A negative duration will cause an error.
	DeleteVersionAfter *int32 `json:"delete_version_after,omitempty"`
	// The number of versions to keep. If not set, the backend’s configured max version is used.
	MaxVersions *int32 `json:"max_versions,omitempty"`
}

// NewKvMetadataRequest instantiates a new KvMetadataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKvMetadataRequest() *KvMetadataRequest {
	this := KvMetadataRequest{}
	return &this
}

// NewKvMetadataRequestWithDefaults instantiates a new KvMetadataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKvMetadataRequestWithDefaults() *KvMetadataRequest {
	this := KvMetadataRequest{}
	return &this
}

// GetCasRequired returns the CasRequired field value if set, zero value otherwise.
func (o *KvMetadataRequest) GetCasRequired() bool {
	if o == nil || o.CasRequired == nil {
		var ret bool
		return ret
	}
	return *o.CasRequired
}

// GetCasRequiredOk returns a tuple with the CasRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvMetadataRequest) GetCasRequiredOk() (*bool, bool) {
	if o == nil || o.CasRequired == nil {
		return nil, false
	}
	return o.CasRequired, true
}

// HasCasRequired returns a boolean if a field has been set.
func (o *KvMetadataRequest) HasCasRequired() bool {
	if o != nil && o.CasRequired != nil {
		return true
	}

	return false
}

// SetCasRequired gets a reference to the given bool and assigns it to the CasRequired field.
func (o *KvMetadataRequest) SetCasRequired(v bool) {
	o.CasRequired = &v
}

// GetCustomMetadata returns the CustomMetadata field value if set, zero value otherwise.
func (o *KvMetadataRequest) GetCustomMetadata() map[string]interface{} {
	if o == nil || o.CustomMetadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomMetadata
}

// GetCustomMetadataOk returns a tuple with the CustomMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvMetadataRequest) GetCustomMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomMetadata == nil {
		return nil, false
	}
	return o.CustomMetadata, true
}

// HasCustomMetadata returns a boolean if a field has been set.
func (o *KvMetadataRequest) HasCustomMetadata() bool {
	if o != nil && o.CustomMetadata != nil {
		return true
	}

	return false
}

// SetCustomMetadata gets a reference to the given map[string]interface{} and assigns it to the CustomMetadata field.
func (o *KvMetadataRequest) SetCustomMetadata(v map[string]interface{}) {
	o.CustomMetadata = v
}

// GetDeleteVersionAfter returns the DeleteVersionAfter field value if set, zero value otherwise.
func (o *KvMetadataRequest) GetDeleteVersionAfter() int32 {
	if o == nil || o.DeleteVersionAfter == nil {
		var ret int32
		return ret
	}
	return *o.DeleteVersionAfter
}

// GetDeleteVersionAfterOk returns a tuple with the DeleteVersionAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvMetadataRequest) GetDeleteVersionAfterOk() (*int32, bool) {
	if o == nil || o.DeleteVersionAfter == nil {
		return nil, false
	}
	return o.DeleteVersionAfter, true
}

// HasDeleteVersionAfter returns a boolean if a field has been set.
func (o *KvMetadataRequest) HasDeleteVersionAfter() bool {
	if o != nil && o.DeleteVersionAfter != nil {
		return true
	}

	return false
}

// SetDeleteVersionAfter gets a reference to the given int32 and assigns it to the DeleteVersionAfter field.
func (o *KvMetadataRequest) SetDeleteVersionAfter(v int32) {
	o.DeleteVersionAfter = &v
}

// GetMaxVersions returns the MaxVersions field value if set, zero value otherwise.
func (o *KvMetadataRequest) GetMaxVersions() int32 {
	if o == nil || o.MaxVersions == nil {
		var ret int32
		return ret
	}
	return *o.MaxVersions
}

// GetMaxVersionsOk returns a tuple with the MaxVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvMetadataRequest) GetMaxVersionsOk() (*int32, bool) {
	if o == nil || o.MaxVersions == nil {
		return nil, false
	}
	return o.MaxVersions, true
}

// HasMaxVersions returns a boolean if a field has been set.
func (o *KvMetadataRequest) HasMaxVersions() bool {
	if o != nil && o.MaxVersions != nil {
		return true
	}

	return false
}

// SetMaxVersions gets a reference to the given int32 and assigns it to the MaxVersions field.
func (o *KvMetadataRequest) SetMaxVersions(v int32) {
	o.MaxVersions = &v
}

func (o KvMetadataRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CasRequired != nil {
		toSerialize["cas_required"] = o.CasRequired
	}
	if o.CustomMetadata != nil {
		toSerialize["custom_metadata"] = o.CustomMetadata
	}
	if o.DeleteVersionAfter != nil {
		toSerialize["delete_version_after"] = o.DeleteVersionAfter
	}
	if o.MaxVersions != nil {
		toSerialize["max_versions"] = o.MaxVersions
	}
	return json.Marshal(toSerialize)
}

type NullableKvMetadataRequest struct {
	value *KvMetadataRequest
	isSet bool
}

func (v NullableKvMetadataRequest) Get() *KvMetadataRequest {
	return v.value
}

func (v *NullableKvMetadataRequest) Set(val *KvMetadataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKvMetadataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKvMetadataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKvMetadataRequest(val *KvMetadataRequest) *NullableKvMetadataRequest {
	return &NullableKvMetadataRequest{value: val, isSet: true}
}

func (v NullableKvMetadataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKvMetadataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KvUndeleteRequest struct for KvUndeleteRequest
type KvUndeleteRequest struct {
	// The versions to unarchive. The versions will be restored and their data will be returned on normal get requests.
	Versions []int32 `json:"versions,omitempty"`
}

// NewKvUndeleteRequest instantiates a new KvUndeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKvUndeleteRequest() *KvUndeleteRequest {
	this := KvUndeleteRequest{}
	return &this
}

// NewKvUndeleteRequestWithDefaults instantiates a new KvUndeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKvUndeleteRequestWithDefaults() *KvUndeleteRequest {
	this := KvUndeleteRequest{}
	return &this
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *KvUndeleteRequest) GetVersions() []int32 {
	if o == nil || o.Versions == nil {
		var ret []int32
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvUndeleteRequest) GetVersionsOk() ([]int32, bool) {
	if o == nil || o.Versions == nil {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *KvUndeleteRequest) HasVersions() bool {
	if o != nil && o.Versions != nil {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []int32 and assigns it to the Versions field.
func (o *KvUndeleteRequest) SetVersions(v []int32) {
	o.Versions = v
}

func (o KvUndeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Versions != nil {
		toSerialize["versions"] = o.Versions
	}
	return json.Marshal(toSerialize)
}

type NullableKvUndeleteRequest struct {
	value *KvUndeleteRequest
	isSet bool
}

func (v NullableKvUndeleteRequest) Get() *KvUndeleteRequest {
	return v.value
}

func (v *NullableKvUndeleteRequest) Set(val *KvUndeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKvUndeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKvUndeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKvUndeleteRequest(val *KvUndeleteRequest) *NullableKvUndeleteRequest {
	return &NullableKvUndeleteRequest{value: val, isSet: true}
}

func (v NullableKvUndeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKvUndeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LdapConfigRequest struct for LdapConfigRequest
type LdapConfigRequest struct {
	// Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).
	AnonymousGroupSearch *bool `json:"anonymous_group_search,omitempty"`
	// LDAP DN for searching for the user DN (optional)
	Binddn *string `json:"binddn,omitempty"`
	// LDAP password for searching for the user DN (optional)
	Bindpass *string `json:"bindpass,omitempty"`
	// If true, case sensitivity will be used when comparing usernames and groups for matching policies.
	CaseSensitiveNames *bool `json:"case_sensitive_names,omitempty"`
	// CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded (optional)
	Certificate *string `json:"certificate,omitempty"`
	// Client certificate to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsCert *string `json:"client_tls_cert,omitempty"`
	// Client certificate key to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsKey *string `json:"client_tls_key,omitempty"`
	// Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true
	DenyNullBind *bool `json:"deny_null_bind,omitempty"`
	// Use anonymous bind to discover the bind DN of a user (optional)
	Discoverdn *bool `json:"discoverdn,omitempty"`
	// LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: \"cn\" or \"memberOf\", etc. Default: cn
	Groupattr *string `json:"groupattr,omitempty"`
	// LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)
	Groupdn *string `json:"groupdn,omitempty"`
	// Go template for querying group membership of user (optional) The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
	Groupfilter *string `json:"groupfilter,omitempty"`
	// Skip LDAP server SSL Certificate verification - VERY insecure (optional)
	InsecureTls *bool `json:"insecure_tls,omitempty"`
	// Timeout, in seconds, for the connection when making requests against the server before returning back an error.
	RequestTimeout *int32 `json:"request_timeout,omitempty"`
	// Issue a StartTLS command after establishing unencrypted connection (optional)
	Starttls *bool `json:"starttls,omitempty"`
	// Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMaxVersion *string `json:"tls_max_version,omitempty"`
	// Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMinVersion *string `json:"tls_min_version,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies. This will apply to all tokens generated by this auth method, in addition to any configured for specific users/groups.
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Enables userPrincipalDomain login with [username]@UPNDomain (optional)
	Upndomain *string `json:"upndomain,omitempty"`
	// LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.
	Url *string `json:"url,omitempty"`
	// In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.
	UsePre111GroupCnBehavior *bool `json:"use_pre111_group_cn_behavior,omitempty"`
	// If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.
	UseTokenGroups *bool `json:"use_token_groups,omitempty"`
	// Attribute used for users (default: cn)
	Userattr *string `json:"userattr,omitempty"`
	// LDAP domain to use for users (eg: ou=People,dc=example,dc=org)
	Userdn *string `json:"userdn,omitempty"`
	// Go template for LDAP user search filer (optional) The template can access the following context variables: UserAttr, Username Default: ({{.UserAttr}}={{.Username}})
	Userfilter *string `json:"userfilter,omitempty"`
	// If true, sets the alias name to the username
	UsernameAsAlias *bool `json:"username_as_alias,omitempty"`
}

// NewLdapConfigRequest instantiates a new LdapConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapConfigRequest() *LdapConfigRequest {
	this := LdapConfigRequest{}
	var anonymousGroupSearch bool = false
	this.AnonymousGroupSearch = &anonymousGroupSearch
	var denyNullBind bool = true
	this.DenyNullBind = &denyNullBind
	var groupattr string = "cn"
	this.Groupattr = &groupattr
	var groupfilter string = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.Groupfilter = &groupfilter
	var tlsMaxVersion string = "tls12"
	this.TlsMaxVersion = &tlsMaxVersion
	var tlsMinVersion string = "tls12"
	this.TlsMinVersion = &tlsMinVersion
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	var url string = "ldap://127.0.0.1"
	this.Url = &url
	var useTokenGroups bool = false
	this.UseTokenGroups = &useTokenGroups
	var userattr string = "cn"
	this.Userattr = &userattr
	var userfilter string = "({{.UserAttr}}={{.Username}})"
	this.Userfilter = &userfilter
	var usernameAsAlias bool = false
	this.UsernameAsAlias = &usernameAsAlias
	return &this
}

// NewLdapConfigRequestWithDefaults instantiates a new LdapConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapConfigRequestWithDefaults() *LdapConfigRequest {
	this := LdapConfigRequest{}
	var anonymousGroupSearch bool = false
	this.AnonymousGroupSearch = &anonymousGroupSearch
	var denyNullBind bool = true
	this.DenyNullBind = &denyNullBind
	var groupattr string = "cn"
	this.Groupattr = &groupattr
	var groupfilter string = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.Groupfilter = &groupfilter
	var tlsMaxVersion string = "tls12"
	this.TlsMaxVersion = &tlsMaxVersion
	var tlsMinVersion string = "tls12"
	this.TlsMinVersion = &tlsMinVersion
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	var url string = "ldap://127.0.0.1"
	this.Url = &url
	var useTokenGroups bool = false
	this.UseTokenGroups = &useTokenGroups
	var userattr string = "cn"
	this.Userattr = &userattr
	var userfilter string = "({{.UserAttr}}={{.Username}})"
	this.Userfilter = &userfilter
	var usernameAsAlias bool = false
	this.UsernameAsAlias = &usernameAsAlias
	return &this
}

// GetAnonymousGroupSearch returns the AnonymousGroupSearch field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetAnonymousGroupSearch() bool {
	if o == nil || o.AnonymousGroupSearch == nil {
		var ret bool
		return ret
	}
	return *o.AnonymousGroupSearch
}

// GetAnonymousGroupSearchOk returns a tuple with the AnonymousGroupSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetAnonymousGroupSearchOk() (*bool, bool) {
	if o == nil || o.AnonymousGroupSearch == nil {
		return nil, false
	}
	return o.AnonymousGroupSearch, true
}

// HasAnonymousGroupSearch returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasAnonymousGroupSearch() bool {
	if o != nil && o.AnonymousGroupSearch != nil {
		return true
	}

	return false
}

// SetAnonymousGroupSearch gets a reference to the given bool and assigns it to the AnonymousGroupSearch field.
func (o *LdapConfigRequest) SetAnonymousGroupSearch(v bool) {
	o.AnonymousGroupSearch = &v
}

// GetBinddn returns the Binddn field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetBinddn() string {
	if o == nil || o.Binddn == nil {
		var ret string
		return ret
	}
	return *o.Binddn
}

// GetBinddnOk returns a tuple with the Binddn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetBinddnOk() (*string, bool) {
	if o == nil || o.Binddn == nil {
		return nil, false
	}
	return o.Binddn, true
}

// HasBinddn returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasBinddn() bool {
	if o != nil && o.Binddn != nil {
		return true
	}

	return false
}

// SetBinddn gets a reference to the given string and assigns it to the Binddn field.
func (o *LdapConfigRequest) SetBinddn(v string) {
	o.Binddn = &v
}

// GetBindpass returns the Bindpass field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetBindpass() string {
	if o == nil || o.Bindpass == nil {
		var ret string
		return ret
	}
	return *o.Bindpass
}

// GetBindpassOk returns a tuple with the Bindpass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetBindpassOk() (*string, bool) {
	if o == nil || o.Bindpass == nil {
		return nil, false
	}
	return o.Bindpass, true
}

// HasBindpass returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasBindpass() bool {
	if o != nil && o.Bindpass != nil {
		return true
	}

	return false
}

// SetBindpass gets a reference to the given string and assigns it to the Bindpass field.
func (o *LdapConfigRequest) SetBindpass(v string) {
	o.Bindpass = &v
}

// GetCaseSensitiveNames returns the CaseSensitiveNames field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetCaseSensitiveNames() bool {
	if o == nil || o.CaseSensitiveNames == nil {
		var ret bool
		return ret
	}
	return *o.CaseSensitiveNames
}

// GetCaseSensitiveNamesOk returns a tuple with the CaseSensitiveNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetCaseSensitiveNamesOk() (*bool, bool) {
	if o == nil || o.CaseSensitiveNames == nil {
		return nil, false
	}
	return o.CaseSensitiveNames, true
}

// HasCaseSensitiveNames returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasCaseSensitiveNames() bool {
	if o != nil && o.CaseSensitiveNames != nil {
		return true
	}

	return false
}

// SetCaseSensitiveNames gets a reference to the given bool and assigns it to the CaseSensitiveNames field.
func (o *LdapConfigRequest) SetCaseSensitiveNames(v bool) {
	o.CaseSensitiveNames = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *LdapConfigRequest) SetCertificate(v string) {
	o.Certificate = &v
}

// GetClientTlsCert returns the ClientTlsCert field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetClientTlsCert() string {
	if o == nil || o.ClientTlsCert == nil {
		var ret string
		return ret
	}
	return *o.ClientTlsCert
}

// GetClientTlsCertOk returns a tuple with the ClientTlsCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetClientTlsCertOk() (*string, bool) {
	if o == nil || o.ClientTlsCert == nil {
		return nil, false
	}
	return o.ClientTlsCert, true
}

// HasClientTlsCert returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasClientTlsCert() bool {
	if o != nil && o.ClientTlsCert != nil {
		return true
	}

	return false
}

// SetClientTlsCert gets a reference to the given string and assigns it to the ClientTlsCert field.
func (o *LdapConfigRequest) SetClientTlsCert(v string) {
	o.ClientTlsCert = &v
}

// GetClientTlsKey returns the ClientTlsKey field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetClientTlsKey() string {
	if o == nil || o.ClientTlsKey == nil {
		var ret string
		return ret
	}
	return *o.ClientTlsKey
}

// GetClientTlsKeyOk returns a tuple with the ClientTlsKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetClientTlsKeyOk() (*string, bool) {
	if o == nil || o.ClientTlsKey == nil {
		return nil, false
	}
	return o.ClientTlsKey, true
}

// HasClientTlsKey returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasClientTlsKey() bool {
	if o != nil && o.ClientTlsKey != nil {
		return true
	}

	return false
}

// SetClientTlsKey gets a reference to the given string and assigns it to the ClientTlsKey field.
func (o *LdapConfigRequest) SetClientTlsKey(v string) {
	o.ClientTlsKey = &v
}

// GetDenyNullBind returns the DenyNullBind field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetDenyNullBind() bool {
	if o == nil || o.DenyNullBind == nil {
		var ret bool
		return ret
	}
	return *o.DenyNullBind
}

// GetDenyNullBindOk returns a tuple with the DenyNullBind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetDenyNullBindOk() (*bool, bool) {
	if o == nil || o.DenyNullBind == nil {
		return nil, false
	}
	return o.DenyNullBind, true
}

// HasDenyNullBind returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasDenyNullBind() bool {
	if o != nil && o.DenyNullBind != nil {
		return true
	}

	return false
}

// SetDenyNullBind gets a reference to the given bool and assigns it to the DenyNullBind field.
func (o *LdapConfigRequest) SetDenyNullBind(v bool) {
	o.DenyNullBind = &v
}

// GetDiscoverdn returns the Discoverdn field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetDiscoverdn() bool {
	if o == nil || o.Discoverdn == nil {
		var ret bool
		return ret
	}
	return *o.Discoverdn
}

// GetDiscoverdnOk returns a tuple with the Discoverdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetDiscoverdnOk() (*bool, bool) {
	if o == nil || o.Discoverdn == nil {
		return nil, false
	}
	return o.Discoverdn, true
}

// HasDiscoverdn returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasDiscoverdn() bool {
	if o != nil && o.Discoverdn != nil {
		return true
	}

	return false
}

// SetDiscoverdn gets a reference to the given bool and assigns it to the Discoverdn field.
func (o *LdapConfigRequest) SetDiscoverdn(v bool) {
	o.Discoverdn = &v
}

// GetGroupattr returns the Groupattr field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetGroupattr() string {
	if o == nil || o.Groupattr == nil {
		var ret string
		return ret
	}
	return *o.Groupattr
}

// GetGroupattrOk returns a tuple with the Groupattr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetGroupattrOk() (*string, bool) {
	if o == nil || o.Groupattr == nil {
		return nil, false
	}
	return o.Groupattr, true
}

// HasGroupattr returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasGroupattr() bool {
	if o != nil && o.Groupattr != nil {
		return true
	}

	return false
}

// SetGroupattr gets a reference to the given string and assigns it to the Groupattr field.
func (o *LdapConfigRequest) SetGroupattr(v string) {
	o.Groupattr = &v
}

// GetGroupdn returns the Groupdn field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetGroupdn() string {
	if o == nil || o.Groupdn == nil {
		var ret string
		return ret
	}
	return *o.Groupdn
}

// GetGroupdnOk returns a tuple with the Groupdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetGroupdnOk() (*string, bool) {
	if o == nil || o.Groupdn == nil {
		return nil, false
	}
	return o.Groupdn, true
}

// HasGroupdn returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasGroupdn() bool {
	if o != nil && o.Groupdn != nil {
		return true
	}

	return false
}

// SetGroupdn gets a reference to the given string and assigns it to the Groupdn field.
func (o *LdapConfigRequest) SetGroupdn(v string) {
	o.Groupdn = &v
}

// GetGroupfilter returns the Groupfilter field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetGroupfilter() string {
	if o == nil || o.Groupfilter == nil {
		var ret string
		return ret
	}
	return *o.Groupfilter
}

// GetGroupfilterOk returns a tuple with the Groupfilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetGroupfilterOk() (*string, bool) {
	if o == nil || o.Groupfilter == nil {
		return nil, false
	}
	return o.Groupfilter, true
}

// HasGroupfilter returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasGroupfilter() bool {
	if o != nil && o.Groupfilter != nil {
		return true
	}

	return false
}

// SetGroupfilter gets a reference to the given string and assigns it to the Groupfilter field.
func (o *LdapConfigRequest) SetGroupfilter(v string) {
	o.Groupfilter = &v
}

// GetInsecureTls returns the InsecureTls field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetInsecureTls() bool {
	if o == nil || o.InsecureTls == nil {
		var ret bool
		return ret
	}
	return *o.InsecureTls
}

// GetInsecureTlsOk returns a tuple with the InsecureTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetInsecureTlsOk() (*bool, bool) {
	if o == nil || o.InsecureTls == nil {
		return nil, false
	}
	return o.InsecureTls, true
}

// HasInsecureTls returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasInsecureTls() bool {
	if o != nil && o.InsecureTls != nil {
		return true
	}

	return false
}

// SetInsecureTls gets a reference to the given bool and assigns it to the InsecureTls field.
func (o *LdapConfigRequest) SetInsecureTls(v bool) {
	o.InsecureTls = &v
}

// GetRequestTimeout returns the RequestTimeout field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetRequestTimeout() int32 {
	if o == nil || o.RequestTimeout == nil {
		var ret int32
		return ret
	}
	return *o.RequestTimeout
}

// GetRequestTimeoutOk returns a tuple with the RequestTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetRequestTimeoutOk() (*int32, bool) {
	if o == nil || o.RequestTimeout == nil {
		return nil, false
	}
	return o.RequestTimeout, true
}

// HasRequestTimeout returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasRequestTimeout() bool {
	if o != nil && o.RequestTimeout != nil {
		return true
	}

	return false
}

// SetRequestTimeout gets a reference to the given int32 and assigns it to the RequestTimeout field.
func (o *LdapConfigRequest) SetRequestTimeout(v int32) {
	o.RequestTimeout = &v
}

// GetStarttls returns the Starttls field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetStarttls() bool {
	if o == nil || o.Starttls == nil {
		var ret bool
		return ret
	}
	return *o.Starttls
}

// GetStarttlsOk returns a tuple with the Starttls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetStarttlsOk() (*bool, bool) {
	if o == nil || o.Starttls == nil {
		return nil, false
	}
	return o.Starttls, true
}

// HasStarttls returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasStarttls() bool {
	if o != nil && o.Starttls != nil {
		return true
	}

	return false
}

// SetStarttls gets a reference to the given bool and assigns it to the Starttls field.
func (o *LdapConfigRequest) SetStarttls(v bool) {
	o.Starttls = &v
}

// GetTlsMaxVersion returns the TlsMaxVersion field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetTlsMaxVersion() string {
	if o == nil || o.TlsMaxVersion == nil {
		var ret string
		return ret
	}
	return *o.TlsMaxVersion
}

// GetTlsMaxVersionOk returns a tuple with the TlsMaxVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetTlsMaxVersionOk() (*string, bool) {
	if o == nil || o.TlsMaxVersion == nil {
		return nil, false
	}
	return o.TlsMaxVersion, true
}

// HasTlsMaxVersion returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasTlsMaxVersion() bool {
	if o != nil && o.TlsMaxVersion != nil {
		return true
	}

	return false
}

// SetTlsMaxVersion gets a reference to the given string and assigns it to the TlsMaxVersion field.
func (o *LdapConfigRequest) SetTlsMaxVersion(v string) {
	o.TlsMaxVersion = &v
}

// GetTlsMinVersion returns the TlsMinVersion field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetTlsMinVersion() string {
	if o == nil || o.TlsMinVersion == nil {
		var ret string
		return ret
	}
	return *o.TlsMinVersion
}

// GetTlsMinVersionOk returns a tuple with the TlsMinVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetTlsMinVersionOk() (*string, bool) {
	if o == nil || o.TlsMinVersion == nil {
		return nil, false
	}
	return o.TlsMinVersion, true
}

// HasTlsMinVersion returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasTlsMinVersion() bool {
	if o != nil && o.TlsMinVersion != nil {
		return true
	}

	return false
}

// SetTlsMinVersion gets a reference to the given string and assigns it to the TlsMinVersion field.
func (o *LdapConfigRequest) SetTlsMinVersion(v string) {
	o.TlsMinVersion = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *LdapConfigRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *LdapConfigRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *LdapConfigRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *LdapConfigRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *LdapConfigRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *LdapConfigRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *LdapConfigRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *LdapConfigRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *LdapConfigRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetUpndomain returns the Upndomain field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetUpndomain() string {
	if o == nil || o.Upndomain == nil {
		var ret string
		return ret
	}
	return *o.Upndomain
}

// GetUpndomainOk returns a tuple with the Upndomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetUpndomainOk() (*string, bool) {
	if o == nil || o.Upndomain == nil {
		return nil, false
	}
	return o.Upndomain, true
}

// HasUpndomain returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasUpndomain() bool {
	if o != nil && o.Upndomain != nil {
		return true
	}

	return false
}

// SetUpndomain gets a reference to the given string and assigns it to the Upndomain field.
func (o *LdapConfigRequest) SetUpndomain(v string) {
	o.Upndomain = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *LdapConfigRequest) SetUrl(v string) {
	o.Url = &v
}

// GetUsePre111GroupCnBehavior returns the UsePre111GroupCnBehavior field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetUsePre111GroupCnBehavior() bool {
	if o == nil || o.UsePre111GroupCnBehavior == nil {
		var ret bool
		return ret
	}
	return *o.UsePre111GroupCnBehavior
}

// GetUsePre111GroupCnBehaviorOk returns a tuple with the UsePre111GroupCnBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetUsePre111GroupCnBehaviorOk() (*bool, bool) {
	if o == nil || o.UsePre111GroupCnBehavior == nil {
		return nil, false
	}
	return o.UsePre111GroupCnBehavior, true
}

// HasUsePre111GroupCnBehavior returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasUsePre111GroupCnBehavior() bool {
	if o != nil && o.UsePre111GroupCnBehavior != nil {
		return true
	}

	return false
}

// SetUsePre111GroupCnBehavior gets a reference to the given bool and assigns it to the UsePre111GroupCnBehavior field.
func (o *LdapConfigRequest) SetUsePre111GroupCnBehavior(v bool) {
	o.UsePre111GroupCnBehavior = &v
}

// GetUseTokenGroups returns the UseTokenGroups field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetUseTokenGroups() bool {
	if o == nil || o.UseTokenGroups == nil {
		var ret bool
		return ret
	}
	return *o.UseTokenGroups
}

// GetUseTokenGroupsOk returns a tuple with the UseTokenGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetUseTokenGroupsOk() (*bool, bool) {
	if o == nil || o.UseTokenGroups == nil {
		return nil, false
	}
	return o.UseTokenGroups, true
}

// HasUseTokenGroups returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasUseTokenGroups() bool {
	if o != nil && o.UseTokenGroups != nil {
		return true
	}

	return false
}

// SetUseTokenGroups gets a reference to the given bool and assigns it to the UseTokenGroups field.
func (o *LdapConfigRequest) SetUseTokenGroups(v bool) {
	o.UseTokenGroups = &v
}

// GetUserattr returns the Userattr field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetUserattr() string {
	if o == nil || o.Userattr == nil {
		var ret string
		return ret
	}
	return *o.Userattr
}

// GetUserattrOk returns a tuple with the Userattr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetUserattrOk() (*string, bool) {
	if o == nil || o.Userattr == nil {
		return nil, false
	}
	return o.Userattr, true
}

// HasUserattr returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasUserattr() bool {
	if o != nil && o.Userattr != nil {
		return true
	}

	return false
}

// SetUserattr gets a reference to the given string and assigns it to the Userattr field.
func (o *LdapConfigRequest) SetUserattr(v string) {
	o.Userattr = &v
}

// GetUserdn returns the Userdn field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetUserdn() string {
	if o == nil || o.Userdn == nil {
		var ret string
		return ret
	}
	return *o.Userdn
}

// GetUserdnOk returns a tuple with the Userdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetUserdnOk() (*string, bool) {
	if o == nil || o.Userdn == nil {
		return nil, false
	}
	return o.Userdn, true
}

// HasUserdn returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasUserdn() bool {
	if o != nil && o.Userdn != nil {
		return true
	}

	return false
}

// SetUserdn gets a reference to the given string and assigns it to the Userdn field.
func (o *LdapConfigRequest) SetUserdn(v string) {
	o.Userdn = &v
}

// GetUserfilter returns the Userfilter field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetUserfilter() string {
	if o == nil || o.Userfilter == nil {
		var ret string
		return ret
	}
	return *o.Userfilter
}

// GetUserfilterOk returns a tuple with the Userfilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetUserfilterOk() (*string, bool) {
	if o == nil || o.Userfilter == nil {
		return nil, false
	}
	return o.Userfilter, true
}

// HasUserfilter returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasUserfilter() bool {
	if o != nil && o.Userfilter != nil {
		return true
	}

	return false
}

// SetUserfilter gets a reference to the given string and assigns it to the Userfilter field.
func (o *LdapConfigRequest) SetUserfilter(v string) {
	o.Userfilter = &v
}

// GetUsernameAsAlias returns the UsernameAsAlias field value if set, zero value otherwise.
func (o *LdapConfigRequest) GetUsernameAsAlias() bool {
	if o == nil || o.UsernameAsAlias == nil {
		var ret bool
		return ret
	}
	return *o.UsernameAsAlias
}

// GetUsernameAsAliasOk returns a tuple with the UsernameAsAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapConfigRequest) GetUsernameAsAliasOk() (*bool, bool) {
	if o == nil || o.UsernameAsAlias == nil {
		return nil, false
	}
	return o.UsernameAsAlias, true
}

// HasUsernameAsAlias returns a boolean if a field has been set.
func (o *LdapConfigRequest) HasUsernameAsAlias() bool {
	if o != nil && o.UsernameAsAlias != nil {
		return true
	}

	return false
}

// SetUsernameAsAlias gets a reference to the given bool and assigns it to the UsernameAsAlias field.
func (o *LdapConfigRequest) SetUsernameAsAlias(v bool) {
	o.UsernameAsAlias = &v
}

func (o LdapConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AnonymousGroupSearch != nil {
		toSerialize["anonymous_group_search"] = o.AnonymousGroupSearch
	}
	if o.Binddn != nil {
		toSerialize["binddn"] = o.Binddn
	}
	if o.Bindpass != nil {
		toSerialize["bindpass"] = o.Bindpass
	}
	if o.CaseSensitiveNames != nil {
		toSerialize["case_sensitive_names"] = o.CaseSensitiveNames
	}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.ClientTlsCert != nil {
		toSerialize["client_tls_cert"] = o.ClientTlsCert
	}
	if o.ClientTlsKey != nil {
		toSerialize["client_tls_key"] = o.ClientTlsKey
	}
	if o.DenyNullBind != nil {
		toSerialize["deny_null_bind"] = o.DenyNullBind
	}
	if o.Discoverdn != nil {
		toSerialize["discoverdn"] = o.Discoverdn
	}
	if o.Groupattr != nil {
		toSerialize["groupattr"] = o.Groupattr
	}
	if o.Groupdn != nil {
		toSerialize["groupdn"] = o.Groupdn
	}
	if o.Groupfilter != nil {
		toSerialize["groupfilter"] = o.Groupfilter
	}
	if o.InsecureTls != nil {
		toSerialize["insecure_tls"] = o.InsecureTls
	}
	if o.RequestTimeout != nil {
		toSerialize["request_timeout"] = o.RequestTimeout
	}
	if o.Starttls != nil {
		toSerialize["starttls"] = o.Starttls
	}
	if o.TlsMaxVersion != nil {
		toSerialize["tls_max_version"] = o.TlsMaxVersion
	}
	if o.TlsMinVersion != nil {
		toSerialize["tls_min_version"] = o.TlsMinVersion
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Upndomain != nil {
		toSerialize["upndomain"] = o.Upndomain
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.UsePre111GroupCnBehavior != nil {
		toSerialize["use_pre111_group_cn_behavior"] = o.UsePre111GroupCnBehavior
	}
	if o.UseTokenGroups != nil {
		toSerialize["use_token_groups"] = o.UseTokenGroups
	}
	if o.Userattr != nil {
		toSerialize["userattr"] = o.Userattr
	}
	if o.Userdn != nil {
		toSerialize["userdn"] = o.Userdn
	}
	if o.Userfilter != nil {
		toSerialize["userfilter"] = o.Userfilter
	}
	if o.UsernameAsAlias != nil {
		toSerialize["username_as_alias"] = o.UsernameAsAlias
	}
	return json.Marshal(toSerialize)
}

type NullableLdapConfigRequest struct {
	value *LdapConfigRequest
	isSet bool
}

func (v NullableLdapConfigRequest) Get() *LdapConfigRequest {
	return v.value
}

func (v *NullableLdapConfigRequest) Set(val *LdapConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapConfigRequest(val *LdapConfigRequest) *NullableLdapConfigRequest {
	return &NullableLdapConfigRequest{value: val, isSet: true}
}

func (v NullableLdapConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LdapGroupsRequest struct for LdapGroupsRequest
type LdapGroupsRequest struct {
	// Comma-separated list of policies associated to the group.
	Policies []string `json:"policies,omitempty"`
}

// NewLdapGroupsRequest instantiates a new LdapGroupsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapGroupsRequest() *LdapGroupsRequest {
	this := LdapGroupsRequest{}
	return &this
}

// NewLdapGroupsRequestWithDefaults instantiates a new LdapGroupsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapGroupsRequestWithDefaults() *LdapGroupsRequest {
	this := LdapGroupsRequest{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *LdapGroupsRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapGroupsRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *LdapGroupsRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *LdapGroupsRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o LdapGroupsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableLdapGroupsRequest struct {
	value *LdapGroupsRequest
	isSet bool
}

func (v NullableLdapGroupsRequest) Get() *LdapGroupsRequest {
	return v.value
}

func (v *NullableLdapGroupsRequest) Set(val *LdapGroupsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapGroupsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapGroupsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapGroupsRequest(val *LdapGroupsRequest) *NullableLdapGroupsRequest {
	return &NullableLdapGroupsRequest{value: val, isSet: true}
}

func (v NullableLdapGroupsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapGroupsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LdapLoginRequest struct for LdapLoginRequest
type LdapLoginRequest struct {
	// Password for this user.
	Password *string `json:"password,omitempty"`
}

// NewLdapLoginRequest instantiates a new LdapLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapLoginRequest() *LdapLoginRequest {
	this := LdapLoginRequest{}
	return &this
}

// NewLdapLoginRequestWithDefaults instantiates a new LdapLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapLoginRequestWithDefaults() *LdapLoginRequest {
	this := LdapLoginRequest{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *LdapLoginRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapLoginRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *LdapLoginRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *LdapLoginRequest) SetPassword(v string) {
	o.Password = &v
}

func (o LdapLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableLdapLoginRequest struct {
	value *LdapLoginRequest
	isSet bool
}

func (v NullableLdapLoginRequest) Get() *LdapLoginRequest {
	return v.value
}

func (v *NullableLdapLoginRequest) Set(val *LdapLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapLoginRequest(val *LdapLoginRequest) *NullableLdapLoginRequest {
	return &NullableLdapLoginRequest{value: val, isSet: true}
}

func (v NullableLdapLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LdapUsersRequest struct for LdapUsersRequest
type LdapUsersRequest struct {
	// Comma-separated list of additional groups associated with the user.
	Groups []string `json:"groups,omitempty"`
	// Comma-separated list of policies associated with the user.
	Policies []string `json:"policies,omitempty"`
}

// NewLdapUsersRequest instantiates a new LdapUsersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapUsersRequest() *LdapUsersRequest {
	this := LdapUsersRequest{}
	return &this
}

// NewLdapUsersRequestWithDefaults instantiates a new LdapUsersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapUsersRequestWithDefaults() *LdapUsersRequest {
	this := LdapUsersRequest{}
	return &this
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *LdapUsersRequest) GetGroups() []string {
	if o == nil || o.Groups == nil {
		var ret []string
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapUsersRequest) GetGroupsOk() ([]string, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *LdapUsersRequest) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *LdapUsersRequest) SetGroups(v []string) {
	o.Groups = v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *LdapUsersRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapUsersRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *LdapUsersRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *LdapUsersRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o LdapUsersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableLdapUsersRequest struct {
	value *LdapUsersRequest
	isSet bool
}

func (v NullableLdapUsersRequest) Get() *LdapUsersRequest {
	return v.value
}

func (v *NullableLdapUsersRequest) Set(val *LdapUsersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapUsersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapUsersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapUsersRequest(val *LdapUsersRequest) *NullableLdapUsersRequest {
	return &NullableLdapUsersRequest{value: val, isSet: true}
}

func (v NullableLdapUsersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapUsersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MongodbatlasConfigRequest struct for MongodbatlasConfigRequest
type MongodbatlasConfigRequest struct {
	// MongoDB Atlas Programmatic Private Key
	PrivateKey string `json:"private_key"`
	// MongoDB Atlas Programmatic Public Key
	PublicKey string `json:"public_key"`
}

// NewMongodbatlasConfigRequest instantiates a new MongodbatlasConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMongodbatlasConfigRequest(privateKey string, publicKey string) *MongodbatlasConfigRequest {
	this := MongodbatlasConfigRequest{}
	this.PrivateKey = privateKey
	this.PublicKey = publicKey
	return &this
}

// NewMongodbatlasConfigRequestWithDefaults instantiates a new MongodbatlasConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMongodbatlasConfigRequestWithDefaults() *MongodbatlasConfigRequest {
	this := MongodbatlasConfigRequest{}
	return &this
}

// GetPrivateKey returns the PrivateKey field value
func (o *MongodbatlasConfigRequest) GetPrivateKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value
// and a boolean to check if the value has been set.
func (o *MongodbatlasConfigRequest) GetPrivateKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateKey, true
}

// SetPrivateKey sets field value
func (o *MongodbatlasConfigRequest) SetPrivateKey(v string) {
	o.PrivateKey = v
}

// GetPublicKey returns the PublicKey field value
func (o *MongodbatlasConfigRequest) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *MongodbatlasConfigRequest) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *MongodbatlasConfigRequest) SetPublicKey(v string) {
	o.PublicKey = v
}

func (o MongodbatlasConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["private_key"] = o.PrivateKey
	}
	if true {
		toSerialize["public_key"] = o.PublicKey
	}
	return json.Marshal(toSerialize)
}

type NullableMongodbatlasConfigRequest struct {
	value *MongodbatlasConfigRequest
	isSet bool
}

func (v NullableMongodbatlasConfigRequest) Get() *MongodbatlasConfigRequest {
	return v.value
}

func (v *NullableMongodbatlasConfigRequest) Set(val *MongodbatlasConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMongodbatlasConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMongodbatlasConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMongodbatlasConfigRequest(val *MongodbatlasConfigRequest) *NullableMongodbatlasConfigRequest {
	return &NullableMongodbatlasConfigRequest{value: val, isSet: true}
}

func (v NullableMongodbatlasConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMongodbatlasConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MongodbatlasRolesRequest struct for MongodbatlasRolesRequest
type MongodbatlasRolesRequest struct {
	// Access list entry in CIDR notation to be added for the API key. Optional for organization and project keys.
	CidrBlocks []string `json:"cidr_blocks,omitempty"`
	// IP address to be added to the access list for the API key. Optional for organization and project keys.
	IpAddresses []string `json:"ip_addresses,omitempty"`
	// The maximum allowed lifetime of credentials issued using this role.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Organization ID required for an organization API key
	OrganizationId *string `json:"organization_id,omitempty"`
	// Project ID the project API key belongs to.
	ProjectId *string `json:"project_id,omitempty"`
	// Roles assigned when an organization API Key is assigned to a project API key
	ProjectRoles []string `json:"project_roles,omitempty"`
	// List of roles that the API Key should be granted. A minimum of one role must be provided. Any roles provided must be valid for the assigned Project, required for organization and project keys.
	Roles []string `json:"roles"`
	// Duration in seconds after which the issued credential should expire. Defaults to 0, in which case the value will fallback to the system/mount defaults.
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewMongodbatlasRolesRequest instantiates a new MongodbatlasRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMongodbatlasRolesRequest(roles []string) *MongodbatlasRolesRequest {
	this := MongodbatlasRolesRequest{}
	this.Roles = roles
	return &this
}

// NewMongodbatlasRolesRequestWithDefaults instantiates a new MongodbatlasRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMongodbatlasRolesRequestWithDefaults() *MongodbatlasRolesRequest {
	this := MongodbatlasRolesRequest{}
	return &this
}

// GetCidrBlocks returns the CidrBlocks field value if set, zero value otherwise.
func (o *MongodbatlasRolesRequest) GetCidrBlocks() []string {
	if o == nil || o.CidrBlocks == nil {
		var ret []string
		return ret
	}
	return o.CidrBlocks
}

// GetCidrBlocksOk returns a tuple with the CidrBlocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongodbatlasRolesRequest) GetCidrBlocksOk() ([]string, bool) {
	if o == nil || o.CidrBlocks == nil {
		return nil, false
	}
	return o.CidrBlocks, true
}

// HasCidrBlocks returns a boolean if a field has been set.
func (o *MongodbatlasRolesRequest) HasCidrBlocks() bool {
	if o != nil && o.CidrBlocks != nil {
		return true
	}

	return false
}

// SetCidrBlocks gets a reference to the given []string and assigns it to the CidrBlocks field.
func (o *MongodbatlasRolesRequest) SetCidrBlocks(v []string) {
	o.CidrBlocks = v
}

// GetIpAddresses returns the IpAddresses field value if set, zero value otherwise.
func (o *MongodbatlasRolesRequest) GetIpAddresses() []string {
	if o == nil || o.IpAddresses == nil {
		var ret []string
		return ret
	}
	return o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongodbatlasRolesRequest) GetIpAddressesOk() ([]string, bool) {
	if o == nil || o.IpAddresses == nil {
		return nil, false
	}
	return o.IpAddresses, true
}

// HasIpAddresses returns a boolean if a field has been set.
func (o *MongodbatlasRolesRequest) HasIpAddresses() bool {
	if o != nil && o.IpAddresses != nil {
		return true
	}

	return false
}

// SetIpAddresses gets a reference to the given []string and assigns it to the IpAddresses field.
func (o *MongodbatlasRolesRequest) SetIpAddresses(v []string) {
	o.IpAddresses = v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *MongodbatlasRolesRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongodbatlasRolesRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *MongodbatlasRolesRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *MongodbatlasRolesRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *MongodbatlasRolesRequest) GetOrganizationId() string {
	if o == nil || o.OrganizationId == nil {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongodbatlasRolesRequest) GetOrganizationIdOk() (*string, bool) {
	if o == nil || o.OrganizationId == nil {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *MongodbatlasRolesRequest) HasOrganizationId() bool {
	if o != nil && o.OrganizationId != nil {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *MongodbatlasRolesRequest) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *MongodbatlasRolesRequest) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongodbatlasRolesRequest) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *MongodbatlasRolesRequest) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *MongodbatlasRolesRequest) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectRoles returns the ProjectRoles field value if set, zero value otherwise.
func (o *MongodbatlasRolesRequest) GetProjectRoles() []string {
	if o == nil || o.ProjectRoles == nil {
		var ret []string
		return ret
	}
	return o.ProjectRoles
}

// GetProjectRolesOk returns a tuple with the ProjectRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongodbatlasRolesRequest) GetProjectRolesOk() ([]string, bool) {
	if o == nil || o.ProjectRoles == nil {
		return nil, false
	}
	return o.ProjectRoles, true
}

// HasProjectRoles returns a boolean if a field has been set.
func (o *MongodbatlasRolesRequest) HasProjectRoles() bool {
	if o != nil && o.ProjectRoles != nil {
		return true
	}

	return false
}

// SetProjectRoles gets a reference to the given []string and assigns it to the ProjectRoles field.
func (o *MongodbatlasRolesRequest) SetProjectRoles(v []string) {
	o.ProjectRoles = v
}

// GetRoles returns the Roles field value
func (o *MongodbatlasRolesRequest) GetRoles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
func (o *MongodbatlasRolesRequest) GetRolesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Roles, true
}

// SetRoles sets field value
func (o *MongodbatlasRolesRequest) SetRoles(v []string) {
	o.Roles = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *MongodbatlasRolesRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongodbatlasRolesRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *MongodbatlasRolesRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *MongodbatlasRolesRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o MongodbatlasRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CidrBlocks != nil {
		toSerialize["cidr_blocks"] = o.CidrBlocks
	}
	if o.IpAddresses != nil {
		toSerialize["ip_addresses"] = o.IpAddresses
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.OrganizationId != nil {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if o.ProjectId != nil {
		toSerialize["project_id"] = o.ProjectId
	}
	if o.ProjectRoles != nil {
		toSerialize["project_roles"] = o.ProjectRoles
	}
	if true {
		toSerialize["roles"] = o.Roles
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableMongodbatlasRolesRequest struct {
	value *MongodbatlasRolesRequest
	isSet bool
}

func (v NullableMongodbatlasRolesRequest) Get() *MongodbatlasRolesRequest {
	return v.value
}

func (v *NullableMongodbatlasRolesRequest) Set(val *MongodbatlasRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMongodbatlasRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMongodbatlasRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMongodbatlasRolesRequest(val *MongodbatlasRolesRequest) *NullableMongodbatlasRolesRequest {
	return &NullableMongodbatlasRolesRequest{value: val, isSet: true}
}

func (v NullableMongodbatlasRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMongodbatlasRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// NomadConfigAccessRequest struct for NomadConfigAccessRequest
type NomadConfigAccessRequest struct {
	// Nomad server address
	Address *string `json:"address,omitempty"`
	// CA certificate to use when verifying Nomad server certificate, must be x509 PEM encoded.
	CaCert *string `json:"ca_cert,omitempty"`
	// Client certificate used for Nomad's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_key.
	ClientCert *string `json:"client_cert,omitempty"`
	// Client key used for Nomad's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_cert.
	ClientKey *string `json:"client_key,omitempty"`
	// Max length for name of generated Nomad tokens
	MaxTokenNameLength *int32 `json:"max_token_name_length,omitempty"`
	// Token for API calls
	Token *string `json:"token,omitempty"`
}

// NewNomadConfigAccessRequest instantiates a new NomadConfigAccessRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNomadConfigAccessRequest() *NomadConfigAccessRequest {
	this := NomadConfigAccessRequest{}
	return &this
}

// NewNomadConfigAccessRequestWithDefaults instantiates a new NomadConfigAccessRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNomadConfigAccessRequestWithDefaults() *NomadConfigAccessRequest {
	this := NomadConfigAccessRequest{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *NomadConfigAccessRequest) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigAccessRequest) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *NomadConfigAccessRequest) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *NomadConfigAccessRequest) SetAddress(v string) {
	o.Address = &v
}

// GetCaCert returns the CaCert field value if set, zero value otherwise.
func (o *NomadConfigAccessRequest) GetCaCert() string {
	if o == nil || o.CaCert == nil {
		var ret string
		return ret
	}
	return *o.CaCert
}

// GetCaCertOk returns a tuple with the CaCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigAccessRequest) GetCaCertOk() (*string, bool) {
	if o == nil || o.CaCert == nil {
		return nil, false
	}
	return o.CaCert, true
}

// HasCaCert returns a boolean if a field has been set.
func (o *NomadConfigAccessRequest) HasCaCert() bool {
	if o != nil && o.CaCert != nil {
		return true
	}

	return false
}

// SetCaCert gets a reference to the given string and assigns it to the CaCert field.
func (o *NomadConfigAccessRequest) SetCaCert(v string) {
	o.CaCert = &v
}

// GetClientCert returns the ClientCert field value if set, zero value otherwise.
func (o *NomadConfigAccessRequest) GetClientCert() string {
	if o == nil || o.ClientCert == nil {
		var ret string
		return ret
	}
	return *o.ClientCert
}

// GetClientCertOk returns a tuple with the ClientCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigAccessRequest) GetClientCertOk() (*string, bool) {
	if o == nil || o.ClientCert == nil {
		return nil, false
	}
	return o.ClientCert, true
}

// HasClientCert returns a boolean if a field has been set.
func (o *NomadConfigAccessRequest) HasClientCert() bool {
	if o != nil && o.ClientCert != nil {
		return true
	}

	return false
}

// SetClientCert gets a reference to the given string and assigns it to the ClientCert field.
func (o *NomadConfigAccessRequest) SetClientCert(v string) {
	o.ClientCert = &v
}

// GetClientKey returns the ClientKey field value if set, zero value otherwise.
func (o *NomadConfigAccessRequest) GetClientKey() string {
	if o == nil || o.ClientKey == nil {
		var ret string
		return ret
	}
	return *o.ClientKey
}

// GetClientKeyOk returns a tuple with the ClientKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigAccessRequest) GetClientKeyOk() (*string, bool) {
	if o == nil || o.ClientKey == nil {
		return nil, false
	}
	return o.ClientKey, true
}

// HasClientKey returns a boolean if a field has been set.
func (o *NomadConfigAccessRequest) HasClientKey() bool {
	if o != nil && o.ClientKey != nil {
		return true
	}

	return false
}

// SetClientKey gets a reference to the given string and assigns it to the ClientKey field.
func (o *NomadConfigAccessRequest) SetClientKey(v string) {
	o.ClientKey = &v
}

// GetMaxTokenNameLength returns the MaxTokenNameLength field value if set, zero value otherwise.
func (o *NomadConfigAccessRequest) GetMaxTokenNameLength() int32 {
	if o == nil || o.MaxTokenNameLength == nil {
		var ret int32
		return ret
	}
	return *o.MaxTokenNameLength
}

// GetMaxTokenNameLengthOk returns a tuple with the MaxTokenNameLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigAccessRequest) GetMaxTokenNameLengthOk() (*int32, bool) {
	if o == nil || o.MaxTokenNameLength == nil {
		return nil, false
	}
	return o.MaxTokenNameLength, true
}

// HasMaxTokenNameLength returns a boolean if a field has been set.
func (o *NomadConfigAccessRequest) HasMaxTokenNameLength() bool {
	if o != nil && o.MaxTokenNameLength != nil {
		return true
	}

	return false
}

// SetMaxTokenNameLength gets a reference to the given int32 and assigns it to the MaxTokenNameLength field.
func (o *NomadConfigAccessRequest) SetMaxTokenNameLength(v int32) {
	o.MaxTokenNameLength = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *NomadConfigAccessRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigAccessRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *NomadConfigAccessRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *NomadConfigAccessRequest) SetToken(v string) {
	o.Token = &v
}

func (o NomadConfigAccessRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.CaCert != nil {
		toSerialize["ca_cert"] = o.CaCert
	}
	if o.ClientCert != nil {
		toSerialize["client_cert"] = o.ClientCert
	}
	if o.ClientKey != nil {
		toSerialize["client_key"] = o.ClientKey
	}
	if o.MaxTokenNameLength != nil {
		toSerialize["max_token_name_length"] = o.MaxTokenNameLength
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableNomadConfigAccessRequest struct {
	value *NomadConfigAccessRequest
	isSet bool
}

func (v NullableNomadConfigAccessRequest) Get() *NomadConfigAccessRequest {
	return v.value
}

func (v *NullableNomadConfigAccessRequest) Set(val *NomadConfigAccessRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNomadConfigAccessRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNomadConfigAccessRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNomadConfigAccessRequest(val *NomadConfigAccessRequest) *NullableNomadConfigAccessRequest {
	return &NullableNomadConfigAccessRequest{value: val, isSet: true}
}

func (v NullableNomadConfigAccessRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNomadConfigAccessRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// NomadConfigLeaseRequest struct for NomadConfigLeaseRequest
type NomadConfigLeaseRequest struct {
	// Duration after which the issued token should not be allowed to be renewed
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Duration before which the issued token needs renewal
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewNomadConfigLeaseRequest instantiates a new NomadConfigLeaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNomadConfigLeaseRequest() *NomadConfigLeaseRequest {
	this := NomadConfigLeaseRequest{}
	return &this
}

// NewNomadConfigLeaseRequestWithDefaults instantiates a new NomadConfigLeaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNomadConfigLeaseRequestWithDefaults() *NomadConfigLeaseRequest {
	this := NomadConfigLeaseRequest{}
	return &this
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *NomadConfigLeaseRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigLeaseRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *NomadConfigLeaseRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *NomadConfigLeaseRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *NomadConfigLeaseRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigLeaseRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *NomadConfigLeaseRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *NomadConfigLeaseRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o NomadConfigLeaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableNomadConfigLeaseRequest struct {
	value *NomadConfigLeaseRequest
	isSet bool
}

func (v NullableNomadConfigLeaseRequest) Get() *NomadConfigLeaseRequest {
	return v.value
}

func (v *NullableNomadConfigLeaseRequest) Set(val *NomadConfigLeaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNomadConfigLeaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNomadConfigLeaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNomadConfigLeaseRequest(val *NomadConfigLeaseRequest) *NullableNomadConfigLeaseRequest {
	return &NullableNomadConfigLeaseRequest{value: val, isSet: true}
}

func (v NullableNomadConfigLeaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNomadConfigLeaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// NomadRoleRequest struct for NomadRoleRequest
type NomadRoleRequest struct {
	// Boolean value describing if the token should be global or not. Defaults to false.
	Global *bool `json:"global,omitempty"`
	// Comma-separated string or list of policies as previously created in Nomad. Required for 'client' token.
	Policies []string `json:"policies,omitempty"`
	// Which type of token to create: 'client' or 'management'. If a 'management' token, the \"policies\" parameter is not required. Defaults to 'client'.
	Type *string `json:"type,omitempty"`
}

// NewNomadRoleRequest instantiates a new NomadRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNomadRoleRequest() *NomadRoleRequest {
	this := NomadRoleRequest{}
	var type_ string = "client"
	this.Type = &type_
	return &this
}

// NewNomadRoleRequestWithDefaults instantiates a new NomadRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNomadRoleRequestWithDefaults() *NomadRoleRequest {
	this := NomadRoleRequest{}
	var type_ string = "client"
	this.Type = &type_
	return &this
}

// GetGlobal returns the Global field value if set, zero value otherwise.
func (o *NomadRoleRequest) GetGlobal() bool {
	if o == nil || o.Global == nil {
		var ret bool
		return ret
	}
	return *o.Global
}

// GetGlobalOk returns a tuple with the Global field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadRoleRequest) GetGlobalOk() (*bool, bool) {
	if o == nil || o.Global == nil {
		return nil, false
	}
	return o.Global, true
}

// HasGlobal returns a boolean if a field has been set.
func (o *NomadRoleRequest) HasGlobal() bool {
	if o != nil && o.Global != nil {
		return true
	}

	return false
}

// SetGlobal gets a reference to the given bool and assigns it to the Global field.
func (o *NomadRoleRequest) SetGlobal(v bool) {
	o.Global = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *NomadRoleRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadRoleRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *NomadRoleRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *NomadRoleRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NomadRoleRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadRoleRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *NomadRoleRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *NomadRoleRequest) SetType(v string) {
	o.Type = &v
}

func (o NomadRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Global != nil {
		toSerialize["global"] = o.Global
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableNomadRoleRequest struct {
	value *NomadRoleRequest
	isSet bool
}

func (v NullableNomadRoleRequest) Get() *NomadRoleRequest {
	return v.value
}

func (v *NullableNomadRoleRequest) Set(val *NomadRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNomadRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNomadRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNomadRoleRequest(val *NomadRoleRequest) *NullableNomadRoleRequest {
	return &NullableNomadRoleRequest{value: val, isSet: true}
}

func (v NullableNomadRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNomadRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OciConfigRequest struct for OciConfigRequest
type OciConfigRequest struct {
	// The tenancy id of the account.
	HomeTenancyId *string `json:"home_tenancy_id,omitempty"`
}

// NewOciConfigRequest instantiates a new OciConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOciConfigRequest() *OciConfigRequest {
	this := OciConfigRequest{}
	return &this
}

// NewOciConfigRequestWithDefaults instantiates a new OciConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOciConfigRequestWithDefaults() *OciConfigRequest {
	this := OciConfigRequest{}
	return &this
}

// GetHomeTenancyId returns the HomeTenancyId field value if set, zero value otherwise.
func (o *OciConfigRequest) GetHomeTenancyId() string {
	if o == nil || o.HomeTenancyId == nil {
		var ret string
		return ret
	}
	return *o.HomeTenancyId
}

// GetHomeTenancyIdOk returns a tuple with the HomeTenancyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciConfigRequest) GetHomeTenancyIdOk() (*string, bool) {
	if o == nil || o.HomeTenancyId == nil {
		return nil, false
	}
	return o.HomeTenancyId, true
}

// HasHomeTenancyId returns a boolean if a field has been set.
func (o *OciConfigRequest) HasHomeTenancyId() bool {
	if o != nil && o.HomeTenancyId != nil {
		return true
	}

	return false
}

// SetHomeTenancyId gets a reference to the given string and assigns it to the HomeTenancyId field.
func (o *OciConfigRequest) SetHomeTenancyId(v string) {
	o.HomeTenancyId = &v
}

func (o OciConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HomeTenancyId != nil {
		toSerialize["home_tenancy_id"] = o.HomeTenancyId
	}
	return json.Marshal(toSerialize)
}

type NullableOciConfigRequest struct {
	value *OciConfigRequest
	isSet bool
}

func (v NullableOciConfigRequest) Get() *OciConfigRequest {
	return v.value
}

func (v *NullableOciConfigRequest) Set(val *OciConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOciConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOciConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOciConfigRequest(val *OciConfigRequest) *NullableOciConfigRequest {
	return &NullableOciConfigRequest{value: val, isSet: true}
}

func (v NullableOciConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOciConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OciLoginRequest struct for OciLoginRequest
type OciLoginRequest struct {
	// The signed headers of the client
	RequestHeaders *string `json:"request_headers,omitempty"`
}

// NewOciLoginRequest instantiates a new OciLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOciLoginRequest() *OciLoginRequest {
	this := OciLoginRequest{}
	return &this
}

// NewOciLoginRequestWithDefaults instantiates a new OciLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOciLoginRequestWithDefaults() *OciLoginRequest {
	this := OciLoginRequest{}
	return &this
}

// GetRequestHeaders returns the RequestHeaders field value if set, zero value otherwise.
func (o *OciLoginRequest) GetRequestHeaders() string {
	if o == nil || o.RequestHeaders == nil {
		var ret string
		return ret
	}
	return *o.RequestHeaders
}

// GetRequestHeadersOk returns a tuple with the RequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciLoginRequest) GetRequestHeadersOk() (*string, bool) {
	if o == nil || o.RequestHeaders == nil {
		return nil, false
	}
	return o.RequestHeaders, true
}

// HasRequestHeaders returns a boolean if a field has been set.
func (o *OciLoginRequest) HasRequestHeaders() bool {
	if o != nil && o.RequestHeaders != nil {
		return true
	}

	return false
}

// SetRequestHeaders gets a reference to the given string and assigns it to the RequestHeaders field.
func (o *OciLoginRequest) SetRequestHeaders(v string) {
	o.RequestHeaders = &v
}

func (o OciLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RequestHeaders != nil {
		toSerialize["request_headers"] = o.RequestHeaders
	}
	return json.Marshal(toSerialize)
}

type NullableOciLoginRequest struct {
	value *OciLoginRequest
	isSet bool
}

func (v NullableOciLoginRequest) Get() *OciLoginRequest {
	return v.value
}

func (v *NullableOciLoginRequest) Set(val *OciLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOciLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOciLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOciLoginRequest(val *OciLoginRequest) *NullableOciLoginRequest {
	return &NullableOciLoginRequest{value: val, isSet: true}
}

func (v NullableOciLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOciLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OciRoleRequest struct for OciRoleRequest
type OciRoleRequest struct {
	// A comma separated list of Group or Dynamic Group OCIDs that are allowed to take this role.
	OcidList []string `json:"ocid_list,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
}

// NewOciRoleRequest instantiates a new OciRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOciRoleRequest() *OciRoleRequest {
	this := OciRoleRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewOciRoleRequestWithDefaults instantiates a new OciRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOciRoleRequestWithDefaults() *OciRoleRequest {
	this := OciRoleRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetOcidList returns the OcidList field value if set, zero value otherwise.
func (o *OciRoleRequest) GetOcidList() []string {
	if o == nil || o.OcidList == nil {
		var ret []string
		return ret
	}
	return o.OcidList
}

// GetOcidListOk returns a tuple with the OcidList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciRoleRequest) GetOcidListOk() ([]string, bool) {
	if o == nil || o.OcidList == nil {
		return nil, false
	}
	return o.OcidList, true
}

// HasOcidList returns a boolean if a field has been set.
func (o *OciRoleRequest) HasOcidList() bool {
	if o != nil && o.OcidList != nil {
		return true
	}

	return false
}

// SetOcidList gets a reference to the given []string and assigns it to the OcidList field.
func (o *OciRoleRequest) SetOcidList(v []string) {
	o.OcidList = v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *OciRoleRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciRoleRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *OciRoleRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *OciRoleRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *OciRoleRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciRoleRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *OciRoleRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *OciRoleRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *OciRoleRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciRoleRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *OciRoleRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *OciRoleRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *OciRoleRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciRoleRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *OciRoleRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *OciRoleRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *OciRoleRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciRoleRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *OciRoleRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *OciRoleRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *OciRoleRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciRoleRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *OciRoleRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *OciRoleRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *OciRoleRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciRoleRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *OciRoleRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *OciRoleRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *OciRoleRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciRoleRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *OciRoleRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *OciRoleRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *OciRoleRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciRoleRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *OciRoleRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *OciRoleRequest) SetTokenType(v string) {
	o.TokenType = &v
}

func (o OciRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OcidList != nil {
		toSerialize["ocid_list"] = o.OcidList
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	return json.Marshal(toSerialize)
}

type NullableOciRoleRequest struct {
	value *OciRoleRequest
	isSet bool
}

func (v NullableOciRoleRequest) Get() *OciRoleRequest {
	return v.value
}

func (v *NullableOciRoleRequest) Set(val *OciRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOciRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOciRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOciRoleRequest(val *OciRoleRequest) *NullableOciRoleRequest {
	return &NullableOciRoleRequest{value: val, isSet: true}
}

func (v NullableOciRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOciRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OidcConfigRequest struct for OidcConfigRequest
type OidcConfigRequest struct {
	// The value against which to match the 'iss' claim in a JWT. Optional.
	BoundIssuer *string `json:"bound_issuer,omitempty"`
	// The default role to use if none is provided during login. If not set, a role is required during login.
	DefaultRole *string `json:"default_role,omitempty"`
	// The CA certificate or chain of certificates, in PEM format, to use to validate connections to the JWKS URL. If not set, system certificates are used.
	JwksCaPem *string `json:"jwks_ca_pem,omitempty"`
	// JWKS URL to use to authenticate signatures. Cannot be used with \"oidc_discovery_url\" or \"jwt_validation_pubkeys\".
	JwksUrl *string `json:"jwks_url,omitempty"`
	// A list of supported signing algorithms. Defaults to RS256.
	JwtSupportedAlgs []string `json:"jwt_supported_algs,omitempty"`
	// A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used with \"jwks_url\" or \"oidc_discovery_url\".
	JwtValidationPubkeys []string `json:"jwt_validation_pubkeys,omitempty"`
	// Pass namespace in the OIDC state parameter instead of as a separate query parameter. With this setting, the allowed redirect URL(s) in Vault and on the provider side should not contain a namespace query parameter. This means only one redirect URL entry needs to be maintained on the provider side for all vault namespaces that will be authenticating against it. Defaults to true for new configs.
	NamespaceInState *bool `json:"namespace_in_state,omitempty"`
	// The OAuth Client ID configured with your OIDC provider.
	OidcClientId *string `json:"oidc_client_id,omitempty"`
	// The OAuth Client Secret configured with your OIDC provider.
	OidcClientSecret *string `json:"oidc_client_secret,omitempty"`
	// The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used.
	OidcDiscoveryCaPem *string `json:"oidc_discovery_ca_pem,omitempty"`
	// OIDC Discovery URL, without any .well-known component (base path). Cannot be used with \"jwks_url\" or \"jwt_validation_pubkeys\".
	OidcDiscoveryUrl *string `json:"oidc_discovery_url,omitempty"`
	// The response mode to be used in the OAuth2 request. Allowed values are 'query' and 'form_post'.
	OidcResponseMode *string `json:"oidc_response_mode,omitempty"`
	// The response types to request. Allowed values are 'code' and 'id_token'. Defaults to 'code'.
	OidcResponseTypes []string `json:"oidc_response_types,omitempty"`
	// Provider-specific configuration. Optional.
	ProviderConfig map[string]interface{} `json:"provider_config,omitempty"`
}

// NewOidcConfigRequest instantiates a new OidcConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcConfigRequest() *OidcConfigRequest {
	this := OidcConfigRequest{}
	return &this
}

// NewOidcConfigRequestWithDefaults instantiates a new OidcConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcConfigRequestWithDefaults() *OidcConfigRequest {
	this := OidcConfigRequest{}
	return &this
}

// GetBoundIssuer returns the BoundIssuer field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetBoundIssuer() string {
	if o == nil || o.BoundIssuer == nil {
		var ret string
		return ret
	}
	return *o.BoundIssuer
}

// GetBoundIssuerOk returns a tuple with the BoundIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetBoundIssuerOk() (*string, bool) {
	if o == nil || o.BoundIssuer == nil {
		return nil, false
	}
	return o.BoundIssuer, true
}

// HasBoundIssuer returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasBoundIssuer() bool {
	if o != nil && o.BoundIssuer != nil {
		return true
	}

	return false
}

// SetBoundIssuer gets a reference to the given string and assigns it to the BoundIssuer field.
func (o *OidcConfigRequest) SetBoundIssuer(v string) {
	o.BoundIssuer = &v
}

// GetDefaultRole returns the DefaultRole field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetDefaultRole() string {
	if o == nil || o.DefaultRole == nil {
		var ret string
		return ret
	}
	return *o.DefaultRole
}

// GetDefaultRoleOk returns a tuple with the DefaultRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetDefaultRoleOk() (*string, bool) {
	if o == nil || o.DefaultRole == nil {
		return nil, false
	}
	return o.DefaultRole, true
}

// HasDefaultRole returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasDefaultRole() bool {
	if o != nil && o.DefaultRole != nil {
		return true
	}

	return false
}

// SetDefaultRole gets a reference to the given string and assigns it to the DefaultRole field.
func (o *OidcConfigRequest) SetDefaultRole(v string) {
	o.DefaultRole = &v
}

// GetJwksCaPem returns the JwksCaPem field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetJwksCaPem() string {
	if o == nil || o.JwksCaPem == nil {
		var ret string
		return ret
	}
	return *o.JwksCaPem
}

// GetJwksCaPemOk returns a tuple with the JwksCaPem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetJwksCaPemOk() (*string, bool) {
	if o == nil || o.JwksCaPem == nil {
		return nil, false
	}
	return o.JwksCaPem, true
}

// HasJwksCaPem returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasJwksCaPem() bool {
	if o != nil && o.JwksCaPem != nil {
		return true
	}

	return false
}

// SetJwksCaPem gets a reference to the given string and assigns it to the JwksCaPem field.
func (o *OidcConfigRequest) SetJwksCaPem(v string) {
	o.JwksCaPem = &v
}

// GetJwksUrl returns the JwksUrl field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetJwksUrl() string {
	if o == nil || o.JwksUrl == nil {
		var ret string
		return ret
	}
	return *o.JwksUrl
}

// GetJwksUrlOk returns a tuple with the JwksUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetJwksUrlOk() (*string, bool) {
	if o == nil || o.JwksUrl == nil {
		return nil, false
	}
	return o.JwksUrl, true
}

// HasJwksUrl returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasJwksUrl() bool {
	if o != nil && o.JwksUrl != nil {
		return true
	}

	return false
}

// SetJwksUrl gets a reference to the given string and assigns it to the JwksUrl field.
func (o *OidcConfigRequest) SetJwksUrl(v string) {
	o.JwksUrl = &v
}

// GetJwtSupportedAlgs returns the JwtSupportedAlgs field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetJwtSupportedAlgs() []string {
	if o == nil || o.JwtSupportedAlgs == nil {
		var ret []string
		return ret
	}
	return o.JwtSupportedAlgs
}

// GetJwtSupportedAlgsOk returns a tuple with the JwtSupportedAlgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetJwtSupportedAlgsOk() ([]string, bool) {
	if o == nil || o.JwtSupportedAlgs == nil {
		return nil, false
	}
	return o.JwtSupportedAlgs, true
}

// HasJwtSupportedAlgs returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasJwtSupportedAlgs() bool {
	if o != nil && o.JwtSupportedAlgs != nil {
		return true
	}

	return false
}

// SetJwtSupportedAlgs gets a reference to the given []string and assigns it to the JwtSupportedAlgs field.
func (o *OidcConfigRequest) SetJwtSupportedAlgs(v []string) {
	o.JwtSupportedAlgs = v
}

// GetJwtValidationPubkeys returns the JwtValidationPubkeys field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetJwtValidationPubkeys() []string {
	if o == nil || o.JwtValidationPubkeys == nil {
		var ret []string
		return ret
	}
	return o.JwtValidationPubkeys
}

// GetJwtValidationPubkeysOk returns a tuple with the JwtValidationPubkeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetJwtValidationPubkeysOk() ([]string, bool) {
	if o == nil || o.JwtValidationPubkeys == nil {
		return nil, false
	}
	return o.JwtValidationPubkeys, true
}

// HasJwtValidationPubkeys returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasJwtValidationPubkeys() bool {
	if o != nil && o.JwtValidationPubkeys != nil {
		return true
	}

	return false
}

// SetJwtValidationPubkeys gets a reference to the given []string and assigns it to the JwtValidationPubkeys field.
func (o *OidcConfigRequest) SetJwtValidationPubkeys(v []string) {
	o.JwtValidationPubkeys = v
}

// GetNamespaceInState returns the NamespaceInState field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetNamespaceInState() bool {
	if o == nil || o.NamespaceInState == nil {
		var ret bool
		return ret
	}
	return *o.NamespaceInState
}

// GetNamespaceInStateOk returns a tuple with the NamespaceInState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetNamespaceInStateOk() (*bool, bool) {
	if o == nil || o.NamespaceInState == nil {
		return nil, false
	}
	return o.NamespaceInState, true
}

// HasNamespaceInState returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasNamespaceInState() bool {
	if o != nil && o.NamespaceInState != nil {
		return true
	}

	return false
}

// SetNamespaceInState gets a reference to the given bool and assigns it to the NamespaceInState field.
func (o *OidcConfigRequest) SetNamespaceInState(v bool) {
	o.NamespaceInState = &v
}

// GetOidcClientId returns the OidcClientId field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetOidcClientId() string {
	if o == nil || o.OidcClientId == nil {
		var ret string
		return ret
	}
	return *o.OidcClientId
}

// GetOidcClientIdOk returns a tuple with the OidcClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetOidcClientIdOk() (*string, bool) {
	if o == nil || o.OidcClientId == nil {
		return nil, false
	}
	return o.OidcClientId, true
}

// HasOidcClientId returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasOidcClientId() bool {
	if o != nil && o.OidcClientId != nil {
		return true
	}

	return false
}

// SetOidcClientId gets a reference to the given string and assigns it to the OidcClientId field.
func (o *OidcConfigRequest) SetOidcClientId(v string) {
	o.OidcClientId = &v
}

// GetOidcClientSecret returns the OidcClientSecret field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetOidcClientSecret() string {
	if o == nil || o.OidcClientSecret == nil {
		var ret string
		return ret
	}
	return *o.OidcClientSecret
}

// GetOidcClientSecretOk returns a tuple with the OidcClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetOidcClientSecretOk() (*string, bool) {
	if o == nil || o.OidcClientSecret == nil {
		return nil, false
	}
	return o.OidcClientSecret, true
}

// HasOidcClientSecret returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasOidcClientSecret() bool {
	if o != nil && o.OidcClientSecret != nil {
		return true
	}

	return false
}

// SetOidcClientSecret gets a reference to the given string and assigns it to the OidcClientSecret field.
func (o *OidcConfigRequest) SetOidcClientSecret(v string) {
	o.OidcClientSecret = &v
}

// GetOidcDiscoveryCaPem returns the OidcDiscoveryCaPem field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetOidcDiscoveryCaPem() string {
	if o == nil || o.OidcDiscoveryCaPem == nil {
		var ret string
		return ret
	}
	return *o.OidcDiscoveryCaPem
}

// GetOidcDiscoveryCaPemOk returns a tuple with the OidcDiscoveryCaPem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetOidcDiscoveryCaPemOk() (*string, bool) {
	if o == nil || o.OidcDiscoveryCaPem == nil {
		return nil, false
	}
	return o.OidcDiscoveryCaPem, true
}

// HasOidcDiscoveryCaPem returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasOidcDiscoveryCaPem() bool {
	if o != nil && o.OidcDiscoveryCaPem != nil {
		return true
	}

	return false
}

// SetOidcDiscoveryCaPem gets a reference to the given string and assigns it to the OidcDiscoveryCaPem field.
func (o *OidcConfigRequest) SetOidcDiscoveryCaPem(v string) {
	o.OidcDiscoveryCaPem = &v
}

// GetOidcDiscoveryUrl returns the OidcDiscoveryUrl field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetOidcDiscoveryUrl() string {
	if o == nil || o.OidcDiscoveryUrl == nil {
		var ret string
		return ret
	}
	return *o.OidcDiscoveryUrl
}

// GetOidcDiscoveryUrlOk returns a tuple with the OidcDiscoveryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetOidcDiscoveryUrlOk() (*string, bool) {
	if o == nil || o.OidcDiscoveryUrl == nil {
		return nil, false
	}
	return o.OidcDiscoveryUrl, true
}

// HasOidcDiscoveryUrl returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasOidcDiscoveryUrl() bool {
	if o != nil && o.OidcDiscoveryUrl != nil {
		return true
	}

	return false
}

// SetOidcDiscoveryUrl gets a reference to the given string and assigns it to the OidcDiscoveryUrl field.
func (o *OidcConfigRequest) SetOidcDiscoveryUrl(v string) {
	o.OidcDiscoveryUrl = &v
}

// GetOidcResponseMode returns the OidcResponseMode field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetOidcResponseMode() string {
	if o == nil || o.OidcResponseMode == nil {
		var ret string
		return ret
	}
	return *o.OidcResponseMode
}

// GetOidcResponseModeOk returns a tuple with the OidcResponseMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetOidcResponseModeOk() (*string, bool) {
	if o == nil || o.OidcResponseMode == nil {
		return nil, false
	}
	return o.OidcResponseMode, true
}

// HasOidcResponseMode returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasOidcResponseMode() bool {
	if o != nil && o.OidcResponseMode != nil {
		return true
	}

	return false
}

// SetOidcResponseMode gets a reference to the given string and assigns it to the OidcResponseMode field.
func (o *OidcConfigRequest) SetOidcResponseMode(v string) {
	o.OidcResponseMode = &v
}

// GetOidcResponseTypes returns the OidcResponseTypes field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetOidcResponseTypes() []string {
	if o == nil || o.OidcResponseTypes == nil {
		var ret []string
		return ret
	}
	return o.OidcResponseTypes
}

// GetOidcResponseTypesOk returns a tuple with the OidcResponseTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetOidcResponseTypesOk() ([]string, bool) {
	if o == nil || o.OidcResponseTypes == nil {
		return nil, false
	}
	return o.OidcResponseTypes, true
}

// HasOidcResponseTypes returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasOidcResponseTypes() bool {
	if o != nil && o.OidcResponseTypes != nil {
		return true
	}

	return false
}

// SetOidcResponseTypes gets a reference to the given []string and assigns it to the OidcResponseTypes field.
func (o *OidcConfigRequest) SetOidcResponseTypes(v []string) {
	o.OidcResponseTypes = v
}

// GetProviderConfig returns the ProviderConfig field value if set, zero value otherwise.
func (o *OidcConfigRequest) GetProviderConfig() map[string]interface{} {
	if o == nil || o.ProviderConfig == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ProviderConfig
}

// GetProviderConfigOk returns a tuple with the ProviderConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcConfigRequest) GetProviderConfigOk() (map[string]interface{}, bool) {
	if o == nil || o.ProviderConfig == nil {
		return nil, false
	}
	return o.ProviderConfig, true
}

// HasProviderConfig returns a boolean if a field has been set.
func (o *OidcConfigRequest) HasProviderConfig() bool {
	if o != nil && o.ProviderConfig != nil {
		return true
	}

	return false
}

// SetProviderConfig gets a reference to the given map[string]interface{} and assigns it to the ProviderConfig field.
func (o *OidcConfigRequest) SetProviderConfig(v map[string]interface{}) {
	o.ProviderConfig = v
}

func (o OidcConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BoundIssuer != nil {
		toSerialize["bound_issuer"] = o.BoundIssuer
	}
	if o.DefaultRole != nil {
		toSerialize["default_role"] = o.DefaultRole
	}
	if o.JwksCaPem != nil {
		toSerialize["jwks_ca_pem"] = o.JwksCaPem
	}
	if o.JwksUrl != nil {
		toSerialize["jwks_url"] = o.JwksUrl
	}
	if o.JwtSupportedAlgs != nil {
		toSerialize["jwt_supported_algs"] = o.JwtSupportedAlgs
	}
	if o.JwtValidationPubkeys != nil {
		toSerialize["jwt_validation_pubkeys"] = o.JwtValidationPubkeys
	}
	if o.NamespaceInState != nil {
		toSerialize["namespace_in_state"] = o.NamespaceInState
	}
	if o.OidcClientId != nil {
		toSerialize["oidc_client_id"] = o.OidcClientId
	}
	if o.OidcClientSecret != nil {
		toSerialize["oidc_client_secret"] = o.OidcClientSecret
	}
	if o.OidcDiscoveryCaPem != nil {
		toSerialize["oidc_discovery_ca_pem"] = o.OidcDiscoveryCaPem
	}
	if o.OidcDiscoveryUrl != nil {
		toSerialize["oidc_discovery_url"] = o.OidcDiscoveryUrl
	}
	if o.OidcResponseMode != nil {
		toSerialize["oidc_response_mode"] = o.OidcResponseMode
	}
	if o.OidcResponseTypes != nil {
		toSerialize["oidc_response_types"] = o.OidcResponseTypes
	}
	if o.ProviderConfig != nil {
		toSerialize["provider_config"] = o.ProviderConfig
	}
	return json.Marshal(toSerialize)
}

type NullableOidcConfigRequest struct {
	value *OidcConfigRequest
	isSet bool
}

func (v NullableOidcConfigRequest) Get() *OidcConfigRequest {
	return v.value
}

func (v *NullableOidcConfigRequest) Set(val *OidcConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcConfigRequest(val *OidcConfigRequest) *NullableOidcConfigRequest {
	return &NullableOidcConfigRequest{value: val, isSet: true}
}

func (v NullableOidcConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OidcLoginRequest struct for OidcLoginRequest
type OidcLoginRequest struct {
	// The signed JWT to validate.
	Jwt *string `json:"jwt,omitempty"`
	// The role to log in against.
	Role *string `json:"role,omitempty"`
}

// NewOidcLoginRequest instantiates a new OidcLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcLoginRequest() *OidcLoginRequest {
	this := OidcLoginRequest{}
	return &this
}

// NewOidcLoginRequestWithDefaults instantiates a new OidcLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcLoginRequestWithDefaults() *OidcLoginRequest {
	this := OidcLoginRequest{}
	return &this
}

// GetJwt returns the Jwt field value if set, zero value otherwise.
func (o *OidcLoginRequest) GetJwt() string {
	if o == nil || o.Jwt == nil {
		var ret string
		return ret
	}
	return *o.Jwt
}

// GetJwtOk returns a tuple with the Jwt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcLoginRequest) GetJwtOk() (*string, bool) {
	if o == nil || o.Jwt == nil {
		return nil, false
	}
	return o.Jwt, true
}

// HasJwt returns a boolean if a field has been set.
func (o *OidcLoginRequest) HasJwt() bool {
	if o != nil && o.Jwt != nil {
		return true
	}

	return false
}

// SetJwt gets a reference to the given string and assigns it to the Jwt field.
func (o *OidcLoginRequest) SetJwt(v string) {
	o.Jwt = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *OidcLoginRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcLoginRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *OidcLoginRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *OidcLoginRequest) SetRole(v string) {
	o.Role = &v
}

func (o OidcLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Jwt != nil {
		toSerialize["jwt"] = o.Jwt
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableOidcLoginRequest struct {
	value *OidcLoginRequest
	isSet bool
}

func (v NullableOidcLoginRequest) Get() *OidcLoginRequest {
	return v.value
}

func (v *NullableOidcLoginRequest) Set(val *OidcLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcLoginRequest(val *OidcLoginRequest) *NullableOidcLoginRequest {
	return &NullableOidcLoginRequest{value: val, isSet: true}
}

func (v NullableOidcLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OidcOidcAuthUrlRequest struct for OidcOidcAuthUrlRequest
type OidcOidcAuthUrlRequest struct {
	// Optional client-provided nonce that must match during callback, if present.
	ClientNonce *string `json:"client_nonce,omitempty"`
	// The OAuth redirect_uri to use in the authorization URL.
	RedirectUri *string `json:"redirect_uri,omitempty"`
	// The role to issue an OIDC authorization URL against.
	Role *string `json:"role,omitempty"`
}

// NewOidcOidcAuthUrlRequest instantiates a new OidcOidcAuthUrlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcOidcAuthUrlRequest() *OidcOidcAuthUrlRequest {
	this := OidcOidcAuthUrlRequest{}
	return &this
}

// NewOidcOidcAuthUrlRequestWithDefaults instantiates a new OidcOidcAuthUrlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcOidcAuthUrlRequestWithDefaults() *OidcOidcAuthUrlRequest {
	this := OidcOidcAuthUrlRequest{}
	return &this
}

// GetClientNonce returns the ClientNonce field value if set, zero value otherwise.
func (o *OidcOidcAuthUrlRequest) GetClientNonce() string {
	if o == nil || o.ClientNonce == nil {
		var ret string
		return ret
	}
	return *o.ClientNonce
}

// GetClientNonceOk returns a tuple with the ClientNonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcOidcAuthUrlRequest) GetClientNonceOk() (*string, bool) {
	if o == nil || o.ClientNonce == nil {
		return nil, false
	}
	return o.ClientNonce, true
}

// HasClientNonce returns a boolean if a field has been set.
func (o *OidcOidcAuthUrlRequest) HasClientNonce() bool {
	if o != nil && o.ClientNonce != nil {
		return true
	}

	return false
}

// SetClientNonce gets a reference to the given string and assigns it to the ClientNonce field.
func (o *OidcOidcAuthUrlRequest) SetClientNonce(v string) {
	o.ClientNonce = &v
}

// GetRedirectUri returns the RedirectUri field value if set, zero value otherwise.
func (o *OidcOidcAuthUrlRequest) GetRedirectUri() string {
	if o == nil || o.RedirectUri == nil {
		var ret string
		return ret
	}
	return *o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcOidcAuthUrlRequest) GetRedirectUriOk() (*string, bool) {
	if o == nil || o.RedirectUri == nil {
		return nil, false
	}
	return o.RedirectUri, true
}

// HasRedirectUri returns a boolean if a field has been set.
func (o *OidcOidcAuthUrlRequest) HasRedirectUri() bool {
	if o != nil && o.RedirectUri != nil {
		return true
	}

	return false
}

// SetRedirectUri gets a reference to the given string and assigns it to the RedirectUri field.
func (o *OidcOidcAuthUrlRequest) SetRedirectUri(v string) {
	o.RedirectUri = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *OidcOidcAuthUrlRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcOidcAuthUrlRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *OidcOidcAuthUrlRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *OidcOidcAuthUrlRequest) SetRole(v string) {
	o.Role = &v
}

func (o OidcOidcAuthUrlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientNonce != nil {
		toSerialize["client_nonce"] = o.ClientNonce
	}
	if o.RedirectUri != nil {
		toSerialize["redirect_uri"] = o.RedirectUri
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableOidcOidcAuthUrlRequest struct {
	value *OidcOidcAuthUrlRequest
	isSet bool
}

func (v NullableOidcOidcAuthUrlRequest) Get() *OidcOidcAuthUrlRequest {
	return v.value
}

func (v *NullableOidcOidcAuthUrlRequest) Set(val *OidcOidcAuthUrlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcOidcAuthUrlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcOidcAuthUrlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcOidcAuthUrlRequest(val *OidcOidcAuthUrlRequest) *NullableOidcOidcAuthUrlRequest {
	return &NullableOidcOidcAuthUrlRequest{value: val, isSet: true}
}

func (v NullableOidcOidcAuthUrlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcOidcAuthUrlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OidcOidcCallbackRequest struct for OidcOidcCallbackRequest
type OidcOidcCallbackRequest struct {
	ClientNonce *string `json:"client_nonce,omitempty"`
	Code        *string `json:"code,omitempty"`
	IdToken     *string `json:"id_token,omitempty"`
	State       *string `json:"state,omitempty"`
}

// NewOidcOidcCallbackRequest instantiates a new OidcOidcCallbackRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcOidcCallbackRequest() *OidcOidcCallbackRequest {
	this := OidcOidcCallbackRequest{}
	return &this
}

// NewOidcOidcCallbackRequestWithDefaults instantiates a new OidcOidcCallbackRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcOidcCallbackRequestWithDefaults() *OidcOidcCallbackRequest {
	this := OidcOidcCallbackRequest{}
	return &this
}

// GetClientNonce returns the ClientNonce field value if set, zero value otherwise.
func (o *OidcOidcCallbackRequest) GetClientNonce() string {
	if o == nil || o.ClientNonce == nil {
		var ret string
		return ret
	}
	return *o.ClientNonce
}

// GetClientNonceOk returns a tuple with the ClientNonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcOidcCallbackRequest) GetClientNonceOk() (*string, bool) {
	if o == nil || o.ClientNonce == nil {
		return nil, false
	}
	return o.ClientNonce, true
}

// HasClientNonce returns a boolean if a field has been set.
func (o *OidcOidcCallbackRequest) HasClientNonce() bool {
	if o != nil && o.ClientNonce != nil {
		return true
	}

	return false
}

// SetClientNonce gets a reference to the given string and assigns it to the ClientNonce field.
func (o *OidcOidcCallbackRequest) SetClientNonce(v string) {
	o.ClientNonce = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *OidcOidcCallbackRequest) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcOidcCallbackRequest) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *OidcOidcCallbackRequest) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *OidcOidcCallbackRequest) SetCode(v string) {
	o.Code = &v
}

// GetIdToken returns the IdToken field value if set, zero value otherwise.
func (o *OidcOidcCallbackRequest) GetIdToken() string {
	if o == nil || o.IdToken == nil {
		var ret string
		return ret
	}
	return *o.IdToken
}

// GetIdTokenOk returns a tuple with the IdToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcOidcCallbackRequest) GetIdTokenOk() (*string, bool) {
	if o == nil || o.IdToken == nil {
		return nil, false
	}
	return o.IdToken, true
}

// HasIdToken returns a boolean if a field has been set.
func (o *OidcOidcCallbackRequest) HasIdToken() bool {
	if o != nil && o.IdToken != nil {
		return true
	}

	return false
}

// SetIdToken gets a reference to the given string and assigns it to the IdToken field.
func (o *OidcOidcCallbackRequest) SetIdToken(v string) {
	o.IdToken = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *OidcOidcCallbackRequest) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcOidcCallbackRequest) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *OidcOidcCallbackRequest) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *OidcOidcCallbackRequest) SetState(v string) {
	o.State = &v
}

func (o OidcOidcCallbackRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientNonce != nil {
		toSerialize["client_nonce"] = o.ClientNonce
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.IdToken != nil {
		toSerialize["id_token"] = o.IdToken
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableOidcOidcCallbackRequest struct {
	value *OidcOidcCallbackRequest
	isSet bool
}

func (v NullableOidcOidcCallbackRequest) Get() *OidcOidcCallbackRequest {
	return v.value
}

func (v *NullableOidcOidcCallbackRequest) Set(val *OidcOidcCallbackRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcOidcCallbackRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcOidcCallbackRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcOidcCallbackRequest(val *OidcOidcCallbackRequest) *NullableOidcOidcCallbackRequest {
	return &NullableOidcOidcCallbackRequest{value: val, isSet: true}
}

func (v NullableOidcOidcCallbackRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcOidcCallbackRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OidcRoleRequest struct for OidcRoleRequest
type OidcRoleRequest struct {
	// Comma-separated list of allowed values for redirect_uri
	AllowedRedirectUris []string `json:"allowed_redirect_uris,omitempty"`
	// Comma-separated list of 'aud' claims that are valid for login; any match is sufficient
	BoundAudiences []string `json:"bound_audiences,omitempty"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs,omitempty"`
	// Map of claims/values which must match for login
	BoundClaims map[string]interface{} `json:"bound_claims,omitempty"`
	// How to interpret values in the map of claims/values (which must match for login): allowed values are 'string' or 'glob'
	BoundClaimsType *string `json:"bound_claims_type,omitempty"`
	// The 'sub' claim that is valid for login. Optional.
	BoundSubject *string `json:"bound_subject,omitempty"`
	// Mappings of claims (key) that will be copied to a metadata field (value)
	ClaimMappings map[string]interface{} `json:"claim_mappings,omitempty"`
	// Duration in seconds of leeway when validating all claims to account for clock skew. Defaults to 60 (1 minute) if set to 0 and can be disabled if set to -1.
	ClockSkewLeeway *int32 `json:"clock_skew_leeway,omitempty"`
	// Duration in seconds of leeway when validating expiration of a token to account for clock skew. Defaults to 150 (2.5 minutes) if set to 0 and can be disabled if set to -1.
	ExpirationLeeway *int32 `json:"expiration_leeway,omitempty"`
	// The claim to use for the Identity group alias names
	GroupsClaim *string `json:"groups_claim,omitempty"`
	// Specifies the allowable elapsed time in seconds since the last time the user was actively authenticated.
	MaxAge *int32 `json:"max_age,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Duration in seconds of leeway when validating not before values of a token to account for clock skew. Defaults to 150 (2.5 minutes) if set to 0 and can be disabled if set to -1.
	NotBeforeLeeway *int32 `json:"not_before_leeway,omitempty"`
	// Use \"token_num_uses\" instead. If this and \"token_num_uses\" are both specified, only \"token_num_uses\" will be used.
	// Deprecated
	NumUses *int32 `json:"num_uses,omitempty"`
	// Comma-separated list of OIDC scopes
	OidcScopes []string `json:"oidc_scopes,omitempty"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Type of the role, either 'jwt' or 'oidc'.
	RoleType *string `json:"role_type,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
	// The claim to use for the Identity entity alias name
	UserClaim *string `json:"user_claim,omitempty"`
	// If true, the user_claim value will use JSON pointer syntax for referencing claims.
	UserClaimJsonPointer *bool `json:"user_claim_json_pointer,omitempty"`
	// Log received OIDC tokens and claims when debug-level logging is active. Not recommended in production since sensitive information may be present in OIDC responses.
	VerboseOidcLogging *bool `json:"verbose_oidc_logging,omitempty"`
}

// NewOidcRoleRequest instantiates a new OidcRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcRoleRequest() *OidcRoleRequest {
	this := OidcRoleRequest{}
	var boundClaimsType string = "string"
	this.BoundClaimsType = &boundClaimsType
	var expirationLeeway int32 = 150
	this.ExpirationLeeway = &expirationLeeway
	var notBeforeLeeway int32 = 150
	this.NotBeforeLeeway = &notBeforeLeeway
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewOidcRoleRequestWithDefaults instantiates a new OidcRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcRoleRequestWithDefaults() *OidcRoleRequest {
	this := OidcRoleRequest{}
	var boundClaimsType string = "string"
	this.BoundClaimsType = &boundClaimsType
	var expirationLeeway int32 = 150
	this.ExpirationLeeway = &expirationLeeway
	var notBeforeLeeway int32 = 150
	this.NotBeforeLeeway = &notBeforeLeeway
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetAllowedRedirectUris returns the AllowedRedirectUris field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetAllowedRedirectUris() []string {
	if o == nil || o.AllowedRedirectUris == nil {
		var ret []string
		return ret
	}
	return o.AllowedRedirectUris
}

// GetAllowedRedirectUrisOk returns a tuple with the AllowedRedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetAllowedRedirectUrisOk() ([]string, bool) {
	if o == nil || o.AllowedRedirectUris == nil {
		return nil, false
	}
	return o.AllowedRedirectUris, true
}

// HasAllowedRedirectUris returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasAllowedRedirectUris() bool {
	if o != nil && o.AllowedRedirectUris != nil {
		return true
	}

	return false
}

// SetAllowedRedirectUris gets a reference to the given []string and assigns it to the AllowedRedirectUris field.
func (o *OidcRoleRequest) SetAllowedRedirectUris(v []string) {
	o.AllowedRedirectUris = v
}

// GetBoundAudiences returns the BoundAudiences field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetBoundAudiences() []string {
	if o == nil || o.BoundAudiences == nil {
		var ret []string
		return ret
	}
	return o.BoundAudiences
}

// GetBoundAudiencesOk returns a tuple with the BoundAudiences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetBoundAudiencesOk() ([]string, bool) {
	if o == nil || o.BoundAudiences == nil {
		return nil, false
	}
	return o.BoundAudiences, true
}

// HasBoundAudiences returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasBoundAudiences() bool {
	if o != nil && o.BoundAudiences != nil {
		return true
	}

	return false
}

// SetBoundAudiences gets a reference to the given []string and assigns it to the BoundAudiences field.
func (o *OidcRoleRequest) SetBoundAudiences(v []string) {
	o.BoundAudiences = v
}

// GetBoundCidrs returns the BoundCidrs field value if set, zero value otherwise.
// Deprecated
func (o *OidcRoleRequest) GetBoundCidrs() []string {
	if o == nil || o.BoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrs
}

// GetBoundCidrsOk returns a tuple with the BoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OidcRoleRequest) GetBoundCidrsOk() ([]string, bool) {
	if o == nil || o.BoundCidrs == nil {
		return nil, false
	}
	return o.BoundCidrs, true
}

// HasBoundCidrs returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasBoundCidrs() bool {
	if o != nil && o.BoundCidrs != nil {
		return true
	}

	return false
}

// SetBoundCidrs gets a reference to the given []string and assigns it to the BoundCidrs field.
// Deprecated
func (o *OidcRoleRequest) SetBoundCidrs(v []string) {
	o.BoundCidrs = v
}

// GetBoundClaims returns the BoundClaims field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetBoundClaims() map[string]interface{} {
	if o == nil || o.BoundClaims == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.BoundClaims
}

// GetBoundClaimsOk returns a tuple with the BoundClaims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetBoundClaimsOk() (map[string]interface{}, bool) {
	if o == nil || o.BoundClaims == nil {
		return nil, false
	}
	return o.BoundClaims, true
}

// HasBoundClaims returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasBoundClaims() bool {
	if o != nil && o.BoundClaims != nil {
		return true
	}

	return false
}

// SetBoundClaims gets a reference to the given map[string]interface{} and assigns it to the BoundClaims field.
func (o *OidcRoleRequest) SetBoundClaims(v map[string]interface{}) {
	o.BoundClaims = v
}

// GetBoundClaimsType returns the BoundClaimsType field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetBoundClaimsType() string {
	if o == nil || o.BoundClaimsType == nil {
		var ret string
		return ret
	}
	return *o.BoundClaimsType
}

// GetBoundClaimsTypeOk returns a tuple with the BoundClaimsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetBoundClaimsTypeOk() (*string, bool) {
	if o == nil || o.BoundClaimsType == nil {
		return nil, false
	}
	return o.BoundClaimsType, true
}

// HasBoundClaimsType returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasBoundClaimsType() bool {
	if o != nil && o.BoundClaimsType != nil {
		return true
	}

	return false
}

// SetBoundClaimsType gets a reference to the given string and assigns it to the BoundClaimsType field.
func (o *OidcRoleRequest) SetBoundClaimsType(v string) {
	o.BoundClaimsType = &v
}

// GetBoundSubject returns the BoundSubject field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetBoundSubject() string {
	if o == nil || o.BoundSubject == nil {
		var ret string
		return ret
	}
	return *o.BoundSubject
}

// GetBoundSubjectOk returns a tuple with the BoundSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetBoundSubjectOk() (*string, bool) {
	if o == nil || o.BoundSubject == nil {
		return nil, false
	}
	return o.BoundSubject, true
}

// HasBoundSubject returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasBoundSubject() bool {
	if o != nil && o.BoundSubject != nil {
		return true
	}

	return false
}

// SetBoundSubject gets a reference to the given string and assigns it to the BoundSubject field.
func (o *OidcRoleRequest) SetBoundSubject(v string) {
	o.BoundSubject = &v
}

// GetClaimMappings returns the ClaimMappings field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetClaimMappings() map[string]interface{} {
	if o == nil || o.ClaimMappings == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ClaimMappings
}

// GetClaimMappingsOk returns a tuple with the ClaimMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetClaimMappingsOk() (map[string]interface{}, bool) {
	if o == nil || o.ClaimMappings == nil {
		return nil, false
	}
	return o.ClaimMappings, true
}

// HasClaimMappings returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasClaimMappings() bool {
	if o != nil && o.ClaimMappings != nil {
		return true
	}

	return false
}

// SetClaimMappings gets a reference to the given map[string]interface{} and assigns it to the ClaimMappings field.
func (o *OidcRoleRequest) SetClaimMappings(v map[string]interface{}) {
	o.ClaimMappings = v
}

// GetClockSkewLeeway returns the ClockSkewLeeway field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetClockSkewLeeway() int32 {
	if o == nil || o.ClockSkewLeeway == nil {
		var ret int32
		return ret
	}
	return *o.ClockSkewLeeway
}

// GetClockSkewLeewayOk returns a tuple with the ClockSkewLeeway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetClockSkewLeewayOk() (*int32, bool) {
	if o == nil || o.ClockSkewLeeway == nil {
		return nil, false
	}
	return o.ClockSkewLeeway, true
}

// HasClockSkewLeeway returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasClockSkewLeeway() bool {
	if o != nil && o.ClockSkewLeeway != nil {
		return true
	}

	return false
}

// SetClockSkewLeeway gets a reference to the given int32 and assigns it to the ClockSkewLeeway field.
func (o *OidcRoleRequest) SetClockSkewLeeway(v int32) {
	o.ClockSkewLeeway = &v
}

// GetExpirationLeeway returns the ExpirationLeeway field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetExpirationLeeway() int32 {
	if o == nil || o.ExpirationLeeway == nil {
		var ret int32
		return ret
	}
	return *o.ExpirationLeeway
}

// GetExpirationLeewayOk returns a tuple with the ExpirationLeeway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetExpirationLeewayOk() (*int32, bool) {
	if o == nil || o.ExpirationLeeway == nil {
		return nil, false
	}
	return o.ExpirationLeeway, true
}

// HasExpirationLeeway returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasExpirationLeeway() bool {
	if o != nil && o.ExpirationLeeway != nil {
		return true
	}

	return false
}

// SetExpirationLeeway gets a reference to the given int32 and assigns it to the ExpirationLeeway field.
func (o *OidcRoleRequest) SetExpirationLeeway(v int32) {
	o.ExpirationLeeway = &v
}

// GetGroupsClaim returns the GroupsClaim field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetGroupsClaim() string {
	if o == nil || o.GroupsClaim == nil {
		var ret string
		return ret
	}
	return *o.GroupsClaim
}

// GetGroupsClaimOk returns a tuple with the GroupsClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetGroupsClaimOk() (*string, bool) {
	if o == nil || o.GroupsClaim == nil {
		return nil, false
	}
	return o.GroupsClaim, true
}

// HasGroupsClaim returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasGroupsClaim() bool {
	if o != nil && o.GroupsClaim != nil {
		return true
	}

	return false
}

// SetGroupsClaim gets a reference to the given string and assigns it to the GroupsClaim field.
func (o *OidcRoleRequest) SetGroupsClaim(v string) {
	o.GroupsClaim = &v
}

// GetMaxAge returns the MaxAge field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetMaxAge() int32 {
	if o == nil || o.MaxAge == nil {
		var ret int32
		return ret
	}
	return *o.MaxAge
}

// GetMaxAgeOk returns a tuple with the MaxAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetMaxAgeOk() (*int32, bool) {
	if o == nil || o.MaxAge == nil {
		return nil, false
	}
	return o.MaxAge, true
}

// HasMaxAge returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasMaxAge() bool {
	if o != nil && o.MaxAge != nil {
		return true
	}

	return false
}

// SetMaxAge gets a reference to the given int32 and assigns it to the MaxAge field.
func (o *OidcRoleRequest) SetMaxAge(v int32) {
	o.MaxAge = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *OidcRoleRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OidcRoleRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *OidcRoleRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetNotBeforeLeeway returns the NotBeforeLeeway field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetNotBeforeLeeway() int32 {
	if o == nil || o.NotBeforeLeeway == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeLeeway
}

// GetNotBeforeLeewayOk returns a tuple with the NotBeforeLeeway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetNotBeforeLeewayOk() (*int32, bool) {
	if o == nil || o.NotBeforeLeeway == nil {
		return nil, false
	}
	return o.NotBeforeLeeway, true
}

// HasNotBeforeLeeway returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasNotBeforeLeeway() bool {
	if o != nil && o.NotBeforeLeeway != nil {
		return true
	}

	return false
}

// SetNotBeforeLeeway gets a reference to the given int32 and assigns it to the NotBeforeLeeway field.
func (o *OidcRoleRequest) SetNotBeforeLeeway(v int32) {
	o.NotBeforeLeeway = &v
}

// GetNumUses returns the NumUses field value if set, zero value otherwise.
// Deprecated
func (o *OidcRoleRequest) GetNumUses() int32 {
	if o == nil || o.NumUses == nil {
		var ret int32
		return ret
	}
	return *o.NumUses
}

// GetNumUsesOk returns a tuple with the NumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OidcRoleRequest) GetNumUsesOk() (*int32, bool) {
	if o == nil || o.NumUses == nil {
		return nil, false
	}
	return o.NumUses, true
}

// HasNumUses returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasNumUses() bool {
	if o != nil && o.NumUses != nil {
		return true
	}

	return false
}

// SetNumUses gets a reference to the given int32 and assigns it to the NumUses field.
// Deprecated
func (o *OidcRoleRequest) SetNumUses(v int32) {
	o.NumUses = &v
}

// GetOidcScopes returns the OidcScopes field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetOidcScopes() []string {
	if o == nil || o.OidcScopes == nil {
		var ret []string
		return ret
	}
	return o.OidcScopes
}

// GetOidcScopesOk returns a tuple with the OidcScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetOidcScopesOk() ([]string, bool) {
	if o == nil || o.OidcScopes == nil {
		return nil, false
	}
	return o.OidcScopes, true
}

// HasOidcScopes returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasOidcScopes() bool {
	if o != nil && o.OidcScopes != nil {
		return true
	}

	return false
}

// SetOidcScopes gets a reference to the given []string and assigns it to the OidcScopes field.
func (o *OidcRoleRequest) SetOidcScopes(v []string) {
	o.OidcScopes = v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *OidcRoleRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OidcRoleRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *OidcRoleRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *OidcRoleRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OidcRoleRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *OidcRoleRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetRoleType returns the RoleType field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetRoleType() string {
	if o == nil || o.RoleType == nil {
		var ret string
		return ret
	}
	return *o.RoleType
}

// GetRoleTypeOk returns a tuple with the RoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetRoleTypeOk() (*string, bool) {
	if o == nil || o.RoleType == nil {
		return nil, false
	}
	return o.RoleType, true
}

// HasRoleType returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasRoleType() bool {
	if o != nil && o.RoleType != nil {
		return true
	}

	return false
}

// SetRoleType gets a reference to the given string and assigns it to the RoleType field.
func (o *OidcRoleRequest) SetRoleType(v string) {
	o.RoleType = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *OidcRoleRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *OidcRoleRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *OidcRoleRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *OidcRoleRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *OidcRoleRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *OidcRoleRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *OidcRoleRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *OidcRoleRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *OidcRoleRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *OidcRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OidcRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *OidcRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUserClaim returns the UserClaim field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetUserClaim() string {
	if o == nil || o.UserClaim == nil {
		var ret string
		return ret
	}
	return *o.UserClaim
}

// GetUserClaimOk returns a tuple with the UserClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetUserClaimOk() (*string, bool) {
	if o == nil || o.UserClaim == nil {
		return nil, false
	}
	return o.UserClaim, true
}

// HasUserClaim returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasUserClaim() bool {
	if o != nil && o.UserClaim != nil {
		return true
	}

	return false
}

// SetUserClaim gets a reference to the given string and assigns it to the UserClaim field.
func (o *OidcRoleRequest) SetUserClaim(v string) {
	o.UserClaim = &v
}

// GetUserClaimJsonPointer returns the UserClaimJsonPointer field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetUserClaimJsonPointer() bool {
	if o == nil || o.UserClaimJsonPointer == nil {
		var ret bool
		return ret
	}
	return *o.UserClaimJsonPointer
}

// GetUserClaimJsonPointerOk returns a tuple with the UserClaimJsonPointer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetUserClaimJsonPointerOk() (*bool, bool) {
	if o == nil || o.UserClaimJsonPointer == nil {
		return nil, false
	}
	return o.UserClaimJsonPointer, true
}

// HasUserClaimJsonPointer returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasUserClaimJsonPointer() bool {
	if o != nil && o.UserClaimJsonPointer != nil {
		return true
	}

	return false
}

// SetUserClaimJsonPointer gets a reference to the given bool and assigns it to the UserClaimJsonPointer field.
func (o *OidcRoleRequest) SetUserClaimJsonPointer(v bool) {
	o.UserClaimJsonPointer = &v
}

// GetVerboseOidcLogging returns the VerboseOidcLogging field value if set, zero value otherwise.
func (o *OidcRoleRequest) GetVerboseOidcLogging() bool {
	if o == nil || o.VerboseOidcLogging == nil {
		var ret bool
		return ret
	}
	return *o.VerboseOidcLogging
}

// GetVerboseOidcLoggingOk returns a tuple with the VerboseOidcLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcRoleRequest) GetVerboseOidcLoggingOk() (*bool, bool) {
	if o == nil || o.VerboseOidcLogging == nil {
		return nil, false
	}
	return o.VerboseOidcLogging, true
}

// HasVerboseOidcLogging returns a boolean if a field has been set.
func (o *OidcRoleRequest) HasVerboseOidcLogging() bool {
	if o != nil && o.VerboseOidcLogging != nil {
		return true
	}

	return false
}

// SetVerboseOidcLogging gets a reference to the given bool and assigns it to the VerboseOidcLogging field.
func (o *OidcRoleRequest) SetVerboseOidcLogging(v bool) {
	o.VerboseOidcLogging = &v
}

func (o OidcRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedRedirectUris != nil {
		toSerialize["allowed_redirect_uris"] = o.AllowedRedirectUris
	}
	if o.BoundAudiences != nil {
		toSerialize["bound_audiences"] = o.BoundAudiences
	}
	if o.BoundCidrs != nil {
		toSerialize["bound_cidrs"] = o.BoundCidrs
	}
	if o.BoundClaims != nil {
		toSerialize["bound_claims"] = o.BoundClaims
	}
	if o.BoundClaimsType != nil {
		toSerialize["bound_claims_type"] = o.BoundClaimsType
	}
	if o.BoundSubject != nil {
		toSerialize["bound_subject"] = o.BoundSubject
	}
	if o.ClaimMappings != nil {
		toSerialize["claim_mappings"] = o.ClaimMappings
	}
	if o.ClockSkewLeeway != nil {
		toSerialize["clock_skew_leeway"] = o.ClockSkewLeeway
	}
	if o.ExpirationLeeway != nil {
		toSerialize["expiration_leeway"] = o.ExpirationLeeway
	}
	if o.GroupsClaim != nil {
		toSerialize["groups_claim"] = o.GroupsClaim
	}
	if o.MaxAge != nil {
		toSerialize["max_age"] = o.MaxAge
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.NotBeforeLeeway != nil {
		toSerialize["not_before_leeway"] = o.NotBeforeLeeway
	}
	if o.NumUses != nil {
		toSerialize["num_uses"] = o.NumUses
	}
	if o.OidcScopes != nil {
		toSerialize["oidc_scopes"] = o.OidcScopes
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.RoleType != nil {
		toSerialize["role_type"] = o.RoleType
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UserClaim != nil {
		toSerialize["user_claim"] = o.UserClaim
	}
	if o.UserClaimJsonPointer != nil {
		toSerialize["user_claim_json_pointer"] = o.UserClaimJsonPointer
	}
	if o.VerboseOidcLogging != nil {
		toSerialize["verbose_oidc_logging"] = o.VerboseOidcLogging
	}
	return json.Marshal(toSerialize)
}

type NullableOidcRoleRequest struct {
	value *OidcRoleRequest
	isSet bool
}

func (v NullableOidcRoleRequest) Get() *OidcRoleRequest {
	return v.value
}

func (v *NullableOidcRoleRequest) Set(val *OidcRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcRoleRequest(val *OidcRoleRequest) *NullableOidcRoleRequest {
	return &NullableOidcRoleRequest{value: val, isSet: true}
}

func (v NullableOidcRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OktaConfigRequest struct for OktaConfigRequest
type OktaConfigRequest struct {
	// Okta API key.
	ApiToken *string `json:"api_token,omitempty"`
	// The base domain to use for the Okta API. When not specified in the configuration, \"okta.com\" is used.
	BaseUrl *string `json:"base_url,omitempty"`
	// When set true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired.
	BypassOktaMfa *bool `json:"bypass_okta_mfa,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Name of the organization to be used in the Okta API.
	OrgName *string `json:"org_name,omitempty"`
	// Use org_name instead.
	// Deprecated
	Organization *string `json:"organization,omitempty"`
	// Use base_url instead.
	// Deprecated
	Production *bool `json:"production,omitempty"`
	// Use api_token instead.
	// Deprecated
	Token *string `json:"token,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies. This will apply to all tokens generated by this auth method, in addition to any configured for specific users/groups.
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewOktaConfigRequest instantiates a new OktaConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOktaConfigRequest() *OktaConfigRequest {
	this := OktaConfigRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewOktaConfigRequestWithDefaults instantiates a new OktaConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOktaConfigRequestWithDefaults() *OktaConfigRequest {
	this := OktaConfigRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetApiToken returns the ApiToken field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetApiToken() string {
	if o == nil || o.ApiToken == nil {
		var ret string
		return ret
	}
	return *o.ApiToken
}

// GetApiTokenOk returns a tuple with the ApiToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetApiTokenOk() (*string, bool) {
	if o == nil || o.ApiToken == nil {
		return nil, false
	}
	return o.ApiToken, true
}

// HasApiToken returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasApiToken() bool {
	if o != nil && o.ApiToken != nil {
		return true
	}

	return false
}

// SetApiToken gets a reference to the given string and assigns it to the ApiToken field.
func (o *OktaConfigRequest) SetApiToken(v string) {
	o.ApiToken = &v
}

// GetBaseUrl returns the BaseUrl field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetBaseUrl() string {
	if o == nil || o.BaseUrl == nil {
		var ret string
		return ret
	}
	return *o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetBaseUrlOk() (*string, bool) {
	if o == nil || o.BaseUrl == nil {
		return nil, false
	}
	return o.BaseUrl, true
}

// HasBaseUrl returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasBaseUrl() bool {
	if o != nil && o.BaseUrl != nil {
		return true
	}

	return false
}

// SetBaseUrl gets a reference to the given string and assigns it to the BaseUrl field.
func (o *OktaConfigRequest) SetBaseUrl(v string) {
	o.BaseUrl = &v
}

// GetBypassOktaMfa returns the BypassOktaMfa field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetBypassOktaMfa() bool {
	if o == nil || o.BypassOktaMfa == nil {
		var ret bool
		return ret
	}
	return *o.BypassOktaMfa
}

// GetBypassOktaMfaOk returns a tuple with the BypassOktaMfa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetBypassOktaMfaOk() (*bool, bool) {
	if o == nil || o.BypassOktaMfa == nil {
		return nil, false
	}
	return o.BypassOktaMfa, true
}

// HasBypassOktaMfa returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasBypassOktaMfa() bool {
	if o != nil && o.BypassOktaMfa != nil {
		return true
	}

	return false
}

// SetBypassOktaMfa gets a reference to the given bool and assigns it to the BypassOktaMfa field.
func (o *OktaConfigRequest) SetBypassOktaMfa(v bool) {
	o.BypassOktaMfa = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *OktaConfigRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OktaConfigRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *OktaConfigRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetOrgName() string {
	if o == nil || o.OrgName == nil {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetOrgNameOk() (*string, bool) {
	if o == nil || o.OrgName == nil {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasOrgName() bool {
	if o != nil && o.OrgName != nil {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *OktaConfigRequest) SetOrgName(v string) {
	o.OrgName = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
// Deprecated
func (o *OktaConfigRequest) GetOrganization() string {
	if o == nil || o.Organization == nil {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OktaConfigRequest) GetOrganizationOk() (*string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
// Deprecated
func (o *OktaConfigRequest) SetOrganization(v string) {
	o.Organization = &v
}

// GetProduction returns the Production field value if set, zero value otherwise.
// Deprecated
func (o *OktaConfigRequest) GetProduction() bool {
	if o == nil || o.Production == nil {
		var ret bool
		return ret
	}
	return *o.Production
}

// GetProductionOk returns a tuple with the Production field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OktaConfigRequest) GetProductionOk() (*bool, bool) {
	if o == nil || o.Production == nil {
		return nil, false
	}
	return o.Production, true
}

// HasProduction returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasProduction() bool {
	if o != nil && o.Production != nil {
		return true
	}

	return false
}

// SetProduction gets a reference to the given bool and assigns it to the Production field.
// Deprecated
func (o *OktaConfigRequest) SetProduction(v bool) {
	o.Production = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
// Deprecated
func (o *OktaConfigRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OktaConfigRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
// Deprecated
func (o *OktaConfigRequest) SetToken(v string) {
	o.Token = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *OktaConfigRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *OktaConfigRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *OktaConfigRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *OktaConfigRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *OktaConfigRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *OktaConfigRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *OktaConfigRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *OktaConfigRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *OktaConfigRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaConfigRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *OktaConfigRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *OktaConfigRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OktaConfigRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *OktaConfigRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *OktaConfigRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o OktaConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiToken != nil {
		toSerialize["api_token"] = o.ApiToken
	}
	if o.BaseUrl != nil {
		toSerialize["base_url"] = o.BaseUrl
	}
	if o.BypassOktaMfa != nil {
		toSerialize["bypass_okta_mfa"] = o.BypassOktaMfa
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.OrgName != nil {
		toSerialize["org_name"] = o.OrgName
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.Production != nil {
		toSerialize["production"] = o.Production
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableOktaConfigRequest struct {
	value *OktaConfigRequest
	isSet bool
}

func (v NullableOktaConfigRequest) Get() *OktaConfigRequest {
	return v.value
}

func (v *NullableOktaConfigRequest) Set(val *OktaConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOktaConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOktaConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOktaConfigRequest(val *OktaConfigRequest) *NullableOktaConfigRequest {
	return &NullableOktaConfigRequest{value: val, isSet: true}
}

func (v NullableOktaConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOktaConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OktaGroupsRequest struct for OktaGroupsRequest
type OktaGroupsRequest struct {
	// Comma-separated list of policies associated to the group.
	Policies []string `json:"policies,omitempty"`
}

// NewOktaGroupsRequest instantiates a new OktaGroupsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOktaGroupsRequest() *OktaGroupsRequest {
	this := OktaGroupsRequest{}
	return &this
}

// NewOktaGroupsRequestWithDefaults instantiates a new OktaGroupsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOktaGroupsRequestWithDefaults() *OktaGroupsRequest {
	this := OktaGroupsRequest{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *OktaGroupsRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaGroupsRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *OktaGroupsRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *OktaGroupsRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o OktaGroupsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableOktaGroupsRequest struct {
	value *OktaGroupsRequest
	isSet bool
}

func (v NullableOktaGroupsRequest) Get() *OktaGroupsRequest {
	return v.value
}

func (v *NullableOktaGroupsRequest) Set(val *OktaGroupsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOktaGroupsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOktaGroupsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOktaGroupsRequest(val *OktaGroupsRequest) *NullableOktaGroupsRequest {
	return &NullableOktaGroupsRequest{value: val, isSet: true}
}

func (v NullableOktaGroupsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOktaGroupsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OktaLoginRequest struct for OktaLoginRequest
type OktaLoginRequest struct {
	// Nonce provided if performing login that requires number verification challenge. Logins through the vault login CLI command will automatically generate a nonce.
	Nonce *string `json:"nonce,omitempty"`
	// Password for this user.
	Password *string `json:"password,omitempty"`
	// Preferred factor provider.
	Provider *string `json:"provider,omitempty"`
	// TOTP passcode.
	Totp *string `json:"totp,omitempty"`
}

// NewOktaLoginRequest instantiates a new OktaLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOktaLoginRequest() *OktaLoginRequest {
	this := OktaLoginRequest{}
	return &this
}

// NewOktaLoginRequestWithDefaults instantiates a new OktaLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOktaLoginRequestWithDefaults() *OktaLoginRequest {
	this := OktaLoginRequest{}
	return &this
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *OktaLoginRequest) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaLoginRequest) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *OktaLoginRequest) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *OktaLoginRequest) SetNonce(v string) {
	o.Nonce = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *OktaLoginRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaLoginRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *OktaLoginRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *OktaLoginRequest) SetPassword(v string) {
	o.Password = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *OktaLoginRequest) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaLoginRequest) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *OktaLoginRequest) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *OktaLoginRequest) SetProvider(v string) {
	o.Provider = &v
}

// GetTotp returns the Totp field value if set, zero value otherwise.
func (o *OktaLoginRequest) GetTotp() string {
	if o == nil || o.Totp == nil {
		var ret string
		return ret
	}
	return *o.Totp
}

// GetTotpOk returns a tuple with the Totp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaLoginRequest) GetTotpOk() (*string, bool) {
	if o == nil || o.Totp == nil {
		return nil, false
	}
	return o.Totp, true
}

// HasTotp returns a boolean if a field has been set.
func (o *OktaLoginRequest) HasTotp() bool {
	if o != nil && o.Totp != nil {
		return true
	}

	return false
}

// SetTotp gets a reference to the given string and assigns it to the Totp field.
func (o *OktaLoginRequest) SetTotp(v string) {
	o.Totp = &v
}

func (o OktaLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.Totp != nil {
		toSerialize["totp"] = o.Totp
	}
	return json.Marshal(toSerialize)
}

type NullableOktaLoginRequest struct {
	value *OktaLoginRequest
	isSet bool
}

func (v NullableOktaLoginRequest) Get() *OktaLoginRequest {
	return v.value
}

func (v *NullableOktaLoginRequest) Set(val *OktaLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOktaLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOktaLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOktaLoginRequest(val *OktaLoginRequest) *NullableOktaLoginRequest {
	return &NullableOktaLoginRequest{value: val, isSet: true}
}

func (v NullableOktaLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOktaLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OktaUsersRequest struct for OktaUsersRequest
type OktaUsersRequest struct {
	// List of groups associated with the user.
	Groups []string `json:"groups,omitempty"`
	// List of policies associated with the user.
	Policies []string `json:"policies,omitempty"`
}

// NewOktaUsersRequest instantiates a new OktaUsersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOktaUsersRequest() *OktaUsersRequest {
	this := OktaUsersRequest{}
	return &this
}

// NewOktaUsersRequestWithDefaults instantiates a new OktaUsersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOktaUsersRequestWithDefaults() *OktaUsersRequest {
	this := OktaUsersRequest{}
	return &this
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *OktaUsersRequest) GetGroups() []string {
	if o == nil || o.Groups == nil {
		var ret []string
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaUsersRequest) GetGroupsOk() ([]string, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *OktaUsersRequest) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *OktaUsersRequest) SetGroups(v []string) {
	o.Groups = v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *OktaUsersRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaUsersRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *OktaUsersRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *OktaUsersRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o OktaUsersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableOktaUsersRequest struct {
	value *OktaUsersRequest
	isSet bool
}

func (v NullableOktaUsersRequest) Get() *OktaUsersRequest {
	return v.value
}

func (v *NullableOktaUsersRequest) Set(val *OktaUsersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOktaUsersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOktaUsersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOktaUsersRequest(val *OktaUsersRequest) *NullableOktaUsersRequest {
	return &NullableOktaUsersRequest{value: val, isSet: true}
}

func (v NullableOktaUsersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOktaUsersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OpenldapConfigRequest struct for OpenldapConfigRequest
type OpenldapConfigRequest struct {
	// Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).
	AnonymousGroupSearch *bool `json:"anonymous_group_search,omitempty"`
	// LDAP DN for searching for the user DN (optional)
	Binddn *string `json:"binddn,omitempty"`
	// LDAP password for searching for the user DN (optional)
	Bindpass *string `json:"bindpass,omitempty"`
	// If true, case sensitivity will be used when comparing usernames and groups for matching policies.
	CaseSensitiveNames *bool `json:"case_sensitive_names,omitempty"`
	// CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded (optional)
	Certificate *string `json:"certificate,omitempty"`
	// Client certificate to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsCert *string `json:"client_tls_cert,omitempty"`
	// Client certificate key to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsKey *string `json:"client_tls_key,omitempty"`
	// Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true
	DenyNullBind *bool `json:"deny_null_bind,omitempty"`
	// Use anonymous bind to discover the bind DN of a user (optional)
	Discoverdn *bool `json:"discoverdn,omitempty"`
	// LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: \"cn\" or \"memberOf\", etc. Default: cn
	Groupattr *string `json:"groupattr,omitempty"`
	// LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)
	Groupdn *string `json:"groupdn,omitempty"`
	// Go template for querying group membership of user (optional) The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
	Groupfilter *string `json:"groupfilter,omitempty"`
	// Skip LDAP server SSL Certificate verification - VERY insecure (optional)
	InsecureTls *bool `json:"insecure_tls,omitempty"`
	// The desired length of passwords that Vault generates.
	// Deprecated
	Length *int32 `json:"length,omitempty"`
	// The maximum password time-to-live.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Password policy to use to generate passwords
	PasswordPolicy *string `json:"password_policy,omitempty"`
	// Timeout, in seconds, for the connection when making requests against the server before returning back an error.
	RequestTimeout *int32 `json:"request_timeout,omitempty"`
	// The desired OpenLDAP schema used when modifying user account passwords.
	Schema *string `json:"schema,omitempty"`
	// Issue a StartTLS command after establishing unencrypted connection (optional)
	Starttls *bool `json:"starttls,omitempty"`
	// Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMaxVersion *string `json:"tls_max_version,omitempty"`
	// Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMinVersion *string `json:"tls_min_version,omitempty"`
	// The default password time-to-live.
	Ttl *int32 `json:"ttl,omitempty"`
	// Enables userPrincipalDomain login with [username]@UPNDomain (optional)
	Upndomain *string `json:"upndomain,omitempty"`
	// LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.
	Url *string `json:"url,omitempty"`
	// In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.
	UsePre111GroupCnBehavior *bool `json:"use_pre111_group_cn_behavior,omitempty"`
	// If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.
	UseTokenGroups *bool `json:"use_token_groups,omitempty"`
	// Attribute used for users (default: cn)
	Userattr *string `json:"userattr,omitempty"`
	// LDAP domain to use for users (eg: ou=People,dc=example,dc=org)
	Userdn *string `json:"userdn,omitempty"`
	// Go template for LDAP user search filer (optional) The template can access the following context variables: UserAttr, Username Default: ({{.UserAttr}}={{.Username}})
	Userfilter *string `json:"userfilter,omitempty"`
	// If true, sets the alias name to the username
	UsernameAsAlias *bool `json:"username_as_alias,omitempty"`
}

// NewOpenldapConfigRequest instantiates a new OpenldapConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenldapConfigRequest() *OpenldapConfigRequest {
	this := OpenldapConfigRequest{}
	var anonymousGroupSearch bool = false
	this.AnonymousGroupSearch = &anonymousGroupSearch
	var denyNullBind bool = true
	this.DenyNullBind = &denyNullBind
	var groupattr string = "cn"
	this.Groupattr = &groupattr
	var groupfilter string = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.Groupfilter = &groupfilter
	var schema string = "openldap"
	this.Schema = &schema
	var tlsMaxVersion string = "tls12"
	this.TlsMaxVersion = &tlsMaxVersion
	var tlsMinVersion string = "tls12"
	this.TlsMinVersion = &tlsMinVersion
	var url string = "ldap://127.0.0.1"
	this.Url = &url
	var useTokenGroups bool = false
	this.UseTokenGroups = &useTokenGroups
	var userattr string = "cn"
	this.Userattr = &userattr
	var userfilter string = "({{.UserAttr}}={{.Username}})"
	this.Userfilter = &userfilter
	var usernameAsAlias bool = false
	this.UsernameAsAlias = &usernameAsAlias
	return &this
}

// NewOpenldapConfigRequestWithDefaults instantiates a new OpenldapConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenldapConfigRequestWithDefaults() *OpenldapConfigRequest {
	this := OpenldapConfigRequest{}
	var anonymousGroupSearch bool = false
	this.AnonymousGroupSearch = &anonymousGroupSearch
	var denyNullBind bool = true
	this.DenyNullBind = &denyNullBind
	var groupattr string = "cn"
	this.Groupattr = &groupattr
	var groupfilter string = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.Groupfilter = &groupfilter
	var schema string = "openldap"
	this.Schema = &schema
	var tlsMaxVersion string = "tls12"
	this.TlsMaxVersion = &tlsMaxVersion
	var tlsMinVersion string = "tls12"
	this.TlsMinVersion = &tlsMinVersion
	var url string = "ldap://127.0.0.1"
	this.Url = &url
	var useTokenGroups bool = false
	this.UseTokenGroups = &useTokenGroups
	var userattr string = "cn"
	this.Userattr = &userattr
	var userfilter string = "({{.UserAttr}}={{.Username}})"
	this.Userfilter = &userfilter
	var usernameAsAlias bool = false
	this.UsernameAsAlias = &usernameAsAlias
	return &this
}

// GetAnonymousGroupSearch returns the AnonymousGroupSearch field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetAnonymousGroupSearch() bool {
	if o == nil || o.AnonymousGroupSearch == nil {
		var ret bool
		return ret
	}
	return *o.AnonymousGroupSearch
}

// GetAnonymousGroupSearchOk returns a tuple with the AnonymousGroupSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetAnonymousGroupSearchOk() (*bool, bool) {
	if o == nil || o.AnonymousGroupSearch == nil {
		return nil, false
	}
	return o.AnonymousGroupSearch, true
}

// HasAnonymousGroupSearch returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasAnonymousGroupSearch() bool {
	if o != nil && o.AnonymousGroupSearch != nil {
		return true
	}

	return false
}

// SetAnonymousGroupSearch gets a reference to the given bool and assigns it to the AnonymousGroupSearch field.
func (o *OpenldapConfigRequest) SetAnonymousGroupSearch(v bool) {
	o.AnonymousGroupSearch = &v
}

// GetBinddn returns the Binddn field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetBinddn() string {
	if o == nil || o.Binddn == nil {
		var ret string
		return ret
	}
	return *o.Binddn
}

// GetBinddnOk returns a tuple with the Binddn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetBinddnOk() (*string, bool) {
	if o == nil || o.Binddn == nil {
		return nil, false
	}
	return o.Binddn, true
}

// HasBinddn returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasBinddn() bool {
	if o != nil && o.Binddn != nil {
		return true
	}

	return false
}

// SetBinddn gets a reference to the given string and assigns it to the Binddn field.
func (o *OpenldapConfigRequest) SetBinddn(v string) {
	o.Binddn = &v
}

// GetBindpass returns the Bindpass field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetBindpass() string {
	if o == nil || o.Bindpass == nil {
		var ret string
		return ret
	}
	return *o.Bindpass
}

// GetBindpassOk returns a tuple with the Bindpass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetBindpassOk() (*string, bool) {
	if o == nil || o.Bindpass == nil {
		return nil, false
	}
	return o.Bindpass, true
}

// HasBindpass returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasBindpass() bool {
	if o != nil && o.Bindpass != nil {
		return true
	}

	return false
}

// SetBindpass gets a reference to the given string and assigns it to the Bindpass field.
func (o *OpenldapConfigRequest) SetBindpass(v string) {
	o.Bindpass = &v
}

// GetCaseSensitiveNames returns the CaseSensitiveNames field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetCaseSensitiveNames() bool {
	if o == nil || o.CaseSensitiveNames == nil {
		var ret bool
		return ret
	}
	return *o.CaseSensitiveNames
}

// GetCaseSensitiveNamesOk returns a tuple with the CaseSensitiveNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetCaseSensitiveNamesOk() (*bool, bool) {
	if o == nil || o.CaseSensitiveNames == nil {
		return nil, false
	}
	return o.CaseSensitiveNames, true
}

// HasCaseSensitiveNames returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasCaseSensitiveNames() bool {
	if o != nil && o.CaseSensitiveNames != nil {
		return true
	}

	return false
}

// SetCaseSensitiveNames gets a reference to the given bool and assigns it to the CaseSensitiveNames field.
func (o *OpenldapConfigRequest) SetCaseSensitiveNames(v bool) {
	o.CaseSensitiveNames = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *OpenldapConfigRequest) SetCertificate(v string) {
	o.Certificate = &v
}

// GetClientTlsCert returns the ClientTlsCert field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetClientTlsCert() string {
	if o == nil || o.ClientTlsCert == nil {
		var ret string
		return ret
	}
	return *o.ClientTlsCert
}

// GetClientTlsCertOk returns a tuple with the ClientTlsCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetClientTlsCertOk() (*string, bool) {
	if o == nil || o.ClientTlsCert == nil {
		return nil, false
	}
	return o.ClientTlsCert, true
}

// HasClientTlsCert returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasClientTlsCert() bool {
	if o != nil && o.ClientTlsCert != nil {
		return true
	}

	return false
}

// SetClientTlsCert gets a reference to the given string and assigns it to the ClientTlsCert field.
func (o *OpenldapConfigRequest) SetClientTlsCert(v string) {
	o.ClientTlsCert = &v
}

// GetClientTlsKey returns the ClientTlsKey field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetClientTlsKey() string {
	if o == nil || o.ClientTlsKey == nil {
		var ret string
		return ret
	}
	return *o.ClientTlsKey
}

// GetClientTlsKeyOk returns a tuple with the ClientTlsKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetClientTlsKeyOk() (*string, bool) {
	if o == nil || o.ClientTlsKey == nil {
		return nil, false
	}
	return o.ClientTlsKey, true
}

// HasClientTlsKey returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasClientTlsKey() bool {
	if o != nil && o.ClientTlsKey != nil {
		return true
	}

	return false
}

// SetClientTlsKey gets a reference to the given string and assigns it to the ClientTlsKey field.
func (o *OpenldapConfigRequest) SetClientTlsKey(v string) {
	o.ClientTlsKey = &v
}

// GetDenyNullBind returns the DenyNullBind field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetDenyNullBind() bool {
	if o == nil || o.DenyNullBind == nil {
		var ret bool
		return ret
	}
	return *o.DenyNullBind
}

// GetDenyNullBindOk returns a tuple with the DenyNullBind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetDenyNullBindOk() (*bool, bool) {
	if o == nil || o.DenyNullBind == nil {
		return nil, false
	}
	return o.DenyNullBind, true
}

// HasDenyNullBind returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasDenyNullBind() bool {
	if o != nil && o.DenyNullBind != nil {
		return true
	}

	return false
}

// SetDenyNullBind gets a reference to the given bool and assigns it to the DenyNullBind field.
func (o *OpenldapConfigRequest) SetDenyNullBind(v bool) {
	o.DenyNullBind = &v
}

// GetDiscoverdn returns the Discoverdn field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetDiscoverdn() bool {
	if o == nil || o.Discoverdn == nil {
		var ret bool
		return ret
	}
	return *o.Discoverdn
}

// GetDiscoverdnOk returns a tuple with the Discoverdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetDiscoverdnOk() (*bool, bool) {
	if o == nil || o.Discoverdn == nil {
		return nil, false
	}
	return o.Discoverdn, true
}

// HasDiscoverdn returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasDiscoverdn() bool {
	if o != nil && o.Discoverdn != nil {
		return true
	}

	return false
}

// SetDiscoverdn gets a reference to the given bool and assigns it to the Discoverdn field.
func (o *OpenldapConfigRequest) SetDiscoverdn(v bool) {
	o.Discoverdn = &v
}

// GetGroupattr returns the Groupattr field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetGroupattr() string {
	if o == nil || o.Groupattr == nil {
		var ret string
		return ret
	}
	return *o.Groupattr
}

// GetGroupattrOk returns a tuple with the Groupattr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetGroupattrOk() (*string, bool) {
	if o == nil || o.Groupattr == nil {
		return nil, false
	}
	return o.Groupattr, true
}

// HasGroupattr returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasGroupattr() bool {
	if o != nil && o.Groupattr != nil {
		return true
	}

	return false
}

// SetGroupattr gets a reference to the given string and assigns it to the Groupattr field.
func (o *OpenldapConfigRequest) SetGroupattr(v string) {
	o.Groupattr = &v
}

// GetGroupdn returns the Groupdn field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetGroupdn() string {
	if o == nil || o.Groupdn == nil {
		var ret string
		return ret
	}
	return *o.Groupdn
}

// GetGroupdnOk returns a tuple with the Groupdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetGroupdnOk() (*string, bool) {
	if o == nil || o.Groupdn == nil {
		return nil, false
	}
	return o.Groupdn, true
}

// HasGroupdn returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasGroupdn() bool {
	if o != nil && o.Groupdn != nil {
		return true
	}

	return false
}

// SetGroupdn gets a reference to the given string and assigns it to the Groupdn field.
func (o *OpenldapConfigRequest) SetGroupdn(v string) {
	o.Groupdn = &v
}

// GetGroupfilter returns the Groupfilter field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetGroupfilter() string {
	if o == nil || o.Groupfilter == nil {
		var ret string
		return ret
	}
	return *o.Groupfilter
}

// GetGroupfilterOk returns a tuple with the Groupfilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetGroupfilterOk() (*string, bool) {
	if o == nil || o.Groupfilter == nil {
		return nil, false
	}
	return o.Groupfilter, true
}

// HasGroupfilter returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasGroupfilter() bool {
	if o != nil && o.Groupfilter != nil {
		return true
	}

	return false
}

// SetGroupfilter gets a reference to the given string and assigns it to the Groupfilter field.
func (o *OpenldapConfigRequest) SetGroupfilter(v string) {
	o.Groupfilter = &v
}

// GetInsecureTls returns the InsecureTls field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetInsecureTls() bool {
	if o == nil || o.InsecureTls == nil {
		var ret bool
		return ret
	}
	return *o.InsecureTls
}

// GetInsecureTlsOk returns a tuple with the InsecureTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetInsecureTlsOk() (*bool, bool) {
	if o == nil || o.InsecureTls == nil {
		return nil, false
	}
	return o.InsecureTls, true
}

// HasInsecureTls returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasInsecureTls() bool {
	if o != nil && o.InsecureTls != nil {
		return true
	}

	return false
}

// SetInsecureTls gets a reference to the given bool and assigns it to the InsecureTls field.
func (o *OpenldapConfigRequest) SetInsecureTls(v bool) {
	o.InsecureTls = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
// Deprecated
func (o *OpenldapConfigRequest) GetLength() int32 {
	if o == nil || o.Length == nil {
		var ret int32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OpenldapConfigRequest) GetLengthOk() (*int32, bool) {
	if o == nil || o.Length == nil {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasLength() bool {
	if o != nil && o.Length != nil {
		return true
	}

	return false
}

// SetLength gets a reference to the given int32 and assigns it to the Length field.
// Deprecated
func (o *OpenldapConfigRequest) SetLength(v int32) {
	o.Length = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *OpenldapConfigRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetPasswordPolicy returns the PasswordPolicy field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetPasswordPolicy() string {
	if o == nil || o.PasswordPolicy == nil {
		var ret string
		return ret
	}
	return *o.PasswordPolicy
}

// GetPasswordPolicyOk returns a tuple with the PasswordPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetPasswordPolicyOk() (*string, bool) {
	if o == nil || o.PasswordPolicy == nil {
		return nil, false
	}
	return o.PasswordPolicy, true
}

// HasPasswordPolicy returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasPasswordPolicy() bool {
	if o != nil && o.PasswordPolicy != nil {
		return true
	}

	return false
}

// SetPasswordPolicy gets a reference to the given string and assigns it to the PasswordPolicy field.
func (o *OpenldapConfigRequest) SetPasswordPolicy(v string) {
	o.PasswordPolicy = &v
}

// GetRequestTimeout returns the RequestTimeout field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetRequestTimeout() int32 {
	if o == nil || o.RequestTimeout == nil {
		var ret int32
		return ret
	}
	return *o.RequestTimeout
}

// GetRequestTimeoutOk returns a tuple with the RequestTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetRequestTimeoutOk() (*int32, bool) {
	if o == nil || o.RequestTimeout == nil {
		return nil, false
	}
	return o.RequestTimeout, true
}

// HasRequestTimeout returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasRequestTimeout() bool {
	if o != nil && o.RequestTimeout != nil {
		return true
	}

	return false
}

// SetRequestTimeout gets a reference to the given int32 and assigns it to the RequestTimeout field.
func (o *OpenldapConfigRequest) SetRequestTimeout(v int32) {
	o.RequestTimeout = &v
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetSchema() string {
	if o == nil || o.Schema == nil {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetSchemaOk() (*string, bool) {
	if o == nil || o.Schema == nil {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasSchema() bool {
	if o != nil && o.Schema != nil {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *OpenldapConfigRequest) SetSchema(v string) {
	o.Schema = &v
}

// GetStarttls returns the Starttls field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetStarttls() bool {
	if o == nil || o.Starttls == nil {
		var ret bool
		return ret
	}
	return *o.Starttls
}

// GetStarttlsOk returns a tuple with the Starttls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetStarttlsOk() (*bool, bool) {
	if o == nil || o.Starttls == nil {
		return nil, false
	}
	return o.Starttls, true
}

// HasStarttls returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasStarttls() bool {
	if o != nil && o.Starttls != nil {
		return true
	}

	return false
}

// SetStarttls gets a reference to the given bool and assigns it to the Starttls field.
func (o *OpenldapConfigRequest) SetStarttls(v bool) {
	o.Starttls = &v
}

// GetTlsMaxVersion returns the TlsMaxVersion field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetTlsMaxVersion() string {
	if o == nil || o.TlsMaxVersion == nil {
		var ret string
		return ret
	}
	return *o.TlsMaxVersion
}

// GetTlsMaxVersionOk returns a tuple with the TlsMaxVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetTlsMaxVersionOk() (*string, bool) {
	if o == nil || o.TlsMaxVersion == nil {
		return nil, false
	}
	return o.TlsMaxVersion, true
}

// HasTlsMaxVersion returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasTlsMaxVersion() bool {
	if o != nil && o.TlsMaxVersion != nil {
		return true
	}

	return false
}

// SetTlsMaxVersion gets a reference to the given string and assigns it to the TlsMaxVersion field.
func (o *OpenldapConfigRequest) SetTlsMaxVersion(v string) {
	o.TlsMaxVersion = &v
}

// GetTlsMinVersion returns the TlsMinVersion field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetTlsMinVersion() string {
	if o == nil || o.TlsMinVersion == nil {
		var ret string
		return ret
	}
	return *o.TlsMinVersion
}

// GetTlsMinVersionOk returns a tuple with the TlsMinVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetTlsMinVersionOk() (*string, bool) {
	if o == nil || o.TlsMinVersion == nil {
		return nil, false
	}
	return o.TlsMinVersion, true
}

// HasTlsMinVersion returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasTlsMinVersion() bool {
	if o != nil && o.TlsMinVersion != nil {
		return true
	}

	return false
}

// SetTlsMinVersion gets a reference to the given string and assigns it to the TlsMinVersion field.
func (o *OpenldapConfigRequest) SetTlsMinVersion(v string) {
	o.TlsMinVersion = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *OpenldapConfigRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUpndomain returns the Upndomain field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetUpndomain() string {
	if o == nil || o.Upndomain == nil {
		var ret string
		return ret
	}
	return *o.Upndomain
}

// GetUpndomainOk returns a tuple with the Upndomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetUpndomainOk() (*string, bool) {
	if o == nil || o.Upndomain == nil {
		return nil, false
	}
	return o.Upndomain, true
}

// HasUpndomain returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasUpndomain() bool {
	if o != nil && o.Upndomain != nil {
		return true
	}

	return false
}

// SetUpndomain gets a reference to the given string and assigns it to the Upndomain field.
func (o *OpenldapConfigRequest) SetUpndomain(v string) {
	o.Upndomain = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OpenldapConfigRequest) SetUrl(v string) {
	o.Url = &v
}

// GetUsePre111GroupCnBehavior returns the UsePre111GroupCnBehavior field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetUsePre111GroupCnBehavior() bool {
	if o == nil || o.UsePre111GroupCnBehavior == nil {
		var ret bool
		return ret
	}
	return *o.UsePre111GroupCnBehavior
}

// GetUsePre111GroupCnBehaviorOk returns a tuple with the UsePre111GroupCnBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetUsePre111GroupCnBehaviorOk() (*bool, bool) {
	if o == nil || o.UsePre111GroupCnBehavior == nil {
		return nil, false
	}
	return o.UsePre111GroupCnBehavior, true
}

// HasUsePre111GroupCnBehavior returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasUsePre111GroupCnBehavior() bool {
	if o != nil && o.UsePre111GroupCnBehavior != nil {
		return true
	}

	return false
}

// SetUsePre111GroupCnBehavior gets a reference to the given bool and assigns it to the UsePre111GroupCnBehavior field.
func (o *OpenldapConfigRequest) SetUsePre111GroupCnBehavior(v bool) {
	o.UsePre111GroupCnBehavior = &v
}

// GetUseTokenGroups returns the UseTokenGroups field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetUseTokenGroups() bool {
	if o == nil || o.UseTokenGroups == nil {
		var ret bool
		return ret
	}
	return *o.UseTokenGroups
}

// GetUseTokenGroupsOk returns a tuple with the UseTokenGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetUseTokenGroupsOk() (*bool, bool) {
	if o == nil || o.UseTokenGroups == nil {
		return nil, false
	}
	return o.UseTokenGroups, true
}

// HasUseTokenGroups returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasUseTokenGroups() bool {
	if o != nil && o.UseTokenGroups != nil {
		return true
	}

	return false
}

// SetUseTokenGroups gets a reference to the given bool and assigns it to the UseTokenGroups field.
func (o *OpenldapConfigRequest) SetUseTokenGroups(v bool) {
	o.UseTokenGroups = &v
}

// GetUserattr returns the Userattr field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetUserattr() string {
	if o == nil || o.Userattr == nil {
		var ret string
		return ret
	}
	return *o.Userattr
}

// GetUserattrOk returns a tuple with the Userattr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetUserattrOk() (*string, bool) {
	if o == nil || o.Userattr == nil {
		return nil, false
	}
	return o.Userattr, true
}

// HasUserattr returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasUserattr() bool {
	if o != nil && o.Userattr != nil {
		return true
	}

	return false
}

// SetUserattr gets a reference to the given string and assigns it to the Userattr field.
func (o *OpenldapConfigRequest) SetUserattr(v string) {
	o.Userattr = &v
}

// GetUserdn returns the Userdn field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetUserdn() string {
	if o == nil || o.Userdn == nil {
		var ret string
		return ret
	}
	return *o.Userdn
}

// GetUserdnOk returns a tuple with the Userdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetUserdnOk() (*string, bool) {
	if o == nil || o.Userdn == nil {
		return nil, false
	}
	return o.Userdn, true
}

// HasUserdn returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasUserdn() bool {
	if o != nil && o.Userdn != nil {
		return true
	}

	return false
}

// SetUserdn gets a reference to the given string and assigns it to the Userdn field.
func (o *OpenldapConfigRequest) SetUserdn(v string) {
	o.Userdn = &v
}

// GetUserfilter returns the Userfilter field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetUserfilter() string {
	if o == nil || o.Userfilter == nil {
		var ret string
		return ret
	}
	return *o.Userfilter
}

// GetUserfilterOk returns a tuple with the Userfilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetUserfilterOk() (*string, bool) {
	if o == nil || o.Userfilter == nil {
		return nil, false
	}
	return o.Userfilter, true
}

// HasUserfilter returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasUserfilter() bool {
	if o != nil && o.Userfilter != nil {
		return true
	}

	return false
}

// SetUserfilter gets a reference to the given string and assigns it to the Userfilter field.
func (o *OpenldapConfigRequest) SetUserfilter(v string) {
	o.Userfilter = &v
}

// GetUsernameAsAlias returns the UsernameAsAlias field value if set, zero value otherwise.
func (o *OpenldapConfigRequest) GetUsernameAsAlias() bool {
	if o == nil || o.UsernameAsAlias == nil {
		var ret bool
		return ret
	}
	return *o.UsernameAsAlias
}

// GetUsernameAsAliasOk returns a tuple with the UsernameAsAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapConfigRequest) GetUsernameAsAliasOk() (*bool, bool) {
	if o == nil || o.UsernameAsAlias == nil {
		return nil, false
	}
	return o.UsernameAsAlias, true
}

// HasUsernameAsAlias returns a boolean if a field has been set.
func (o *OpenldapConfigRequest) HasUsernameAsAlias() bool {
	if o != nil && o.UsernameAsAlias != nil {
		return true
	}

	return false
}

// SetUsernameAsAlias gets a reference to the given bool and assigns it to the UsernameAsAlias field.
func (o *OpenldapConfigRequest) SetUsernameAsAlias(v bool) {
	o.UsernameAsAlias = &v
}

func (o OpenldapConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AnonymousGroupSearch != nil {
		toSerialize["anonymous_group_search"] = o.AnonymousGroupSearch
	}
	if o.Binddn != nil {
		toSerialize["binddn"] = o.Binddn
	}
	if o.Bindpass != nil {
		toSerialize["bindpass"] = o.Bindpass
	}
	if o.CaseSensitiveNames != nil {
		toSerialize["case_sensitive_names"] = o.CaseSensitiveNames
	}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.ClientTlsCert != nil {
		toSerialize["client_tls_cert"] = o.ClientTlsCert
	}
	if o.ClientTlsKey != nil {
		toSerialize["client_tls_key"] = o.ClientTlsKey
	}
	if o.DenyNullBind != nil {
		toSerialize["deny_null_bind"] = o.DenyNullBind
	}
	if o.Discoverdn != nil {
		toSerialize["discoverdn"] = o.Discoverdn
	}
	if o.Groupattr != nil {
		toSerialize["groupattr"] = o.Groupattr
	}
	if o.Groupdn != nil {
		toSerialize["groupdn"] = o.Groupdn
	}
	if o.Groupfilter != nil {
		toSerialize["groupfilter"] = o.Groupfilter
	}
	if o.InsecureTls != nil {
		toSerialize["insecure_tls"] = o.InsecureTls
	}
	if o.Length != nil {
		toSerialize["length"] = o.Length
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.PasswordPolicy != nil {
		toSerialize["password_policy"] = o.PasswordPolicy
	}
	if o.RequestTimeout != nil {
		toSerialize["request_timeout"] = o.RequestTimeout
	}
	if o.Schema != nil {
		toSerialize["schema"] = o.Schema
	}
	if o.Starttls != nil {
		toSerialize["starttls"] = o.Starttls
	}
	if o.TlsMaxVersion != nil {
		toSerialize["tls_max_version"] = o.TlsMaxVersion
	}
	if o.TlsMinVersion != nil {
		toSerialize["tls_min_version"] = o.TlsMinVersion
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.Upndomain != nil {
		toSerialize["upndomain"] = o.Upndomain
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.UsePre111GroupCnBehavior != nil {
		toSerialize["use_pre111_group_cn_behavior"] = o.UsePre111GroupCnBehavior
	}
	if o.UseTokenGroups != nil {
		toSerialize["use_token_groups"] = o.UseTokenGroups
	}
	if o.Userattr != nil {
		toSerialize["userattr"] = o.Userattr
	}
	if o.Userdn != nil {
		toSerialize["userdn"] = o.Userdn
	}
	if o.Userfilter != nil {
		toSerialize["userfilter"] = o.Userfilter
	}
	if o.UsernameAsAlias != nil {
		toSerialize["username_as_alias"] = o.UsernameAsAlias
	}
	return json.Marshal(toSerialize)
}

type NullableOpenldapConfigRequest struct {
	value *OpenldapConfigRequest
	isSet bool
}

func (v NullableOpenldapConfigRequest) Get() *OpenldapConfigRequest {
	return v.value
}

func (v *NullableOpenldapConfigRequest) Set(val *OpenldapConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenldapConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenldapConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenldapConfigRequest(val *OpenldapConfigRequest) *NullableOpenldapConfigRequest {
	return &NullableOpenldapConfigRequest{value: val, isSet: true}
}

func (v NullableOpenldapConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenldapConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OpenldapRoleRequest struct for OpenldapRoleRequest
type OpenldapRoleRequest struct {
	// LDIF string used to create new entities within OpenLDAP. This LDIF can be templated.
	CreationLdif string `json:"creation_ldif"`
	// Default TTL for dynamic credentials
	DefaultTtl *int32 `json:"default_ttl,omitempty"`
	// LDIF string used to delete entities created within OpenLDAP. This LDIF can be templated.
	DeletionLdif string `json:"deletion_ldif"`
	// Max TTL a dynamic credential can be extended to
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// LDIF string used to rollback changes in the event of a failure to create credentials. This LDIF can be templated.
	RollbackLdif *string `json:"rollback_ldif,omitempty"`
	// The template used to create a username
	UsernameTemplate *string `json:"username_template,omitempty"`
}

// NewOpenldapRoleRequest instantiates a new OpenldapRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenldapRoleRequest(creationLdif string, deletionLdif string) *OpenldapRoleRequest {
	this := OpenldapRoleRequest{}
	this.CreationLdif = creationLdif
	this.DeletionLdif = deletionLdif
	return &this
}

// NewOpenldapRoleRequestWithDefaults instantiates a new OpenldapRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenldapRoleRequestWithDefaults() *OpenldapRoleRequest {
	this := OpenldapRoleRequest{}
	return &this
}

// GetCreationLdif returns the CreationLdif field value
func (o *OpenldapRoleRequest) GetCreationLdif() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreationLdif
}

// GetCreationLdifOk returns a tuple with the CreationLdif field value
// and a boolean to check if the value has been set.
func (o *OpenldapRoleRequest) GetCreationLdifOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationLdif, true
}

// SetCreationLdif sets field value
func (o *OpenldapRoleRequest) SetCreationLdif(v string) {
	o.CreationLdif = v
}

// GetDefaultTtl returns the DefaultTtl field value if set, zero value otherwise.
func (o *OpenldapRoleRequest) GetDefaultTtl() int32 {
	if o == nil || o.DefaultTtl == nil {
		var ret int32
		return ret
	}
	return *o.DefaultTtl
}

// GetDefaultTtlOk returns a tuple with the DefaultTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapRoleRequest) GetDefaultTtlOk() (*int32, bool) {
	if o == nil || o.DefaultTtl == nil {
		return nil, false
	}
	return o.DefaultTtl, true
}

// HasDefaultTtl returns a boolean if a field has been set.
func (o *OpenldapRoleRequest) HasDefaultTtl() bool {
	if o != nil && o.DefaultTtl != nil {
		return true
	}

	return false
}

// SetDefaultTtl gets a reference to the given int32 and assigns it to the DefaultTtl field.
func (o *OpenldapRoleRequest) SetDefaultTtl(v int32) {
	o.DefaultTtl = &v
}

// GetDeletionLdif returns the DeletionLdif field value
func (o *OpenldapRoleRequest) GetDeletionLdif() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeletionLdif
}

// GetDeletionLdifOk returns a tuple with the DeletionLdif field value
// and a boolean to check if the value has been set.
func (o *OpenldapRoleRequest) GetDeletionLdifOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletionLdif, true
}

// SetDeletionLdif sets field value
func (o *OpenldapRoleRequest) SetDeletionLdif(v string) {
	o.DeletionLdif = v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *OpenldapRoleRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapRoleRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *OpenldapRoleRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *OpenldapRoleRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetRollbackLdif returns the RollbackLdif field value if set, zero value otherwise.
func (o *OpenldapRoleRequest) GetRollbackLdif() string {
	if o == nil || o.RollbackLdif == nil {
		var ret string
		return ret
	}
	return *o.RollbackLdif
}

// GetRollbackLdifOk returns a tuple with the RollbackLdif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapRoleRequest) GetRollbackLdifOk() (*string, bool) {
	if o == nil || o.RollbackLdif == nil {
		return nil, false
	}
	return o.RollbackLdif, true
}

// HasRollbackLdif returns a boolean if a field has been set.
func (o *OpenldapRoleRequest) HasRollbackLdif() bool {
	if o != nil && o.RollbackLdif != nil {
		return true
	}

	return false
}

// SetRollbackLdif gets a reference to the given string and assigns it to the RollbackLdif field.
func (o *OpenldapRoleRequest) SetRollbackLdif(v string) {
	o.RollbackLdif = &v
}

// GetUsernameTemplate returns the UsernameTemplate field value if set, zero value otherwise.
func (o *OpenldapRoleRequest) GetUsernameTemplate() string {
	if o == nil || o.UsernameTemplate == nil {
		var ret string
		return ret
	}
	return *o.UsernameTemplate
}

// GetUsernameTemplateOk returns a tuple with the UsernameTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapRoleRequest) GetUsernameTemplateOk() (*string, bool) {
	if o == nil || o.UsernameTemplate == nil {
		return nil, false
	}
	return o.UsernameTemplate, true
}

// HasUsernameTemplate returns a boolean if a field has been set.
func (o *OpenldapRoleRequest) HasUsernameTemplate() bool {
	if o != nil && o.UsernameTemplate != nil {
		return true
	}

	return false
}

// SetUsernameTemplate gets a reference to the given string and assigns it to the UsernameTemplate field.
func (o *OpenldapRoleRequest) SetUsernameTemplate(v string) {
	o.UsernameTemplate = &v
}

func (o OpenldapRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["creation_ldif"] = o.CreationLdif
	}
	if o.DefaultTtl != nil {
		toSerialize["default_ttl"] = o.DefaultTtl
	}
	if true {
		toSerialize["deletion_ldif"] = o.DeletionLdif
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.RollbackLdif != nil {
		toSerialize["rollback_ldif"] = o.RollbackLdif
	}
	if o.UsernameTemplate != nil {
		toSerialize["username_template"] = o.UsernameTemplate
	}
	return json.Marshal(toSerialize)
}

type NullableOpenldapRoleRequest struct {
	value *OpenldapRoleRequest
	isSet bool
}

func (v NullableOpenldapRoleRequest) Get() *OpenldapRoleRequest {
	return v.value
}

func (v *NullableOpenldapRoleRequest) Set(val *OpenldapRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenldapRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenldapRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenldapRoleRequest(val *OpenldapRoleRequest) *NullableOpenldapRoleRequest {
	return &NullableOpenldapRoleRequest{value: val, isSet: true}
}

func (v NullableOpenldapRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenldapRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OpenldapStaticRoleRequest struct for OpenldapStaticRoleRequest
type OpenldapStaticRoleRequest struct {
	// The distinguished name of the entry to manage.
	Dn *string `json:"dn,omitempty"`
	// Period for automatic credential rotation of the given entry.
	RotationPeriod *int32 `json:"rotation_period,omitempty"`
	// The time-to-live for the password.
	Ttl *int32 `json:"ttl,omitempty"`
	// The username/logon name for the entry with which this role will be associated.
	Username *string `json:"username,omitempty"`
}

// NewOpenldapStaticRoleRequest instantiates a new OpenldapStaticRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenldapStaticRoleRequest() *OpenldapStaticRoleRequest {
	this := OpenldapStaticRoleRequest{}
	return &this
}

// NewOpenldapStaticRoleRequestWithDefaults instantiates a new OpenldapStaticRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenldapStaticRoleRequestWithDefaults() *OpenldapStaticRoleRequest {
	this := OpenldapStaticRoleRequest{}
	return &this
}

// GetDn returns the Dn field value if set, zero value otherwise.
func (o *OpenldapStaticRoleRequest) GetDn() string {
	if o == nil || o.Dn == nil {
		var ret string
		return ret
	}
	return *o.Dn
}

// GetDnOk returns a tuple with the Dn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapStaticRoleRequest) GetDnOk() (*string, bool) {
	if o == nil || o.Dn == nil {
		return nil, false
	}
	return o.Dn, true
}

// HasDn returns a boolean if a field has been set.
func (o *OpenldapStaticRoleRequest) HasDn() bool {
	if o != nil && o.Dn != nil {
		return true
	}

	return false
}

// SetDn gets a reference to the given string and assigns it to the Dn field.
func (o *OpenldapStaticRoleRequest) SetDn(v string) {
	o.Dn = &v
}

// GetRotationPeriod returns the RotationPeriod field value if set, zero value otherwise.
func (o *OpenldapStaticRoleRequest) GetRotationPeriod() int32 {
	if o == nil || o.RotationPeriod == nil {
		var ret int32
		return ret
	}
	return *o.RotationPeriod
}

// GetRotationPeriodOk returns a tuple with the RotationPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapStaticRoleRequest) GetRotationPeriodOk() (*int32, bool) {
	if o == nil || o.RotationPeriod == nil {
		return nil, false
	}
	return o.RotationPeriod, true
}

// HasRotationPeriod returns a boolean if a field has been set.
func (o *OpenldapStaticRoleRequest) HasRotationPeriod() bool {
	if o != nil && o.RotationPeriod != nil {
		return true
	}

	return false
}

// SetRotationPeriod gets a reference to the given int32 and assigns it to the RotationPeriod field.
func (o *OpenldapStaticRoleRequest) SetRotationPeriod(v int32) {
	o.RotationPeriod = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *OpenldapStaticRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapStaticRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *OpenldapStaticRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *OpenldapStaticRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *OpenldapStaticRoleRequest) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapStaticRoleRequest) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *OpenldapStaticRoleRequest) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *OpenldapStaticRoleRequest) SetUsername(v string) {
	o.Username = &v
}

func (o OpenldapStaticRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Dn != nil {
		toSerialize["dn"] = o.Dn
	}
	if o.RotationPeriod != nil {
		toSerialize["rotation_period"] = o.RotationPeriod
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableOpenldapStaticRoleRequest struct {
	value *OpenldapStaticRoleRequest
	isSet bool
}

func (v NullableOpenldapStaticRoleRequest) Get() *OpenldapStaticRoleRequest {
	return v.value
}

func (v *NullableOpenldapStaticRoleRequest) Set(val *OpenldapStaticRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenldapStaticRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenldapStaticRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenldapStaticRoleRequest(val *OpenldapStaticRoleRequest) *NullableOpenldapStaticRoleRequest {
	return &NullableOpenldapStaticRoleRequest{value: val, isSet: true}
}

func (v NullableOpenldapStaticRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenldapStaticRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiBundleRequest struct for PkiBundleRequest
type PkiBundleRequest struct {
	// PEM-format, concatenated unencrypted secret-key (optional) and certificates.
	PemBundle *string `json:"pem_bundle,omitempty"`
}

// NewPkiBundleRequest instantiates a new PkiBundleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiBundleRequest() *PkiBundleRequest {
	this := PkiBundleRequest{}
	return &this
}

// NewPkiBundleRequestWithDefaults instantiates a new PkiBundleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiBundleRequestWithDefaults() *PkiBundleRequest {
	this := PkiBundleRequest{}
	return &this
}

// GetPemBundle returns the PemBundle field value if set, zero value otherwise.
func (o *PkiBundleRequest) GetPemBundle() string {
	if o == nil || o.PemBundle == nil {
		var ret string
		return ret
	}
	return *o.PemBundle
}

// GetPemBundleOk returns a tuple with the PemBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiBundleRequest) GetPemBundleOk() (*string, bool) {
	if o == nil || o.PemBundle == nil {
		return nil, false
	}
	return o.PemBundle, true
}

// HasPemBundle returns a boolean if a field has been set.
func (o *PkiBundleRequest) HasPemBundle() bool {
	if o != nil && o.PemBundle != nil {
		return true
	}

	return false
}

// SetPemBundle gets a reference to the given string and assigns it to the PemBundle field.
func (o *PkiBundleRequest) SetPemBundle(v string) {
	o.PemBundle = &v
}

func (o PkiBundleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PemBundle != nil {
		toSerialize["pem_bundle"] = o.PemBundle
	}
	return json.Marshal(toSerialize)
}

type NullablePkiBundleRequest struct {
	value *PkiBundleRequest
	isSet bool
}

func (v NullablePkiBundleRequest) Get() *PkiBundleRequest {
	return v.value
}

func (v *NullablePkiBundleRequest) Set(val *PkiBundleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiBundleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiBundleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiBundleRequest(val *PkiBundleRequest) *NullablePkiBundleRequest {
	return &NullablePkiBundleRequest{value: val, isSet: true}
}

func (v NullablePkiBundleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiBundleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiCertRequest struct for PkiCertRequest
type PkiCertRequest struct {
	// PEM-format, concatenated unencrypted secret-key (optional) and certificates.
	PemBundle *string `json:"pem_bundle,omitempty"`
}

// NewPkiCertRequest instantiates a new PkiCertRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiCertRequest() *PkiCertRequest {
	this := PkiCertRequest{}
	return &this
}

// NewPkiCertRequestWithDefaults instantiates a new PkiCertRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiCertRequestWithDefaults() *PkiCertRequest {
	this := PkiCertRequest{}
	return &this
}

// GetPemBundle returns the PemBundle field value if set, zero value otherwise.
func (o *PkiCertRequest) GetPemBundle() string {
	if o == nil || o.PemBundle == nil {
		var ret string
		return ret
	}
	return *o.PemBundle
}

// GetPemBundleOk returns a tuple with the PemBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiCertRequest) GetPemBundleOk() (*string, bool) {
	if o == nil || o.PemBundle == nil {
		return nil, false
	}
	return o.PemBundle, true
}

// HasPemBundle returns a boolean if a field has been set.
func (o *PkiCertRequest) HasPemBundle() bool {
	if o != nil && o.PemBundle != nil {
		return true
	}

	return false
}

// SetPemBundle gets a reference to the given string and assigns it to the PemBundle field.
func (o *PkiCertRequest) SetPemBundle(v string) {
	o.PemBundle = &v
}

func (o PkiCertRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PemBundle != nil {
		toSerialize["pem_bundle"] = o.PemBundle
	}
	return json.Marshal(toSerialize)
}

type NullablePkiCertRequest struct {
	value *PkiCertRequest
	isSet bool
}

func (v NullablePkiCertRequest) Get() *PkiCertRequest {
	return v.value
}

func (v *NullablePkiCertRequest) Set(val *PkiCertRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiCertRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiCertRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiCertRequest(val *PkiCertRequest) *NullablePkiCertRequest {
	return &NullablePkiCertRequest{value: val, isSet: true}
}

func (v NullablePkiCertRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiCertRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiConfigCaRequest struct for PkiConfigCaRequest
type PkiConfigCaRequest struct {
	// PEM-format, concatenated unencrypted secret key and certificate.
	PemBundle *string `json:"pem_bundle,omitempty"`
}

// NewPkiConfigCaRequest instantiates a new PkiConfigCaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiConfigCaRequest() *PkiConfigCaRequest {
	this := PkiConfigCaRequest{}
	return &this
}

// NewPkiConfigCaRequestWithDefaults instantiates a new PkiConfigCaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiConfigCaRequestWithDefaults() *PkiConfigCaRequest {
	this := PkiConfigCaRequest{}
	return &this
}

// GetPemBundle returns the PemBundle field value if set, zero value otherwise.
func (o *PkiConfigCaRequest) GetPemBundle() string {
	if o == nil || o.PemBundle == nil {
		var ret string
		return ret
	}
	return *o.PemBundle
}

// GetPemBundleOk returns a tuple with the PemBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiConfigCaRequest) GetPemBundleOk() (*string, bool) {
	if o == nil || o.PemBundle == nil {
		return nil, false
	}
	return o.PemBundle, true
}

// HasPemBundle returns a boolean if a field has been set.
func (o *PkiConfigCaRequest) HasPemBundle() bool {
	if o != nil && o.PemBundle != nil {
		return true
	}

	return false
}

// SetPemBundle gets a reference to the given string and assigns it to the PemBundle field.
func (o *PkiConfigCaRequest) SetPemBundle(v string) {
	o.PemBundle = &v
}

func (o PkiConfigCaRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PemBundle != nil {
		toSerialize["pem_bundle"] = o.PemBundle
	}
	return json.Marshal(toSerialize)
}

type NullablePkiConfigCaRequest struct {
	value *PkiConfigCaRequest
	isSet bool
}

func (v NullablePkiConfigCaRequest) Get() *PkiConfigCaRequest {
	return v.value
}

func (v *NullablePkiConfigCaRequest) Set(val *PkiConfigCaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiConfigCaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiConfigCaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiConfigCaRequest(val *PkiConfigCaRequest) *NullablePkiConfigCaRequest {
	return &NullablePkiConfigCaRequest{value: val, isSet: true}
}

func (v NullablePkiConfigCaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiConfigCaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiConfigCrlRequest struct for PkiConfigCrlRequest
type PkiConfigCrlRequest struct {
	// If set to true, disables generating the CRL entirely.
	Disable *bool `json:"disable,omitempty"`
	// The amount of time the generated CRL should be valid; defaults to 72 hours
	Expiry *string `json:"expiry,omitempty"`
}

// NewPkiConfigCrlRequest instantiates a new PkiConfigCrlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiConfigCrlRequest() *PkiConfigCrlRequest {
	this := PkiConfigCrlRequest{}
	var expiry string = "72h"
	this.Expiry = &expiry
	return &this
}

// NewPkiConfigCrlRequestWithDefaults instantiates a new PkiConfigCrlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiConfigCrlRequestWithDefaults() *PkiConfigCrlRequest {
	this := PkiConfigCrlRequest{}
	var expiry string = "72h"
	this.Expiry = &expiry
	return &this
}

// GetDisable returns the Disable field value if set, zero value otherwise.
func (o *PkiConfigCrlRequest) GetDisable() bool {
	if o == nil || o.Disable == nil {
		var ret bool
		return ret
	}
	return *o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiConfigCrlRequest) GetDisableOk() (*bool, bool) {
	if o == nil || o.Disable == nil {
		return nil, false
	}
	return o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *PkiConfigCrlRequest) HasDisable() bool {
	if o != nil && o.Disable != nil {
		return true
	}

	return false
}

// SetDisable gets a reference to the given bool and assigns it to the Disable field.
func (o *PkiConfigCrlRequest) SetDisable(v bool) {
	o.Disable = &v
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *PkiConfigCrlRequest) GetExpiry() string {
	if o == nil || o.Expiry == nil {
		var ret string
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiConfigCrlRequest) GetExpiryOk() (*string, bool) {
	if o == nil || o.Expiry == nil {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *PkiConfigCrlRequest) HasExpiry() bool {
	if o != nil && o.Expiry != nil {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given string and assigns it to the Expiry field.
func (o *PkiConfigCrlRequest) SetExpiry(v string) {
	o.Expiry = &v
}

func (o PkiConfigCrlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Disable != nil {
		toSerialize["disable"] = o.Disable
	}
	if o.Expiry != nil {
		toSerialize["expiry"] = o.Expiry
	}
	return json.Marshal(toSerialize)
}

type NullablePkiConfigCrlRequest struct {
	value *PkiConfigCrlRequest
	isSet bool
}

func (v NullablePkiConfigCrlRequest) Get() *PkiConfigCrlRequest {
	return v.value
}

func (v *NullablePkiConfigCrlRequest) Set(val *PkiConfigCrlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiConfigCrlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiConfigCrlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiConfigCrlRequest(val *PkiConfigCrlRequest) *NullablePkiConfigCrlRequest {
	return &NullablePkiConfigCrlRequest{value: val, isSet: true}
}

func (v NullablePkiConfigCrlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiConfigCrlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiConfigIssuersRequest struct for PkiConfigIssuersRequest
type PkiConfigIssuersRequest struct {
	// Reference (name or identifier) to the default issuer.
	Default *string `json:"default,omitempty"`
}

// NewPkiConfigIssuersRequest instantiates a new PkiConfigIssuersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiConfigIssuersRequest() *PkiConfigIssuersRequest {
	this := PkiConfigIssuersRequest{}
	return &this
}

// NewPkiConfigIssuersRequestWithDefaults instantiates a new PkiConfigIssuersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiConfigIssuersRequestWithDefaults() *PkiConfigIssuersRequest {
	this := PkiConfigIssuersRequest{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *PkiConfigIssuersRequest) GetDefault() string {
	if o == nil || o.Default == nil {
		var ret string
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiConfigIssuersRequest) GetDefaultOk() (*string, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *PkiConfigIssuersRequest) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given string and assigns it to the Default field.
func (o *PkiConfigIssuersRequest) SetDefault(v string) {
	o.Default = &v
}

func (o PkiConfigIssuersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	return json.Marshal(toSerialize)
}

type NullablePkiConfigIssuersRequest struct {
	value *PkiConfigIssuersRequest
	isSet bool
}

func (v NullablePkiConfigIssuersRequest) Get() *PkiConfigIssuersRequest {
	return v.value
}

func (v *NullablePkiConfigIssuersRequest) Set(val *PkiConfigIssuersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiConfigIssuersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiConfigIssuersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiConfigIssuersRequest(val *PkiConfigIssuersRequest) *NullablePkiConfigIssuersRequest {
	return &NullablePkiConfigIssuersRequest{value: val, isSet: true}
}

func (v NullablePkiConfigIssuersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiConfigIssuersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiConfigKeysRequest struct for PkiConfigKeysRequest
type PkiConfigKeysRequest struct {
	// Reference (name or identifier) of the default key.
	Default *string `json:"default,omitempty"`
}

// NewPkiConfigKeysRequest instantiates a new PkiConfigKeysRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiConfigKeysRequest() *PkiConfigKeysRequest {
	this := PkiConfigKeysRequest{}
	return &this
}

// NewPkiConfigKeysRequestWithDefaults instantiates a new PkiConfigKeysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiConfigKeysRequestWithDefaults() *PkiConfigKeysRequest {
	this := PkiConfigKeysRequest{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *PkiConfigKeysRequest) GetDefault() string {
	if o == nil || o.Default == nil {
		var ret string
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiConfigKeysRequest) GetDefaultOk() (*string, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *PkiConfigKeysRequest) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given string and assigns it to the Default field.
func (o *PkiConfigKeysRequest) SetDefault(v string) {
	o.Default = &v
}

func (o PkiConfigKeysRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	return json.Marshal(toSerialize)
}

type NullablePkiConfigKeysRequest struct {
	value *PkiConfigKeysRequest
	isSet bool
}

func (v NullablePkiConfigKeysRequest) Get() *PkiConfigKeysRequest {
	return v.value
}

func (v *NullablePkiConfigKeysRequest) Set(val *PkiConfigKeysRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiConfigKeysRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiConfigKeysRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiConfigKeysRequest(val *PkiConfigKeysRequest) *NullablePkiConfigKeysRequest {
	return &NullablePkiConfigKeysRequest{value: val, isSet: true}
}

func (v NullablePkiConfigKeysRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiConfigKeysRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiConfigUrlsRequest struct for PkiConfigUrlsRequest
type PkiConfigUrlsRequest struct {
	// Comma-separated list of URLs to be used for the CRL distribution points attribute. See also RFC 5280 Section 4.2.1.13.
	CrlDistributionPoints []string `json:"crl_distribution_points,omitempty"`
	// Comma-separated list of URLs to be used for the issuing certificate attribute. See also RFC 5280 Section 4.2.2.1.
	IssuingCertificates []string `json:"issuing_certificates,omitempty"`
	// Comma-separated list of URLs to be used for the OCSP servers attribute. See also RFC 5280 Section 4.2.2.1.
	OcspServers []string `json:"ocsp_servers,omitempty"`
}

// NewPkiConfigUrlsRequest instantiates a new PkiConfigUrlsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiConfigUrlsRequest() *PkiConfigUrlsRequest {
	this := PkiConfigUrlsRequest{}
	return &this
}

// NewPkiConfigUrlsRequestWithDefaults instantiates a new PkiConfigUrlsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiConfigUrlsRequestWithDefaults() *PkiConfigUrlsRequest {
	this := PkiConfigUrlsRequest{}
	return &this
}

// GetCrlDistributionPoints returns the CrlDistributionPoints field value if set, zero value otherwise.
func (o *PkiConfigUrlsRequest) GetCrlDistributionPoints() []string {
	if o == nil || o.CrlDistributionPoints == nil {
		var ret []string
		return ret
	}
	return o.CrlDistributionPoints
}

// GetCrlDistributionPointsOk returns a tuple with the CrlDistributionPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiConfigUrlsRequest) GetCrlDistributionPointsOk() ([]string, bool) {
	if o == nil || o.CrlDistributionPoints == nil {
		return nil, false
	}
	return o.CrlDistributionPoints, true
}

// HasCrlDistributionPoints returns a boolean if a field has been set.
func (o *PkiConfigUrlsRequest) HasCrlDistributionPoints() bool {
	if o != nil && o.CrlDistributionPoints != nil {
		return true
	}

	return false
}

// SetCrlDistributionPoints gets a reference to the given []string and assigns it to the CrlDistributionPoints field.
func (o *PkiConfigUrlsRequest) SetCrlDistributionPoints(v []string) {
	o.CrlDistributionPoints = v
}

// GetIssuingCertificates returns the IssuingCertificates field value if set, zero value otherwise.
func (o *PkiConfigUrlsRequest) GetIssuingCertificates() []string {
	if o == nil || o.IssuingCertificates == nil {
		var ret []string
		return ret
	}
	return o.IssuingCertificates
}

// GetIssuingCertificatesOk returns a tuple with the IssuingCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiConfigUrlsRequest) GetIssuingCertificatesOk() ([]string, bool) {
	if o == nil || o.IssuingCertificates == nil {
		return nil, false
	}
	return o.IssuingCertificates, true
}

// HasIssuingCertificates returns a boolean if a field has been set.
func (o *PkiConfigUrlsRequest) HasIssuingCertificates() bool {
	if o != nil && o.IssuingCertificates != nil {
		return true
	}

	return false
}

// SetIssuingCertificates gets a reference to the given []string and assigns it to the IssuingCertificates field.
func (o *PkiConfigUrlsRequest) SetIssuingCertificates(v []string) {
	o.IssuingCertificates = v
}

// GetOcspServers returns the OcspServers field value if set, zero value otherwise.
func (o *PkiConfigUrlsRequest) GetOcspServers() []string {
	if o == nil || o.OcspServers == nil {
		var ret []string
		return ret
	}
	return o.OcspServers
}

// GetOcspServersOk returns a tuple with the OcspServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiConfigUrlsRequest) GetOcspServersOk() ([]string, bool) {
	if o == nil || o.OcspServers == nil {
		return nil, false
	}
	return o.OcspServers, true
}

// HasOcspServers returns a boolean if a field has been set.
func (o *PkiConfigUrlsRequest) HasOcspServers() bool {
	if o != nil && o.OcspServers != nil {
		return true
	}

	return false
}

// SetOcspServers gets a reference to the given []string and assigns it to the OcspServers field.
func (o *PkiConfigUrlsRequest) SetOcspServers(v []string) {
	o.OcspServers = v
}

func (o PkiConfigUrlsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CrlDistributionPoints != nil {
		toSerialize["crl_distribution_points"] = o.CrlDistributionPoints
	}
	if o.IssuingCertificates != nil {
		toSerialize["issuing_certificates"] = o.IssuingCertificates
	}
	if o.OcspServers != nil {
		toSerialize["ocsp_servers"] = o.OcspServers
	}
	return json.Marshal(toSerialize)
}

type NullablePkiConfigUrlsRequest struct {
	value *PkiConfigUrlsRequest
	isSet bool
}

func (v NullablePkiConfigUrlsRequest) Get() *PkiConfigUrlsRequest {
	return v.value
}

func (v *NullablePkiConfigUrlsRequest) Set(val *PkiConfigUrlsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiConfigUrlsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiConfigUrlsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiConfigUrlsRequest(val *PkiConfigUrlsRequest) *NullablePkiConfigUrlsRequest {
	return &NullablePkiConfigUrlsRequest{value: val, isSet: true}
}

func (v NullablePkiConfigUrlsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiConfigUrlsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiDerPemRequest struct for PkiDerPemRequest
type PkiDerPemRequest struct {
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName *string `json:"issuer_name,omitempty"`
	// Behavior of leaf's NotAfter fields: \"err\" to error if the computed NotAfter date exceeds that of this issuer; \"truncate\" to silently truncate to that of this issuer; or \"permit\" to allow this issuance to succeed (with NotAfter exceeding that of an issuer). Note that not all values will results in certificates that can be validated through the entire validity period. It is suggested to use \"truncate\" for intermediate CAs and \"permit\" only for root CAs.
	LeafNotAfterBehavior *string `json:"leaf_not_after_behavior,omitempty"`
	// Chain of issuer references to use to build this issuer's computed CAChain field, when non-empty.
	ManualChain []string `json:"manual_chain,omitempty"`
	// Comma-separated list (or string slice) of usages for this issuer; valid values are \"read-only\", \"issuing-certificates\", and \"crl-signing\". Multiple values may be specified. Read-only is implicit and always set.
	Usage []string `json:"usage,omitempty"`
}

// NewPkiDerPemRequest instantiates a new PkiDerPemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiDerPemRequest() *PkiDerPemRequest {
	this := PkiDerPemRequest{}
	var leafNotAfterBehavior string = "err"
	this.LeafNotAfterBehavior = &leafNotAfterBehavior
	return &this
}

// NewPkiDerPemRequestWithDefaults instantiates a new PkiDerPemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiDerPemRequestWithDefaults() *PkiDerPemRequest {
	this := PkiDerPemRequest{}
	var leafNotAfterBehavior string = "err"
	this.LeafNotAfterBehavior = &leafNotAfterBehavior
	return &this
}

// GetIssuerName returns the IssuerName field value if set, zero value otherwise.
func (o *PkiDerPemRequest) GetIssuerName() string {
	if o == nil || o.IssuerName == nil {
		var ret string
		return ret
	}
	return *o.IssuerName
}

// GetIssuerNameOk returns a tuple with the IssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiDerPemRequest) GetIssuerNameOk() (*string, bool) {
	if o == nil || o.IssuerName == nil {
		return nil, false
	}
	return o.IssuerName, true
}

// HasIssuerName returns a boolean if a field has been set.
func (o *PkiDerPemRequest) HasIssuerName() bool {
	if o != nil && o.IssuerName != nil {
		return true
	}

	return false
}

// SetIssuerName gets a reference to the given string and assigns it to the IssuerName field.
func (o *PkiDerPemRequest) SetIssuerName(v string) {
	o.IssuerName = &v
}

// GetLeafNotAfterBehavior returns the LeafNotAfterBehavior field value if set, zero value otherwise.
func (o *PkiDerPemRequest) GetLeafNotAfterBehavior() string {
	if o == nil || o.LeafNotAfterBehavior == nil {
		var ret string
		return ret
	}
	return *o.LeafNotAfterBehavior
}

// GetLeafNotAfterBehaviorOk returns a tuple with the LeafNotAfterBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiDerPemRequest) GetLeafNotAfterBehaviorOk() (*string, bool) {
	if o == nil || o.LeafNotAfterBehavior == nil {
		return nil, false
	}
	return o.LeafNotAfterBehavior, true
}

// HasLeafNotAfterBehavior returns a boolean if a field has been set.
func (o *PkiDerPemRequest) HasLeafNotAfterBehavior() bool {
	if o != nil && o.LeafNotAfterBehavior != nil {
		return true
	}

	return false
}

// SetLeafNotAfterBehavior gets a reference to the given string and assigns it to the LeafNotAfterBehavior field.
func (o *PkiDerPemRequest) SetLeafNotAfterBehavior(v string) {
	o.LeafNotAfterBehavior = &v
}

// GetManualChain returns the ManualChain field value if set, zero value otherwise.
func (o *PkiDerPemRequest) GetManualChain() []string {
	if o == nil || o.ManualChain == nil {
		var ret []string
		return ret
	}
	return o.ManualChain
}

// GetManualChainOk returns a tuple with the ManualChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiDerPemRequest) GetManualChainOk() ([]string, bool) {
	if o == nil || o.ManualChain == nil {
		return nil, false
	}
	return o.ManualChain, true
}

// HasManualChain returns a boolean if a field has been set.
func (o *PkiDerPemRequest) HasManualChain() bool {
	if o != nil && o.ManualChain != nil {
		return true
	}

	return false
}

// SetManualChain gets a reference to the given []string and assigns it to the ManualChain field.
func (o *PkiDerPemRequest) SetManualChain(v []string) {
	o.ManualChain = v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *PkiDerPemRequest) GetUsage() []string {
	if o == nil || o.Usage == nil {
		var ret []string
		return ret
	}
	return o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiDerPemRequest) GetUsageOk() ([]string, bool) {
	if o == nil || o.Usage == nil {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *PkiDerPemRequest) HasUsage() bool {
	if o != nil && o.Usage != nil {
		return true
	}

	return false
}

// SetUsage gets a reference to the given []string and assigns it to the Usage field.
func (o *PkiDerPemRequest) SetUsage(v []string) {
	o.Usage = v
}

func (o PkiDerPemRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IssuerName != nil {
		toSerialize["issuer_name"] = o.IssuerName
	}
	if o.LeafNotAfterBehavior != nil {
		toSerialize["leaf_not_after_behavior"] = o.LeafNotAfterBehavior
	}
	if o.ManualChain != nil {
		toSerialize["manual_chain"] = o.ManualChain
	}
	if o.Usage != nil {
		toSerialize["usage"] = o.Usage
	}
	return json.Marshal(toSerialize)
}

type NullablePkiDerPemRequest struct {
	value *PkiDerPemRequest
	isSet bool
}

func (v NullablePkiDerPemRequest) Get() *PkiDerPemRequest {
	return v.value
}

func (v *NullablePkiDerPemRequest) Set(val *PkiDerPemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiDerPemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiDerPemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiDerPemRequest(val *PkiDerPemRequest) *NullablePkiDerPemRequest {
	return &NullablePkiDerPemRequest{value: val, isSet: true}
}

func (v NullablePkiDerPemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiDerPemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiIntermediateCrossSignRequest struct for PkiIntermediateCrossSignRequest
type PkiIntermediateCrossSignRequest struct {
	// Whether to add a Basic Constraints extension with CA: true. Only needed as a workaround in some compatibility scenarios with Active Directory Certificate Services.
	AddBasicConstraints *bool `json:"add_basic_constraints,omitempty"`
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName *string `json:"common_name,omitempty"`
	// If set, Country will be set to this value.
	Country []string `json:"country,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// Must be \"internal\", \"exported\" or \"kms\". If set to \"exported\", the generated private key will be returned. This is your *only* chance to retrieve the private key!
	Exported *string `json:"exported,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits *int32 `json:"key_bits,omitempty"`
	// Provide a name to the generated or existing key, the name must be unique across all keys and not be the reserved value 'default'
	KeyName *string `json:"key_name,omitempty"`
	// Reference to a existing key; either \"default\" for the configured default key, an identifier or the name assigned to the key.
	KeyRef *string `json:"key_ref,omitempty"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType *string `json:"key_type,omitempty"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId *string `json:"managed_key_id,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName *string `json:"managed_key_name,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration *int32 `json:"not_before_duration,omitempty"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou,omitempty"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// If set, Province will be set to this value.
	Province []string `json:"province,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
}

// NewPkiIntermediateCrossSignRequest instantiates a new PkiIntermediateCrossSignRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiIntermediateCrossSignRequest() *PkiIntermediateCrossSignRequest {
	this := PkiIntermediateCrossSignRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyRef string = "default"
	this.KeyRef = &keyRef
	var keyType string = "rsa"
	this.KeyType = &keyType
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// NewPkiIntermediateCrossSignRequestWithDefaults instantiates a new PkiIntermediateCrossSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiIntermediateCrossSignRequestWithDefaults() *PkiIntermediateCrossSignRequest {
	this := PkiIntermediateCrossSignRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyRef string = "default"
	this.KeyRef = &keyRef
	var keyType string = "rsa"
	this.KeyType = &keyType
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// GetAddBasicConstraints returns the AddBasicConstraints field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetAddBasicConstraints() bool {
	if o == nil || o.AddBasicConstraints == nil {
		var ret bool
		return ret
	}
	return *o.AddBasicConstraints
}

// GetAddBasicConstraintsOk returns a tuple with the AddBasicConstraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetAddBasicConstraintsOk() (*bool, bool) {
	if o == nil || o.AddBasicConstraints == nil {
		return nil, false
	}
	return o.AddBasicConstraints, true
}

// HasAddBasicConstraints returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasAddBasicConstraints() bool {
	if o != nil && o.AddBasicConstraints != nil {
		return true
	}

	return false
}

// SetAddBasicConstraints gets a reference to the given bool and assigns it to the AddBasicConstraints field.
func (o *PkiIntermediateCrossSignRequest) SetAddBasicConstraints(v bool) {
	o.AddBasicConstraints = &v
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiIntermediateCrossSignRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiIntermediateCrossSignRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetCountry() []string {
	if o == nil || o.Country == nil {
		var ret []string
		return ret
	}
	return o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetCountryOk() ([]string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given []string and assigns it to the Country field.
func (o *PkiIntermediateCrossSignRequest) SetCountry(v []string) {
	o.Country = v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiIntermediateCrossSignRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetExported returns the Exported field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetExported() string {
	if o == nil || o.Exported == nil {
		var ret string
		return ret
	}
	return *o.Exported
}

// GetExportedOk returns a tuple with the Exported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetExportedOk() (*string, bool) {
	if o == nil || o.Exported == nil {
		return nil, false
	}
	return o.Exported, true
}

// HasExported returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasExported() bool {
	if o != nil && o.Exported != nil {
		return true
	}

	return false
}

// SetExported gets a reference to the given string and assigns it to the Exported field.
func (o *PkiIntermediateCrossSignRequest) SetExported(v string) {
	o.Exported = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiIntermediateCrossSignRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiIntermediateCrossSignRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetKeyBits returns the KeyBits field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetKeyBits() int32 {
	if o == nil || o.KeyBits == nil {
		var ret int32
		return ret
	}
	return *o.KeyBits
}

// GetKeyBitsOk returns a tuple with the KeyBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetKeyBitsOk() (*int32, bool) {
	if o == nil || o.KeyBits == nil {
		return nil, false
	}
	return o.KeyBits, true
}

// HasKeyBits returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasKeyBits() bool {
	if o != nil && o.KeyBits != nil {
		return true
	}

	return false
}

// SetKeyBits gets a reference to the given int32 and assigns it to the KeyBits field.
func (o *PkiIntermediateCrossSignRequest) SetKeyBits(v int32) {
	o.KeyBits = &v
}

// GetKeyName returns the KeyName field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetKeyName() string {
	if o == nil || o.KeyName == nil {
		var ret string
		return ret
	}
	return *o.KeyName
}

// GetKeyNameOk returns a tuple with the KeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetKeyNameOk() (*string, bool) {
	if o == nil || o.KeyName == nil {
		return nil, false
	}
	return o.KeyName, true
}

// HasKeyName returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasKeyName() bool {
	if o != nil && o.KeyName != nil {
		return true
	}

	return false
}

// SetKeyName gets a reference to the given string and assigns it to the KeyName field.
func (o *PkiIntermediateCrossSignRequest) SetKeyName(v string) {
	o.KeyName = &v
}

// GetKeyRef returns the KeyRef field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetKeyRef() string {
	if o == nil || o.KeyRef == nil {
		var ret string
		return ret
	}
	return *o.KeyRef
}

// GetKeyRefOk returns a tuple with the KeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetKeyRefOk() (*string, bool) {
	if o == nil || o.KeyRef == nil {
		return nil, false
	}
	return o.KeyRef, true
}

// HasKeyRef returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasKeyRef() bool {
	if o != nil && o.KeyRef != nil {
		return true
	}

	return false
}

// SetKeyRef gets a reference to the given string and assigns it to the KeyRef field.
func (o *PkiIntermediateCrossSignRequest) SetKeyRef(v string) {
	o.KeyRef = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *PkiIntermediateCrossSignRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetLocality() []string {
	if o == nil || o.Locality == nil {
		var ret []string
		return ret
	}
	return o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetLocalityOk() ([]string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given []string and assigns it to the Locality field.
func (o *PkiIntermediateCrossSignRequest) SetLocality(v []string) {
	o.Locality = v
}

// GetManagedKeyId returns the ManagedKeyId field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetManagedKeyId() string {
	if o == nil || o.ManagedKeyId == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyId
}

// GetManagedKeyIdOk returns a tuple with the ManagedKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetManagedKeyIdOk() (*string, bool) {
	if o == nil || o.ManagedKeyId == nil {
		return nil, false
	}
	return o.ManagedKeyId, true
}

// HasManagedKeyId returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasManagedKeyId() bool {
	if o != nil && o.ManagedKeyId != nil {
		return true
	}

	return false
}

// SetManagedKeyId gets a reference to the given string and assigns it to the ManagedKeyId field.
func (o *PkiIntermediateCrossSignRequest) SetManagedKeyId(v string) {
	o.ManagedKeyId = &v
}

// GetManagedKeyName returns the ManagedKeyName field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetManagedKeyName() string {
	if o == nil || o.ManagedKeyName == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyName
}

// GetManagedKeyNameOk returns a tuple with the ManagedKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetManagedKeyNameOk() (*string, bool) {
	if o == nil || o.ManagedKeyName == nil {
		return nil, false
	}
	return o.ManagedKeyName, true
}

// HasManagedKeyName returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasManagedKeyName() bool {
	if o != nil && o.ManagedKeyName != nil {
		return true
	}

	return false
}

// SetManagedKeyName gets a reference to the given string and assigns it to the ManagedKeyName field.
func (o *PkiIntermediateCrossSignRequest) SetManagedKeyName(v string) {
	o.ManagedKeyName = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiIntermediateCrossSignRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetNotBeforeDuration returns the NotBeforeDuration field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetNotBeforeDuration() int32 {
	if o == nil || o.NotBeforeDuration == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeDuration
}

// GetNotBeforeDurationOk returns a tuple with the NotBeforeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetNotBeforeDurationOk() (*int32, bool) {
	if o == nil || o.NotBeforeDuration == nil {
		return nil, false
	}
	return o.NotBeforeDuration, true
}

// HasNotBeforeDuration returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasNotBeforeDuration() bool {
	if o != nil && o.NotBeforeDuration != nil {
		return true
	}

	return false
}

// SetNotBeforeDuration gets a reference to the given int32 and assigns it to the NotBeforeDuration field.
func (o *PkiIntermediateCrossSignRequest) SetNotBeforeDuration(v int32) {
	o.NotBeforeDuration = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetOrganization() []string {
	if o == nil || o.Organization == nil {
		var ret []string
		return ret
	}
	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetOrganizationOk() ([]string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given []string and assigns it to the Organization field.
func (o *PkiIntermediateCrossSignRequest) SetOrganization(v []string) {
	o.Organization = v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiIntermediateCrossSignRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetOu returns the Ou field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetOu() []string {
	if o == nil || o.Ou == nil {
		var ret []string
		return ret
	}
	return o.Ou
}

// GetOuOk returns a tuple with the Ou field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetOuOk() ([]string, bool) {
	if o == nil || o.Ou == nil {
		return nil, false
	}
	return o.Ou, true
}

// HasOu returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasOu() bool {
	if o != nil && o.Ou != nil {
		return true
	}

	return false
}

// SetOu gets a reference to the given []string and assigns it to the Ou field.
func (o *PkiIntermediateCrossSignRequest) SetOu(v []string) {
	o.Ou = v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetPostalCode() []string {
	if o == nil || o.PostalCode == nil {
		var ret []string
		return ret
	}
	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetPostalCodeOk() ([]string, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given []string and assigns it to the PostalCode field.
func (o *PkiIntermediateCrossSignRequest) SetPostalCode(v []string) {
	o.PostalCode = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiIntermediateCrossSignRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetProvince() []string {
	if o == nil || o.Province == nil {
		var ret []string
		return ret
	}
	return o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetProvinceOk() ([]string, bool) {
	if o == nil || o.Province == nil {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasProvince() bool {
	if o != nil && o.Province != nil {
		return true
	}

	return false
}

// SetProvince gets a reference to the given []string and assigns it to the Province field.
func (o *PkiIntermediateCrossSignRequest) SetProvince(v []string) {
	o.Province = v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiIntermediateCrossSignRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetStreetAddress() []string {
	if o == nil || o.StreetAddress == nil {
		var ret []string
		return ret
	}
	return o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetStreetAddressOk() ([]string, bool) {
	if o == nil || o.StreetAddress == nil {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasStreetAddress() bool {
	if o != nil && o.StreetAddress != nil {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given []string and assigns it to the StreetAddress field.
func (o *PkiIntermediateCrossSignRequest) SetStreetAddress(v []string) {
	o.StreetAddress = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiIntermediateCrossSignRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiIntermediateCrossSignRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateCrossSignRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiIntermediateCrossSignRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiIntermediateCrossSignRequest) SetUriSans(v []string) {
	o.UriSans = v
}

func (o PkiIntermediateCrossSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddBasicConstraints != nil {
		toSerialize["add_basic_constraints"] = o.AddBasicConstraints
	}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.Exported != nil {
		toSerialize["exported"] = o.Exported
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.KeyBits != nil {
		toSerialize["key_bits"] = o.KeyBits
	}
	if o.KeyName != nil {
		toSerialize["key_name"] = o.KeyName
	}
	if o.KeyRef != nil {
		toSerialize["key_ref"] = o.KeyRef
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.ManagedKeyId != nil {
		toSerialize["managed_key_id"] = o.ManagedKeyId
	}
	if o.ManagedKeyName != nil {
		toSerialize["managed_key_name"] = o.ManagedKeyName
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.NotBeforeDuration != nil {
		toSerialize["not_before_duration"] = o.NotBeforeDuration
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.Ou != nil {
		toSerialize["ou"] = o.Ou
	}
	if o.PostalCode != nil {
		toSerialize["postal_code"] = o.PostalCode
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.Province != nil {
		toSerialize["province"] = o.Province
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.StreetAddress != nil {
		toSerialize["street_address"] = o.StreetAddress
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiIntermediateCrossSignRequest struct {
	value *PkiIntermediateCrossSignRequest
	isSet bool
}

func (v NullablePkiIntermediateCrossSignRequest) Get() *PkiIntermediateCrossSignRequest {
	return v.value
}

func (v *NullablePkiIntermediateCrossSignRequest) Set(val *PkiIntermediateCrossSignRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiIntermediateCrossSignRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiIntermediateCrossSignRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiIntermediateCrossSignRequest(val *PkiIntermediateCrossSignRequest) *NullablePkiIntermediateCrossSignRequest {
	return &NullablePkiIntermediateCrossSignRequest{value: val, isSet: true}
}

func (v NullablePkiIntermediateCrossSignRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiIntermediateCrossSignRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiIntermediateGenerateRequest struct for PkiIntermediateGenerateRequest
type PkiIntermediateGenerateRequest struct {
	// Whether to add a Basic Constraints extension with CA: true. Only needed as a workaround in some compatibility scenarios with Active Directory Certificate Services.
	AddBasicConstraints *bool `json:"add_basic_constraints,omitempty"`
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName *string `json:"common_name,omitempty"`
	// If set, Country will be set to this value.
	Country []string `json:"country,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits *int32 `json:"key_bits,omitempty"`
	// Provide a name to the generated or existing key, the name must be unique across all keys and not be the reserved value 'default'
	KeyName *string `json:"key_name,omitempty"`
	// Reference to a existing key; either \"default\" for the configured default key, an identifier or the name assigned to the key.
	KeyRef *string `json:"key_ref,omitempty"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType *string `json:"key_type,omitempty"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId *string `json:"managed_key_id,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName *string `json:"managed_key_name,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration *int32 `json:"not_before_duration,omitempty"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou,omitempty"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// If set, Province will be set to this value.
	Province []string `json:"province,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
}

// NewPkiIntermediateGenerateRequest instantiates a new PkiIntermediateGenerateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiIntermediateGenerateRequest() *PkiIntermediateGenerateRequest {
	this := PkiIntermediateGenerateRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyRef string = "default"
	this.KeyRef = &keyRef
	var keyType string = "rsa"
	this.KeyType = &keyType
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// NewPkiIntermediateGenerateRequestWithDefaults instantiates a new PkiIntermediateGenerateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiIntermediateGenerateRequestWithDefaults() *PkiIntermediateGenerateRequest {
	this := PkiIntermediateGenerateRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyRef string = "default"
	this.KeyRef = &keyRef
	var keyType string = "rsa"
	this.KeyType = &keyType
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// GetAddBasicConstraints returns the AddBasicConstraints field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetAddBasicConstraints() bool {
	if o == nil || o.AddBasicConstraints == nil {
		var ret bool
		return ret
	}
	return *o.AddBasicConstraints
}

// GetAddBasicConstraintsOk returns a tuple with the AddBasicConstraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetAddBasicConstraintsOk() (*bool, bool) {
	if o == nil || o.AddBasicConstraints == nil {
		return nil, false
	}
	return o.AddBasicConstraints, true
}

// HasAddBasicConstraints returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasAddBasicConstraints() bool {
	if o != nil && o.AddBasicConstraints != nil {
		return true
	}

	return false
}

// SetAddBasicConstraints gets a reference to the given bool and assigns it to the AddBasicConstraints field.
func (o *PkiIntermediateGenerateRequest) SetAddBasicConstraints(v bool) {
	o.AddBasicConstraints = &v
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiIntermediateGenerateRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiIntermediateGenerateRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetCountry() []string {
	if o == nil || o.Country == nil {
		var ret []string
		return ret
	}
	return o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetCountryOk() ([]string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given []string and assigns it to the Country field.
func (o *PkiIntermediateGenerateRequest) SetCountry(v []string) {
	o.Country = v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiIntermediateGenerateRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiIntermediateGenerateRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiIntermediateGenerateRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetKeyBits returns the KeyBits field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetKeyBits() int32 {
	if o == nil || o.KeyBits == nil {
		var ret int32
		return ret
	}
	return *o.KeyBits
}

// GetKeyBitsOk returns a tuple with the KeyBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetKeyBitsOk() (*int32, bool) {
	if o == nil || o.KeyBits == nil {
		return nil, false
	}
	return o.KeyBits, true
}

// HasKeyBits returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasKeyBits() bool {
	if o != nil && o.KeyBits != nil {
		return true
	}

	return false
}

// SetKeyBits gets a reference to the given int32 and assigns it to the KeyBits field.
func (o *PkiIntermediateGenerateRequest) SetKeyBits(v int32) {
	o.KeyBits = &v
}

// GetKeyName returns the KeyName field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetKeyName() string {
	if o == nil || o.KeyName == nil {
		var ret string
		return ret
	}
	return *o.KeyName
}

// GetKeyNameOk returns a tuple with the KeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetKeyNameOk() (*string, bool) {
	if o == nil || o.KeyName == nil {
		return nil, false
	}
	return o.KeyName, true
}

// HasKeyName returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasKeyName() bool {
	if o != nil && o.KeyName != nil {
		return true
	}

	return false
}

// SetKeyName gets a reference to the given string and assigns it to the KeyName field.
func (o *PkiIntermediateGenerateRequest) SetKeyName(v string) {
	o.KeyName = &v
}

// GetKeyRef returns the KeyRef field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetKeyRef() string {
	if o == nil || o.KeyRef == nil {
		var ret string
		return ret
	}
	return *o.KeyRef
}

// GetKeyRefOk returns a tuple with the KeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetKeyRefOk() (*string, bool) {
	if o == nil || o.KeyRef == nil {
		return nil, false
	}
	return o.KeyRef, true
}

// HasKeyRef returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasKeyRef() bool {
	if o != nil && o.KeyRef != nil {
		return true
	}

	return false
}

// SetKeyRef gets a reference to the given string and assigns it to the KeyRef field.
func (o *PkiIntermediateGenerateRequest) SetKeyRef(v string) {
	o.KeyRef = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *PkiIntermediateGenerateRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetLocality() []string {
	if o == nil || o.Locality == nil {
		var ret []string
		return ret
	}
	return o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetLocalityOk() ([]string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given []string and assigns it to the Locality field.
func (o *PkiIntermediateGenerateRequest) SetLocality(v []string) {
	o.Locality = v
}

// GetManagedKeyId returns the ManagedKeyId field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetManagedKeyId() string {
	if o == nil || o.ManagedKeyId == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyId
}

// GetManagedKeyIdOk returns a tuple with the ManagedKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetManagedKeyIdOk() (*string, bool) {
	if o == nil || o.ManagedKeyId == nil {
		return nil, false
	}
	return o.ManagedKeyId, true
}

// HasManagedKeyId returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasManagedKeyId() bool {
	if o != nil && o.ManagedKeyId != nil {
		return true
	}

	return false
}

// SetManagedKeyId gets a reference to the given string and assigns it to the ManagedKeyId field.
func (o *PkiIntermediateGenerateRequest) SetManagedKeyId(v string) {
	o.ManagedKeyId = &v
}

// GetManagedKeyName returns the ManagedKeyName field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetManagedKeyName() string {
	if o == nil || o.ManagedKeyName == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyName
}

// GetManagedKeyNameOk returns a tuple with the ManagedKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetManagedKeyNameOk() (*string, bool) {
	if o == nil || o.ManagedKeyName == nil {
		return nil, false
	}
	return o.ManagedKeyName, true
}

// HasManagedKeyName returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasManagedKeyName() bool {
	if o != nil && o.ManagedKeyName != nil {
		return true
	}

	return false
}

// SetManagedKeyName gets a reference to the given string and assigns it to the ManagedKeyName field.
func (o *PkiIntermediateGenerateRequest) SetManagedKeyName(v string) {
	o.ManagedKeyName = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiIntermediateGenerateRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetNotBeforeDuration returns the NotBeforeDuration field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetNotBeforeDuration() int32 {
	if o == nil || o.NotBeforeDuration == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeDuration
}

// GetNotBeforeDurationOk returns a tuple with the NotBeforeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetNotBeforeDurationOk() (*int32, bool) {
	if o == nil || o.NotBeforeDuration == nil {
		return nil, false
	}
	return o.NotBeforeDuration, true
}

// HasNotBeforeDuration returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasNotBeforeDuration() bool {
	if o != nil && o.NotBeforeDuration != nil {
		return true
	}

	return false
}

// SetNotBeforeDuration gets a reference to the given int32 and assigns it to the NotBeforeDuration field.
func (o *PkiIntermediateGenerateRequest) SetNotBeforeDuration(v int32) {
	o.NotBeforeDuration = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetOrganization() []string {
	if o == nil || o.Organization == nil {
		var ret []string
		return ret
	}
	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetOrganizationOk() ([]string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given []string and assigns it to the Organization field.
func (o *PkiIntermediateGenerateRequest) SetOrganization(v []string) {
	o.Organization = v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiIntermediateGenerateRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetOu returns the Ou field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetOu() []string {
	if o == nil || o.Ou == nil {
		var ret []string
		return ret
	}
	return o.Ou
}

// GetOuOk returns a tuple with the Ou field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetOuOk() ([]string, bool) {
	if o == nil || o.Ou == nil {
		return nil, false
	}
	return o.Ou, true
}

// HasOu returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasOu() bool {
	if o != nil && o.Ou != nil {
		return true
	}

	return false
}

// SetOu gets a reference to the given []string and assigns it to the Ou field.
func (o *PkiIntermediateGenerateRequest) SetOu(v []string) {
	o.Ou = v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetPostalCode() []string {
	if o == nil || o.PostalCode == nil {
		var ret []string
		return ret
	}
	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetPostalCodeOk() ([]string, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given []string and assigns it to the PostalCode field.
func (o *PkiIntermediateGenerateRequest) SetPostalCode(v []string) {
	o.PostalCode = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiIntermediateGenerateRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetProvince() []string {
	if o == nil || o.Province == nil {
		var ret []string
		return ret
	}
	return o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetProvinceOk() ([]string, bool) {
	if o == nil || o.Province == nil {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasProvince() bool {
	if o != nil && o.Province != nil {
		return true
	}

	return false
}

// SetProvince gets a reference to the given []string and assigns it to the Province field.
func (o *PkiIntermediateGenerateRequest) SetProvince(v []string) {
	o.Province = v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiIntermediateGenerateRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetStreetAddress() []string {
	if o == nil || o.StreetAddress == nil {
		var ret []string
		return ret
	}
	return o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetStreetAddressOk() ([]string, bool) {
	if o == nil || o.StreetAddress == nil {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasStreetAddress() bool {
	if o != nil && o.StreetAddress != nil {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given []string and assigns it to the StreetAddress field.
func (o *PkiIntermediateGenerateRequest) SetStreetAddress(v []string) {
	o.StreetAddress = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiIntermediateGenerateRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiIntermediateGenerateRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateGenerateRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiIntermediateGenerateRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiIntermediateGenerateRequest) SetUriSans(v []string) {
	o.UriSans = v
}

func (o PkiIntermediateGenerateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddBasicConstraints != nil {
		toSerialize["add_basic_constraints"] = o.AddBasicConstraints
	}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.KeyBits != nil {
		toSerialize["key_bits"] = o.KeyBits
	}
	if o.KeyName != nil {
		toSerialize["key_name"] = o.KeyName
	}
	if o.KeyRef != nil {
		toSerialize["key_ref"] = o.KeyRef
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.ManagedKeyId != nil {
		toSerialize["managed_key_id"] = o.ManagedKeyId
	}
	if o.ManagedKeyName != nil {
		toSerialize["managed_key_name"] = o.ManagedKeyName
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.NotBeforeDuration != nil {
		toSerialize["not_before_duration"] = o.NotBeforeDuration
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.Ou != nil {
		toSerialize["ou"] = o.Ou
	}
	if o.PostalCode != nil {
		toSerialize["postal_code"] = o.PostalCode
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.Province != nil {
		toSerialize["province"] = o.Province
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.StreetAddress != nil {
		toSerialize["street_address"] = o.StreetAddress
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiIntermediateGenerateRequest struct {
	value *PkiIntermediateGenerateRequest
	isSet bool
}

func (v NullablePkiIntermediateGenerateRequest) Get() *PkiIntermediateGenerateRequest {
	return v.value
}

func (v *NullablePkiIntermediateGenerateRequest) Set(val *PkiIntermediateGenerateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiIntermediateGenerateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiIntermediateGenerateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiIntermediateGenerateRequest(val *PkiIntermediateGenerateRequest) *NullablePkiIntermediateGenerateRequest {
	return &NullablePkiIntermediateGenerateRequest{value: val, isSet: true}
}

func (v NullablePkiIntermediateGenerateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiIntermediateGenerateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiIntermediateSetSignedRequest struct for PkiIntermediateSetSignedRequest
type PkiIntermediateSetSignedRequest struct {
	// PEM-format certificate. This must be a CA certificate with a public key matching the previously-generated key from the generation endpoint. Additional parent CAs may be optionally appended to the bundle.
	Certificate *string `json:"certificate,omitempty"`
}

// NewPkiIntermediateSetSignedRequest instantiates a new PkiIntermediateSetSignedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiIntermediateSetSignedRequest() *PkiIntermediateSetSignedRequest {
	this := PkiIntermediateSetSignedRequest{}
	return &this
}

// NewPkiIntermediateSetSignedRequestWithDefaults instantiates a new PkiIntermediateSetSignedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiIntermediateSetSignedRequestWithDefaults() *PkiIntermediateSetSignedRequest {
	this := PkiIntermediateSetSignedRequest{}
	return &this
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *PkiIntermediateSetSignedRequest) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateSetSignedRequest) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *PkiIntermediateSetSignedRequest) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *PkiIntermediateSetSignedRequest) SetCertificate(v string) {
	o.Certificate = &v
}

func (o PkiIntermediateSetSignedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	return json.Marshal(toSerialize)
}

type NullablePkiIntermediateSetSignedRequest struct {
	value *PkiIntermediateSetSignedRequest
	isSet bool
}

func (v NullablePkiIntermediateSetSignedRequest) Get() *PkiIntermediateSetSignedRequest {
	return v.value
}

func (v *NullablePkiIntermediateSetSignedRequest) Set(val *PkiIntermediateSetSignedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiIntermediateSetSignedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiIntermediateSetSignedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiIntermediateSetSignedRequest(val *PkiIntermediateSetSignedRequest) *NullablePkiIntermediateSetSignedRequest {
	return &NullablePkiIntermediateSetSignedRequest{value: val, isSet: true}
}

func (v NullablePkiIntermediateSetSignedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiIntermediateSetSignedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiInternalExportedRequest struct for PkiInternalExportedRequest
type PkiInternalExportedRequest struct {
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits *int32 `json:"key_bits,omitempty"`
	// Optional name to be used for this key
	KeyName *string `json:"key_name,omitempty"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType *string `json:"key_type,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId *string `json:"managed_key_id,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName *string `json:"managed_key_name,omitempty"`
}

// NewPkiInternalExportedRequest instantiates a new PkiInternalExportedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiInternalExportedRequest() *PkiInternalExportedRequest {
	this := PkiInternalExportedRequest{}
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyType string = "rsa"
	this.KeyType = &keyType
	return &this
}

// NewPkiInternalExportedRequestWithDefaults instantiates a new PkiInternalExportedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiInternalExportedRequestWithDefaults() *PkiInternalExportedRequest {
	this := PkiInternalExportedRequest{}
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyType string = "rsa"
	this.KeyType = &keyType
	return &this
}

// GetKeyBits returns the KeyBits field value if set, zero value otherwise.
func (o *PkiInternalExportedRequest) GetKeyBits() int32 {
	if o == nil || o.KeyBits == nil {
		var ret int32
		return ret
	}
	return *o.KeyBits
}

// GetKeyBitsOk returns a tuple with the KeyBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiInternalExportedRequest) GetKeyBitsOk() (*int32, bool) {
	if o == nil || o.KeyBits == nil {
		return nil, false
	}
	return o.KeyBits, true
}

// HasKeyBits returns a boolean if a field has been set.
func (o *PkiInternalExportedRequest) HasKeyBits() bool {
	if o != nil && o.KeyBits != nil {
		return true
	}

	return false
}

// SetKeyBits gets a reference to the given int32 and assigns it to the KeyBits field.
func (o *PkiInternalExportedRequest) SetKeyBits(v int32) {
	o.KeyBits = &v
}

// GetKeyName returns the KeyName field value if set, zero value otherwise.
func (o *PkiInternalExportedRequest) GetKeyName() string {
	if o == nil || o.KeyName == nil {
		var ret string
		return ret
	}
	return *o.KeyName
}

// GetKeyNameOk returns a tuple with the KeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiInternalExportedRequest) GetKeyNameOk() (*string, bool) {
	if o == nil || o.KeyName == nil {
		return nil, false
	}
	return o.KeyName, true
}

// HasKeyName returns a boolean if a field has been set.
func (o *PkiInternalExportedRequest) HasKeyName() bool {
	if o != nil && o.KeyName != nil {
		return true
	}

	return false
}

// SetKeyName gets a reference to the given string and assigns it to the KeyName field.
func (o *PkiInternalExportedRequest) SetKeyName(v string) {
	o.KeyName = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *PkiInternalExportedRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiInternalExportedRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *PkiInternalExportedRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *PkiInternalExportedRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetManagedKeyId returns the ManagedKeyId field value if set, zero value otherwise.
func (o *PkiInternalExportedRequest) GetManagedKeyId() string {
	if o == nil || o.ManagedKeyId == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyId
}

// GetManagedKeyIdOk returns a tuple with the ManagedKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiInternalExportedRequest) GetManagedKeyIdOk() (*string, bool) {
	if o == nil || o.ManagedKeyId == nil {
		return nil, false
	}
	return o.ManagedKeyId, true
}

// HasManagedKeyId returns a boolean if a field has been set.
func (o *PkiInternalExportedRequest) HasManagedKeyId() bool {
	if o != nil && o.ManagedKeyId != nil {
		return true
	}

	return false
}

// SetManagedKeyId gets a reference to the given string and assigns it to the ManagedKeyId field.
func (o *PkiInternalExportedRequest) SetManagedKeyId(v string) {
	o.ManagedKeyId = &v
}

// GetManagedKeyName returns the ManagedKeyName field value if set, zero value otherwise.
func (o *PkiInternalExportedRequest) GetManagedKeyName() string {
	if o == nil || o.ManagedKeyName == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyName
}

// GetManagedKeyNameOk returns a tuple with the ManagedKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiInternalExportedRequest) GetManagedKeyNameOk() (*string, bool) {
	if o == nil || o.ManagedKeyName == nil {
		return nil, false
	}
	return o.ManagedKeyName, true
}

// HasManagedKeyName returns a boolean if a field has been set.
func (o *PkiInternalExportedRequest) HasManagedKeyName() bool {
	if o != nil && o.ManagedKeyName != nil {
		return true
	}

	return false
}

// SetManagedKeyName gets a reference to the given string and assigns it to the ManagedKeyName field.
func (o *PkiInternalExportedRequest) SetManagedKeyName(v string) {
	o.ManagedKeyName = &v
}

func (o PkiInternalExportedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeyBits != nil {
		toSerialize["key_bits"] = o.KeyBits
	}
	if o.KeyName != nil {
		toSerialize["key_name"] = o.KeyName
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.ManagedKeyId != nil {
		toSerialize["managed_key_id"] = o.ManagedKeyId
	}
	if o.ManagedKeyName != nil {
		toSerialize["managed_key_name"] = o.ManagedKeyName
	}
	return json.Marshal(toSerialize)
}

type NullablePkiInternalExportedRequest struct {
	value *PkiInternalExportedRequest
	isSet bool
}

func (v NullablePkiInternalExportedRequest) Get() *PkiInternalExportedRequest {
	return v.value
}

func (v *NullablePkiInternalExportedRequest) Set(val *PkiInternalExportedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiInternalExportedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiInternalExportedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiInternalExportedRequest(val *PkiInternalExportedRequest) *NullablePkiInternalExportedRequest {
	return &NullablePkiInternalExportedRequest{value: val, isSet: true}
}

func (v NullablePkiInternalExportedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiInternalExportedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiIssueRequest struct for PkiIssueRequest
type PkiIssueRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName *string `json:"common_name,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef *string `json:"issuer_ref,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
}

// NewPkiIssueRequest instantiates a new PkiIssueRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiIssueRequest() *PkiIssueRequest {
	this := PkiIssueRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// NewPkiIssueRequestWithDefaults instantiates a new PkiIssueRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiIssueRequestWithDefaults() *PkiIssueRequest {
	this := PkiIssueRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiIssueRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssueRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiIssueRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiIssueRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiIssueRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssueRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiIssueRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiIssueRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiIssueRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssueRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiIssueRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiIssueRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiIssueRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssueRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiIssueRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiIssueRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiIssueRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssueRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiIssueRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiIssueRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetIssuerRef returns the IssuerRef field value if set, zero value otherwise.
func (o *PkiIssueRequest) GetIssuerRef() string {
	if o == nil || o.IssuerRef == nil {
		var ret string
		return ret
	}
	return *o.IssuerRef
}

// GetIssuerRefOk returns a tuple with the IssuerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssueRequest) GetIssuerRefOk() (*string, bool) {
	if o == nil || o.IssuerRef == nil {
		return nil, false
	}
	return o.IssuerRef, true
}

// HasIssuerRef returns a boolean if a field has been set.
func (o *PkiIssueRequest) HasIssuerRef() bool {
	if o != nil && o.IssuerRef != nil {
		return true
	}

	return false
}

// SetIssuerRef gets a reference to the given string and assigns it to the IssuerRef field.
func (o *PkiIssueRequest) SetIssuerRef(v string) {
	o.IssuerRef = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiIssueRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssueRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiIssueRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiIssueRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiIssueRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssueRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiIssueRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiIssueRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiIssueRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssueRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiIssueRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiIssueRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiIssueRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssueRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiIssueRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiIssueRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiIssueRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssueRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiIssueRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiIssueRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiIssueRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssueRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiIssueRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiIssueRequest) SetUriSans(v []string) {
	o.UriSans = v
}

func (o PkiIssueRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.IssuerRef != nil {
		toSerialize["issuer_ref"] = o.IssuerRef
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiIssueRequest struct {
	value *PkiIssueRequest
	isSet bool
}

func (v NullablePkiIssueRequest) Get() *PkiIssueRequest {
	return v.value
}

func (v *NullablePkiIssueRequest) Set(val *PkiIssueRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiIssueRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiIssueRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiIssueRequest(val *PkiIssueRequest) *NullablePkiIssueRequest {
	return &NullablePkiIssueRequest{value: val, isSet: true}
}

func (v NullablePkiIssueRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiIssueRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiIssuerIssueRequest struct for PkiIssuerIssueRequest
type PkiIssuerIssueRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName *string `json:"common_name,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
}

// NewPkiIssuerIssueRequest instantiates a new PkiIssuerIssueRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiIssuerIssueRequest() *PkiIssuerIssueRequest {
	this := PkiIssuerIssueRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// NewPkiIssuerIssueRequestWithDefaults instantiates a new PkiIssuerIssueRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiIssuerIssueRequestWithDefaults() *PkiIssuerIssueRequest {
	this := PkiIssuerIssueRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiIssuerIssueRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerIssueRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiIssuerIssueRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiIssuerIssueRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiIssuerIssueRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerIssueRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiIssuerIssueRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiIssuerIssueRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiIssuerIssueRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerIssueRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiIssuerIssueRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiIssuerIssueRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiIssuerIssueRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerIssueRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiIssuerIssueRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiIssuerIssueRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiIssuerIssueRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerIssueRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiIssuerIssueRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiIssuerIssueRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiIssuerIssueRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerIssueRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiIssuerIssueRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiIssuerIssueRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiIssuerIssueRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerIssueRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiIssuerIssueRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiIssuerIssueRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiIssuerIssueRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerIssueRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiIssuerIssueRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiIssuerIssueRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiIssuerIssueRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerIssueRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiIssuerIssueRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiIssuerIssueRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiIssuerIssueRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerIssueRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiIssuerIssueRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiIssuerIssueRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiIssuerIssueRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerIssueRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiIssuerIssueRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiIssuerIssueRequest) SetUriSans(v []string) {
	o.UriSans = v
}

func (o PkiIssuerIssueRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiIssuerIssueRequest struct {
	value *PkiIssuerIssueRequest
	isSet bool
}

func (v NullablePkiIssuerIssueRequest) Get() *PkiIssuerIssueRequest {
	return v.value
}

func (v *NullablePkiIssuerIssueRequest) Set(val *PkiIssuerIssueRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiIssuerIssueRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiIssuerIssueRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiIssuerIssueRequest(val *PkiIssuerIssueRequest) *NullablePkiIssuerIssueRequest {
	return &NullablePkiIssuerIssueRequest{value: val, isSet: true}
}

func (v NullablePkiIssuerIssueRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiIssuerIssueRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiIssuerSignIntermediateRequest struct for PkiIssuerSignIntermediateRequest
type PkiIssuerSignIntermediateRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName *string `json:"common_name,omitempty"`
	// If set, Country will be set to this value.
	Country []string `json:"country,omitempty"`
	// PEM-format CSR to be signed.
	Csr *string `json:"csr,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName *string `json:"issuer_name,omitempty"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality,omitempty"`
	// The maximum allowable path length
	MaxPathLength *int32 `json:"max_path_length,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration *int32 `json:"not_before_duration,omitempty"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou,omitempty"`
	// Domains for which this certificate is allowed to sign or issue child certificates. If set, all DNS names (subject and alt) on child certs must be exact matches or subsets of the given domains (see https://tools.ietf.org/html/rfc5280#section-4.2.1.10).
	PermittedDnsDomains []string `json:"permitted_dns_domains,omitempty"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// If set, Province will be set to this value.
	Province []string `json:"province,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
	// If true, then: 1) Subject information, including names and alternate names, will be preserved from the CSR rather than using values provided in the other parameters to this path; 2) Any key usages requested in the CSR will be added to the basic set of key usages used for CA certs signed by this path; for instance, the non-repudiation flag; 3) Extensions requested in the CSR will be copied into the issued certificate.
	UseCsrValues *bool `json:"use_csr_values,omitempty"`
}

// NewPkiIssuerSignIntermediateRequest instantiates a new PkiIssuerSignIntermediateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiIssuerSignIntermediateRequest() *PkiIssuerSignIntermediateRequest {
	this := PkiIssuerSignIntermediateRequest{}
	var csr string = ""
	this.Csr = &csr
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var maxPathLength int32 = -1
	this.MaxPathLength = &maxPathLength
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	var useCsrValues bool = false
	this.UseCsrValues = &useCsrValues
	return &this
}

// NewPkiIssuerSignIntermediateRequestWithDefaults instantiates a new PkiIssuerSignIntermediateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiIssuerSignIntermediateRequestWithDefaults() *PkiIssuerSignIntermediateRequest {
	this := PkiIssuerSignIntermediateRequest{}
	var csr string = ""
	this.Csr = &csr
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var maxPathLength int32 = -1
	this.MaxPathLength = &maxPathLength
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	var useCsrValues bool = false
	this.UseCsrValues = &useCsrValues
	return &this
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiIssuerSignIntermediateRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiIssuerSignIntermediateRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetCountry() []string {
	if o == nil || o.Country == nil {
		var ret []string
		return ret
	}
	return o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetCountryOk() ([]string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given []string and assigns it to the Country field.
func (o *PkiIssuerSignIntermediateRequest) SetCountry(v []string) {
	o.Country = v
}

// GetCsr returns the Csr field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetCsr() string {
	if o == nil || o.Csr == nil {
		var ret string
		return ret
	}
	return *o.Csr
}

// GetCsrOk returns a tuple with the Csr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetCsrOk() (*string, bool) {
	if o == nil || o.Csr == nil {
		return nil, false
	}
	return o.Csr, true
}

// HasCsr returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasCsr() bool {
	if o != nil && o.Csr != nil {
		return true
	}

	return false
}

// SetCsr gets a reference to the given string and assigns it to the Csr field.
func (o *PkiIssuerSignIntermediateRequest) SetCsr(v string) {
	o.Csr = &v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiIssuerSignIntermediateRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiIssuerSignIntermediateRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiIssuerSignIntermediateRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetIssuerName returns the IssuerName field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetIssuerName() string {
	if o == nil || o.IssuerName == nil {
		var ret string
		return ret
	}
	return *o.IssuerName
}

// GetIssuerNameOk returns a tuple with the IssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetIssuerNameOk() (*string, bool) {
	if o == nil || o.IssuerName == nil {
		return nil, false
	}
	return o.IssuerName, true
}

// HasIssuerName returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasIssuerName() bool {
	if o != nil && o.IssuerName != nil {
		return true
	}

	return false
}

// SetIssuerName gets a reference to the given string and assigns it to the IssuerName field.
func (o *PkiIssuerSignIntermediateRequest) SetIssuerName(v string) {
	o.IssuerName = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetLocality() []string {
	if o == nil || o.Locality == nil {
		var ret []string
		return ret
	}
	return o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetLocalityOk() ([]string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given []string and assigns it to the Locality field.
func (o *PkiIssuerSignIntermediateRequest) SetLocality(v []string) {
	o.Locality = v
}

// GetMaxPathLength returns the MaxPathLength field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetMaxPathLength() int32 {
	if o == nil || o.MaxPathLength == nil {
		var ret int32
		return ret
	}
	return *o.MaxPathLength
}

// GetMaxPathLengthOk returns a tuple with the MaxPathLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetMaxPathLengthOk() (*int32, bool) {
	if o == nil || o.MaxPathLength == nil {
		return nil, false
	}
	return o.MaxPathLength, true
}

// HasMaxPathLength returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasMaxPathLength() bool {
	if o != nil && o.MaxPathLength != nil {
		return true
	}

	return false
}

// SetMaxPathLength gets a reference to the given int32 and assigns it to the MaxPathLength field.
func (o *PkiIssuerSignIntermediateRequest) SetMaxPathLength(v int32) {
	o.MaxPathLength = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiIssuerSignIntermediateRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetNotBeforeDuration returns the NotBeforeDuration field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetNotBeforeDuration() int32 {
	if o == nil || o.NotBeforeDuration == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeDuration
}

// GetNotBeforeDurationOk returns a tuple with the NotBeforeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetNotBeforeDurationOk() (*int32, bool) {
	if o == nil || o.NotBeforeDuration == nil {
		return nil, false
	}
	return o.NotBeforeDuration, true
}

// HasNotBeforeDuration returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasNotBeforeDuration() bool {
	if o != nil && o.NotBeforeDuration != nil {
		return true
	}

	return false
}

// SetNotBeforeDuration gets a reference to the given int32 and assigns it to the NotBeforeDuration field.
func (o *PkiIssuerSignIntermediateRequest) SetNotBeforeDuration(v int32) {
	o.NotBeforeDuration = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetOrganization() []string {
	if o == nil || o.Organization == nil {
		var ret []string
		return ret
	}
	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetOrganizationOk() ([]string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given []string and assigns it to the Organization field.
func (o *PkiIssuerSignIntermediateRequest) SetOrganization(v []string) {
	o.Organization = v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiIssuerSignIntermediateRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetOu returns the Ou field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetOu() []string {
	if o == nil || o.Ou == nil {
		var ret []string
		return ret
	}
	return o.Ou
}

// GetOuOk returns a tuple with the Ou field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetOuOk() ([]string, bool) {
	if o == nil || o.Ou == nil {
		return nil, false
	}
	return o.Ou, true
}

// HasOu returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasOu() bool {
	if o != nil && o.Ou != nil {
		return true
	}

	return false
}

// SetOu gets a reference to the given []string and assigns it to the Ou field.
func (o *PkiIssuerSignIntermediateRequest) SetOu(v []string) {
	o.Ou = v
}

// GetPermittedDnsDomains returns the PermittedDnsDomains field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetPermittedDnsDomains() []string {
	if o == nil || o.PermittedDnsDomains == nil {
		var ret []string
		return ret
	}
	return o.PermittedDnsDomains
}

// GetPermittedDnsDomainsOk returns a tuple with the PermittedDnsDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetPermittedDnsDomainsOk() ([]string, bool) {
	if o == nil || o.PermittedDnsDomains == nil {
		return nil, false
	}
	return o.PermittedDnsDomains, true
}

// HasPermittedDnsDomains returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasPermittedDnsDomains() bool {
	if o != nil && o.PermittedDnsDomains != nil {
		return true
	}

	return false
}

// SetPermittedDnsDomains gets a reference to the given []string and assigns it to the PermittedDnsDomains field.
func (o *PkiIssuerSignIntermediateRequest) SetPermittedDnsDomains(v []string) {
	o.PermittedDnsDomains = v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetPostalCode() []string {
	if o == nil || o.PostalCode == nil {
		var ret []string
		return ret
	}
	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetPostalCodeOk() ([]string, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given []string and assigns it to the PostalCode field.
func (o *PkiIssuerSignIntermediateRequest) SetPostalCode(v []string) {
	o.PostalCode = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiIssuerSignIntermediateRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetProvince() []string {
	if o == nil || o.Province == nil {
		var ret []string
		return ret
	}
	return o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetProvinceOk() ([]string, bool) {
	if o == nil || o.Province == nil {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasProvince() bool {
	if o != nil && o.Province != nil {
		return true
	}

	return false
}

// SetProvince gets a reference to the given []string and assigns it to the Province field.
func (o *PkiIssuerSignIntermediateRequest) SetProvince(v []string) {
	o.Province = v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiIssuerSignIntermediateRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetStreetAddress() []string {
	if o == nil || o.StreetAddress == nil {
		var ret []string
		return ret
	}
	return o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetStreetAddressOk() ([]string, bool) {
	if o == nil || o.StreetAddress == nil {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasStreetAddress() bool {
	if o != nil && o.StreetAddress != nil {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given []string and assigns it to the StreetAddress field.
func (o *PkiIssuerSignIntermediateRequest) SetStreetAddress(v []string) {
	o.StreetAddress = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiIssuerSignIntermediateRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiIssuerSignIntermediateRequest) SetUriSans(v []string) {
	o.UriSans = v
}

// GetUseCsrValues returns the UseCsrValues field value if set, zero value otherwise.
func (o *PkiIssuerSignIntermediateRequest) GetUseCsrValues() bool {
	if o == nil || o.UseCsrValues == nil {
		var ret bool
		return ret
	}
	return *o.UseCsrValues
}

// GetUseCsrValuesOk returns a tuple with the UseCsrValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignIntermediateRequest) GetUseCsrValuesOk() (*bool, bool) {
	if o == nil || o.UseCsrValues == nil {
		return nil, false
	}
	return o.UseCsrValues, true
}

// HasUseCsrValues returns a boolean if a field has been set.
func (o *PkiIssuerSignIntermediateRequest) HasUseCsrValues() bool {
	if o != nil && o.UseCsrValues != nil {
		return true
	}

	return false
}

// SetUseCsrValues gets a reference to the given bool and assigns it to the UseCsrValues field.
func (o *PkiIssuerSignIntermediateRequest) SetUseCsrValues(v bool) {
	o.UseCsrValues = &v
}

func (o PkiIssuerSignIntermediateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Csr != nil {
		toSerialize["csr"] = o.Csr
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.IssuerName != nil {
		toSerialize["issuer_name"] = o.IssuerName
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.MaxPathLength != nil {
		toSerialize["max_path_length"] = o.MaxPathLength
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.NotBeforeDuration != nil {
		toSerialize["not_before_duration"] = o.NotBeforeDuration
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.Ou != nil {
		toSerialize["ou"] = o.Ou
	}
	if o.PermittedDnsDomains != nil {
		toSerialize["permitted_dns_domains"] = o.PermittedDnsDomains
	}
	if o.PostalCode != nil {
		toSerialize["postal_code"] = o.PostalCode
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.Province != nil {
		toSerialize["province"] = o.Province
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.StreetAddress != nil {
		toSerialize["street_address"] = o.StreetAddress
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	if o.UseCsrValues != nil {
		toSerialize["use_csr_values"] = o.UseCsrValues
	}
	return json.Marshal(toSerialize)
}

type NullablePkiIssuerSignIntermediateRequest struct {
	value *PkiIssuerSignIntermediateRequest
	isSet bool
}

func (v NullablePkiIssuerSignIntermediateRequest) Get() *PkiIssuerSignIntermediateRequest {
	return v.value
}

func (v *NullablePkiIssuerSignIntermediateRequest) Set(val *PkiIssuerSignIntermediateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiIssuerSignIntermediateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiIssuerSignIntermediateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiIssuerSignIntermediateRequest(val *PkiIssuerSignIntermediateRequest) *NullablePkiIssuerSignIntermediateRequest {
	return &NullablePkiIssuerSignIntermediateRequest{value: val, isSet: true}
}

func (v NullablePkiIssuerSignIntermediateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiIssuerSignIntermediateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiIssuerSignRequest struct for PkiIssuerSignRequest
type PkiIssuerSignRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName *string `json:"common_name,omitempty"`
	// PEM-format CSR to be signed.
	Csr *string `json:"csr,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
}

// NewPkiIssuerSignRequest instantiates a new PkiIssuerSignRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiIssuerSignRequest() *PkiIssuerSignRequest {
	this := PkiIssuerSignRequest{}
	var csr string = ""
	this.Csr = &csr
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// NewPkiIssuerSignRequestWithDefaults instantiates a new PkiIssuerSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiIssuerSignRequestWithDefaults() *PkiIssuerSignRequest {
	this := PkiIssuerSignRequest{}
	var csr string = ""
	this.Csr = &csr
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiIssuerSignRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiIssuerSignRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiIssuerSignRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiIssuerSignRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiIssuerSignRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiIssuerSignRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCsr returns the Csr field value if set, zero value otherwise.
func (o *PkiIssuerSignRequest) GetCsr() string {
	if o == nil || o.Csr == nil {
		var ret string
		return ret
	}
	return *o.Csr
}

// GetCsrOk returns a tuple with the Csr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignRequest) GetCsrOk() (*string, bool) {
	if o == nil || o.Csr == nil {
		return nil, false
	}
	return o.Csr, true
}

// HasCsr returns a boolean if a field has been set.
func (o *PkiIssuerSignRequest) HasCsr() bool {
	if o != nil && o.Csr != nil {
		return true
	}

	return false
}

// SetCsr gets a reference to the given string and assigns it to the Csr field.
func (o *PkiIssuerSignRequest) SetCsr(v string) {
	o.Csr = &v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiIssuerSignRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiIssuerSignRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiIssuerSignRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiIssuerSignRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiIssuerSignRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiIssuerSignRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiIssuerSignRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiIssuerSignRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiIssuerSignRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiIssuerSignRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiIssuerSignRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiIssuerSignRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiIssuerSignRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiIssuerSignRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiIssuerSignRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiIssuerSignRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiIssuerSignRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiIssuerSignRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiIssuerSignRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiIssuerSignRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiIssuerSignRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiIssuerSignRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiIssuerSignRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiIssuerSignRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiIssuerSignRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiIssuerSignRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiIssuerSignRequest) SetUriSans(v []string) {
	o.UriSans = v
}

func (o PkiIssuerSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Csr != nil {
		toSerialize["csr"] = o.Csr
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiIssuerSignRequest struct {
	value *PkiIssuerSignRequest
	isSet bool
}

func (v NullablePkiIssuerSignRequest) Get() *PkiIssuerSignRequest {
	return v.value
}

func (v *NullablePkiIssuerSignRequest) Set(val *PkiIssuerSignRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiIssuerSignRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiIssuerSignRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiIssuerSignRequest(val *PkiIssuerSignRequest) *NullablePkiIssuerSignRequest {
	return &NullablePkiIssuerSignRequest{value: val, isSet: true}
}

func (v NullablePkiIssuerSignRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiIssuerSignRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiIssuerSignSelfIssuedRequest struct for PkiIssuerSignSelfIssuedRequest
type PkiIssuerSignSelfIssuedRequest struct {
	// PEM-format self-issued certificate to be signed.
	Certificate *string `json:"certificate,omitempty"`
	// If true, require the public key algorithm of the signer to match that of the self issued certificate.
	RequireMatchingCertificateAlgorithms *bool `json:"require_matching_certificate_algorithms,omitempty"`
}

// NewPkiIssuerSignSelfIssuedRequest instantiates a new PkiIssuerSignSelfIssuedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiIssuerSignSelfIssuedRequest() *PkiIssuerSignSelfIssuedRequest {
	this := PkiIssuerSignSelfIssuedRequest{}
	var requireMatchingCertificateAlgorithms bool = false
	this.RequireMatchingCertificateAlgorithms = &requireMatchingCertificateAlgorithms
	return &this
}

// NewPkiIssuerSignSelfIssuedRequestWithDefaults instantiates a new PkiIssuerSignSelfIssuedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiIssuerSignSelfIssuedRequestWithDefaults() *PkiIssuerSignSelfIssuedRequest {
	this := PkiIssuerSignSelfIssuedRequest{}
	var requireMatchingCertificateAlgorithms bool = false
	this.RequireMatchingCertificateAlgorithms = &requireMatchingCertificateAlgorithms
	return &this
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *PkiIssuerSignSelfIssuedRequest) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignSelfIssuedRequest) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *PkiIssuerSignSelfIssuedRequest) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *PkiIssuerSignSelfIssuedRequest) SetCertificate(v string) {
	o.Certificate = &v
}

// GetRequireMatchingCertificateAlgorithms returns the RequireMatchingCertificateAlgorithms field value if set, zero value otherwise.
func (o *PkiIssuerSignSelfIssuedRequest) GetRequireMatchingCertificateAlgorithms() bool {
	if o == nil || o.RequireMatchingCertificateAlgorithms == nil {
		var ret bool
		return ret
	}
	return *o.RequireMatchingCertificateAlgorithms
}

// GetRequireMatchingCertificateAlgorithmsOk returns a tuple with the RequireMatchingCertificateAlgorithms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignSelfIssuedRequest) GetRequireMatchingCertificateAlgorithmsOk() (*bool, bool) {
	if o == nil || o.RequireMatchingCertificateAlgorithms == nil {
		return nil, false
	}
	return o.RequireMatchingCertificateAlgorithms, true
}

// HasRequireMatchingCertificateAlgorithms returns a boolean if a field has been set.
func (o *PkiIssuerSignSelfIssuedRequest) HasRequireMatchingCertificateAlgorithms() bool {
	if o != nil && o.RequireMatchingCertificateAlgorithms != nil {
		return true
	}

	return false
}

// SetRequireMatchingCertificateAlgorithms gets a reference to the given bool and assigns it to the RequireMatchingCertificateAlgorithms field.
func (o *PkiIssuerSignSelfIssuedRequest) SetRequireMatchingCertificateAlgorithms(v bool) {
	o.RequireMatchingCertificateAlgorithms = &v
}

func (o PkiIssuerSignSelfIssuedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.RequireMatchingCertificateAlgorithms != nil {
		toSerialize["require_matching_certificate_algorithms"] = o.RequireMatchingCertificateAlgorithms
	}
	return json.Marshal(toSerialize)
}

type NullablePkiIssuerSignSelfIssuedRequest struct {
	value *PkiIssuerSignSelfIssuedRequest
	isSet bool
}

func (v NullablePkiIssuerSignSelfIssuedRequest) Get() *PkiIssuerSignSelfIssuedRequest {
	return v.value
}

func (v *NullablePkiIssuerSignSelfIssuedRequest) Set(val *PkiIssuerSignSelfIssuedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiIssuerSignSelfIssuedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiIssuerSignSelfIssuedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiIssuerSignSelfIssuedRequest(val *PkiIssuerSignSelfIssuedRequest) *NullablePkiIssuerSignSelfIssuedRequest {
	return &NullablePkiIssuerSignSelfIssuedRequest{value: val, isSet: true}
}

func (v NullablePkiIssuerSignSelfIssuedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiIssuerSignSelfIssuedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiIssuerSignVerbatimRequest struct for PkiIssuerSignVerbatimRequest
type PkiIssuerSignVerbatimRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName *string `json:"common_name,omitempty"`
	// PEM-format CSR to be signed. Values will be taken verbatim from the CSR, except for basic constraints.
	Csr *string `json:"csr,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// A comma-separated string or list of extended key usages. Valid values can be found at https://golang.org/pkg/crypto/x509/#ExtKeyUsage -- simply drop the \"ExtKeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.
	ExtKeyUsage []string `json:"ext_key_usage,omitempty"`
	// A comma-separated string or list of extended key usage oids.
	ExtKeyUsageOids []string `json:"ext_key_usage_oids,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// A comma-separated string or list of key usages (not extended key usages). Valid values can be found at https://golang.org/pkg/crypto/x509/#KeyUsage -- simply drop the \"KeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.
	KeyUsage []string `json:"key_usage,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// The desired role with configuration for this request
	Role *string `json:"role,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
}

// NewPkiIssuerSignVerbatimRequest instantiates a new PkiIssuerSignVerbatimRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiIssuerSignVerbatimRequest() *PkiIssuerSignVerbatimRequest {
	this := PkiIssuerSignVerbatimRequest{}
	var csr string = ""
	this.Csr = &csr
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// NewPkiIssuerSignVerbatimRequestWithDefaults instantiates a new PkiIssuerSignVerbatimRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiIssuerSignVerbatimRequestWithDefaults() *PkiIssuerSignVerbatimRequest {
	this := PkiIssuerSignVerbatimRequest{}
	var csr string = ""
	this.Csr = &csr
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiIssuerSignVerbatimRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiIssuerSignVerbatimRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCsr returns the Csr field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetCsr() string {
	if o == nil || o.Csr == nil {
		var ret string
		return ret
	}
	return *o.Csr
}

// GetCsrOk returns a tuple with the Csr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetCsrOk() (*string, bool) {
	if o == nil || o.Csr == nil {
		return nil, false
	}
	return o.Csr, true
}

// HasCsr returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasCsr() bool {
	if o != nil && o.Csr != nil {
		return true
	}

	return false
}

// SetCsr gets a reference to the given string and assigns it to the Csr field.
func (o *PkiIssuerSignVerbatimRequest) SetCsr(v string) {
	o.Csr = &v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiIssuerSignVerbatimRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetExtKeyUsage returns the ExtKeyUsage field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetExtKeyUsage() []string {
	if o == nil || o.ExtKeyUsage == nil {
		var ret []string
		return ret
	}
	return o.ExtKeyUsage
}

// GetExtKeyUsageOk returns a tuple with the ExtKeyUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetExtKeyUsageOk() ([]string, bool) {
	if o == nil || o.ExtKeyUsage == nil {
		return nil, false
	}
	return o.ExtKeyUsage, true
}

// HasExtKeyUsage returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasExtKeyUsage() bool {
	if o != nil && o.ExtKeyUsage != nil {
		return true
	}

	return false
}

// SetExtKeyUsage gets a reference to the given []string and assigns it to the ExtKeyUsage field.
func (o *PkiIssuerSignVerbatimRequest) SetExtKeyUsage(v []string) {
	o.ExtKeyUsage = v
}

// GetExtKeyUsageOids returns the ExtKeyUsageOids field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetExtKeyUsageOids() []string {
	if o == nil || o.ExtKeyUsageOids == nil {
		var ret []string
		return ret
	}
	return o.ExtKeyUsageOids
}

// GetExtKeyUsageOidsOk returns a tuple with the ExtKeyUsageOids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetExtKeyUsageOidsOk() ([]string, bool) {
	if o == nil || o.ExtKeyUsageOids == nil {
		return nil, false
	}
	return o.ExtKeyUsageOids, true
}

// HasExtKeyUsageOids returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasExtKeyUsageOids() bool {
	if o != nil && o.ExtKeyUsageOids != nil {
		return true
	}

	return false
}

// SetExtKeyUsageOids gets a reference to the given []string and assigns it to the ExtKeyUsageOids field.
func (o *PkiIssuerSignVerbatimRequest) SetExtKeyUsageOids(v []string) {
	o.ExtKeyUsageOids = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiIssuerSignVerbatimRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiIssuerSignVerbatimRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetKeyUsage returns the KeyUsage field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetKeyUsage() []string {
	if o == nil || o.KeyUsage == nil {
		var ret []string
		return ret
	}
	return o.KeyUsage
}

// GetKeyUsageOk returns a tuple with the KeyUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetKeyUsageOk() ([]string, bool) {
	if o == nil || o.KeyUsage == nil {
		return nil, false
	}
	return o.KeyUsage, true
}

// HasKeyUsage returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasKeyUsage() bool {
	if o != nil && o.KeyUsage != nil {
		return true
	}

	return false
}

// SetKeyUsage gets a reference to the given []string and assigns it to the KeyUsage field.
func (o *PkiIssuerSignVerbatimRequest) SetKeyUsage(v []string) {
	o.KeyUsage = v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiIssuerSignVerbatimRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiIssuerSignVerbatimRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiIssuerSignVerbatimRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *PkiIssuerSignVerbatimRequest) SetRole(v string) {
	o.Role = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiIssuerSignVerbatimRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiIssuerSignVerbatimRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiIssuerSignVerbatimRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuerSignVerbatimRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiIssuerSignVerbatimRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiIssuerSignVerbatimRequest) SetUriSans(v []string) {
	o.UriSans = v
}

func (o PkiIssuerSignVerbatimRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Csr != nil {
		toSerialize["csr"] = o.Csr
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.ExtKeyUsage != nil {
		toSerialize["ext_key_usage"] = o.ExtKeyUsage
	}
	if o.ExtKeyUsageOids != nil {
		toSerialize["ext_key_usage_oids"] = o.ExtKeyUsageOids
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.KeyUsage != nil {
		toSerialize["key_usage"] = o.KeyUsage
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiIssuerSignVerbatimRequest struct {
	value *PkiIssuerSignVerbatimRequest
	isSet bool
}

func (v NullablePkiIssuerSignVerbatimRequest) Get() *PkiIssuerSignVerbatimRequest {
	return v.value
}

func (v *NullablePkiIssuerSignVerbatimRequest) Set(val *PkiIssuerSignVerbatimRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiIssuerSignVerbatimRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiIssuerSignVerbatimRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiIssuerSignVerbatimRequest(val *PkiIssuerSignVerbatimRequest) *NullablePkiIssuerSignVerbatimRequest {
	return &NullablePkiIssuerSignVerbatimRequest{value: val, isSet: true}
}

func (v NullablePkiIssuerSignVerbatimRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiIssuerSignVerbatimRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiIssuersGenerateIntermediateRequest struct for PkiIssuersGenerateIntermediateRequest
type PkiIssuersGenerateIntermediateRequest struct {
	// Whether to add a Basic Constraints extension with CA: true. Only needed as a workaround in some compatibility scenarios with Active Directory Certificate Services.
	AddBasicConstraints *bool `json:"add_basic_constraints,omitempty"`
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName *string `json:"common_name,omitempty"`
	// If set, Country will be set to this value.
	Country []string `json:"country,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits *int32 `json:"key_bits,omitempty"`
	// Provide a name to the generated or existing key, the name must be unique across all keys and not be the reserved value 'default'
	KeyName *string `json:"key_name,omitempty"`
	// Reference to a existing key; either \"default\" for the configured default key, an identifier or the name assigned to the key.
	KeyRef *string `json:"key_ref,omitempty"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType *string `json:"key_type,omitempty"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId *string `json:"managed_key_id,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName *string `json:"managed_key_name,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration *int32 `json:"not_before_duration,omitempty"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou,omitempty"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// If set, Province will be set to this value.
	Province []string `json:"province,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
}

// NewPkiIssuersGenerateIntermediateRequest instantiates a new PkiIssuersGenerateIntermediateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiIssuersGenerateIntermediateRequest() *PkiIssuersGenerateIntermediateRequest {
	this := PkiIssuersGenerateIntermediateRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyRef string = "default"
	this.KeyRef = &keyRef
	var keyType string = "rsa"
	this.KeyType = &keyType
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// NewPkiIssuersGenerateIntermediateRequestWithDefaults instantiates a new PkiIssuersGenerateIntermediateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiIssuersGenerateIntermediateRequestWithDefaults() *PkiIssuersGenerateIntermediateRequest {
	this := PkiIssuersGenerateIntermediateRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyRef string = "default"
	this.KeyRef = &keyRef
	var keyType string = "rsa"
	this.KeyType = &keyType
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// GetAddBasicConstraints returns the AddBasicConstraints field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetAddBasicConstraints() bool {
	if o == nil || o.AddBasicConstraints == nil {
		var ret bool
		return ret
	}
	return *o.AddBasicConstraints
}

// GetAddBasicConstraintsOk returns a tuple with the AddBasicConstraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetAddBasicConstraintsOk() (*bool, bool) {
	if o == nil || o.AddBasicConstraints == nil {
		return nil, false
	}
	return o.AddBasicConstraints, true
}

// HasAddBasicConstraints returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasAddBasicConstraints() bool {
	if o != nil && o.AddBasicConstraints != nil {
		return true
	}

	return false
}

// SetAddBasicConstraints gets a reference to the given bool and assigns it to the AddBasicConstraints field.
func (o *PkiIssuersGenerateIntermediateRequest) SetAddBasicConstraints(v bool) {
	o.AddBasicConstraints = &v
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiIssuersGenerateIntermediateRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiIssuersGenerateIntermediateRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetCountry() []string {
	if o == nil || o.Country == nil {
		var ret []string
		return ret
	}
	return o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetCountryOk() ([]string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given []string and assigns it to the Country field.
func (o *PkiIssuersGenerateIntermediateRequest) SetCountry(v []string) {
	o.Country = v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiIssuersGenerateIntermediateRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiIssuersGenerateIntermediateRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiIssuersGenerateIntermediateRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetKeyBits returns the KeyBits field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetKeyBits() int32 {
	if o == nil || o.KeyBits == nil {
		var ret int32
		return ret
	}
	return *o.KeyBits
}

// GetKeyBitsOk returns a tuple with the KeyBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetKeyBitsOk() (*int32, bool) {
	if o == nil || o.KeyBits == nil {
		return nil, false
	}
	return o.KeyBits, true
}

// HasKeyBits returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasKeyBits() bool {
	if o != nil && o.KeyBits != nil {
		return true
	}

	return false
}

// SetKeyBits gets a reference to the given int32 and assigns it to the KeyBits field.
func (o *PkiIssuersGenerateIntermediateRequest) SetKeyBits(v int32) {
	o.KeyBits = &v
}

// GetKeyName returns the KeyName field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetKeyName() string {
	if o == nil || o.KeyName == nil {
		var ret string
		return ret
	}
	return *o.KeyName
}

// GetKeyNameOk returns a tuple with the KeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetKeyNameOk() (*string, bool) {
	if o == nil || o.KeyName == nil {
		return nil, false
	}
	return o.KeyName, true
}

// HasKeyName returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasKeyName() bool {
	if o != nil && o.KeyName != nil {
		return true
	}

	return false
}

// SetKeyName gets a reference to the given string and assigns it to the KeyName field.
func (o *PkiIssuersGenerateIntermediateRequest) SetKeyName(v string) {
	o.KeyName = &v
}

// GetKeyRef returns the KeyRef field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetKeyRef() string {
	if o == nil || o.KeyRef == nil {
		var ret string
		return ret
	}
	return *o.KeyRef
}

// GetKeyRefOk returns a tuple with the KeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetKeyRefOk() (*string, bool) {
	if o == nil || o.KeyRef == nil {
		return nil, false
	}
	return o.KeyRef, true
}

// HasKeyRef returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasKeyRef() bool {
	if o != nil && o.KeyRef != nil {
		return true
	}

	return false
}

// SetKeyRef gets a reference to the given string and assigns it to the KeyRef field.
func (o *PkiIssuersGenerateIntermediateRequest) SetKeyRef(v string) {
	o.KeyRef = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *PkiIssuersGenerateIntermediateRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetLocality() []string {
	if o == nil || o.Locality == nil {
		var ret []string
		return ret
	}
	return o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetLocalityOk() ([]string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given []string and assigns it to the Locality field.
func (o *PkiIssuersGenerateIntermediateRequest) SetLocality(v []string) {
	o.Locality = v
}

// GetManagedKeyId returns the ManagedKeyId field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetManagedKeyId() string {
	if o == nil || o.ManagedKeyId == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyId
}

// GetManagedKeyIdOk returns a tuple with the ManagedKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetManagedKeyIdOk() (*string, bool) {
	if o == nil || o.ManagedKeyId == nil {
		return nil, false
	}
	return o.ManagedKeyId, true
}

// HasManagedKeyId returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasManagedKeyId() bool {
	if o != nil && o.ManagedKeyId != nil {
		return true
	}

	return false
}

// SetManagedKeyId gets a reference to the given string and assigns it to the ManagedKeyId field.
func (o *PkiIssuersGenerateIntermediateRequest) SetManagedKeyId(v string) {
	o.ManagedKeyId = &v
}

// GetManagedKeyName returns the ManagedKeyName field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetManagedKeyName() string {
	if o == nil || o.ManagedKeyName == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyName
}

// GetManagedKeyNameOk returns a tuple with the ManagedKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetManagedKeyNameOk() (*string, bool) {
	if o == nil || o.ManagedKeyName == nil {
		return nil, false
	}
	return o.ManagedKeyName, true
}

// HasManagedKeyName returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasManagedKeyName() bool {
	if o != nil && o.ManagedKeyName != nil {
		return true
	}

	return false
}

// SetManagedKeyName gets a reference to the given string and assigns it to the ManagedKeyName field.
func (o *PkiIssuersGenerateIntermediateRequest) SetManagedKeyName(v string) {
	o.ManagedKeyName = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiIssuersGenerateIntermediateRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetNotBeforeDuration returns the NotBeforeDuration field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetNotBeforeDuration() int32 {
	if o == nil || o.NotBeforeDuration == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeDuration
}

// GetNotBeforeDurationOk returns a tuple with the NotBeforeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetNotBeforeDurationOk() (*int32, bool) {
	if o == nil || o.NotBeforeDuration == nil {
		return nil, false
	}
	return o.NotBeforeDuration, true
}

// HasNotBeforeDuration returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasNotBeforeDuration() bool {
	if o != nil && o.NotBeforeDuration != nil {
		return true
	}

	return false
}

// SetNotBeforeDuration gets a reference to the given int32 and assigns it to the NotBeforeDuration field.
func (o *PkiIssuersGenerateIntermediateRequest) SetNotBeforeDuration(v int32) {
	o.NotBeforeDuration = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetOrganization() []string {
	if o == nil || o.Organization == nil {
		var ret []string
		return ret
	}
	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetOrganizationOk() ([]string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given []string and assigns it to the Organization field.
func (o *PkiIssuersGenerateIntermediateRequest) SetOrganization(v []string) {
	o.Organization = v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiIssuersGenerateIntermediateRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetOu returns the Ou field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetOu() []string {
	if o == nil || o.Ou == nil {
		var ret []string
		return ret
	}
	return o.Ou
}

// GetOuOk returns a tuple with the Ou field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetOuOk() ([]string, bool) {
	if o == nil || o.Ou == nil {
		return nil, false
	}
	return o.Ou, true
}

// HasOu returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasOu() bool {
	if o != nil && o.Ou != nil {
		return true
	}

	return false
}

// SetOu gets a reference to the given []string and assigns it to the Ou field.
func (o *PkiIssuersGenerateIntermediateRequest) SetOu(v []string) {
	o.Ou = v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetPostalCode() []string {
	if o == nil || o.PostalCode == nil {
		var ret []string
		return ret
	}
	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetPostalCodeOk() ([]string, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given []string and assigns it to the PostalCode field.
func (o *PkiIssuersGenerateIntermediateRequest) SetPostalCode(v []string) {
	o.PostalCode = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiIssuersGenerateIntermediateRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetProvince() []string {
	if o == nil || o.Province == nil {
		var ret []string
		return ret
	}
	return o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetProvinceOk() ([]string, bool) {
	if o == nil || o.Province == nil {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasProvince() bool {
	if o != nil && o.Province != nil {
		return true
	}

	return false
}

// SetProvince gets a reference to the given []string and assigns it to the Province field.
func (o *PkiIssuersGenerateIntermediateRequest) SetProvince(v []string) {
	o.Province = v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiIssuersGenerateIntermediateRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetStreetAddress() []string {
	if o == nil || o.StreetAddress == nil {
		var ret []string
		return ret
	}
	return o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetStreetAddressOk() ([]string, bool) {
	if o == nil || o.StreetAddress == nil {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasStreetAddress() bool {
	if o != nil && o.StreetAddress != nil {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given []string and assigns it to the StreetAddress field.
func (o *PkiIssuersGenerateIntermediateRequest) SetStreetAddress(v []string) {
	o.StreetAddress = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiIssuersGenerateIntermediateRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiIssuersGenerateIntermediateRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateIntermediateRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiIssuersGenerateIntermediateRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiIssuersGenerateIntermediateRequest) SetUriSans(v []string) {
	o.UriSans = v
}

func (o PkiIssuersGenerateIntermediateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddBasicConstraints != nil {
		toSerialize["add_basic_constraints"] = o.AddBasicConstraints
	}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.KeyBits != nil {
		toSerialize["key_bits"] = o.KeyBits
	}
	if o.KeyName != nil {
		toSerialize["key_name"] = o.KeyName
	}
	if o.KeyRef != nil {
		toSerialize["key_ref"] = o.KeyRef
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.ManagedKeyId != nil {
		toSerialize["managed_key_id"] = o.ManagedKeyId
	}
	if o.ManagedKeyName != nil {
		toSerialize["managed_key_name"] = o.ManagedKeyName
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.NotBeforeDuration != nil {
		toSerialize["not_before_duration"] = o.NotBeforeDuration
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.Ou != nil {
		toSerialize["ou"] = o.Ou
	}
	if o.PostalCode != nil {
		toSerialize["postal_code"] = o.PostalCode
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.Province != nil {
		toSerialize["province"] = o.Province
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.StreetAddress != nil {
		toSerialize["street_address"] = o.StreetAddress
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiIssuersGenerateIntermediateRequest struct {
	value *PkiIssuersGenerateIntermediateRequest
	isSet bool
}

func (v NullablePkiIssuersGenerateIntermediateRequest) Get() *PkiIssuersGenerateIntermediateRequest {
	return v.value
}

func (v *NullablePkiIssuersGenerateIntermediateRequest) Set(val *PkiIssuersGenerateIntermediateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiIssuersGenerateIntermediateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiIssuersGenerateIntermediateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiIssuersGenerateIntermediateRequest(val *PkiIssuersGenerateIntermediateRequest) *NullablePkiIssuersGenerateIntermediateRequest {
	return &NullablePkiIssuersGenerateIntermediateRequest{value: val, isSet: true}
}

func (v NullablePkiIssuersGenerateIntermediateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiIssuersGenerateIntermediateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiIssuersGenerateRootRequest struct for PkiIssuersGenerateRootRequest
type PkiIssuersGenerateRootRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName *string `json:"common_name,omitempty"`
	// If set, Country will be set to this value.
	Country []string `json:"country,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName *string `json:"issuer_name,omitempty"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits *int32 `json:"key_bits,omitempty"`
	// Provide a name to the generated or existing key, the name must be unique across all keys and not be the reserved value 'default'
	KeyName *string `json:"key_name,omitempty"`
	// Reference to a existing key; either \"default\" for the configured default key, an identifier or the name assigned to the key.
	KeyRef *string `json:"key_ref,omitempty"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType *string `json:"key_type,omitempty"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId *string `json:"managed_key_id,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName *string `json:"managed_key_name,omitempty"`
	// The maximum allowable path length
	MaxPathLength *int32 `json:"max_path_length,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration *int32 `json:"not_before_duration,omitempty"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou,omitempty"`
	// Domains for which this certificate is allowed to sign or issue child certificates. If set, all DNS names (subject and alt) on child certs must be exact matches or subsets of the given domains (see https://tools.ietf.org/html/rfc5280#section-4.2.1.10).
	PermittedDnsDomains []string `json:"permitted_dns_domains,omitempty"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// If set, Province will be set to this value.
	Province []string `json:"province,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits *int32 `json:"signature_bits,omitempty"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
}

// NewPkiIssuersGenerateRootRequest instantiates a new PkiIssuersGenerateRootRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiIssuersGenerateRootRequest() *PkiIssuersGenerateRootRequest {
	this := PkiIssuersGenerateRootRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyRef string = "default"
	this.KeyRef = &keyRef
	var keyType string = "rsa"
	this.KeyType = &keyType
	var maxPathLength int32 = -1
	this.MaxPathLength = &maxPathLength
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	var signatureBits int32 = 0
	this.SignatureBits = &signatureBits
	return &this
}

// NewPkiIssuersGenerateRootRequestWithDefaults instantiates a new PkiIssuersGenerateRootRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiIssuersGenerateRootRequestWithDefaults() *PkiIssuersGenerateRootRequest {
	this := PkiIssuersGenerateRootRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyRef string = "default"
	this.KeyRef = &keyRef
	var keyType string = "rsa"
	this.KeyType = &keyType
	var maxPathLength int32 = -1
	this.MaxPathLength = &maxPathLength
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	var signatureBits int32 = 0
	this.SignatureBits = &signatureBits
	return &this
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiIssuersGenerateRootRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiIssuersGenerateRootRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetCountry() []string {
	if o == nil || o.Country == nil {
		var ret []string
		return ret
	}
	return o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetCountryOk() ([]string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given []string and assigns it to the Country field.
func (o *PkiIssuersGenerateRootRequest) SetCountry(v []string) {
	o.Country = v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiIssuersGenerateRootRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiIssuersGenerateRootRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiIssuersGenerateRootRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetIssuerName returns the IssuerName field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetIssuerName() string {
	if o == nil || o.IssuerName == nil {
		var ret string
		return ret
	}
	return *o.IssuerName
}

// GetIssuerNameOk returns a tuple with the IssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetIssuerNameOk() (*string, bool) {
	if o == nil || o.IssuerName == nil {
		return nil, false
	}
	return o.IssuerName, true
}

// HasIssuerName returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasIssuerName() bool {
	if o != nil && o.IssuerName != nil {
		return true
	}

	return false
}

// SetIssuerName gets a reference to the given string and assigns it to the IssuerName field.
func (o *PkiIssuersGenerateRootRequest) SetIssuerName(v string) {
	o.IssuerName = &v
}

// GetKeyBits returns the KeyBits field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetKeyBits() int32 {
	if o == nil || o.KeyBits == nil {
		var ret int32
		return ret
	}
	return *o.KeyBits
}

// GetKeyBitsOk returns a tuple with the KeyBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetKeyBitsOk() (*int32, bool) {
	if o == nil || o.KeyBits == nil {
		return nil, false
	}
	return o.KeyBits, true
}

// HasKeyBits returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasKeyBits() bool {
	if o != nil && o.KeyBits != nil {
		return true
	}

	return false
}

// SetKeyBits gets a reference to the given int32 and assigns it to the KeyBits field.
func (o *PkiIssuersGenerateRootRequest) SetKeyBits(v int32) {
	o.KeyBits = &v
}

// GetKeyName returns the KeyName field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetKeyName() string {
	if o == nil || o.KeyName == nil {
		var ret string
		return ret
	}
	return *o.KeyName
}

// GetKeyNameOk returns a tuple with the KeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetKeyNameOk() (*string, bool) {
	if o == nil || o.KeyName == nil {
		return nil, false
	}
	return o.KeyName, true
}

// HasKeyName returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasKeyName() bool {
	if o != nil && o.KeyName != nil {
		return true
	}

	return false
}

// SetKeyName gets a reference to the given string and assigns it to the KeyName field.
func (o *PkiIssuersGenerateRootRequest) SetKeyName(v string) {
	o.KeyName = &v
}

// GetKeyRef returns the KeyRef field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetKeyRef() string {
	if o == nil || o.KeyRef == nil {
		var ret string
		return ret
	}
	return *o.KeyRef
}

// GetKeyRefOk returns a tuple with the KeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetKeyRefOk() (*string, bool) {
	if o == nil || o.KeyRef == nil {
		return nil, false
	}
	return o.KeyRef, true
}

// HasKeyRef returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasKeyRef() bool {
	if o != nil && o.KeyRef != nil {
		return true
	}

	return false
}

// SetKeyRef gets a reference to the given string and assigns it to the KeyRef field.
func (o *PkiIssuersGenerateRootRequest) SetKeyRef(v string) {
	o.KeyRef = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *PkiIssuersGenerateRootRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetLocality() []string {
	if o == nil || o.Locality == nil {
		var ret []string
		return ret
	}
	return o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetLocalityOk() ([]string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given []string and assigns it to the Locality field.
func (o *PkiIssuersGenerateRootRequest) SetLocality(v []string) {
	o.Locality = v
}

// GetManagedKeyId returns the ManagedKeyId field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetManagedKeyId() string {
	if o == nil || o.ManagedKeyId == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyId
}

// GetManagedKeyIdOk returns a tuple with the ManagedKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetManagedKeyIdOk() (*string, bool) {
	if o == nil || o.ManagedKeyId == nil {
		return nil, false
	}
	return o.ManagedKeyId, true
}

// HasManagedKeyId returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasManagedKeyId() bool {
	if o != nil && o.ManagedKeyId != nil {
		return true
	}

	return false
}

// SetManagedKeyId gets a reference to the given string and assigns it to the ManagedKeyId field.
func (o *PkiIssuersGenerateRootRequest) SetManagedKeyId(v string) {
	o.ManagedKeyId = &v
}

// GetManagedKeyName returns the ManagedKeyName field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetManagedKeyName() string {
	if o == nil || o.ManagedKeyName == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyName
}

// GetManagedKeyNameOk returns a tuple with the ManagedKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetManagedKeyNameOk() (*string, bool) {
	if o == nil || o.ManagedKeyName == nil {
		return nil, false
	}
	return o.ManagedKeyName, true
}

// HasManagedKeyName returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasManagedKeyName() bool {
	if o != nil && o.ManagedKeyName != nil {
		return true
	}

	return false
}

// SetManagedKeyName gets a reference to the given string and assigns it to the ManagedKeyName field.
func (o *PkiIssuersGenerateRootRequest) SetManagedKeyName(v string) {
	o.ManagedKeyName = &v
}

// GetMaxPathLength returns the MaxPathLength field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetMaxPathLength() int32 {
	if o == nil || o.MaxPathLength == nil {
		var ret int32
		return ret
	}
	return *o.MaxPathLength
}

// GetMaxPathLengthOk returns a tuple with the MaxPathLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetMaxPathLengthOk() (*int32, bool) {
	if o == nil || o.MaxPathLength == nil {
		return nil, false
	}
	return o.MaxPathLength, true
}

// HasMaxPathLength returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasMaxPathLength() bool {
	if o != nil && o.MaxPathLength != nil {
		return true
	}

	return false
}

// SetMaxPathLength gets a reference to the given int32 and assigns it to the MaxPathLength field.
func (o *PkiIssuersGenerateRootRequest) SetMaxPathLength(v int32) {
	o.MaxPathLength = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiIssuersGenerateRootRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetNotBeforeDuration returns the NotBeforeDuration field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetNotBeforeDuration() int32 {
	if o == nil || o.NotBeforeDuration == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeDuration
}

// GetNotBeforeDurationOk returns a tuple with the NotBeforeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetNotBeforeDurationOk() (*int32, bool) {
	if o == nil || o.NotBeforeDuration == nil {
		return nil, false
	}
	return o.NotBeforeDuration, true
}

// HasNotBeforeDuration returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasNotBeforeDuration() bool {
	if o != nil && o.NotBeforeDuration != nil {
		return true
	}

	return false
}

// SetNotBeforeDuration gets a reference to the given int32 and assigns it to the NotBeforeDuration field.
func (o *PkiIssuersGenerateRootRequest) SetNotBeforeDuration(v int32) {
	o.NotBeforeDuration = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetOrganization() []string {
	if o == nil || o.Organization == nil {
		var ret []string
		return ret
	}
	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetOrganizationOk() ([]string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given []string and assigns it to the Organization field.
func (o *PkiIssuersGenerateRootRequest) SetOrganization(v []string) {
	o.Organization = v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiIssuersGenerateRootRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetOu returns the Ou field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetOu() []string {
	if o == nil || o.Ou == nil {
		var ret []string
		return ret
	}
	return o.Ou
}

// GetOuOk returns a tuple with the Ou field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetOuOk() ([]string, bool) {
	if o == nil || o.Ou == nil {
		return nil, false
	}
	return o.Ou, true
}

// HasOu returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasOu() bool {
	if o != nil && o.Ou != nil {
		return true
	}

	return false
}

// SetOu gets a reference to the given []string and assigns it to the Ou field.
func (o *PkiIssuersGenerateRootRequest) SetOu(v []string) {
	o.Ou = v
}

// GetPermittedDnsDomains returns the PermittedDnsDomains field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetPermittedDnsDomains() []string {
	if o == nil || o.PermittedDnsDomains == nil {
		var ret []string
		return ret
	}
	return o.PermittedDnsDomains
}

// GetPermittedDnsDomainsOk returns a tuple with the PermittedDnsDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetPermittedDnsDomainsOk() ([]string, bool) {
	if o == nil || o.PermittedDnsDomains == nil {
		return nil, false
	}
	return o.PermittedDnsDomains, true
}

// HasPermittedDnsDomains returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasPermittedDnsDomains() bool {
	if o != nil && o.PermittedDnsDomains != nil {
		return true
	}

	return false
}

// SetPermittedDnsDomains gets a reference to the given []string and assigns it to the PermittedDnsDomains field.
func (o *PkiIssuersGenerateRootRequest) SetPermittedDnsDomains(v []string) {
	o.PermittedDnsDomains = v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetPostalCode() []string {
	if o == nil || o.PostalCode == nil {
		var ret []string
		return ret
	}
	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetPostalCodeOk() ([]string, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given []string and assigns it to the PostalCode field.
func (o *PkiIssuersGenerateRootRequest) SetPostalCode(v []string) {
	o.PostalCode = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiIssuersGenerateRootRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetProvince() []string {
	if o == nil || o.Province == nil {
		var ret []string
		return ret
	}
	return o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetProvinceOk() ([]string, bool) {
	if o == nil || o.Province == nil {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasProvince() bool {
	if o != nil && o.Province != nil {
		return true
	}

	return false
}

// SetProvince gets a reference to the given []string and assigns it to the Province field.
func (o *PkiIssuersGenerateRootRequest) SetProvince(v []string) {
	o.Province = v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiIssuersGenerateRootRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetSignatureBits returns the SignatureBits field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetSignatureBits() int32 {
	if o == nil || o.SignatureBits == nil {
		var ret int32
		return ret
	}
	return *o.SignatureBits
}

// GetSignatureBitsOk returns a tuple with the SignatureBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetSignatureBitsOk() (*int32, bool) {
	if o == nil || o.SignatureBits == nil {
		return nil, false
	}
	return o.SignatureBits, true
}

// HasSignatureBits returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasSignatureBits() bool {
	if o != nil && o.SignatureBits != nil {
		return true
	}

	return false
}

// SetSignatureBits gets a reference to the given int32 and assigns it to the SignatureBits field.
func (o *PkiIssuersGenerateRootRequest) SetSignatureBits(v int32) {
	o.SignatureBits = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetStreetAddress() []string {
	if o == nil || o.StreetAddress == nil {
		var ret []string
		return ret
	}
	return o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetStreetAddressOk() ([]string, bool) {
	if o == nil || o.StreetAddress == nil {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasStreetAddress() bool {
	if o != nil && o.StreetAddress != nil {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given []string and assigns it to the StreetAddress field.
func (o *PkiIssuersGenerateRootRequest) SetStreetAddress(v []string) {
	o.StreetAddress = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiIssuersGenerateRootRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiIssuersGenerateRootRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIssuersGenerateRootRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiIssuersGenerateRootRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiIssuersGenerateRootRequest) SetUriSans(v []string) {
	o.UriSans = v
}

func (o PkiIssuersGenerateRootRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.IssuerName != nil {
		toSerialize["issuer_name"] = o.IssuerName
	}
	if o.KeyBits != nil {
		toSerialize["key_bits"] = o.KeyBits
	}
	if o.KeyName != nil {
		toSerialize["key_name"] = o.KeyName
	}
	if o.KeyRef != nil {
		toSerialize["key_ref"] = o.KeyRef
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.ManagedKeyId != nil {
		toSerialize["managed_key_id"] = o.ManagedKeyId
	}
	if o.ManagedKeyName != nil {
		toSerialize["managed_key_name"] = o.ManagedKeyName
	}
	if o.MaxPathLength != nil {
		toSerialize["max_path_length"] = o.MaxPathLength
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.NotBeforeDuration != nil {
		toSerialize["not_before_duration"] = o.NotBeforeDuration
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.Ou != nil {
		toSerialize["ou"] = o.Ou
	}
	if o.PermittedDnsDomains != nil {
		toSerialize["permitted_dns_domains"] = o.PermittedDnsDomains
	}
	if o.PostalCode != nil {
		toSerialize["postal_code"] = o.PostalCode
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.Province != nil {
		toSerialize["province"] = o.Province
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.SignatureBits != nil {
		toSerialize["signature_bits"] = o.SignatureBits
	}
	if o.StreetAddress != nil {
		toSerialize["street_address"] = o.StreetAddress
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiIssuersGenerateRootRequest struct {
	value *PkiIssuersGenerateRootRequest
	isSet bool
}

func (v NullablePkiIssuersGenerateRootRequest) Get() *PkiIssuersGenerateRootRequest {
	return v.value
}

func (v *NullablePkiIssuersGenerateRootRequest) Set(val *PkiIssuersGenerateRootRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiIssuersGenerateRootRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiIssuersGenerateRootRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiIssuersGenerateRootRequest(val *PkiIssuersGenerateRootRequest) *NullablePkiIssuersGenerateRootRequest {
	return &NullablePkiIssuersGenerateRootRequest{value: val, isSet: true}
}

func (v NullablePkiIssuersGenerateRootRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiIssuersGenerateRootRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiJsonRequest struct for PkiJsonRequest
type PkiJsonRequest struct {
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName *string `json:"issuer_name,omitempty"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef *string `json:"issuer_ref,omitempty"`
	// Behavior of leaf's NotAfter fields: \"err\" to error if the computed NotAfter date exceeds that of this issuer; \"truncate\" to silently truncate to that of this issuer; or \"permit\" to allow this issuance to succeed (with NotAfter exceeding that of an issuer). Note that not all values will results in certificates that can be validated through the entire validity period. It is suggested to use \"truncate\" for intermediate CAs and \"permit\" only for root CAs.
	LeafNotAfterBehavior *string `json:"leaf_not_after_behavior,omitempty"`
	// Chain of issuer references to use to build this issuer's computed CAChain field, when non-empty.
	ManualChain []string `json:"manual_chain,omitempty"`
	// Comma-separated list (or string slice) of usages for this issuer; valid values are \"read-only\", \"issuing-certificates\", and \"crl-signing\". Multiple values may be specified. Read-only is implicit and always set.
	Usage []string `json:"usage,omitempty"`
}

// NewPkiJsonRequest instantiates a new PkiJsonRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiJsonRequest() *PkiJsonRequest {
	this := PkiJsonRequest{}
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var leafNotAfterBehavior string = "err"
	this.LeafNotAfterBehavior = &leafNotAfterBehavior
	return &this
}

// NewPkiJsonRequestWithDefaults instantiates a new PkiJsonRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiJsonRequestWithDefaults() *PkiJsonRequest {
	this := PkiJsonRequest{}
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var leafNotAfterBehavior string = "err"
	this.LeafNotAfterBehavior = &leafNotAfterBehavior
	return &this
}

// GetIssuerName returns the IssuerName field value if set, zero value otherwise.
func (o *PkiJsonRequest) GetIssuerName() string {
	if o == nil || o.IssuerName == nil {
		var ret string
		return ret
	}
	return *o.IssuerName
}

// GetIssuerNameOk returns a tuple with the IssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiJsonRequest) GetIssuerNameOk() (*string, bool) {
	if o == nil || o.IssuerName == nil {
		return nil, false
	}
	return o.IssuerName, true
}

// HasIssuerName returns a boolean if a field has been set.
func (o *PkiJsonRequest) HasIssuerName() bool {
	if o != nil && o.IssuerName != nil {
		return true
	}

	return false
}

// SetIssuerName gets a reference to the given string and assigns it to the IssuerName field.
func (o *PkiJsonRequest) SetIssuerName(v string) {
	o.IssuerName = &v
}

// GetIssuerRef returns the IssuerRef field value if set, zero value otherwise.
func (o *PkiJsonRequest) GetIssuerRef() string {
	if o == nil || o.IssuerRef == nil {
		var ret string
		return ret
	}
	return *o.IssuerRef
}

// GetIssuerRefOk returns a tuple with the IssuerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiJsonRequest) GetIssuerRefOk() (*string, bool) {
	if o == nil || o.IssuerRef == nil {
		return nil, false
	}
	return o.IssuerRef, true
}

// HasIssuerRef returns a boolean if a field has been set.
func (o *PkiJsonRequest) HasIssuerRef() bool {
	if o != nil && o.IssuerRef != nil {
		return true
	}

	return false
}

// SetIssuerRef gets a reference to the given string and assigns it to the IssuerRef field.
func (o *PkiJsonRequest) SetIssuerRef(v string) {
	o.IssuerRef = &v
}

// GetLeafNotAfterBehavior returns the LeafNotAfterBehavior field value if set, zero value otherwise.
func (o *PkiJsonRequest) GetLeafNotAfterBehavior() string {
	if o == nil || o.LeafNotAfterBehavior == nil {
		var ret string
		return ret
	}
	return *o.LeafNotAfterBehavior
}

// GetLeafNotAfterBehaviorOk returns a tuple with the LeafNotAfterBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiJsonRequest) GetLeafNotAfterBehaviorOk() (*string, bool) {
	if o == nil || o.LeafNotAfterBehavior == nil {
		return nil, false
	}
	return o.LeafNotAfterBehavior, true
}

// HasLeafNotAfterBehavior returns a boolean if a field has been set.
func (o *PkiJsonRequest) HasLeafNotAfterBehavior() bool {
	if o != nil && o.LeafNotAfterBehavior != nil {
		return true
	}

	return false
}

// SetLeafNotAfterBehavior gets a reference to the given string and assigns it to the LeafNotAfterBehavior field.
func (o *PkiJsonRequest) SetLeafNotAfterBehavior(v string) {
	o.LeafNotAfterBehavior = &v
}

// GetManualChain returns the ManualChain field value if set, zero value otherwise.
func (o *PkiJsonRequest) GetManualChain() []string {
	if o == nil || o.ManualChain == nil {
		var ret []string
		return ret
	}
	return o.ManualChain
}

// GetManualChainOk returns a tuple with the ManualChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiJsonRequest) GetManualChainOk() ([]string, bool) {
	if o == nil || o.ManualChain == nil {
		return nil, false
	}
	return o.ManualChain, true
}

// HasManualChain returns a boolean if a field has been set.
func (o *PkiJsonRequest) HasManualChain() bool {
	if o != nil && o.ManualChain != nil {
		return true
	}

	return false
}

// SetManualChain gets a reference to the given []string and assigns it to the ManualChain field.
func (o *PkiJsonRequest) SetManualChain(v []string) {
	o.ManualChain = v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *PkiJsonRequest) GetUsage() []string {
	if o == nil || o.Usage == nil {
		var ret []string
		return ret
	}
	return o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiJsonRequest) GetUsageOk() ([]string, bool) {
	if o == nil || o.Usage == nil {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *PkiJsonRequest) HasUsage() bool {
	if o != nil && o.Usage != nil {
		return true
	}

	return false
}

// SetUsage gets a reference to the given []string and assigns it to the Usage field.
func (o *PkiJsonRequest) SetUsage(v []string) {
	o.Usage = v
}

func (o PkiJsonRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IssuerName != nil {
		toSerialize["issuer_name"] = o.IssuerName
	}
	if o.IssuerRef != nil {
		toSerialize["issuer_ref"] = o.IssuerRef
	}
	if o.LeafNotAfterBehavior != nil {
		toSerialize["leaf_not_after_behavior"] = o.LeafNotAfterBehavior
	}
	if o.ManualChain != nil {
		toSerialize["manual_chain"] = o.ManualChain
	}
	if o.Usage != nil {
		toSerialize["usage"] = o.Usage
	}
	return json.Marshal(toSerialize)
}

type NullablePkiJsonRequest struct {
	value *PkiJsonRequest
	isSet bool
}

func (v NullablePkiJsonRequest) Get() *PkiJsonRequest {
	return v.value
}

func (v *NullablePkiJsonRequest) Set(val *PkiJsonRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiJsonRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiJsonRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiJsonRequest(val *PkiJsonRequest) *NullablePkiJsonRequest {
	return &NullablePkiJsonRequest{value: val, isSet: true}
}

func (v NullablePkiJsonRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiJsonRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiKeyRequest struct for PkiKeyRequest
type PkiKeyRequest struct {
	// Human-readable name for this key.
	KeyName *string `json:"key_name,omitempty"`
}

// NewPkiKeyRequest instantiates a new PkiKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiKeyRequest() *PkiKeyRequest {
	this := PkiKeyRequest{}
	return &this
}

// NewPkiKeyRequestWithDefaults instantiates a new PkiKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiKeyRequestWithDefaults() *PkiKeyRequest {
	this := PkiKeyRequest{}
	return &this
}

// GetKeyName returns the KeyName field value if set, zero value otherwise.
func (o *PkiKeyRequest) GetKeyName() string {
	if o == nil || o.KeyName == nil {
		var ret string
		return ret
	}
	return *o.KeyName
}

// GetKeyNameOk returns a tuple with the KeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiKeyRequest) GetKeyNameOk() (*string, bool) {
	if o == nil || o.KeyName == nil {
		return nil, false
	}
	return o.KeyName, true
}

// HasKeyName returns a boolean if a field has been set.
func (o *PkiKeyRequest) HasKeyName() bool {
	if o != nil && o.KeyName != nil {
		return true
	}

	return false
}

// SetKeyName gets a reference to the given string and assigns it to the KeyName field.
func (o *PkiKeyRequest) SetKeyName(v string) {
	o.KeyName = &v
}

func (o PkiKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeyName != nil {
		toSerialize["key_name"] = o.KeyName
	}
	return json.Marshal(toSerialize)
}

type NullablePkiKeyRequest struct {
	value *PkiKeyRequest
	isSet bool
}

func (v NullablePkiKeyRequest) Get() *PkiKeyRequest {
	return v.value
}

func (v *NullablePkiKeyRequest) Set(val *PkiKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiKeyRequest(val *PkiKeyRequest) *NullablePkiKeyRequest {
	return &NullablePkiKeyRequest{value: val, isSet: true}
}

func (v NullablePkiKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiKeysImportRequest struct for PkiKeysImportRequest
type PkiKeysImportRequest struct {
	// Optional name to be used for this key
	KeyName *string `json:"key_name,omitempty"`
	// PEM-format, unencrypted secret key
	PemBundle *string `json:"pem_bundle,omitempty"`
}

// NewPkiKeysImportRequest instantiates a new PkiKeysImportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiKeysImportRequest() *PkiKeysImportRequest {
	this := PkiKeysImportRequest{}
	return &this
}

// NewPkiKeysImportRequestWithDefaults instantiates a new PkiKeysImportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiKeysImportRequestWithDefaults() *PkiKeysImportRequest {
	this := PkiKeysImportRequest{}
	return &this
}

// GetKeyName returns the KeyName field value if set, zero value otherwise.
func (o *PkiKeysImportRequest) GetKeyName() string {
	if o == nil || o.KeyName == nil {
		var ret string
		return ret
	}
	return *o.KeyName
}

// GetKeyNameOk returns a tuple with the KeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiKeysImportRequest) GetKeyNameOk() (*string, bool) {
	if o == nil || o.KeyName == nil {
		return nil, false
	}
	return o.KeyName, true
}

// HasKeyName returns a boolean if a field has been set.
func (o *PkiKeysImportRequest) HasKeyName() bool {
	if o != nil && o.KeyName != nil {
		return true
	}

	return false
}

// SetKeyName gets a reference to the given string and assigns it to the KeyName field.
func (o *PkiKeysImportRequest) SetKeyName(v string) {
	o.KeyName = &v
}

// GetPemBundle returns the PemBundle field value if set, zero value otherwise.
func (o *PkiKeysImportRequest) GetPemBundle() string {
	if o == nil || o.PemBundle == nil {
		var ret string
		return ret
	}
	return *o.PemBundle
}

// GetPemBundleOk returns a tuple with the PemBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiKeysImportRequest) GetPemBundleOk() (*string, bool) {
	if o == nil || o.PemBundle == nil {
		return nil, false
	}
	return o.PemBundle, true
}

// HasPemBundle returns a boolean if a field has been set.
func (o *PkiKeysImportRequest) HasPemBundle() bool {
	if o != nil && o.PemBundle != nil {
		return true
	}

	return false
}

// SetPemBundle gets a reference to the given string and assigns it to the PemBundle field.
func (o *PkiKeysImportRequest) SetPemBundle(v string) {
	o.PemBundle = &v
}

func (o PkiKeysImportRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeyName != nil {
		toSerialize["key_name"] = o.KeyName
	}
	if o.PemBundle != nil {
		toSerialize["pem_bundle"] = o.PemBundle
	}
	return json.Marshal(toSerialize)
}

type NullablePkiKeysImportRequest struct {
	value *PkiKeysImportRequest
	isSet bool
}

func (v NullablePkiKeysImportRequest) Get() *PkiKeysImportRequest {
	return v.value
}

func (v *NullablePkiKeysImportRequest) Set(val *PkiKeysImportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiKeysImportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiKeysImportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiKeysImportRequest(val *PkiKeysImportRequest) *NullablePkiKeysImportRequest {
	return &NullablePkiKeysImportRequest{value: val, isSet: true}
}

func (v NullablePkiKeysImportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiKeysImportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiKmsRequest struct for PkiKmsRequest
type PkiKmsRequest struct {
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits *int32 `json:"key_bits,omitempty"`
	// Optional name to be used for this key
	KeyName *string `json:"key_name,omitempty"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType *string `json:"key_type,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId *string `json:"managed_key_id,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName *string `json:"managed_key_name,omitempty"`
}

// NewPkiKmsRequest instantiates a new PkiKmsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiKmsRequest() *PkiKmsRequest {
	this := PkiKmsRequest{}
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyType string = "rsa"
	this.KeyType = &keyType
	return &this
}

// NewPkiKmsRequestWithDefaults instantiates a new PkiKmsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiKmsRequestWithDefaults() *PkiKmsRequest {
	this := PkiKmsRequest{}
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyType string = "rsa"
	this.KeyType = &keyType
	return &this
}

// GetKeyBits returns the KeyBits field value if set, zero value otherwise.
func (o *PkiKmsRequest) GetKeyBits() int32 {
	if o == nil || o.KeyBits == nil {
		var ret int32
		return ret
	}
	return *o.KeyBits
}

// GetKeyBitsOk returns a tuple with the KeyBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiKmsRequest) GetKeyBitsOk() (*int32, bool) {
	if o == nil || o.KeyBits == nil {
		return nil, false
	}
	return o.KeyBits, true
}

// HasKeyBits returns a boolean if a field has been set.
func (o *PkiKmsRequest) HasKeyBits() bool {
	if o != nil && o.KeyBits != nil {
		return true
	}

	return false
}

// SetKeyBits gets a reference to the given int32 and assigns it to the KeyBits field.
func (o *PkiKmsRequest) SetKeyBits(v int32) {
	o.KeyBits = &v
}

// GetKeyName returns the KeyName field value if set, zero value otherwise.
func (o *PkiKmsRequest) GetKeyName() string {
	if o == nil || o.KeyName == nil {
		var ret string
		return ret
	}
	return *o.KeyName
}

// GetKeyNameOk returns a tuple with the KeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiKmsRequest) GetKeyNameOk() (*string, bool) {
	if o == nil || o.KeyName == nil {
		return nil, false
	}
	return o.KeyName, true
}

// HasKeyName returns a boolean if a field has been set.
func (o *PkiKmsRequest) HasKeyName() bool {
	if o != nil && o.KeyName != nil {
		return true
	}

	return false
}

// SetKeyName gets a reference to the given string and assigns it to the KeyName field.
func (o *PkiKmsRequest) SetKeyName(v string) {
	o.KeyName = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *PkiKmsRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiKmsRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *PkiKmsRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *PkiKmsRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetManagedKeyId returns the ManagedKeyId field value if set, zero value otherwise.
func (o *PkiKmsRequest) GetManagedKeyId() string {
	if o == nil || o.ManagedKeyId == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyId
}

// GetManagedKeyIdOk returns a tuple with the ManagedKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiKmsRequest) GetManagedKeyIdOk() (*string, bool) {
	if o == nil || o.ManagedKeyId == nil {
		return nil, false
	}
	return o.ManagedKeyId, true
}

// HasManagedKeyId returns a boolean if a field has been set.
func (o *PkiKmsRequest) HasManagedKeyId() bool {
	if o != nil && o.ManagedKeyId != nil {
		return true
	}

	return false
}

// SetManagedKeyId gets a reference to the given string and assigns it to the ManagedKeyId field.
func (o *PkiKmsRequest) SetManagedKeyId(v string) {
	o.ManagedKeyId = &v
}

// GetManagedKeyName returns the ManagedKeyName field value if set, zero value otherwise.
func (o *PkiKmsRequest) GetManagedKeyName() string {
	if o == nil || o.ManagedKeyName == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyName
}

// GetManagedKeyNameOk returns a tuple with the ManagedKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiKmsRequest) GetManagedKeyNameOk() (*string, bool) {
	if o == nil || o.ManagedKeyName == nil {
		return nil, false
	}
	return o.ManagedKeyName, true
}

// HasManagedKeyName returns a boolean if a field has been set.
func (o *PkiKmsRequest) HasManagedKeyName() bool {
	if o != nil && o.ManagedKeyName != nil {
		return true
	}

	return false
}

// SetManagedKeyName gets a reference to the given string and assigns it to the ManagedKeyName field.
func (o *PkiKmsRequest) SetManagedKeyName(v string) {
	o.ManagedKeyName = &v
}

func (o PkiKmsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeyBits != nil {
		toSerialize["key_bits"] = o.KeyBits
	}
	if o.KeyName != nil {
		toSerialize["key_name"] = o.KeyName
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.ManagedKeyId != nil {
		toSerialize["managed_key_id"] = o.ManagedKeyId
	}
	if o.ManagedKeyName != nil {
		toSerialize["managed_key_name"] = o.ManagedKeyName
	}
	return json.Marshal(toSerialize)
}

type NullablePkiKmsRequest struct {
	value *PkiKmsRequest
	isSet bool
}

func (v NullablePkiKmsRequest) Get() *PkiKmsRequest {
	return v.value
}

func (v *NullablePkiKmsRequest) Set(val *PkiKmsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiKmsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiKmsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiKmsRequest(val *PkiKmsRequest) *NullablePkiKmsRequest {
	return &NullablePkiKmsRequest{value: val, isSet: true}
}

func (v NullablePkiKmsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiKmsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiRevokeRequest struct for PkiRevokeRequest
type PkiRevokeRequest struct {
	// Certificate serial number, in colon- or hyphen-separated octal
	SerialNumber *string `json:"serial_number,omitempty"`
}

// NewPkiRevokeRequest instantiates a new PkiRevokeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiRevokeRequest() *PkiRevokeRequest {
	this := PkiRevokeRequest{}
	return &this
}

// NewPkiRevokeRequestWithDefaults instantiates a new PkiRevokeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiRevokeRequestWithDefaults() *PkiRevokeRequest {
	this := PkiRevokeRequest{}
	return &this
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiRevokeRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRevokeRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiRevokeRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiRevokeRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

func (o PkiRevokeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	return json.Marshal(toSerialize)
}

type NullablePkiRevokeRequest struct {
	value *PkiRevokeRequest
	isSet bool
}

func (v NullablePkiRevokeRequest) Get() *PkiRevokeRequest {
	return v.value
}

func (v *NullablePkiRevokeRequest) Set(val *PkiRevokeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiRevokeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiRevokeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiRevokeRequest(val *PkiRevokeRequest) *NullablePkiRevokeRequest {
	return &NullablePkiRevokeRequest{value: val, isSet: true}
}

func (v NullablePkiRevokeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiRevokeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiRolesRequest struct for PkiRolesRequest
type PkiRolesRequest struct {
	// If set, clients can request certificates for any domain, regardless of allowed_domains restrictions. See the documentation for more information.
	AllowAnyName *bool `json:"allow_any_name,omitempty"`
	// If set, clients can request certificates for the base domains themselves, e.g. \"example.com\" of domains listed in allowed_domains. This is a separate option as in some cases this can be considered a security threat. See the documentation for more information.
	AllowBareDomains *bool `json:"allow_bare_domains,omitempty"`
	// If set, domains specified in allowed_domains can include shell-style glob patterns, e.g. \"ftp*.example.com\". See the documentation for more information.
	AllowGlobDomains *bool `json:"allow_glob_domains,omitempty"`
	// If set, IP Subject Alternative Names are allowed. Any valid IP is accepted and No authorization checking is performed.
	AllowIpSans *bool `json:"allow_ip_sans,omitempty"`
	// Whether to allow \"localhost\" and \"localdomain\" as a valid common name in a request, independent of allowed_domains value.
	AllowLocalhost *bool `json:"allow_localhost,omitempty"`
	// If set, clients can request certificates for subdomains of domains listed in allowed_domains, including wildcard subdomains. See the documentation for more information.
	AllowSubdomains *bool `json:"allow_subdomains,omitempty"`
	// If set, allows certificates with wildcards in the common name to be issued, conforming to RFC 6125's Section 6.4.3; e.g., \"*.example.net\" or \"b*z.example.net\". See the documentation for more information.
	AllowWildcardCertificates *bool `json:"allow_wildcard_certificates,omitempty"`
	// Specifies the domains this role is allowed to issue certificates for. This is used with the allow_bare_domains, allow_subdomains, and allow_glob_domains to determine matches for the common name, DNS-typed SAN entries, and Email-typed SAN entries of certificates. See the documentation for more information. This parameter accepts a comma-separated string or list of domains.
	AllowedDomains []string `json:"allowed_domains,omitempty"`
	// If set, Allowed domains can be specified using identity template policies. Non-templated domains are also permitted.
	AllowedDomainsTemplate *bool `json:"allowed_domains_template,omitempty"`
	// If set, an array of allowed other names to put in SANs. These values support globbing and must be in the format <oid>;<type>:<value>. Currently only \"utf8\" is a valid type. All values, including globbing values, must use this syntax, with the exception being a single \"*\" which allows any OID and any value (but type must still be utf8).
	AllowedOtherSans []string `json:"allowed_other_sans,omitempty"`
	// If set, an array of allowed serial numbers to put in Subject. These values support globbing.
	AllowedSerialNumbers []string `json:"allowed_serial_numbers,omitempty"`
	// If set, an array of allowed URIs for URI Subject Alternative Names. Any valid URI is accepted, these values support globbing.
	AllowedUriSans []string `json:"allowed_uri_sans,omitempty"`
	// If set, Allowed URI SANs can be specified using identity template policies. Non-templated URI SANs are also permitted.
	AllowedUriSansTemplate *bool `json:"allowed_uri_sans_template,omitempty"`
	// Backend Type
	Backend *string `json:"backend,omitempty"`
	// Mark Basic Constraints valid when issuing non-CA certificates.
	BasicConstraintsValidForNonCa *bool `json:"basic_constraints_valid_for_non_ca,omitempty"`
	// If set, certificates are flagged for client auth use. Defaults to true. See also RFC 5280 Section 4.2.1.12.
	ClientFlag *bool `json:"client_flag,omitempty"`
	// If set, certificates are flagged for code signing use. Defaults to false. See also RFC 5280 Section 4.2.1.12.
	CodeSigningFlag *bool `json:"code_signing_flag,omitempty"`
	// If set, Country will be set to this value in certificates issued by this role.
	Country []string `json:"country,omitempty"`
	// If set, certificates are flagged for email protection use. Defaults to false. See also RFC 5280 Section 4.2.1.12.
	EmailProtectionFlag *bool `json:"email_protection_flag,omitempty"`
	// If set, only valid host names are allowed for CN and DNS SANs, and the host part of email addresses. Defaults to true.
	EnforceHostnames *bool `json:"enforce_hostnames,omitempty"`
	// A comma-separated string or list of extended key usages. Valid values can be found at https://golang.org/pkg/crypto/x509/#ExtKeyUsage -- simply drop the \"ExtKeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list. See also RFC 5280 Section 4.2.1.12.
	ExtKeyUsage []string `json:"ext_key_usage,omitempty"`
	// A comma-separated string or list of extended key usage oids.
	ExtKeyUsageOids []string `json:"ext_key_usage_oids,omitempty"`
	// If set, certificates issued/signed against this role will have Vault leases attached to them. Defaults to \"false\". Certificates can be added to the CRL by \"vault revoke <lease_id>\" when certificates are associated with leases. It can also be done using the \"pki/revoke\" endpoint. However, when lease generation is disabled, invoking \"pki/revoke\" would be the only way to add the certificates to the CRL. When large number of certificates are generated with long lifetimes, it is recommended that lease generation be disabled, as large amount of leases adversely affect the startup time of Vault.
	GenerateLease *bool `json:"generate_lease,omitempty"`
	// Reference to the issuer used to sign requests serviced by this role.
	IssuerRef *string `json:"issuer_ref,omitempty"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits *int32 `json:"key_bits,omitempty"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\", \"ed25519\" and \"any\" are the only valid values.
	KeyType *string `json:"key_type,omitempty"`
	// A comma-separated string or list of key usages (not extended key usages). Valid values can be found at https://golang.org/pkg/crypto/x509/#KeyUsage -- simply drop the \"KeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list. See also RFC 5280 Section 4.2.1.3.
	KeyUsage []string `json:"key_usage,omitempty"`
	// If set, Locality will be set to this value in certificates issued by this role.
	Locality []string `json:"locality,omitempty"`
	// The maximum allowed lease duration. If not set, defaults to the system maximum lease TTL.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// If set, certificates issued/signed against this role will not be stored in the storage backend. This can improve performance when issuing large numbers of certificates. However, certificates issued in this way cannot be enumerated or revoked, so this option is recommended only for certificates that are non-sensitive, or extremely short-lived. This option implies a value of \"false\" for \"generate_lease\".
	NoStore *bool `json:"no_store,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ.
	NotAfter *string `json:"not_after,omitempty"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration *int32 `json:"not_before_duration,omitempty"`
	// If set, O (Organization) will be set to this value in certificates issued by this role.
	Organization []string `json:"organization,omitempty"`
	// If set, OU (OrganizationalUnit) will be set to this value in certificates issued by this role.
	Ou []string `json:"ou,omitempty"`
	// A comma-separated string or list of policy OIDs, or a JSON list of qualified policy information, which must include an oid, and may include a notice and/or cps url, using the form [{\"oid\"=\"1.3.6.1.4.1.7.8\",\"notice\"=\"I am a user Notice\"}, {\"oid\"=\"1.3.6.1.4.1.44947.1.2.4 \",\"cps\"=\"https://example.com\"}].
	PolicyIdentifiers []string `json:"policy_identifiers,omitempty"`
	// If set, Postal Code will be set to this value in certificates issued by this role.
	PostalCode []string `json:"postal_code,omitempty"`
	// If set, Province will be set to this value in certificates issued by this role.
	Province []string `json:"province,omitempty"`
	// If set to false, makes the 'common_name' field optional while generating a certificate.
	RequireCn *bool `json:"require_cn,omitempty"`
	// If set, certificates are flagged for server auth use. Defaults to true. See also RFC 5280 Section 4.2.1.12.
	ServerFlag *bool `json:"server_flag,omitempty"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits *int32 `json:"signature_bits,omitempty"`
	// If set, Street Address will be set to this value in certificates issued by this role.
	StreetAddress []string `json:"street_address,omitempty"`
	// The lease duration (validity period of the certificate) if no specific lease duration is requested. The lease duration controls the expiration of certificates issued by this backend. Defaults to the system default value or the value of max_ttl, whichever is shorter.
	Ttl *int32 `json:"ttl,omitempty"`
	// If set, when used with a signing profile, the common name in the CSR will be used. This does *not* include any requested Subject Alternative Names; use use_csr_sans for that. Defaults to true.
	UseCsrCommonName *bool `json:"use_csr_common_name,omitempty"`
	// If set, when used with a signing profile, the SANs in the CSR will be used. This does *not* include the Common Name (cn); use use_csr_common_name for that. Defaults to true.
	UseCsrSans *bool `json:"use_csr_sans,omitempty"`
}

// NewPkiRolesRequest instantiates a new PkiRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiRolesRequest() *PkiRolesRequest {
	this := PkiRolesRequest{}
	var allowIpSans bool = true
	this.AllowIpSans = &allowIpSans
	var allowLocalhost bool = true
	this.AllowLocalhost = &allowLocalhost
	var allowWildcardCertificates bool = true
	this.AllowWildcardCertificates = &allowWildcardCertificates
	var allowedDomainsTemplate bool = false
	this.AllowedDomainsTemplate = &allowedDomainsTemplate
	var allowedUriSansTemplate bool = false
	this.AllowedUriSansTemplate = &allowedUriSansTemplate
	var clientFlag bool = true
	this.ClientFlag = &clientFlag
	var enforceHostnames bool = true
	this.EnforceHostnames = &enforceHostnames
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyType string = "rsa"
	this.KeyType = &keyType
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var requireCn bool = true
	this.RequireCn = &requireCn
	var serverFlag bool = true
	this.ServerFlag = &serverFlag
	var signatureBits int32 = 0
	this.SignatureBits = &signatureBits
	var useCsrCommonName bool = true
	this.UseCsrCommonName = &useCsrCommonName
	var useCsrSans bool = true
	this.UseCsrSans = &useCsrSans
	return &this
}

// NewPkiRolesRequestWithDefaults instantiates a new PkiRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiRolesRequestWithDefaults() *PkiRolesRequest {
	this := PkiRolesRequest{}
	var allowIpSans bool = true
	this.AllowIpSans = &allowIpSans
	var allowLocalhost bool = true
	this.AllowLocalhost = &allowLocalhost
	var allowWildcardCertificates bool = true
	this.AllowWildcardCertificates = &allowWildcardCertificates
	var allowedDomainsTemplate bool = false
	this.AllowedDomainsTemplate = &allowedDomainsTemplate
	var allowedUriSansTemplate bool = false
	this.AllowedUriSansTemplate = &allowedUriSansTemplate
	var clientFlag bool = true
	this.ClientFlag = &clientFlag
	var enforceHostnames bool = true
	this.EnforceHostnames = &enforceHostnames
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyType string = "rsa"
	this.KeyType = &keyType
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var requireCn bool = true
	this.RequireCn = &requireCn
	var serverFlag bool = true
	this.ServerFlag = &serverFlag
	var signatureBits int32 = 0
	this.SignatureBits = &signatureBits
	var useCsrCommonName bool = true
	this.UseCsrCommonName = &useCsrCommonName
	var useCsrSans bool = true
	this.UseCsrSans = &useCsrSans
	return &this
}

// GetAllowAnyName returns the AllowAnyName field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowAnyName() bool {
	if o == nil || o.AllowAnyName == nil {
		var ret bool
		return ret
	}
	return *o.AllowAnyName
}

// GetAllowAnyNameOk returns a tuple with the AllowAnyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowAnyNameOk() (*bool, bool) {
	if o == nil || o.AllowAnyName == nil {
		return nil, false
	}
	return o.AllowAnyName, true
}

// HasAllowAnyName returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowAnyName() bool {
	if o != nil && o.AllowAnyName != nil {
		return true
	}

	return false
}

// SetAllowAnyName gets a reference to the given bool and assigns it to the AllowAnyName field.
func (o *PkiRolesRequest) SetAllowAnyName(v bool) {
	o.AllowAnyName = &v
}

// GetAllowBareDomains returns the AllowBareDomains field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowBareDomains() bool {
	if o == nil || o.AllowBareDomains == nil {
		var ret bool
		return ret
	}
	return *o.AllowBareDomains
}

// GetAllowBareDomainsOk returns a tuple with the AllowBareDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowBareDomainsOk() (*bool, bool) {
	if o == nil || o.AllowBareDomains == nil {
		return nil, false
	}
	return o.AllowBareDomains, true
}

// HasAllowBareDomains returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowBareDomains() bool {
	if o != nil && o.AllowBareDomains != nil {
		return true
	}

	return false
}

// SetAllowBareDomains gets a reference to the given bool and assigns it to the AllowBareDomains field.
func (o *PkiRolesRequest) SetAllowBareDomains(v bool) {
	o.AllowBareDomains = &v
}

// GetAllowGlobDomains returns the AllowGlobDomains field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowGlobDomains() bool {
	if o == nil || o.AllowGlobDomains == nil {
		var ret bool
		return ret
	}
	return *o.AllowGlobDomains
}

// GetAllowGlobDomainsOk returns a tuple with the AllowGlobDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowGlobDomainsOk() (*bool, bool) {
	if o == nil || o.AllowGlobDomains == nil {
		return nil, false
	}
	return o.AllowGlobDomains, true
}

// HasAllowGlobDomains returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowGlobDomains() bool {
	if o != nil && o.AllowGlobDomains != nil {
		return true
	}

	return false
}

// SetAllowGlobDomains gets a reference to the given bool and assigns it to the AllowGlobDomains field.
func (o *PkiRolesRequest) SetAllowGlobDomains(v bool) {
	o.AllowGlobDomains = &v
}

// GetAllowIpSans returns the AllowIpSans field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowIpSans() bool {
	if o == nil || o.AllowIpSans == nil {
		var ret bool
		return ret
	}
	return *o.AllowIpSans
}

// GetAllowIpSansOk returns a tuple with the AllowIpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowIpSansOk() (*bool, bool) {
	if o == nil || o.AllowIpSans == nil {
		return nil, false
	}
	return o.AllowIpSans, true
}

// HasAllowIpSans returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowIpSans() bool {
	if o != nil && o.AllowIpSans != nil {
		return true
	}

	return false
}

// SetAllowIpSans gets a reference to the given bool and assigns it to the AllowIpSans field.
func (o *PkiRolesRequest) SetAllowIpSans(v bool) {
	o.AllowIpSans = &v
}

// GetAllowLocalhost returns the AllowLocalhost field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowLocalhost() bool {
	if o == nil || o.AllowLocalhost == nil {
		var ret bool
		return ret
	}
	return *o.AllowLocalhost
}

// GetAllowLocalhostOk returns a tuple with the AllowLocalhost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowLocalhostOk() (*bool, bool) {
	if o == nil || o.AllowLocalhost == nil {
		return nil, false
	}
	return o.AllowLocalhost, true
}

// HasAllowLocalhost returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowLocalhost() bool {
	if o != nil && o.AllowLocalhost != nil {
		return true
	}

	return false
}

// SetAllowLocalhost gets a reference to the given bool and assigns it to the AllowLocalhost field.
func (o *PkiRolesRequest) SetAllowLocalhost(v bool) {
	o.AllowLocalhost = &v
}

// GetAllowSubdomains returns the AllowSubdomains field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowSubdomains() bool {
	if o == nil || o.AllowSubdomains == nil {
		var ret bool
		return ret
	}
	return *o.AllowSubdomains
}

// GetAllowSubdomainsOk returns a tuple with the AllowSubdomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowSubdomainsOk() (*bool, bool) {
	if o == nil || o.AllowSubdomains == nil {
		return nil, false
	}
	return o.AllowSubdomains, true
}

// HasAllowSubdomains returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowSubdomains() bool {
	if o != nil && o.AllowSubdomains != nil {
		return true
	}

	return false
}

// SetAllowSubdomains gets a reference to the given bool and assigns it to the AllowSubdomains field.
func (o *PkiRolesRequest) SetAllowSubdomains(v bool) {
	o.AllowSubdomains = &v
}

// GetAllowWildcardCertificates returns the AllowWildcardCertificates field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowWildcardCertificates() bool {
	if o == nil || o.AllowWildcardCertificates == nil {
		var ret bool
		return ret
	}
	return *o.AllowWildcardCertificates
}

// GetAllowWildcardCertificatesOk returns a tuple with the AllowWildcardCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowWildcardCertificatesOk() (*bool, bool) {
	if o == nil || o.AllowWildcardCertificates == nil {
		return nil, false
	}
	return o.AllowWildcardCertificates, true
}

// HasAllowWildcardCertificates returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowWildcardCertificates() bool {
	if o != nil && o.AllowWildcardCertificates != nil {
		return true
	}

	return false
}

// SetAllowWildcardCertificates gets a reference to the given bool and assigns it to the AllowWildcardCertificates field.
func (o *PkiRolesRequest) SetAllowWildcardCertificates(v bool) {
	o.AllowWildcardCertificates = &v
}

// GetAllowedDomains returns the AllowedDomains field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowedDomains() []string {
	if o == nil || o.AllowedDomains == nil {
		var ret []string
		return ret
	}
	return o.AllowedDomains
}

// GetAllowedDomainsOk returns a tuple with the AllowedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowedDomainsOk() ([]string, bool) {
	if o == nil || o.AllowedDomains == nil {
		return nil, false
	}
	return o.AllowedDomains, true
}

// HasAllowedDomains returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowedDomains() bool {
	if o != nil && o.AllowedDomains != nil {
		return true
	}

	return false
}

// SetAllowedDomains gets a reference to the given []string and assigns it to the AllowedDomains field.
func (o *PkiRolesRequest) SetAllowedDomains(v []string) {
	o.AllowedDomains = v
}

// GetAllowedDomainsTemplate returns the AllowedDomainsTemplate field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowedDomainsTemplate() bool {
	if o == nil || o.AllowedDomainsTemplate == nil {
		var ret bool
		return ret
	}
	return *o.AllowedDomainsTemplate
}

// GetAllowedDomainsTemplateOk returns a tuple with the AllowedDomainsTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowedDomainsTemplateOk() (*bool, bool) {
	if o == nil || o.AllowedDomainsTemplate == nil {
		return nil, false
	}
	return o.AllowedDomainsTemplate, true
}

// HasAllowedDomainsTemplate returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowedDomainsTemplate() bool {
	if o != nil && o.AllowedDomainsTemplate != nil {
		return true
	}

	return false
}

// SetAllowedDomainsTemplate gets a reference to the given bool and assigns it to the AllowedDomainsTemplate field.
func (o *PkiRolesRequest) SetAllowedDomainsTemplate(v bool) {
	o.AllowedDomainsTemplate = &v
}

// GetAllowedOtherSans returns the AllowedOtherSans field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowedOtherSans() []string {
	if o == nil || o.AllowedOtherSans == nil {
		var ret []string
		return ret
	}
	return o.AllowedOtherSans
}

// GetAllowedOtherSansOk returns a tuple with the AllowedOtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowedOtherSansOk() ([]string, bool) {
	if o == nil || o.AllowedOtherSans == nil {
		return nil, false
	}
	return o.AllowedOtherSans, true
}

// HasAllowedOtherSans returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowedOtherSans() bool {
	if o != nil && o.AllowedOtherSans != nil {
		return true
	}

	return false
}

// SetAllowedOtherSans gets a reference to the given []string and assigns it to the AllowedOtherSans field.
func (o *PkiRolesRequest) SetAllowedOtherSans(v []string) {
	o.AllowedOtherSans = v
}

// GetAllowedSerialNumbers returns the AllowedSerialNumbers field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowedSerialNumbers() []string {
	if o == nil || o.AllowedSerialNumbers == nil {
		var ret []string
		return ret
	}
	return o.AllowedSerialNumbers
}

// GetAllowedSerialNumbersOk returns a tuple with the AllowedSerialNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowedSerialNumbersOk() ([]string, bool) {
	if o == nil || o.AllowedSerialNumbers == nil {
		return nil, false
	}
	return o.AllowedSerialNumbers, true
}

// HasAllowedSerialNumbers returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowedSerialNumbers() bool {
	if o != nil && o.AllowedSerialNumbers != nil {
		return true
	}

	return false
}

// SetAllowedSerialNumbers gets a reference to the given []string and assigns it to the AllowedSerialNumbers field.
func (o *PkiRolesRequest) SetAllowedSerialNumbers(v []string) {
	o.AllowedSerialNumbers = v
}

// GetAllowedUriSans returns the AllowedUriSans field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowedUriSans() []string {
	if o == nil || o.AllowedUriSans == nil {
		var ret []string
		return ret
	}
	return o.AllowedUriSans
}

// GetAllowedUriSansOk returns a tuple with the AllowedUriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowedUriSansOk() ([]string, bool) {
	if o == nil || o.AllowedUriSans == nil {
		return nil, false
	}
	return o.AllowedUriSans, true
}

// HasAllowedUriSans returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowedUriSans() bool {
	if o != nil && o.AllowedUriSans != nil {
		return true
	}

	return false
}

// SetAllowedUriSans gets a reference to the given []string and assigns it to the AllowedUriSans field.
func (o *PkiRolesRequest) SetAllowedUriSans(v []string) {
	o.AllowedUriSans = v
}

// GetAllowedUriSansTemplate returns the AllowedUriSansTemplate field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetAllowedUriSansTemplate() bool {
	if o == nil || o.AllowedUriSansTemplate == nil {
		var ret bool
		return ret
	}
	return *o.AllowedUriSansTemplate
}

// GetAllowedUriSansTemplateOk returns a tuple with the AllowedUriSansTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetAllowedUriSansTemplateOk() (*bool, bool) {
	if o == nil || o.AllowedUriSansTemplate == nil {
		return nil, false
	}
	return o.AllowedUriSansTemplate, true
}

// HasAllowedUriSansTemplate returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasAllowedUriSansTemplate() bool {
	if o != nil && o.AllowedUriSansTemplate != nil {
		return true
	}

	return false
}

// SetAllowedUriSansTemplate gets a reference to the given bool and assigns it to the AllowedUriSansTemplate field.
func (o *PkiRolesRequest) SetAllowedUriSansTemplate(v bool) {
	o.AllowedUriSansTemplate = &v
}

// GetBackend returns the Backend field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetBackend() string {
	if o == nil || o.Backend == nil {
		var ret string
		return ret
	}
	return *o.Backend
}

// GetBackendOk returns a tuple with the Backend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetBackendOk() (*string, bool) {
	if o == nil || o.Backend == nil {
		return nil, false
	}
	return o.Backend, true
}

// HasBackend returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasBackend() bool {
	if o != nil && o.Backend != nil {
		return true
	}

	return false
}

// SetBackend gets a reference to the given string and assigns it to the Backend field.
func (o *PkiRolesRequest) SetBackend(v string) {
	o.Backend = &v
}

// GetBasicConstraintsValidForNonCa returns the BasicConstraintsValidForNonCa field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetBasicConstraintsValidForNonCa() bool {
	if o == nil || o.BasicConstraintsValidForNonCa == nil {
		var ret bool
		return ret
	}
	return *o.BasicConstraintsValidForNonCa
}

// GetBasicConstraintsValidForNonCaOk returns a tuple with the BasicConstraintsValidForNonCa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetBasicConstraintsValidForNonCaOk() (*bool, bool) {
	if o == nil || o.BasicConstraintsValidForNonCa == nil {
		return nil, false
	}
	return o.BasicConstraintsValidForNonCa, true
}

// HasBasicConstraintsValidForNonCa returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasBasicConstraintsValidForNonCa() bool {
	if o != nil && o.BasicConstraintsValidForNonCa != nil {
		return true
	}

	return false
}

// SetBasicConstraintsValidForNonCa gets a reference to the given bool and assigns it to the BasicConstraintsValidForNonCa field.
func (o *PkiRolesRequest) SetBasicConstraintsValidForNonCa(v bool) {
	o.BasicConstraintsValidForNonCa = &v
}

// GetClientFlag returns the ClientFlag field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetClientFlag() bool {
	if o == nil || o.ClientFlag == nil {
		var ret bool
		return ret
	}
	return *o.ClientFlag
}

// GetClientFlagOk returns a tuple with the ClientFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetClientFlagOk() (*bool, bool) {
	if o == nil || o.ClientFlag == nil {
		return nil, false
	}
	return o.ClientFlag, true
}

// HasClientFlag returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasClientFlag() bool {
	if o != nil && o.ClientFlag != nil {
		return true
	}

	return false
}

// SetClientFlag gets a reference to the given bool and assigns it to the ClientFlag field.
func (o *PkiRolesRequest) SetClientFlag(v bool) {
	o.ClientFlag = &v
}

// GetCodeSigningFlag returns the CodeSigningFlag field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetCodeSigningFlag() bool {
	if o == nil || o.CodeSigningFlag == nil {
		var ret bool
		return ret
	}
	return *o.CodeSigningFlag
}

// GetCodeSigningFlagOk returns a tuple with the CodeSigningFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetCodeSigningFlagOk() (*bool, bool) {
	if o == nil || o.CodeSigningFlag == nil {
		return nil, false
	}
	return o.CodeSigningFlag, true
}

// HasCodeSigningFlag returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasCodeSigningFlag() bool {
	if o != nil && o.CodeSigningFlag != nil {
		return true
	}

	return false
}

// SetCodeSigningFlag gets a reference to the given bool and assigns it to the CodeSigningFlag field.
func (o *PkiRolesRequest) SetCodeSigningFlag(v bool) {
	o.CodeSigningFlag = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetCountry() []string {
	if o == nil || o.Country == nil {
		var ret []string
		return ret
	}
	return o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetCountryOk() ([]string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given []string and assigns it to the Country field.
func (o *PkiRolesRequest) SetCountry(v []string) {
	o.Country = v
}

// GetEmailProtectionFlag returns the EmailProtectionFlag field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetEmailProtectionFlag() bool {
	if o == nil || o.EmailProtectionFlag == nil {
		var ret bool
		return ret
	}
	return *o.EmailProtectionFlag
}

// GetEmailProtectionFlagOk returns a tuple with the EmailProtectionFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetEmailProtectionFlagOk() (*bool, bool) {
	if o == nil || o.EmailProtectionFlag == nil {
		return nil, false
	}
	return o.EmailProtectionFlag, true
}

// HasEmailProtectionFlag returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasEmailProtectionFlag() bool {
	if o != nil && o.EmailProtectionFlag != nil {
		return true
	}

	return false
}

// SetEmailProtectionFlag gets a reference to the given bool and assigns it to the EmailProtectionFlag field.
func (o *PkiRolesRequest) SetEmailProtectionFlag(v bool) {
	o.EmailProtectionFlag = &v
}

// GetEnforceHostnames returns the EnforceHostnames field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetEnforceHostnames() bool {
	if o == nil || o.EnforceHostnames == nil {
		var ret bool
		return ret
	}
	return *o.EnforceHostnames
}

// GetEnforceHostnamesOk returns a tuple with the EnforceHostnames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetEnforceHostnamesOk() (*bool, bool) {
	if o == nil || o.EnforceHostnames == nil {
		return nil, false
	}
	return o.EnforceHostnames, true
}

// HasEnforceHostnames returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasEnforceHostnames() bool {
	if o != nil && o.EnforceHostnames != nil {
		return true
	}

	return false
}

// SetEnforceHostnames gets a reference to the given bool and assigns it to the EnforceHostnames field.
func (o *PkiRolesRequest) SetEnforceHostnames(v bool) {
	o.EnforceHostnames = &v
}

// GetExtKeyUsage returns the ExtKeyUsage field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetExtKeyUsage() []string {
	if o == nil || o.ExtKeyUsage == nil {
		var ret []string
		return ret
	}
	return o.ExtKeyUsage
}

// GetExtKeyUsageOk returns a tuple with the ExtKeyUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetExtKeyUsageOk() ([]string, bool) {
	if o == nil || o.ExtKeyUsage == nil {
		return nil, false
	}
	return o.ExtKeyUsage, true
}

// HasExtKeyUsage returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasExtKeyUsage() bool {
	if o != nil && o.ExtKeyUsage != nil {
		return true
	}

	return false
}

// SetExtKeyUsage gets a reference to the given []string and assigns it to the ExtKeyUsage field.
func (o *PkiRolesRequest) SetExtKeyUsage(v []string) {
	o.ExtKeyUsage = v
}

// GetExtKeyUsageOids returns the ExtKeyUsageOids field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetExtKeyUsageOids() []string {
	if o == nil || o.ExtKeyUsageOids == nil {
		var ret []string
		return ret
	}
	return o.ExtKeyUsageOids
}

// GetExtKeyUsageOidsOk returns a tuple with the ExtKeyUsageOids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetExtKeyUsageOidsOk() ([]string, bool) {
	if o == nil || o.ExtKeyUsageOids == nil {
		return nil, false
	}
	return o.ExtKeyUsageOids, true
}

// HasExtKeyUsageOids returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasExtKeyUsageOids() bool {
	if o != nil && o.ExtKeyUsageOids != nil {
		return true
	}

	return false
}

// SetExtKeyUsageOids gets a reference to the given []string and assigns it to the ExtKeyUsageOids field.
func (o *PkiRolesRequest) SetExtKeyUsageOids(v []string) {
	o.ExtKeyUsageOids = v
}

// GetGenerateLease returns the GenerateLease field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetGenerateLease() bool {
	if o == nil || o.GenerateLease == nil {
		var ret bool
		return ret
	}
	return *o.GenerateLease
}

// GetGenerateLeaseOk returns a tuple with the GenerateLease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetGenerateLeaseOk() (*bool, bool) {
	if o == nil || o.GenerateLease == nil {
		return nil, false
	}
	return o.GenerateLease, true
}

// HasGenerateLease returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasGenerateLease() bool {
	if o != nil && o.GenerateLease != nil {
		return true
	}

	return false
}

// SetGenerateLease gets a reference to the given bool and assigns it to the GenerateLease field.
func (o *PkiRolesRequest) SetGenerateLease(v bool) {
	o.GenerateLease = &v
}

// GetIssuerRef returns the IssuerRef field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetIssuerRef() string {
	if o == nil || o.IssuerRef == nil {
		var ret string
		return ret
	}
	return *o.IssuerRef
}

// GetIssuerRefOk returns a tuple with the IssuerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetIssuerRefOk() (*string, bool) {
	if o == nil || o.IssuerRef == nil {
		return nil, false
	}
	return o.IssuerRef, true
}

// HasIssuerRef returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasIssuerRef() bool {
	if o != nil && o.IssuerRef != nil {
		return true
	}

	return false
}

// SetIssuerRef gets a reference to the given string and assigns it to the IssuerRef field.
func (o *PkiRolesRequest) SetIssuerRef(v string) {
	o.IssuerRef = &v
}

// GetKeyBits returns the KeyBits field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetKeyBits() int32 {
	if o == nil || o.KeyBits == nil {
		var ret int32
		return ret
	}
	return *o.KeyBits
}

// GetKeyBitsOk returns a tuple with the KeyBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetKeyBitsOk() (*int32, bool) {
	if o == nil || o.KeyBits == nil {
		return nil, false
	}
	return o.KeyBits, true
}

// HasKeyBits returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasKeyBits() bool {
	if o != nil && o.KeyBits != nil {
		return true
	}

	return false
}

// SetKeyBits gets a reference to the given int32 and assigns it to the KeyBits field.
func (o *PkiRolesRequest) SetKeyBits(v int32) {
	o.KeyBits = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *PkiRolesRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetKeyUsage returns the KeyUsage field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetKeyUsage() []string {
	if o == nil || o.KeyUsage == nil {
		var ret []string
		return ret
	}
	return o.KeyUsage
}

// GetKeyUsageOk returns a tuple with the KeyUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetKeyUsageOk() ([]string, bool) {
	if o == nil || o.KeyUsage == nil {
		return nil, false
	}
	return o.KeyUsage, true
}

// HasKeyUsage returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasKeyUsage() bool {
	if o != nil && o.KeyUsage != nil {
		return true
	}

	return false
}

// SetKeyUsage gets a reference to the given []string and assigns it to the KeyUsage field.
func (o *PkiRolesRequest) SetKeyUsage(v []string) {
	o.KeyUsage = v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetLocality() []string {
	if o == nil || o.Locality == nil {
		var ret []string
		return ret
	}
	return o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetLocalityOk() ([]string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given []string and assigns it to the Locality field.
func (o *PkiRolesRequest) SetLocality(v []string) {
	o.Locality = v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *PkiRolesRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetNoStore returns the NoStore field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetNoStore() bool {
	if o == nil || o.NoStore == nil {
		var ret bool
		return ret
	}
	return *o.NoStore
}

// GetNoStoreOk returns a tuple with the NoStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetNoStoreOk() (*bool, bool) {
	if o == nil || o.NoStore == nil {
		return nil, false
	}
	return o.NoStore, true
}

// HasNoStore returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasNoStore() bool {
	if o != nil && o.NoStore != nil {
		return true
	}

	return false
}

// SetNoStore gets a reference to the given bool and assigns it to the NoStore field.
func (o *PkiRolesRequest) SetNoStore(v bool) {
	o.NoStore = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiRolesRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetNotBeforeDuration returns the NotBeforeDuration field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetNotBeforeDuration() int32 {
	if o == nil || o.NotBeforeDuration == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeDuration
}

// GetNotBeforeDurationOk returns a tuple with the NotBeforeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetNotBeforeDurationOk() (*int32, bool) {
	if o == nil || o.NotBeforeDuration == nil {
		return nil, false
	}
	return o.NotBeforeDuration, true
}

// HasNotBeforeDuration returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasNotBeforeDuration() bool {
	if o != nil && o.NotBeforeDuration != nil {
		return true
	}

	return false
}

// SetNotBeforeDuration gets a reference to the given int32 and assigns it to the NotBeforeDuration field.
func (o *PkiRolesRequest) SetNotBeforeDuration(v int32) {
	o.NotBeforeDuration = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetOrganization() []string {
	if o == nil || o.Organization == nil {
		var ret []string
		return ret
	}
	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetOrganizationOk() ([]string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given []string and assigns it to the Organization field.
func (o *PkiRolesRequest) SetOrganization(v []string) {
	o.Organization = v
}

// GetOu returns the Ou field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetOu() []string {
	if o == nil || o.Ou == nil {
		var ret []string
		return ret
	}
	return o.Ou
}

// GetOuOk returns a tuple with the Ou field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetOuOk() ([]string, bool) {
	if o == nil || o.Ou == nil {
		return nil, false
	}
	return o.Ou, true
}

// HasOu returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasOu() bool {
	if o != nil && o.Ou != nil {
		return true
	}

	return false
}

// SetOu gets a reference to the given []string and assigns it to the Ou field.
func (o *PkiRolesRequest) SetOu(v []string) {
	o.Ou = v
}

// GetPolicyIdentifiers returns the PolicyIdentifiers field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetPolicyIdentifiers() []string {
	if o == nil || o.PolicyIdentifiers == nil {
		var ret []string
		return ret
	}
	return o.PolicyIdentifiers
}

// GetPolicyIdentifiersOk returns a tuple with the PolicyIdentifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetPolicyIdentifiersOk() ([]string, bool) {
	if o == nil || o.PolicyIdentifiers == nil {
		return nil, false
	}
	return o.PolicyIdentifiers, true
}

// HasPolicyIdentifiers returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasPolicyIdentifiers() bool {
	if o != nil && o.PolicyIdentifiers != nil {
		return true
	}

	return false
}

// SetPolicyIdentifiers gets a reference to the given []string and assigns it to the PolicyIdentifiers field.
func (o *PkiRolesRequest) SetPolicyIdentifiers(v []string) {
	o.PolicyIdentifiers = v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetPostalCode() []string {
	if o == nil || o.PostalCode == nil {
		var ret []string
		return ret
	}
	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetPostalCodeOk() ([]string, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given []string and assigns it to the PostalCode field.
func (o *PkiRolesRequest) SetPostalCode(v []string) {
	o.PostalCode = v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetProvince() []string {
	if o == nil || o.Province == nil {
		var ret []string
		return ret
	}
	return o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetProvinceOk() ([]string, bool) {
	if o == nil || o.Province == nil {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasProvince() bool {
	if o != nil && o.Province != nil {
		return true
	}

	return false
}

// SetProvince gets a reference to the given []string and assigns it to the Province field.
func (o *PkiRolesRequest) SetProvince(v []string) {
	o.Province = v
}

// GetRequireCn returns the RequireCn field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetRequireCn() bool {
	if o == nil || o.RequireCn == nil {
		var ret bool
		return ret
	}
	return *o.RequireCn
}

// GetRequireCnOk returns a tuple with the RequireCn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetRequireCnOk() (*bool, bool) {
	if o == nil || o.RequireCn == nil {
		return nil, false
	}
	return o.RequireCn, true
}

// HasRequireCn returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasRequireCn() bool {
	if o != nil && o.RequireCn != nil {
		return true
	}

	return false
}

// SetRequireCn gets a reference to the given bool and assigns it to the RequireCn field.
func (o *PkiRolesRequest) SetRequireCn(v bool) {
	o.RequireCn = &v
}

// GetServerFlag returns the ServerFlag field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetServerFlag() bool {
	if o == nil || o.ServerFlag == nil {
		var ret bool
		return ret
	}
	return *o.ServerFlag
}

// GetServerFlagOk returns a tuple with the ServerFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetServerFlagOk() (*bool, bool) {
	if o == nil || o.ServerFlag == nil {
		return nil, false
	}
	return o.ServerFlag, true
}

// HasServerFlag returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasServerFlag() bool {
	if o != nil && o.ServerFlag != nil {
		return true
	}

	return false
}

// SetServerFlag gets a reference to the given bool and assigns it to the ServerFlag field.
func (o *PkiRolesRequest) SetServerFlag(v bool) {
	o.ServerFlag = &v
}

// GetSignatureBits returns the SignatureBits field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetSignatureBits() int32 {
	if o == nil || o.SignatureBits == nil {
		var ret int32
		return ret
	}
	return *o.SignatureBits
}

// GetSignatureBitsOk returns a tuple with the SignatureBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetSignatureBitsOk() (*int32, bool) {
	if o == nil || o.SignatureBits == nil {
		return nil, false
	}
	return o.SignatureBits, true
}

// HasSignatureBits returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasSignatureBits() bool {
	if o != nil && o.SignatureBits != nil {
		return true
	}

	return false
}

// SetSignatureBits gets a reference to the given int32 and assigns it to the SignatureBits field.
func (o *PkiRolesRequest) SetSignatureBits(v int32) {
	o.SignatureBits = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetStreetAddress() []string {
	if o == nil || o.StreetAddress == nil {
		var ret []string
		return ret
	}
	return o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetStreetAddressOk() ([]string, bool) {
	if o == nil || o.StreetAddress == nil {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasStreetAddress() bool {
	if o != nil && o.StreetAddress != nil {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given []string and assigns it to the StreetAddress field.
func (o *PkiRolesRequest) SetStreetAddress(v []string) {
	o.StreetAddress = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiRolesRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUseCsrCommonName returns the UseCsrCommonName field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetUseCsrCommonName() bool {
	if o == nil || o.UseCsrCommonName == nil {
		var ret bool
		return ret
	}
	return *o.UseCsrCommonName
}

// GetUseCsrCommonNameOk returns a tuple with the UseCsrCommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetUseCsrCommonNameOk() (*bool, bool) {
	if o == nil || o.UseCsrCommonName == nil {
		return nil, false
	}
	return o.UseCsrCommonName, true
}

// HasUseCsrCommonName returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasUseCsrCommonName() bool {
	if o != nil && o.UseCsrCommonName != nil {
		return true
	}

	return false
}

// SetUseCsrCommonName gets a reference to the given bool and assigns it to the UseCsrCommonName field.
func (o *PkiRolesRequest) SetUseCsrCommonName(v bool) {
	o.UseCsrCommonName = &v
}

// GetUseCsrSans returns the UseCsrSans field value if set, zero value otherwise.
func (o *PkiRolesRequest) GetUseCsrSans() bool {
	if o == nil || o.UseCsrSans == nil {
		var ret bool
		return ret
	}
	return *o.UseCsrSans
}

// GetUseCsrSansOk returns a tuple with the UseCsrSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRolesRequest) GetUseCsrSansOk() (*bool, bool) {
	if o == nil || o.UseCsrSans == nil {
		return nil, false
	}
	return o.UseCsrSans, true
}

// HasUseCsrSans returns a boolean if a field has been set.
func (o *PkiRolesRequest) HasUseCsrSans() bool {
	if o != nil && o.UseCsrSans != nil {
		return true
	}

	return false
}

// SetUseCsrSans gets a reference to the given bool and assigns it to the UseCsrSans field.
func (o *PkiRolesRequest) SetUseCsrSans(v bool) {
	o.UseCsrSans = &v
}

func (o PkiRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowAnyName != nil {
		toSerialize["allow_any_name"] = o.AllowAnyName
	}
	if o.AllowBareDomains != nil {
		toSerialize["allow_bare_domains"] = o.AllowBareDomains
	}
	if o.AllowGlobDomains != nil {
		toSerialize["allow_glob_domains"] = o.AllowGlobDomains
	}
	if o.AllowIpSans != nil {
		toSerialize["allow_ip_sans"] = o.AllowIpSans
	}
	if o.AllowLocalhost != nil {
		toSerialize["allow_localhost"] = o.AllowLocalhost
	}
	if o.AllowSubdomains != nil {
		toSerialize["allow_subdomains"] = o.AllowSubdomains
	}
	if o.AllowWildcardCertificates != nil {
		toSerialize["allow_wildcard_certificates"] = o.AllowWildcardCertificates
	}
	if o.AllowedDomains != nil {
		toSerialize["allowed_domains"] = o.AllowedDomains
	}
	if o.AllowedDomainsTemplate != nil {
		toSerialize["allowed_domains_template"] = o.AllowedDomainsTemplate
	}
	if o.AllowedOtherSans != nil {
		toSerialize["allowed_other_sans"] = o.AllowedOtherSans
	}
	if o.AllowedSerialNumbers != nil {
		toSerialize["allowed_serial_numbers"] = o.AllowedSerialNumbers
	}
	if o.AllowedUriSans != nil {
		toSerialize["allowed_uri_sans"] = o.AllowedUriSans
	}
	if o.AllowedUriSansTemplate != nil {
		toSerialize["allowed_uri_sans_template"] = o.AllowedUriSansTemplate
	}
	if o.Backend != nil {
		toSerialize["backend"] = o.Backend
	}
	if o.BasicConstraintsValidForNonCa != nil {
		toSerialize["basic_constraints_valid_for_non_ca"] = o.BasicConstraintsValidForNonCa
	}
	if o.ClientFlag != nil {
		toSerialize["client_flag"] = o.ClientFlag
	}
	if o.CodeSigningFlag != nil {
		toSerialize["code_signing_flag"] = o.CodeSigningFlag
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.EmailProtectionFlag != nil {
		toSerialize["email_protection_flag"] = o.EmailProtectionFlag
	}
	if o.EnforceHostnames != nil {
		toSerialize["enforce_hostnames"] = o.EnforceHostnames
	}
	if o.ExtKeyUsage != nil {
		toSerialize["ext_key_usage"] = o.ExtKeyUsage
	}
	if o.ExtKeyUsageOids != nil {
		toSerialize["ext_key_usage_oids"] = o.ExtKeyUsageOids
	}
	if o.GenerateLease != nil {
		toSerialize["generate_lease"] = o.GenerateLease
	}
	if o.IssuerRef != nil {
		toSerialize["issuer_ref"] = o.IssuerRef
	}
	if o.KeyBits != nil {
		toSerialize["key_bits"] = o.KeyBits
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.KeyUsage != nil {
		toSerialize["key_usage"] = o.KeyUsage
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.NoStore != nil {
		toSerialize["no_store"] = o.NoStore
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.NotBeforeDuration != nil {
		toSerialize["not_before_duration"] = o.NotBeforeDuration
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.Ou != nil {
		toSerialize["ou"] = o.Ou
	}
	if o.PolicyIdentifiers != nil {
		toSerialize["policy_identifiers"] = o.PolicyIdentifiers
	}
	if o.PostalCode != nil {
		toSerialize["postal_code"] = o.PostalCode
	}
	if o.Province != nil {
		toSerialize["province"] = o.Province
	}
	if o.RequireCn != nil {
		toSerialize["require_cn"] = o.RequireCn
	}
	if o.ServerFlag != nil {
		toSerialize["server_flag"] = o.ServerFlag
	}
	if o.SignatureBits != nil {
		toSerialize["signature_bits"] = o.SignatureBits
	}
	if o.StreetAddress != nil {
		toSerialize["street_address"] = o.StreetAddress
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UseCsrCommonName != nil {
		toSerialize["use_csr_common_name"] = o.UseCsrCommonName
	}
	if o.UseCsrSans != nil {
		toSerialize["use_csr_sans"] = o.UseCsrSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiRolesRequest struct {
	value *PkiRolesRequest
	isSet bool
}

func (v NullablePkiRolesRequest) Get() *PkiRolesRequest {
	return v.value
}

func (v *NullablePkiRolesRequest) Set(val *PkiRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiRolesRequest(val *PkiRolesRequest) *NullablePkiRolesRequest {
	return &NullablePkiRolesRequest{value: val, isSet: true}
}

func (v NullablePkiRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiRootGenerateRequest struct for PkiRootGenerateRequest
type PkiRootGenerateRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName *string `json:"common_name,omitempty"`
	// If set, Country will be set to this value.
	Country []string `json:"country,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName *string `json:"issuer_name,omitempty"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits *int32 `json:"key_bits,omitempty"`
	// Provide a name to the generated or existing key, the name must be unique across all keys and not be the reserved value 'default'
	KeyName *string `json:"key_name,omitempty"`
	// Reference to a existing key; either \"default\" for the configured default key, an identifier or the name assigned to the key.
	KeyRef *string `json:"key_ref,omitempty"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType *string `json:"key_type,omitempty"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId *string `json:"managed_key_id,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName *string `json:"managed_key_name,omitempty"`
	// The maximum allowable path length
	MaxPathLength *int32 `json:"max_path_length,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration *int32 `json:"not_before_duration,omitempty"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou,omitempty"`
	// Domains for which this certificate is allowed to sign or issue child certificates. If set, all DNS names (subject and alt) on child certs must be exact matches or subsets of the given domains (see https://tools.ietf.org/html/rfc5280#section-4.2.1.10).
	PermittedDnsDomains []string `json:"permitted_dns_domains,omitempty"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// If set, Province will be set to this value.
	Province []string `json:"province,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits *int32 `json:"signature_bits,omitempty"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
}

// NewPkiRootGenerateRequest instantiates a new PkiRootGenerateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiRootGenerateRequest() *PkiRootGenerateRequest {
	this := PkiRootGenerateRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyRef string = "default"
	this.KeyRef = &keyRef
	var keyType string = "rsa"
	this.KeyType = &keyType
	var maxPathLength int32 = -1
	this.MaxPathLength = &maxPathLength
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	var signatureBits int32 = 0
	this.SignatureBits = &signatureBits
	return &this
}

// NewPkiRootGenerateRequestWithDefaults instantiates a new PkiRootGenerateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiRootGenerateRequestWithDefaults() *PkiRootGenerateRequest {
	this := PkiRootGenerateRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyRef string = "default"
	this.KeyRef = &keyRef
	var keyType string = "rsa"
	this.KeyType = &keyType
	var maxPathLength int32 = -1
	this.MaxPathLength = &maxPathLength
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	var signatureBits int32 = 0
	this.SignatureBits = &signatureBits
	return &this
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiRootGenerateRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiRootGenerateRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetCountry() []string {
	if o == nil || o.Country == nil {
		var ret []string
		return ret
	}
	return o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetCountryOk() ([]string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given []string and assigns it to the Country field.
func (o *PkiRootGenerateRequest) SetCountry(v []string) {
	o.Country = v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiRootGenerateRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiRootGenerateRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiRootGenerateRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetIssuerName returns the IssuerName field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetIssuerName() string {
	if o == nil || o.IssuerName == nil {
		var ret string
		return ret
	}
	return *o.IssuerName
}

// GetIssuerNameOk returns a tuple with the IssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetIssuerNameOk() (*string, bool) {
	if o == nil || o.IssuerName == nil {
		return nil, false
	}
	return o.IssuerName, true
}

// HasIssuerName returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasIssuerName() bool {
	if o != nil && o.IssuerName != nil {
		return true
	}

	return false
}

// SetIssuerName gets a reference to the given string and assigns it to the IssuerName field.
func (o *PkiRootGenerateRequest) SetIssuerName(v string) {
	o.IssuerName = &v
}

// GetKeyBits returns the KeyBits field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetKeyBits() int32 {
	if o == nil || o.KeyBits == nil {
		var ret int32
		return ret
	}
	return *o.KeyBits
}

// GetKeyBitsOk returns a tuple with the KeyBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetKeyBitsOk() (*int32, bool) {
	if o == nil || o.KeyBits == nil {
		return nil, false
	}
	return o.KeyBits, true
}

// HasKeyBits returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasKeyBits() bool {
	if o != nil && o.KeyBits != nil {
		return true
	}

	return false
}

// SetKeyBits gets a reference to the given int32 and assigns it to the KeyBits field.
func (o *PkiRootGenerateRequest) SetKeyBits(v int32) {
	o.KeyBits = &v
}

// GetKeyName returns the KeyName field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetKeyName() string {
	if o == nil || o.KeyName == nil {
		var ret string
		return ret
	}
	return *o.KeyName
}

// GetKeyNameOk returns a tuple with the KeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetKeyNameOk() (*string, bool) {
	if o == nil || o.KeyName == nil {
		return nil, false
	}
	return o.KeyName, true
}

// HasKeyName returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasKeyName() bool {
	if o != nil && o.KeyName != nil {
		return true
	}

	return false
}

// SetKeyName gets a reference to the given string and assigns it to the KeyName field.
func (o *PkiRootGenerateRequest) SetKeyName(v string) {
	o.KeyName = &v
}

// GetKeyRef returns the KeyRef field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetKeyRef() string {
	if o == nil || o.KeyRef == nil {
		var ret string
		return ret
	}
	return *o.KeyRef
}

// GetKeyRefOk returns a tuple with the KeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetKeyRefOk() (*string, bool) {
	if o == nil || o.KeyRef == nil {
		return nil, false
	}
	return o.KeyRef, true
}

// HasKeyRef returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasKeyRef() bool {
	if o != nil && o.KeyRef != nil {
		return true
	}

	return false
}

// SetKeyRef gets a reference to the given string and assigns it to the KeyRef field.
func (o *PkiRootGenerateRequest) SetKeyRef(v string) {
	o.KeyRef = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *PkiRootGenerateRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetLocality() []string {
	if o == nil || o.Locality == nil {
		var ret []string
		return ret
	}
	return o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetLocalityOk() ([]string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given []string and assigns it to the Locality field.
func (o *PkiRootGenerateRequest) SetLocality(v []string) {
	o.Locality = v
}

// GetManagedKeyId returns the ManagedKeyId field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetManagedKeyId() string {
	if o == nil || o.ManagedKeyId == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyId
}

// GetManagedKeyIdOk returns a tuple with the ManagedKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetManagedKeyIdOk() (*string, bool) {
	if o == nil || o.ManagedKeyId == nil {
		return nil, false
	}
	return o.ManagedKeyId, true
}

// HasManagedKeyId returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasManagedKeyId() bool {
	if o != nil && o.ManagedKeyId != nil {
		return true
	}

	return false
}

// SetManagedKeyId gets a reference to the given string and assigns it to the ManagedKeyId field.
func (o *PkiRootGenerateRequest) SetManagedKeyId(v string) {
	o.ManagedKeyId = &v
}

// GetManagedKeyName returns the ManagedKeyName field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetManagedKeyName() string {
	if o == nil || o.ManagedKeyName == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyName
}

// GetManagedKeyNameOk returns a tuple with the ManagedKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetManagedKeyNameOk() (*string, bool) {
	if o == nil || o.ManagedKeyName == nil {
		return nil, false
	}
	return o.ManagedKeyName, true
}

// HasManagedKeyName returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasManagedKeyName() bool {
	if o != nil && o.ManagedKeyName != nil {
		return true
	}

	return false
}

// SetManagedKeyName gets a reference to the given string and assigns it to the ManagedKeyName field.
func (o *PkiRootGenerateRequest) SetManagedKeyName(v string) {
	o.ManagedKeyName = &v
}

// GetMaxPathLength returns the MaxPathLength field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetMaxPathLength() int32 {
	if o == nil || o.MaxPathLength == nil {
		var ret int32
		return ret
	}
	return *o.MaxPathLength
}

// GetMaxPathLengthOk returns a tuple with the MaxPathLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetMaxPathLengthOk() (*int32, bool) {
	if o == nil || o.MaxPathLength == nil {
		return nil, false
	}
	return o.MaxPathLength, true
}

// HasMaxPathLength returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasMaxPathLength() bool {
	if o != nil && o.MaxPathLength != nil {
		return true
	}

	return false
}

// SetMaxPathLength gets a reference to the given int32 and assigns it to the MaxPathLength field.
func (o *PkiRootGenerateRequest) SetMaxPathLength(v int32) {
	o.MaxPathLength = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiRootGenerateRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetNotBeforeDuration returns the NotBeforeDuration field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetNotBeforeDuration() int32 {
	if o == nil || o.NotBeforeDuration == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeDuration
}

// GetNotBeforeDurationOk returns a tuple with the NotBeforeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetNotBeforeDurationOk() (*int32, bool) {
	if o == nil || o.NotBeforeDuration == nil {
		return nil, false
	}
	return o.NotBeforeDuration, true
}

// HasNotBeforeDuration returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasNotBeforeDuration() bool {
	if o != nil && o.NotBeforeDuration != nil {
		return true
	}

	return false
}

// SetNotBeforeDuration gets a reference to the given int32 and assigns it to the NotBeforeDuration field.
func (o *PkiRootGenerateRequest) SetNotBeforeDuration(v int32) {
	o.NotBeforeDuration = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetOrganization() []string {
	if o == nil || o.Organization == nil {
		var ret []string
		return ret
	}
	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetOrganizationOk() ([]string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given []string and assigns it to the Organization field.
func (o *PkiRootGenerateRequest) SetOrganization(v []string) {
	o.Organization = v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiRootGenerateRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetOu returns the Ou field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetOu() []string {
	if o == nil || o.Ou == nil {
		var ret []string
		return ret
	}
	return o.Ou
}

// GetOuOk returns a tuple with the Ou field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetOuOk() ([]string, bool) {
	if o == nil || o.Ou == nil {
		return nil, false
	}
	return o.Ou, true
}

// HasOu returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasOu() bool {
	if o != nil && o.Ou != nil {
		return true
	}

	return false
}

// SetOu gets a reference to the given []string and assigns it to the Ou field.
func (o *PkiRootGenerateRequest) SetOu(v []string) {
	o.Ou = v
}

// GetPermittedDnsDomains returns the PermittedDnsDomains field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetPermittedDnsDomains() []string {
	if o == nil || o.PermittedDnsDomains == nil {
		var ret []string
		return ret
	}
	return o.PermittedDnsDomains
}

// GetPermittedDnsDomainsOk returns a tuple with the PermittedDnsDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetPermittedDnsDomainsOk() ([]string, bool) {
	if o == nil || o.PermittedDnsDomains == nil {
		return nil, false
	}
	return o.PermittedDnsDomains, true
}

// HasPermittedDnsDomains returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasPermittedDnsDomains() bool {
	if o != nil && o.PermittedDnsDomains != nil {
		return true
	}

	return false
}

// SetPermittedDnsDomains gets a reference to the given []string and assigns it to the PermittedDnsDomains field.
func (o *PkiRootGenerateRequest) SetPermittedDnsDomains(v []string) {
	o.PermittedDnsDomains = v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetPostalCode() []string {
	if o == nil || o.PostalCode == nil {
		var ret []string
		return ret
	}
	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetPostalCodeOk() ([]string, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given []string and assigns it to the PostalCode field.
func (o *PkiRootGenerateRequest) SetPostalCode(v []string) {
	o.PostalCode = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiRootGenerateRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetProvince() []string {
	if o == nil || o.Province == nil {
		var ret []string
		return ret
	}
	return o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetProvinceOk() ([]string, bool) {
	if o == nil || o.Province == nil {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasProvince() bool {
	if o != nil && o.Province != nil {
		return true
	}

	return false
}

// SetProvince gets a reference to the given []string and assigns it to the Province field.
func (o *PkiRootGenerateRequest) SetProvince(v []string) {
	o.Province = v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiRootGenerateRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetSignatureBits returns the SignatureBits field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetSignatureBits() int32 {
	if o == nil || o.SignatureBits == nil {
		var ret int32
		return ret
	}
	return *o.SignatureBits
}

// GetSignatureBitsOk returns a tuple with the SignatureBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetSignatureBitsOk() (*int32, bool) {
	if o == nil || o.SignatureBits == nil {
		return nil, false
	}
	return o.SignatureBits, true
}

// HasSignatureBits returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasSignatureBits() bool {
	if o != nil && o.SignatureBits != nil {
		return true
	}

	return false
}

// SetSignatureBits gets a reference to the given int32 and assigns it to the SignatureBits field.
func (o *PkiRootGenerateRequest) SetSignatureBits(v int32) {
	o.SignatureBits = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetStreetAddress() []string {
	if o == nil || o.StreetAddress == nil {
		var ret []string
		return ret
	}
	return o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetStreetAddressOk() ([]string, bool) {
	if o == nil || o.StreetAddress == nil {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasStreetAddress() bool {
	if o != nil && o.StreetAddress != nil {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given []string and assigns it to the StreetAddress field.
func (o *PkiRootGenerateRequest) SetStreetAddress(v []string) {
	o.StreetAddress = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiRootGenerateRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiRootGenerateRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootGenerateRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiRootGenerateRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiRootGenerateRequest) SetUriSans(v []string) {
	o.UriSans = v
}

func (o PkiRootGenerateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.IssuerName != nil {
		toSerialize["issuer_name"] = o.IssuerName
	}
	if o.KeyBits != nil {
		toSerialize["key_bits"] = o.KeyBits
	}
	if o.KeyName != nil {
		toSerialize["key_name"] = o.KeyName
	}
	if o.KeyRef != nil {
		toSerialize["key_ref"] = o.KeyRef
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.ManagedKeyId != nil {
		toSerialize["managed_key_id"] = o.ManagedKeyId
	}
	if o.ManagedKeyName != nil {
		toSerialize["managed_key_name"] = o.ManagedKeyName
	}
	if o.MaxPathLength != nil {
		toSerialize["max_path_length"] = o.MaxPathLength
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.NotBeforeDuration != nil {
		toSerialize["not_before_duration"] = o.NotBeforeDuration
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.Ou != nil {
		toSerialize["ou"] = o.Ou
	}
	if o.PermittedDnsDomains != nil {
		toSerialize["permitted_dns_domains"] = o.PermittedDnsDomains
	}
	if o.PostalCode != nil {
		toSerialize["postal_code"] = o.PostalCode
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.Province != nil {
		toSerialize["province"] = o.Province
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.SignatureBits != nil {
		toSerialize["signature_bits"] = o.SignatureBits
	}
	if o.StreetAddress != nil {
		toSerialize["street_address"] = o.StreetAddress
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiRootGenerateRequest struct {
	value *PkiRootGenerateRequest
	isSet bool
}

func (v NullablePkiRootGenerateRequest) Get() *PkiRootGenerateRequest {
	return v.value
}

func (v *NullablePkiRootGenerateRequest) Set(val *PkiRootGenerateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiRootGenerateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiRootGenerateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiRootGenerateRequest(val *PkiRootGenerateRequest) *NullablePkiRootGenerateRequest {
	return &NullablePkiRootGenerateRequest{value: val, isSet: true}
}

func (v NullablePkiRootGenerateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiRootGenerateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiRootReplaceRequest struct for PkiRootReplaceRequest
type PkiRootReplaceRequest struct {
	// Reference (name or identifier) to the default issuer.
	Default *string `json:"default,omitempty"`
}

// NewPkiRootReplaceRequest instantiates a new PkiRootReplaceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiRootReplaceRequest() *PkiRootReplaceRequest {
	this := PkiRootReplaceRequest{}
	var default_ string = "next"
	this.Default = &default_
	return &this
}

// NewPkiRootReplaceRequestWithDefaults instantiates a new PkiRootReplaceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiRootReplaceRequestWithDefaults() *PkiRootReplaceRequest {
	this := PkiRootReplaceRequest{}
	var default_ string = "next"
	this.Default = &default_
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *PkiRootReplaceRequest) GetDefault() string {
	if o == nil || o.Default == nil {
		var ret string
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootReplaceRequest) GetDefaultOk() (*string, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *PkiRootReplaceRequest) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given string and assigns it to the Default field.
func (o *PkiRootReplaceRequest) SetDefault(v string) {
	o.Default = &v
}

func (o PkiRootReplaceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	return json.Marshal(toSerialize)
}

type NullablePkiRootReplaceRequest struct {
	value *PkiRootReplaceRequest
	isSet bool
}

func (v NullablePkiRootReplaceRequest) Get() *PkiRootReplaceRequest {
	return v.value
}

func (v *NullablePkiRootReplaceRequest) Set(val *PkiRootReplaceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiRootReplaceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiRootReplaceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiRootReplaceRequest(val *PkiRootReplaceRequest) *NullablePkiRootReplaceRequest {
	return &NullablePkiRootReplaceRequest{value: val, isSet: true}
}

func (v NullablePkiRootReplaceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiRootReplaceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiRootRotateRequest struct for PkiRootRotateRequest
type PkiRootRotateRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName *string `json:"common_name,omitempty"`
	// If set, Country will be set to this value.
	Country []string `json:"country,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName *string `json:"issuer_name,omitempty"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits *int32 `json:"key_bits,omitempty"`
	// Provide a name to the generated or existing key, the name must be unique across all keys and not be the reserved value 'default'
	KeyName *string `json:"key_name,omitempty"`
	// Reference to a existing key; either \"default\" for the configured default key, an identifier or the name assigned to the key.
	KeyRef *string `json:"key_ref,omitempty"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType *string `json:"key_type,omitempty"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId *string `json:"managed_key_id,omitempty"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName *string `json:"managed_key_name,omitempty"`
	// The maximum allowable path length
	MaxPathLength *int32 `json:"max_path_length,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration *int32 `json:"not_before_duration,omitempty"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou,omitempty"`
	// Domains for which this certificate is allowed to sign or issue child certificates. If set, all DNS names (subject and alt) on child certs must be exact matches or subsets of the given domains (see https://tools.ietf.org/html/rfc5280#section-4.2.1.10).
	PermittedDnsDomains []string `json:"permitted_dns_domains,omitempty"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// If set, Province will be set to this value.
	Province []string `json:"province,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits *int32 `json:"signature_bits,omitempty"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
}

// NewPkiRootRotateRequest instantiates a new PkiRootRotateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiRootRotateRequest() *PkiRootRotateRequest {
	this := PkiRootRotateRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyRef string = "default"
	this.KeyRef = &keyRef
	var keyType string = "rsa"
	this.KeyType = &keyType
	var maxPathLength int32 = -1
	this.MaxPathLength = &maxPathLength
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	var signatureBits int32 = 0
	this.SignatureBits = &signatureBits
	return &this
}

// NewPkiRootRotateRequestWithDefaults instantiates a new PkiRootRotateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiRootRotateRequestWithDefaults() *PkiRootRotateRequest {
	this := PkiRootRotateRequest{}
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyRef string = "default"
	this.KeyRef = &keyRef
	var keyType string = "rsa"
	this.KeyType = &keyType
	var maxPathLength int32 = -1
	this.MaxPathLength = &maxPathLength
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	var signatureBits int32 = 0
	this.SignatureBits = &signatureBits
	return &this
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiRootRotateRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiRootRotateRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetCountry() []string {
	if o == nil || o.Country == nil {
		var ret []string
		return ret
	}
	return o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetCountryOk() ([]string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given []string and assigns it to the Country field.
func (o *PkiRootRotateRequest) SetCountry(v []string) {
	o.Country = v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiRootRotateRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiRootRotateRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiRootRotateRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetIssuerName returns the IssuerName field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetIssuerName() string {
	if o == nil || o.IssuerName == nil {
		var ret string
		return ret
	}
	return *o.IssuerName
}

// GetIssuerNameOk returns a tuple with the IssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetIssuerNameOk() (*string, bool) {
	if o == nil || o.IssuerName == nil {
		return nil, false
	}
	return o.IssuerName, true
}

// HasIssuerName returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasIssuerName() bool {
	if o != nil && o.IssuerName != nil {
		return true
	}

	return false
}

// SetIssuerName gets a reference to the given string and assigns it to the IssuerName field.
func (o *PkiRootRotateRequest) SetIssuerName(v string) {
	o.IssuerName = &v
}

// GetKeyBits returns the KeyBits field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetKeyBits() int32 {
	if o == nil || o.KeyBits == nil {
		var ret int32
		return ret
	}
	return *o.KeyBits
}

// GetKeyBitsOk returns a tuple with the KeyBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetKeyBitsOk() (*int32, bool) {
	if o == nil || o.KeyBits == nil {
		return nil, false
	}
	return o.KeyBits, true
}

// HasKeyBits returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasKeyBits() bool {
	if o != nil && o.KeyBits != nil {
		return true
	}

	return false
}

// SetKeyBits gets a reference to the given int32 and assigns it to the KeyBits field.
func (o *PkiRootRotateRequest) SetKeyBits(v int32) {
	o.KeyBits = &v
}

// GetKeyName returns the KeyName field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetKeyName() string {
	if o == nil || o.KeyName == nil {
		var ret string
		return ret
	}
	return *o.KeyName
}

// GetKeyNameOk returns a tuple with the KeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetKeyNameOk() (*string, bool) {
	if o == nil || o.KeyName == nil {
		return nil, false
	}
	return o.KeyName, true
}

// HasKeyName returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasKeyName() bool {
	if o != nil && o.KeyName != nil {
		return true
	}

	return false
}

// SetKeyName gets a reference to the given string and assigns it to the KeyName field.
func (o *PkiRootRotateRequest) SetKeyName(v string) {
	o.KeyName = &v
}

// GetKeyRef returns the KeyRef field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetKeyRef() string {
	if o == nil || o.KeyRef == nil {
		var ret string
		return ret
	}
	return *o.KeyRef
}

// GetKeyRefOk returns a tuple with the KeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetKeyRefOk() (*string, bool) {
	if o == nil || o.KeyRef == nil {
		return nil, false
	}
	return o.KeyRef, true
}

// HasKeyRef returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasKeyRef() bool {
	if o != nil && o.KeyRef != nil {
		return true
	}

	return false
}

// SetKeyRef gets a reference to the given string and assigns it to the KeyRef field.
func (o *PkiRootRotateRequest) SetKeyRef(v string) {
	o.KeyRef = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *PkiRootRotateRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetLocality() []string {
	if o == nil || o.Locality == nil {
		var ret []string
		return ret
	}
	return o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetLocalityOk() ([]string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given []string and assigns it to the Locality field.
func (o *PkiRootRotateRequest) SetLocality(v []string) {
	o.Locality = v
}

// GetManagedKeyId returns the ManagedKeyId field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetManagedKeyId() string {
	if o == nil || o.ManagedKeyId == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyId
}

// GetManagedKeyIdOk returns a tuple with the ManagedKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetManagedKeyIdOk() (*string, bool) {
	if o == nil || o.ManagedKeyId == nil {
		return nil, false
	}
	return o.ManagedKeyId, true
}

// HasManagedKeyId returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasManagedKeyId() bool {
	if o != nil && o.ManagedKeyId != nil {
		return true
	}

	return false
}

// SetManagedKeyId gets a reference to the given string and assigns it to the ManagedKeyId field.
func (o *PkiRootRotateRequest) SetManagedKeyId(v string) {
	o.ManagedKeyId = &v
}

// GetManagedKeyName returns the ManagedKeyName field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetManagedKeyName() string {
	if o == nil || o.ManagedKeyName == nil {
		var ret string
		return ret
	}
	return *o.ManagedKeyName
}

// GetManagedKeyNameOk returns a tuple with the ManagedKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetManagedKeyNameOk() (*string, bool) {
	if o == nil || o.ManagedKeyName == nil {
		return nil, false
	}
	return o.ManagedKeyName, true
}

// HasManagedKeyName returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasManagedKeyName() bool {
	if o != nil && o.ManagedKeyName != nil {
		return true
	}

	return false
}

// SetManagedKeyName gets a reference to the given string and assigns it to the ManagedKeyName field.
func (o *PkiRootRotateRequest) SetManagedKeyName(v string) {
	o.ManagedKeyName = &v
}

// GetMaxPathLength returns the MaxPathLength field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetMaxPathLength() int32 {
	if o == nil || o.MaxPathLength == nil {
		var ret int32
		return ret
	}
	return *o.MaxPathLength
}

// GetMaxPathLengthOk returns a tuple with the MaxPathLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetMaxPathLengthOk() (*int32, bool) {
	if o == nil || o.MaxPathLength == nil {
		return nil, false
	}
	return o.MaxPathLength, true
}

// HasMaxPathLength returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasMaxPathLength() bool {
	if o != nil && o.MaxPathLength != nil {
		return true
	}

	return false
}

// SetMaxPathLength gets a reference to the given int32 and assigns it to the MaxPathLength field.
func (o *PkiRootRotateRequest) SetMaxPathLength(v int32) {
	o.MaxPathLength = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiRootRotateRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetNotBeforeDuration returns the NotBeforeDuration field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetNotBeforeDuration() int32 {
	if o == nil || o.NotBeforeDuration == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeDuration
}

// GetNotBeforeDurationOk returns a tuple with the NotBeforeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetNotBeforeDurationOk() (*int32, bool) {
	if o == nil || o.NotBeforeDuration == nil {
		return nil, false
	}
	return o.NotBeforeDuration, true
}

// HasNotBeforeDuration returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasNotBeforeDuration() bool {
	if o != nil && o.NotBeforeDuration != nil {
		return true
	}

	return false
}

// SetNotBeforeDuration gets a reference to the given int32 and assigns it to the NotBeforeDuration field.
func (o *PkiRootRotateRequest) SetNotBeforeDuration(v int32) {
	o.NotBeforeDuration = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetOrganization() []string {
	if o == nil || o.Organization == nil {
		var ret []string
		return ret
	}
	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetOrganizationOk() ([]string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given []string and assigns it to the Organization field.
func (o *PkiRootRotateRequest) SetOrganization(v []string) {
	o.Organization = v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiRootRotateRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetOu returns the Ou field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetOu() []string {
	if o == nil || o.Ou == nil {
		var ret []string
		return ret
	}
	return o.Ou
}

// GetOuOk returns a tuple with the Ou field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetOuOk() ([]string, bool) {
	if o == nil || o.Ou == nil {
		return nil, false
	}
	return o.Ou, true
}

// HasOu returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasOu() bool {
	if o != nil && o.Ou != nil {
		return true
	}

	return false
}

// SetOu gets a reference to the given []string and assigns it to the Ou field.
func (o *PkiRootRotateRequest) SetOu(v []string) {
	o.Ou = v
}

// GetPermittedDnsDomains returns the PermittedDnsDomains field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetPermittedDnsDomains() []string {
	if o == nil || o.PermittedDnsDomains == nil {
		var ret []string
		return ret
	}
	return o.PermittedDnsDomains
}

// GetPermittedDnsDomainsOk returns a tuple with the PermittedDnsDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetPermittedDnsDomainsOk() ([]string, bool) {
	if o == nil || o.PermittedDnsDomains == nil {
		return nil, false
	}
	return o.PermittedDnsDomains, true
}

// HasPermittedDnsDomains returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasPermittedDnsDomains() bool {
	if o != nil && o.PermittedDnsDomains != nil {
		return true
	}

	return false
}

// SetPermittedDnsDomains gets a reference to the given []string and assigns it to the PermittedDnsDomains field.
func (o *PkiRootRotateRequest) SetPermittedDnsDomains(v []string) {
	o.PermittedDnsDomains = v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetPostalCode() []string {
	if o == nil || o.PostalCode == nil {
		var ret []string
		return ret
	}
	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetPostalCodeOk() ([]string, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given []string and assigns it to the PostalCode field.
func (o *PkiRootRotateRequest) SetPostalCode(v []string) {
	o.PostalCode = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiRootRotateRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetProvince() []string {
	if o == nil || o.Province == nil {
		var ret []string
		return ret
	}
	return o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetProvinceOk() ([]string, bool) {
	if o == nil || o.Province == nil {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasProvince() bool {
	if o != nil && o.Province != nil {
		return true
	}

	return false
}

// SetProvince gets a reference to the given []string and assigns it to the Province field.
func (o *PkiRootRotateRequest) SetProvince(v []string) {
	o.Province = v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiRootRotateRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetSignatureBits returns the SignatureBits field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetSignatureBits() int32 {
	if o == nil || o.SignatureBits == nil {
		var ret int32
		return ret
	}
	return *o.SignatureBits
}

// GetSignatureBitsOk returns a tuple with the SignatureBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetSignatureBitsOk() (*int32, bool) {
	if o == nil || o.SignatureBits == nil {
		return nil, false
	}
	return o.SignatureBits, true
}

// HasSignatureBits returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasSignatureBits() bool {
	if o != nil && o.SignatureBits != nil {
		return true
	}

	return false
}

// SetSignatureBits gets a reference to the given int32 and assigns it to the SignatureBits field.
func (o *PkiRootRotateRequest) SetSignatureBits(v int32) {
	o.SignatureBits = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetStreetAddress() []string {
	if o == nil || o.StreetAddress == nil {
		var ret []string
		return ret
	}
	return o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetStreetAddressOk() ([]string, bool) {
	if o == nil || o.StreetAddress == nil {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasStreetAddress() bool {
	if o != nil && o.StreetAddress != nil {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given []string and assigns it to the StreetAddress field.
func (o *PkiRootRotateRequest) SetStreetAddress(v []string) {
	o.StreetAddress = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiRootRotateRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiRootRotateRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootRotateRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiRootRotateRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiRootRotateRequest) SetUriSans(v []string) {
	o.UriSans = v
}

func (o PkiRootRotateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.IssuerName != nil {
		toSerialize["issuer_name"] = o.IssuerName
	}
	if o.KeyBits != nil {
		toSerialize["key_bits"] = o.KeyBits
	}
	if o.KeyName != nil {
		toSerialize["key_name"] = o.KeyName
	}
	if o.KeyRef != nil {
		toSerialize["key_ref"] = o.KeyRef
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.ManagedKeyId != nil {
		toSerialize["managed_key_id"] = o.ManagedKeyId
	}
	if o.ManagedKeyName != nil {
		toSerialize["managed_key_name"] = o.ManagedKeyName
	}
	if o.MaxPathLength != nil {
		toSerialize["max_path_length"] = o.MaxPathLength
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.NotBeforeDuration != nil {
		toSerialize["not_before_duration"] = o.NotBeforeDuration
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.Ou != nil {
		toSerialize["ou"] = o.Ou
	}
	if o.PermittedDnsDomains != nil {
		toSerialize["permitted_dns_domains"] = o.PermittedDnsDomains
	}
	if o.PostalCode != nil {
		toSerialize["postal_code"] = o.PostalCode
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.Province != nil {
		toSerialize["province"] = o.Province
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.SignatureBits != nil {
		toSerialize["signature_bits"] = o.SignatureBits
	}
	if o.StreetAddress != nil {
		toSerialize["street_address"] = o.StreetAddress
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiRootRotateRequest struct {
	value *PkiRootRotateRequest
	isSet bool
}

func (v NullablePkiRootRotateRequest) Get() *PkiRootRotateRequest {
	return v.value
}

func (v *NullablePkiRootRotateRequest) Set(val *PkiRootRotateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiRootRotateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiRootRotateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiRootRotateRequest(val *PkiRootRotateRequest) *NullablePkiRootRotateRequest {
	return &NullablePkiRootRotateRequest{value: val, isSet: true}
}

func (v NullablePkiRootRotateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiRootRotateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiRootSignIntermediateRequest struct for PkiRootSignIntermediateRequest
type PkiRootSignIntermediateRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName *string `json:"common_name,omitempty"`
	// If set, Country will be set to this value.
	Country []string `json:"country,omitempty"`
	// PEM-format CSR to be signed.
	Csr *string `json:"csr,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName *string `json:"issuer_name,omitempty"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef *string `json:"issuer_ref,omitempty"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality,omitempty"`
	// The maximum allowable path length
	MaxPathLength *int32 `json:"max_path_length,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration *int32 `json:"not_before_duration,omitempty"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou,omitempty"`
	// Domains for which this certificate is allowed to sign or issue child certificates. If set, all DNS names (subject and alt) on child certs must be exact matches or subsets of the given domains (see https://tools.ietf.org/html/rfc5280#section-4.2.1.10).
	PermittedDnsDomains []string `json:"permitted_dns_domains,omitempty"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// If set, Province will be set to this value.
	Province []string `json:"province,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
	// If true, then: 1) Subject information, including names and alternate names, will be preserved from the CSR rather than using values provided in the other parameters to this path; 2) Any key usages requested in the CSR will be added to the basic set of key usages used for CA certs signed by this path; for instance, the non-repudiation flag; 3) Extensions requested in the CSR will be copied into the issued certificate.
	UseCsrValues *bool `json:"use_csr_values,omitempty"`
}

// NewPkiRootSignIntermediateRequest instantiates a new PkiRootSignIntermediateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiRootSignIntermediateRequest() *PkiRootSignIntermediateRequest {
	this := PkiRootSignIntermediateRequest{}
	var csr string = ""
	this.Csr = &csr
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var maxPathLength int32 = -1
	this.MaxPathLength = &maxPathLength
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	var useCsrValues bool = false
	this.UseCsrValues = &useCsrValues
	return &this
}

// NewPkiRootSignIntermediateRequestWithDefaults instantiates a new PkiRootSignIntermediateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiRootSignIntermediateRequestWithDefaults() *PkiRootSignIntermediateRequest {
	this := PkiRootSignIntermediateRequest{}
	var csr string = ""
	this.Csr = &csr
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var maxPathLength int32 = -1
	this.MaxPathLength = &maxPathLength
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	var useCsrValues bool = false
	this.UseCsrValues = &useCsrValues
	return &this
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiRootSignIntermediateRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiRootSignIntermediateRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetCountry() []string {
	if o == nil || o.Country == nil {
		var ret []string
		return ret
	}
	return o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetCountryOk() ([]string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given []string and assigns it to the Country field.
func (o *PkiRootSignIntermediateRequest) SetCountry(v []string) {
	o.Country = v
}

// GetCsr returns the Csr field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetCsr() string {
	if o == nil || o.Csr == nil {
		var ret string
		return ret
	}
	return *o.Csr
}

// GetCsrOk returns a tuple with the Csr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetCsrOk() (*string, bool) {
	if o == nil || o.Csr == nil {
		return nil, false
	}
	return o.Csr, true
}

// HasCsr returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasCsr() bool {
	if o != nil && o.Csr != nil {
		return true
	}

	return false
}

// SetCsr gets a reference to the given string and assigns it to the Csr field.
func (o *PkiRootSignIntermediateRequest) SetCsr(v string) {
	o.Csr = &v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiRootSignIntermediateRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiRootSignIntermediateRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiRootSignIntermediateRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetIssuerName returns the IssuerName field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetIssuerName() string {
	if o == nil || o.IssuerName == nil {
		var ret string
		return ret
	}
	return *o.IssuerName
}

// GetIssuerNameOk returns a tuple with the IssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetIssuerNameOk() (*string, bool) {
	if o == nil || o.IssuerName == nil {
		return nil, false
	}
	return o.IssuerName, true
}

// HasIssuerName returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasIssuerName() bool {
	if o != nil && o.IssuerName != nil {
		return true
	}

	return false
}

// SetIssuerName gets a reference to the given string and assigns it to the IssuerName field.
func (o *PkiRootSignIntermediateRequest) SetIssuerName(v string) {
	o.IssuerName = &v
}

// GetIssuerRef returns the IssuerRef field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetIssuerRef() string {
	if o == nil || o.IssuerRef == nil {
		var ret string
		return ret
	}
	return *o.IssuerRef
}

// GetIssuerRefOk returns a tuple with the IssuerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetIssuerRefOk() (*string, bool) {
	if o == nil || o.IssuerRef == nil {
		return nil, false
	}
	return o.IssuerRef, true
}

// HasIssuerRef returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasIssuerRef() bool {
	if o != nil && o.IssuerRef != nil {
		return true
	}

	return false
}

// SetIssuerRef gets a reference to the given string and assigns it to the IssuerRef field.
func (o *PkiRootSignIntermediateRequest) SetIssuerRef(v string) {
	o.IssuerRef = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetLocality() []string {
	if o == nil || o.Locality == nil {
		var ret []string
		return ret
	}
	return o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetLocalityOk() ([]string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given []string and assigns it to the Locality field.
func (o *PkiRootSignIntermediateRequest) SetLocality(v []string) {
	o.Locality = v
}

// GetMaxPathLength returns the MaxPathLength field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetMaxPathLength() int32 {
	if o == nil || o.MaxPathLength == nil {
		var ret int32
		return ret
	}
	return *o.MaxPathLength
}

// GetMaxPathLengthOk returns a tuple with the MaxPathLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetMaxPathLengthOk() (*int32, bool) {
	if o == nil || o.MaxPathLength == nil {
		return nil, false
	}
	return o.MaxPathLength, true
}

// HasMaxPathLength returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasMaxPathLength() bool {
	if o != nil && o.MaxPathLength != nil {
		return true
	}

	return false
}

// SetMaxPathLength gets a reference to the given int32 and assigns it to the MaxPathLength field.
func (o *PkiRootSignIntermediateRequest) SetMaxPathLength(v int32) {
	o.MaxPathLength = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiRootSignIntermediateRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetNotBeforeDuration returns the NotBeforeDuration field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetNotBeforeDuration() int32 {
	if o == nil || o.NotBeforeDuration == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeDuration
}

// GetNotBeforeDurationOk returns a tuple with the NotBeforeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetNotBeforeDurationOk() (*int32, bool) {
	if o == nil || o.NotBeforeDuration == nil {
		return nil, false
	}
	return o.NotBeforeDuration, true
}

// HasNotBeforeDuration returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasNotBeforeDuration() bool {
	if o != nil && o.NotBeforeDuration != nil {
		return true
	}

	return false
}

// SetNotBeforeDuration gets a reference to the given int32 and assigns it to the NotBeforeDuration field.
func (o *PkiRootSignIntermediateRequest) SetNotBeforeDuration(v int32) {
	o.NotBeforeDuration = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetOrganization() []string {
	if o == nil || o.Organization == nil {
		var ret []string
		return ret
	}
	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetOrganizationOk() ([]string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given []string and assigns it to the Organization field.
func (o *PkiRootSignIntermediateRequest) SetOrganization(v []string) {
	o.Organization = v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiRootSignIntermediateRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetOu returns the Ou field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetOu() []string {
	if o == nil || o.Ou == nil {
		var ret []string
		return ret
	}
	return o.Ou
}

// GetOuOk returns a tuple with the Ou field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetOuOk() ([]string, bool) {
	if o == nil || o.Ou == nil {
		return nil, false
	}
	return o.Ou, true
}

// HasOu returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasOu() bool {
	if o != nil && o.Ou != nil {
		return true
	}

	return false
}

// SetOu gets a reference to the given []string and assigns it to the Ou field.
func (o *PkiRootSignIntermediateRequest) SetOu(v []string) {
	o.Ou = v
}

// GetPermittedDnsDomains returns the PermittedDnsDomains field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetPermittedDnsDomains() []string {
	if o == nil || o.PermittedDnsDomains == nil {
		var ret []string
		return ret
	}
	return o.PermittedDnsDomains
}

// GetPermittedDnsDomainsOk returns a tuple with the PermittedDnsDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetPermittedDnsDomainsOk() ([]string, bool) {
	if o == nil || o.PermittedDnsDomains == nil {
		return nil, false
	}
	return o.PermittedDnsDomains, true
}

// HasPermittedDnsDomains returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasPermittedDnsDomains() bool {
	if o != nil && o.PermittedDnsDomains != nil {
		return true
	}

	return false
}

// SetPermittedDnsDomains gets a reference to the given []string and assigns it to the PermittedDnsDomains field.
func (o *PkiRootSignIntermediateRequest) SetPermittedDnsDomains(v []string) {
	o.PermittedDnsDomains = v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetPostalCode() []string {
	if o == nil || o.PostalCode == nil {
		var ret []string
		return ret
	}
	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetPostalCodeOk() ([]string, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given []string and assigns it to the PostalCode field.
func (o *PkiRootSignIntermediateRequest) SetPostalCode(v []string) {
	o.PostalCode = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiRootSignIntermediateRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetProvince() []string {
	if o == nil || o.Province == nil {
		var ret []string
		return ret
	}
	return o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetProvinceOk() ([]string, bool) {
	if o == nil || o.Province == nil {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasProvince() bool {
	if o != nil && o.Province != nil {
		return true
	}

	return false
}

// SetProvince gets a reference to the given []string and assigns it to the Province field.
func (o *PkiRootSignIntermediateRequest) SetProvince(v []string) {
	o.Province = v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiRootSignIntermediateRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetStreetAddress() []string {
	if o == nil || o.StreetAddress == nil {
		var ret []string
		return ret
	}
	return o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetStreetAddressOk() ([]string, bool) {
	if o == nil || o.StreetAddress == nil {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasStreetAddress() bool {
	if o != nil && o.StreetAddress != nil {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given []string and assigns it to the StreetAddress field.
func (o *PkiRootSignIntermediateRequest) SetStreetAddress(v []string) {
	o.StreetAddress = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiRootSignIntermediateRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiRootSignIntermediateRequest) SetUriSans(v []string) {
	o.UriSans = v
}

// GetUseCsrValues returns the UseCsrValues field value if set, zero value otherwise.
func (o *PkiRootSignIntermediateRequest) GetUseCsrValues() bool {
	if o == nil || o.UseCsrValues == nil {
		var ret bool
		return ret
	}
	return *o.UseCsrValues
}

// GetUseCsrValuesOk returns a tuple with the UseCsrValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignIntermediateRequest) GetUseCsrValuesOk() (*bool, bool) {
	if o == nil || o.UseCsrValues == nil {
		return nil, false
	}
	return o.UseCsrValues, true
}

// HasUseCsrValues returns a boolean if a field has been set.
func (o *PkiRootSignIntermediateRequest) HasUseCsrValues() bool {
	if o != nil && o.UseCsrValues != nil {
		return true
	}

	return false
}

// SetUseCsrValues gets a reference to the given bool and assigns it to the UseCsrValues field.
func (o *PkiRootSignIntermediateRequest) SetUseCsrValues(v bool) {
	o.UseCsrValues = &v
}

func (o PkiRootSignIntermediateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Csr != nil {
		toSerialize["csr"] = o.Csr
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.IssuerName != nil {
		toSerialize["issuer_name"] = o.IssuerName
	}
	if o.IssuerRef != nil {
		toSerialize["issuer_ref"] = o.IssuerRef
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.MaxPathLength != nil {
		toSerialize["max_path_length"] = o.MaxPathLength
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.NotBeforeDuration != nil {
		toSerialize["not_before_duration"] = o.NotBeforeDuration
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.Ou != nil {
		toSerialize["ou"] = o.Ou
	}
	if o.PermittedDnsDomains != nil {
		toSerialize["permitted_dns_domains"] = o.PermittedDnsDomains
	}
	if o.PostalCode != nil {
		toSerialize["postal_code"] = o.PostalCode
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.Province != nil {
		toSerialize["province"] = o.Province
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.StreetAddress != nil {
		toSerialize["street_address"] = o.StreetAddress
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	if o.UseCsrValues != nil {
		toSerialize["use_csr_values"] = o.UseCsrValues
	}
	return json.Marshal(toSerialize)
}

type NullablePkiRootSignIntermediateRequest struct {
	value *PkiRootSignIntermediateRequest
	isSet bool
}

func (v NullablePkiRootSignIntermediateRequest) Get() *PkiRootSignIntermediateRequest {
	return v.value
}

func (v *NullablePkiRootSignIntermediateRequest) Set(val *PkiRootSignIntermediateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiRootSignIntermediateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiRootSignIntermediateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiRootSignIntermediateRequest(val *PkiRootSignIntermediateRequest) *NullablePkiRootSignIntermediateRequest {
	return &NullablePkiRootSignIntermediateRequest{value: val, isSet: true}
}

func (v NullablePkiRootSignIntermediateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiRootSignIntermediateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiRootSignSelfIssuedRequest struct for PkiRootSignSelfIssuedRequest
type PkiRootSignSelfIssuedRequest struct {
	// PEM-format self-issued certificate to be signed.
	Certificate *string `json:"certificate,omitempty"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef *string `json:"issuer_ref,omitempty"`
	// If true, require the public key algorithm of the signer to match that of the self issued certificate.
	RequireMatchingCertificateAlgorithms *bool `json:"require_matching_certificate_algorithms,omitempty"`
}

// NewPkiRootSignSelfIssuedRequest instantiates a new PkiRootSignSelfIssuedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiRootSignSelfIssuedRequest() *PkiRootSignSelfIssuedRequest {
	this := PkiRootSignSelfIssuedRequest{}
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var requireMatchingCertificateAlgorithms bool = false
	this.RequireMatchingCertificateAlgorithms = &requireMatchingCertificateAlgorithms
	return &this
}

// NewPkiRootSignSelfIssuedRequestWithDefaults instantiates a new PkiRootSignSelfIssuedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiRootSignSelfIssuedRequestWithDefaults() *PkiRootSignSelfIssuedRequest {
	this := PkiRootSignSelfIssuedRequest{}
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var requireMatchingCertificateAlgorithms bool = false
	this.RequireMatchingCertificateAlgorithms = &requireMatchingCertificateAlgorithms
	return &this
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *PkiRootSignSelfIssuedRequest) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignSelfIssuedRequest) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *PkiRootSignSelfIssuedRequest) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *PkiRootSignSelfIssuedRequest) SetCertificate(v string) {
	o.Certificate = &v
}

// GetIssuerRef returns the IssuerRef field value if set, zero value otherwise.
func (o *PkiRootSignSelfIssuedRequest) GetIssuerRef() string {
	if o == nil || o.IssuerRef == nil {
		var ret string
		return ret
	}
	return *o.IssuerRef
}

// GetIssuerRefOk returns a tuple with the IssuerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignSelfIssuedRequest) GetIssuerRefOk() (*string, bool) {
	if o == nil || o.IssuerRef == nil {
		return nil, false
	}
	return o.IssuerRef, true
}

// HasIssuerRef returns a boolean if a field has been set.
func (o *PkiRootSignSelfIssuedRequest) HasIssuerRef() bool {
	if o != nil && o.IssuerRef != nil {
		return true
	}

	return false
}

// SetIssuerRef gets a reference to the given string and assigns it to the IssuerRef field.
func (o *PkiRootSignSelfIssuedRequest) SetIssuerRef(v string) {
	o.IssuerRef = &v
}

// GetRequireMatchingCertificateAlgorithms returns the RequireMatchingCertificateAlgorithms field value if set, zero value otherwise.
func (o *PkiRootSignSelfIssuedRequest) GetRequireMatchingCertificateAlgorithms() bool {
	if o == nil || o.RequireMatchingCertificateAlgorithms == nil {
		var ret bool
		return ret
	}
	return *o.RequireMatchingCertificateAlgorithms
}

// GetRequireMatchingCertificateAlgorithmsOk returns a tuple with the RequireMatchingCertificateAlgorithms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootSignSelfIssuedRequest) GetRequireMatchingCertificateAlgorithmsOk() (*bool, bool) {
	if o == nil || o.RequireMatchingCertificateAlgorithms == nil {
		return nil, false
	}
	return o.RequireMatchingCertificateAlgorithms, true
}

// HasRequireMatchingCertificateAlgorithms returns a boolean if a field has been set.
func (o *PkiRootSignSelfIssuedRequest) HasRequireMatchingCertificateAlgorithms() bool {
	if o != nil && o.RequireMatchingCertificateAlgorithms != nil {
		return true
	}

	return false
}

// SetRequireMatchingCertificateAlgorithms gets a reference to the given bool and assigns it to the RequireMatchingCertificateAlgorithms field.
func (o *PkiRootSignSelfIssuedRequest) SetRequireMatchingCertificateAlgorithms(v bool) {
	o.RequireMatchingCertificateAlgorithms = &v
}

func (o PkiRootSignSelfIssuedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.IssuerRef != nil {
		toSerialize["issuer_ref"] = o.IssuerRef
	}
	if o.RequireMatchingCertificateAlgorithms != nil {
		toSerialize["require_matching_certificate_algorithms"] = o.RequireMatchingCertificateAlgorithms
	}
	return json.Marshal(toSerialize)
}

type NullablePkiRootSignSelfIssuedRequest struct {
	value *PkiRootSignSelfIssuedRequest
	isSet bool
}

func (v NullablePkiRootSignSelfIssuedRequest) Get() *PkiRootSignSelfIssuedRequest {
	return v.value
}

func (v *NullablePkiRootSignSelfIssuedRequest) Set(val *PkiRootSignSelfIssuedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiRootSignSelfIssuedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiRootSignSelfIssuedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiRootSignSelfIssuedRequest(val *PkiRootSignSelfIssuedRequest) *NullablePkiRootSignSelfIssuedRequest {
	return &NullablePkiRootSignSelfIssuedRequest{value: val, isSet: true}
}

func (v NullablePkiRootSignSelfIssuedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiRootSignSelfIssuedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiSignRequest struct for PkiSignRequest
type PkiSignRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName *string `json:"common_name,omitempty"`
	// PEM-format CSR to be signed.
	Csr *string `json:"csr,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef *string `json:"issuer_ref,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
}

// NewPkiSignRequest instantiates a new PkiSignRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiSignRequest() *PkiSignRequest {
	this := PkiSignRequest{}
	var csr string = ""
	this.Csr = &csr
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// NewPkiSignRequestWithDefaults instantiates a new PkiSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiSignRequestWithDefaults() *PkiSignRequest {
	this := PkiSignRequest{}
	var csr string = ""
	this.Csr = &csr
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiSignRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiSignRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiSignRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiSignRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiSignRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiSignRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCsr returns the Csr field value if set, zero value otherwise.
func (o *PkiSignRequest) GetCsr() string {
	if o == nil || o.Csr == nil {
		var ret string
		return ret
	}
	return *o.Csr
}

// GetCsrOk returns a tuple with the Csr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetCsrOk() (*string, bool) {
	if o == nil || o.Csr == nil {
		return nil, false
	}
	return o.Csr, true
}

// HasCsr returns a boolean if a field has been set.
func (o *PkiSignRequest) HasCsr() bool {
	if o != nil && o.Csr != nil {
		return true
	}

	return false
}

// SetCsr gets a reference to the given string and assigns it to the Csr field.
func (o *PkiSignRequest) SetCsr(v string) {
	o.Csr = &v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiSignRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiSignRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiSignRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiSignRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiSignRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiSignRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiSignRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiSignRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiSignRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetIssuerRef returns the IssuerRef field value if set, zero value otherwise.
func (o *PkiSignRequest) GetIssuerRef() string {
	if o == nil || o.IssuerRef == nil {
		var ret string
		return ret
	}
	return *o.IssuerRef
}

// GetIssuerRefOk returns a tuple with the IssuerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetIssuerRefOk() (*string, bool) {
	if o == nil || o.IssuerRef == nil {
		return nil, false
	}
	return o.IssuerRef, true
}

// HasIssuerRef returns a boolean if a field has been set.
func (o *PkiSignRequest) HasIssuerRef() bool {
	if o != nil && o.IssuerRef != nil {
		return true
	}

	return false
}

// SetIssuerRef gets a reference to the given string and assigns it to the IssuerRef field.
func (o *PkiSignRequest) SetIssuerRef(v string) {
	o.IssuerRef = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiSignRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiSignRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiSignRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiSignRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiSignRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiSignRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiSignRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiSignRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiSignRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiSignRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiSignRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiSignRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiSignRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiSignRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiSignRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiSignRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiSignRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiSignRequest) SetUriSans(v []string) {
	o.UriSans = v
}

func (o PkiSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Csr != nil {
		toSerialize["csr"] = o.Csr
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.IssuerRef != nil {
		toSerialize["issuer_ref"] = o.IssuerRef
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiSignRequest struct {
	value *PkiSignRequest
	isSet bool
}

func (v NullablePkiSignRequest) Get() *PkiSignRequest {
	return v.value
}

func (v *NullablePkiSignRequest) Set(val *PkiSignRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiSignRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiSignRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiSignRequest(val *PkiSignRequest) *NullablePkiSignRequest {
	return &NullablePkiSignRequest{value: val, isSet: true}
}

func (v NullablePkiSignRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiSignRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiSignVerbatimRequest struct for PkiSignVerbatimRequest
type PkiSignVerbatimRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames *string `json:"alt_names,omitempty"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName *string `json:"common_name,omitempty"`
	// PEM-format CSR to be signed. Values will be taken verbatim from the CSR, except for basic constraints.
	Csr *string `json:"csr,omitempty"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans *bool `json:"exclude_cn_from_sans,omitempty"`
	// A comma-separated string or list of extended key usages. Valid values can be found at https://golang.org/pkg/crypto/x509/#ExtKeyUsage -- simply drop the \"ExtKeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.
	ExtKeyUsage []string `json:"ext_key_usage,omitempty"`
	// A comma-separated string or list of extended key usage oids.
	ExtKeyUsageOids []string `json:"ext_key_usage_oids,omitempty"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format *string `json:"format,omitempty"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans,omitempty"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef *string `json:"issuer_ref,omitempty"`
	// A comma-separated string or list of key usages (not extended key usages). Valid values can be found at https://golang.org/pkg/crypto/x509/#KeyUsage -- simply drop the \"KeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.
	KeyUsage []string `json:"key_usage,omitempty"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter *string `json:"not_after,omitempty"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans,omitempty"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat *string `json:"private_key_format,omitempty"`
	// The desired role with configuration for this request
	Role *string `json:"role,omitempty"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber *string `json:"serial_number,omitempty"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl *int32 `json:"ttl,omitempty"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans,omitempty"`
}

// NewPkiSignVerbatimRequest instantiates a new PkiSignVerbatimRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiSignVerbatimRequest() *PkiSignVerbatimRequest {
	this := PkiSignVerbatimRequest{}
	var csr string = ""
	this.Csr = &csr
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// NewPkiSignVerbatimRequestWithDefaults instantiates a new PkiSignVerbatimRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiSignVerbatimRequestWithDefaults() *PkiSignVerbatimRequest {
	this := PkiSignVerbatimRequest{}
	var csr string = ""
	this.Csr = &csr
	var excludeCnFromSans bool = false
	this.ExcludeCnFromSans = &excludeCnFromSans
	var format string = "pem"
	this.Format = &format
	var issuerRef string = "default"
	this.IssuerRef = &issuerRef
	var privateKeyFormat string = "der"
	this.PrivateKeyFormat = &privateKeyFormat
	return &this
}

// GetAltNames returns the AltNames field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetAltNames() string {
	if o == nil || o.AltNames == nil {
		var ret string
		return ret
	}
	return *o.AltNames
}

// GetAltNamesOk returns a tuple with the AltNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetAltNamesOk() (*string, bool) {
	if o == nil || o.AltNames == nil {
		return nil, false
	}
	return o.AltNames, true
}

// HasAltNames returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasAltNames() bool {
	if o != nil && o.AltNames != nil {
		return true
	}

	return false
}

// SetAltNames gets a reference to the given string and assigns it to the AltNames field.
func (o *PkiSignVerbatimRequest) SetAltNames(v string) {
	o.AltNames = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *PkiSignVerbatimRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCsr returns the Csr field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetCsr() string {
	if o == nil || o.Csr == nil {
		var ret string
		return ret
	}
	return *o.Csr
}

// GetCsrOk returns a tuple with the Csr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetCsrOk() (*string, bool) {
	if o == nil || o.Csr == nil {
		return nil, false
	}
	return o.Csr, true
}

// HasCsr returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasCsr() bool {
	if o != nil && o.Csr != nil {
		return true
	}

	return false
}

// SetCsr gets a reference to the given string and assigns it to the Csr field.
func (o *PkiSignVerbatimRequest) SetCsr(v string) {
	o.Csr = &v
}

// GetExcludeCnFromSans returns the ExcludeCnFromSans field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetExcludeCnFromSans() bool {
	if o == nil || o.ExcludeCnFromSans == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeCnFromSans
}

// GetExcludeCnFromSansOk returns a tuple with the ExcludeCnFromSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetExcludeCnFromSansOk() (*bool, bool) {
	if o == nil || o.ExcludeCnFromSans == nil {
		return nil, false
	}
	return o.ExcludeCnFromSans, true
}

// HasExcludeCnFromSans returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasExcludeCnFromSans() bool {
	if o != nil && o.ExcludeCnFromSans != nil {
		return true
	}

	return false
}

// SetExcludeCnFromSans gets a reference to the given bool and assigns it to the ExcludeCnFromSans field.
func (o *PkiSignVerbatimRequest) SetExcludeCnFromSans(v bool) {
	o.ExcludeCnFromSans = &v
}

// GetExtKeyUsage returns the ExtKeyUsage field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetExtKeyUsage() []string {
	if o == nil || o.ExtKeyUsage == nil {
		var ret []string
		return ret
	}
	return o.ExtKeyUsage
}

// GetExtKeyUsageOk returns a tuple with the ExtKeyUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetExtKeyUsageOk() ([]string, bool) {
	if o == nil || o.ExtKeyUsage == nil {
		return nil, false
	}
	return o.ExtKeyUsage, true
}

// HasExtKeyUsage returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasExtKeyUsage() bool {
	if o != nil && o.ExtKeyUsage != nil {
		return true
	}

	return false
}

// SetExtKeyUsage gets a reference to the given []string and assigns it to the ExtKeyUsage field.
func (o *PkiSignVerbatimRequest) SetExtKeyUsage(v []string) {
	o.ExtKeyUsage = v
}

// GetExtKeyUsageOids returns the ExtKeyUsageOids field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetExtKeyUsageOids() []string {
	if o == nil || o.ExtKeyUsageOids == nil {
		var ret []string
		return ret
	}
	return o.ExtKeyUsageOids
}

// GetExtKeyUsageOidsOk returns a tuple with the ExtKeyUsageOids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetExtKeyUsageOidsOk() ([]string, bool) {
	if o == nil || o.ExtKeyUsageOids == nil {
		return nil, false
	}
	return o.ExtKeyUsageOids, true
}

// HasExtKeyUsageOids returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasExtKeyUsageOids() bool {
	if o != nil && o.ExtKeyUsageOids != nil {
		return true
	}

	return false
}

// SetExtKeyUsageOids gets a reference to the given []string and assigns it to the ExtKeyUsageOids field.
func (o *PkiSignVerbatimRequest) SetExtKeyUsageOids(v []string) {
	o.ExtKeyUsageOids = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PkiSignVerbatimRequest) SetFormat(v string) {
	o.Format = &v
}

// GetIpSans returns the IpSans field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetIpSans() []string {
	if o == nil || o.IpSans == nil {
		var ret []string
		return ret
	}
	return o.IpSans
}

// GetIpSansOk returns a tuple with the IpSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetIpSansOk() ([]string, bool) {
	if o == nil || o.IpSans == nil {
		return nil, false
	}
	return o.IpSans, true
}

// HasIpSans returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasIpSans() bool {
	if o != nil && o.IpSans != nil {
		return true
	}

	return false
}

// SetIpSans gets a reference to the given []string and assigns it to the IpSans field.
func (o *PkiSignVerbatimRequest) SetIpSans(v []string) {
	o.IpSans = v
}

// GetIssuerRef returns the IssuerRef field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetIssuerRef() string {
	if o == nil || o.IssuerRef == nil {
		var ret string
		return ret
	}
	return *o.IssuerRef
}

// GetIssuerRefOk returns a tuple with the IssuerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetIssuerRefOk() (*string, bool) {
	if o == nil || o.IssuerRef == nil {
		return nil, false
	}
	return o.IssuerRef, true
}

// HasIssuerRef returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasIssuerRef() bool {
	if o != nil && o.IssuerRef != nil {
		return true
	}

	return false
}

// SetIssuerRef gets a reference to the given string and assigns it to the IssuerRef field.
func (o *PkiSignVerbatimRequest) SetIssuerRef(v string) {
	o.IssuerRef = &v
}

// GetKeyUsage returns the KeyUsage field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetKeyUsage() []string {
	if o == nil || o.KeyUsage == nil {
		var ret []string
		return ret
	}
	return o.KeyUsage
}

// GetKeyUsageOk returns a tuple with the KeyUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetKeyUsageOk() ([]string, bool) {
	if o == nil || o.KeyUsage == nil {
		return nil, false
	}
	return o.KeyUsage, true
}

// HasKeyUsage returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasKeyUsage() bool {
	if o != nil && o.KeyUsage != nil {
		return true
	}

	return false
}

// SetKeyUsage gets a reference to the given []string and assigns it to the KeyUsage field.
func (o *PkiSignVerbatimRequest) SetKeyUsage(v []string) {
	o.KeyUsage = v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetNotAfter() string {
	if o == nil || o.NotAfter == nil {
		var ret string
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetNotAfterOk() (*string, bool) {
	if o == nil || o.NotAfter == nil {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasNotAfter() bool {
	if o != nil && o.NotAfter != nil {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given string and assigns it to the NotAfter field.
func (o *PkiSignVerbatimRequest) SetNotAfter(v string) {
	o.NotAfter = &v
}

// GetOtherSans returns the OtherSans field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetOtherSans() []string {
	if o == nil || o.OtherSans == nil {
		var ret []string
		return ret
	}
	return o.OtherSans
}

// GetOtherSansOk returns a tuple with the OtherSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetOtherSansOk() ([]string, bool) {
	if o == nil || o.OtherSans == nil {
		return nil, false
	}
	return o.OtherSans, true
}

// HasOtherSans returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasOtherSans() bool {
	if o != nil && o.OtherSans != nil {
		return true
	}

	return false
}

// SetOtherSans gets a reference to the given []string and assigns it to the OtherSans field.
func (o *PkiSignVerbatimRequest) SetOtherSans(v []string) {
	o.OtherSans = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetPrivateKeyFormat() string {
	if o == nil || o.PrivateKeyFormat == nil {
		var ret string
		return ret
	}
	return *o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil || o.PrivateKeyFormat == nil {
		return nil, false
	}
	return o.PrivateKeyFormat, true
}

// HasPrivateKeyFormat returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasPrivateKeyFormat() bool {
	if o != nil && o.PrivateKeyFormat != nil {
		return true
	}

	return false
}

// SetPrivateKeyFormat gets a reference to the given string and assigns it to the PrivateKeyFormat field.
func (o *PkiSignVerbatimRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *PkiSignVerbatimRequest) SetRole(v string) {
	o.Role = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *PkiSignVerbatimRequest) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PkiSignVerbatimRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUriSans returns the UriSans field value if set, zero value otherwise.
func (o *PkiSignVerbatimRequest) GetUriSans() []string {
	if o == nil || o.UriSans == nil {
		var ret []string
		return ret
	}
	return o.UriSans
}

// GetUriSansOk returns a tuple with the UriSans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiSignVerbatimRequest) GetUriSansOk() ([]string, bool) {
	if o == nil || o.UriSans == nil {
		return nil, false
	}
	return o.UriSans, true
}

// HasUriSans returns a boolean if a field has been set.
func (o *PkiSignVerbatimRequest) HasUriSans() bool {
	if o != nil && o.UriSans != nil {
		return true
	}

	return false
}

// SetUriSans gets a reference to the given []string and assigns it to the UriSans field.
func (o *PkiSignVerbatimRequest) SetUriSans(v []string) {
	o.UriSans = v
}

func (o PkiSignVerbatimRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AltNames != nil {
		toSerialize["alt_names"] = o.AltNames
	}
	if o.CommonName != nil {
		toSerialize["common_name"] = o.CommonName
	}
	if o.Csr != nil {
		toSerialize["csr"] = o.Csr
	}
	if o.ExcludeCnFromSans != nil {
		toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	}
	if o.ExtKeyUsage != nil {
		toSerialize["ext_key_usage"] = o.ExtKeyUsage
	}
	if o.ExtKeyUsageOids != nil {
		toSerialize["ext_key_usage_oids"] = o.ExtKeyUsageOids
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IpSans != nil {
		toSerialize["ip_sans"] = o.IpSans
	}
	if o.IssuerRef != nil {
		toSerialize["issuer_ref"] = o.IssuerRef
	}
	if o.KeyUsage != nil {
		toSerialize["key_usage"] = o.KeyUsage
	}
	if o.NotAfter != nil {
		toSerialize["not_after"] = o.NotAfter
	}
	if o.OtherSans != nil {
		toSerialize["other_sans"] = o.OtherSans
	}
	if o.PrivateKeyFormat != nil {
		toSerialize["private_key_format"] = o.PrivateKeyFormat
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.SerialNumber != nil {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UriSans != nil {
		toSerialize["uri_sans"] = o.UriSans
	}
	return json.Marshal(toSerialize)
}

type NullablePkiSignVerbatimRequest struct {
	value *PkiSignVerbatimRequest
	isSet bool
}

func (v NullablePkiSignVerbatimRequest) Get() *PkiSignVerbatimRequest {
	return v.value
}

func (v *NullablePkiSignVerbatimRequest) Set(val *PkiSignVerbatimRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiSignVerbatimRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiSignVerbatimRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiSignVerbatimRequest(val *PkiSignVerbatimRequest) *NullablePkiSignVerbatimRequest {
	return &NullablePkiSignVerbatimRequest{value: val, isSet: true}
}

func (v NullablePkiSignVerbatimRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiSignVerbatimRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiTidyRequest struct for PkiTidyRequest
type PkiTidyRequest struct {
	// The amount of extra time that must have passed beyond certificate expiration before it is removed from the backend storage and/or revocation list. Defaults to 72 hours.
	SafetyBuffer *int32 `json:"safety_buffer,omitempty"`
	// Set to true to enable tidying up the certificate store
	TidyCertStore *bool `json:"tidy_cert_store,omitempty"`
	// Deprecated; synonym for 'tidy_revoked_certs
	TidyRevocationList *bool `json:"tidy_revocation_list,omitempty"`
	// Set to true to expire all revoked and expired certificates, removing them both from the CRL and from storage. The CRL will be rotated if this causes any values to be removed.
	TidyRevokedCerts *bool `json:"tidy_revoked_certs,omitempty"`
}

// NewPkiTidyRequest instantiates a new PkiTidyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiTidyRequest() *PkiTidyRequest {
	this := PkiTidyRequest{}
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// NewPkiTidyRequestWithDefaults instantiates a new PkiTidyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiTidyRequestWithDefaults() *PkiTidyRequest {
	this := PkiTidyRequest{}
	var safetyBuffer int32 = 259200
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// GetSafetyBuffer returns the SafetyBuffer field value if set, zero value otherwise.
func (o *PkiTidyRequest) GetSafetyBuffer() int32 {
	if o == nil || o.SafetyBuffer == nil {
		var ret int32
		return ret
	}
	return *o.SafetyBuffer
}

// GetSafetyBufferOk returns a tuple with the SafetyBuffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiTidyRequest) GetSafetyBufferOk() (*int32, bool) {
	if o == nil || o.SafetyBuffer == nil {
		return nil, false
	}
	return o.SafetyBuffer, true
}

// HasSafetyBuffer returns a boolean if a field has been set.
func (o *PkiTidyRequest) HasSafetyBuffer() bool {
	if o != nil && o.SafetyBuffer != nil {
		return true
	}

	return false
}

// SetSafetyBuffer gets a reference to the given int32 and assigns it to the SafetyBuffer field.
func (o *PkiTidyRequest) SetSafetyBuffer(v int32) {
	o.SafetyBuffer = &v
}

// GetTidyCertStore returns the TidyCertStore field value if set, zero value otherwise.
func (o *PkiTidyRequest) GetTidyCertStore() bool {
	if o == nil || o.TidyCertStore == nil {
		var ret bool
		return ret
	}
	return *o.TidyCertStore
}

// GetTidyCertStoreOk returns a tuple with the TidyCertStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiTidyRequest) GetTidyCertStoreOk() (*bool, bool) {
	if o == nil || o.TidyCertStore == nil {
		return nil, false
	}
	return o.TidyCertStore, true
}

// HasTidyCertStore returns a boolean if a field has been set.
func (o *PkiTidyRequest) HasTidyCertStore() bool {
	if o != nil && o.TidyCertStore != nil {
		return true
	}

	return false
}

// SetTidyCertStore gets a reference to the given bool and assigns it to the TidyCertStore field.
func (o *PkiTidyRequest) SetTidyCertStore(v bool) {
	o.TidyCertStore = &v
}

// GetTidyRevocationList returns the TidyRevocationList field value if set, zero value otherwise.
func (o *PkiTidyRequest) GetTidyRevocationList() bool {
	if o == nil || o.TidyRevocationList == nil {
		var ret bool
		return ret
	}
	return *o.TidyRevocationList
}

// GetTidyRevocationListOk returns a tuple with the TidyRevocationList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiTidyRequest) GetTidyRevocationListOk() (*bool, bool) {
	if o == nil || o.TidyRevocationList == nil {
		return nil, false
	}
	return o.TidyRevocationList, true
}

// HasTidyRevocationList returns a boolean if a field has been set.
func (o *PkiTidyRequest) HasTidyRevocationList() bool {
	if o != nil && o.TidyRevocationList != nil {
		return true
	}

	return false
}

// SetTidyRevocationList gets a reference to the given bool and assigns it to the TidyRevocationList field.
func (o *PkiTidyRequest) SetTidyRevocationList(v bool) {
	o.TidyRevocationList = &v
}

// GetTidyRevokedCerts returns the TidyRevokedCerts field value if set, zero value otherwise.
func (o *PkiTidyRequest) GetTidyRevokedCerts() bool {
	if o == nil || o.TidyRevokedCerts == nil {
		var ret bool
		return ret
	}
	return *o.TidyRevokedCerts
}

// GetTidyRevokedCertsOk returns a tuple with the TidyRevokedCerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiTidyRequest) GetTidyRevokedCertsOk() (*bool, bool) {
	if o == nil || o.TidyRevokedCerts == nil {
		return nil, false
	}
	return o.TidyRevokedCerts, true
}

// HasTidyRevokedCerts returns a boolean if a field has been set.
func (o *PkiTidyRequest) HasTidyRevokedCerts() bool {
	if o != nil && o.TidyRevokedCerts != nil {
		return true
	}

	return false
}

// SetTidyRevokedCerts gets a reference to the given bool and assigns it to the TidyRevokedCerts field.
func (o *PkiTidyRequest) SetTidyRevokedCerts(v bool) {
	o.TidyRevokedCerts = &v
}

func (o PkiTidyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SafetyBuffer != nil {
		toSerialize["safety_buffer"] = o.SafetyBuffer
	}
	if o.TidyCertStore != nil {
		toSerialize["tidy_cert_store"] = o.TidyCertStore
	}
	if o.TidyRevocationList != nil {
		toSerialize["tidy_revocation_list"] = o.TidyRevocationList
	}
	if o.TidyRevokedCerts != nil {
		toSerialize["tidy_revoked_certs"] = o.TidyRevokedCerts
	}
	return json.Marshal(toSerialize)
}

type NullablePkiTidyRequest struct {
	value *PkiTidyRequest
	isSet bool
}

func (v NullablePkiTidyRequest) Get() *PkiTidyRequest {
	return v.value
}

func (v *NullablePkiTidyRequest) Set(val *PkiTidyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiTidyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiTidyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiTidyRequest(val *PkiTidyRequest) *NullablePkiTidyRequest {
	return &NullablePkiTidyRequest{value: val, isSet: true}
}

func (v NullablePkiTidyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiTidyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RabbitmqConfigConnectionRequest struct for RabbitmqConfigConnectionRequest
type RabbitmqConfigConnectionRequest struct {
	// RabbitMQ Management URI
	ConnectionUri *string `json:"connection_uri,omitempty"`
	// Password of the provided RabbitMQ management user
	Password *string `json:"password,omitempty"`
	// Name of the password policy to use to generate passwords for dynamic credentials.
	PasswordPolicy *string `json:"password_policy,omitempty"`
	// Username of a RabbitMQ management administrator
	Username *string `json:"username,omitempty"`
	// Template describing how dynamic usernames are generated.
	UsernameTemplate *string `json:"username_template,omitempty"`
	// If set, connection_uri is verified by actually connecting to the RabbitMQ management API
	VerifyConnection *bool `json:"verify_connection,omitempty"`
}

// NewRabbitmqConfigConnectionRequest instantiates a new RabbitmqConfigConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRabbitmqConfigConnectionRequest() *RabbitmqConfigConnectionRequest {
	this := RabbitmqConfigConnectionRequest{}
	var verifyConnection bool = true
	this.VerifyConnection = &verifyConnection
	return &this
}

// NewRabbitmqConfigConnectionRequestWithDefaults instantiates a new RabbitmqConfigConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRabbitmqConfigConnectionRequestWithDefaults() *RabbitmqConfigConnectionRequest {
	this := RabbitmqConfigConnectionRequest{}
	var verifyConnection bool = true
	this.VerifyConnection = &verifyConnection
	return &this
}

// GetConnectionUri returns the ConnectionUri field value if set, zero value otherwise.
func (o *RabbitmqConfigConnectionRequest) GetConnectionUri() string {
	if o == nil || o.ConnectionUri == nil {
		var ret string
		return ret
	}
	return *o.ConnectionUri
}

// GetConnectionUriOk returns a tuple with the ConnectionUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigConnectionRequest) GetConnectionUriOk() (*string, bool) {
	if o == nil || o.ConnectionUri == nil {
		return nil, false
	}
	return o.ConnectionUri, true
}

// HasConnectionUri returns a boolean if a field has been set.
func (o *RabbitmqConfigConnectionRequest) HasConnectionUri() bool {
	if o != nil && o.ConnectionUri != nil {
		return true
	}

	return false
}

// SetConnectionUri gets a reference to the given string and assigns it to the ConnectionUri field.
func (o *RabbitmqConfigConnectionRequest) SetConnectionUri(v string) {
	o.ConnectionUri = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *RabbitmqConfigConnectionRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigConnectionRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *RabbitmqConfigConnectionRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *RabbitmqConfigConnectionRequest) SetPassword(v string) {
	o.Password = &v
}

// GetPasswordPolicy returns the PasswordPolicy field value if set, zero value otherwise.
func (o *RabbitmqConfigConnectionRequest) GetPasswordPolicy() string {
	if o == nil || o.PasswordPolicy == nil {
		var ret string
		return ret
	}
	return *o.PasswordPolicy
}

// GetPasswordPolicyOk returns a tuple with the PasswordPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigConnectionRequest) GetPasswordPolicyOk() (*string, bool) {
	if o == nil || o.PasswordPolicy == nil {
		return nil, false
	}
	return o.PasswordPolicy, true
}

// HasPasswordPolicy returns a boolean if a field has been set.
func (o *RabbitmqConfigConnectionRequest) HasPasswordPolicy() bool {
	if o != nil && o.PasswordPolicy != nil {
		return true
	}

	return false
}

// SetPasswordPolicy gets a reference to the given string and assigns it to the PasswordPolicy field.
func (o *RabbitmqConfigConnectionRequest) SetPasswordPolicy(v string) {
	o.PasswordPolicy = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *RabbitmqConfigConnectionRequest) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigConnectionRequest) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *RabbitmqConfigConnectionRequest) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *RabbitmqConfigConnectionRequest) SetUsername(v string) {
	o.Username = &v
}

// GetUsernameTemplate returns the UsernameTemplate field value if set, zero value otherwise.
func (o *RabbitmqConfigConnectionRequest) GetUsernameTemplate() string {
	if o == nil || o.UsernameTemplate == nil {
		var ret string
		return ret
	}
	return *o.UsernameTemplate
}

// GetUsernameTemplateOk returns a tuple with the UsernameTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigConnectionRequest) GetUsernameTemplateOk() (*string, bool) {
	if o == nil || o.UsernameTemplate == nil {
		return nil, false
	}
	return o.UsernameTemplate, true
}

// HasUsernameTemplate returns a boolean if a field has been set.
func (o *RabbitmqConfigConnectionRequest) HasUsernameTemplate() bool {
	if o != nil && o.UsernameTemplate != nil {
		return true
	}

	return false
}

// SetUsernameTemplate gets a reference to the given string and assigns it to the UsernameTemplate field.
func (o *RabbitmqConfigConnectionRequest) SetUsernameTemplate(v string) {
	o.UsernameTemplate = &v
}

// GetVerifyConnection returns the VerifyConnection field value if set, zero value otherwise.
func (o *RabbitmqConfigConnectionRequest) GetVerifyConnection() bool {
	if o == nil || o.VerifyConnection == nil {
		var ret bool
		return ret
	}
	return *o.VerifyConnection
}

// GetVerifyConnectionOk returns a tuple with the VerifyConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigConnectionRequest) GetVerifyConnectionOk() (*bool, bool) {
	if o == nil || o.VerifyConnection == nil {
		return nil, false
	}
	return o.VerifyConnection, true
}

// HasVerifyConnection returns a boolean if a field has been set.
func (o *RabbitmqConfigConnectionRequest) HasVerifyConnection() bool {
	if o != nil && o.VerifyConnection != nil {
		return true
	}

	return false
}

// SetVerifyConnection gets a reference to the given bool and assigns it to the VerifyConnection field.
func (o *RabbitmqConfigConnectionRequest) SetVerifyConnection(v bool) {
	o.VerifyConnection = &v
}

func (o RabbitmqConfigConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionUri != nil {
		toSerialize["connection_uri"] = o.ConnectionUri
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.PasswordPolicy != nil {
		toSerialize["password_policy"] = o.PasswordPolicy
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.UsernameTemplate != nil {
		toSerialize["username_template"] = o.UsernameTemplate
	}
	if o.VerifyConnection != nil {
		toSerialize["verify_connection"] = o.VerifyConnection
	}
	return json.Marshal(toSerialize)
}

type NullableRabbitmqConfigConnectionRequest struct {
	value *RabbitmqConfigConnectionRequest
	isSet bool
}

func (v NullableRabbitmqConfigConnectionRequest) Get() *RabbitmqConfigConnectionRequest {
	return v.value
}

func (v *NullableRabbitmqConfigConnectionRequest) Set(val *RabbitmqConfigConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRabbitmqConfigConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRabbitmqConfigConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRabbitmqConfigConnectionRequest(val *RabbitmqConfigConnectionRequest) *NullableRabbitmqConfigConnectionRequest {
	return &NullableRabbitmqConfigConnectionRequest{value: val, isSet: true}
}

func (v NullableRabbitmqConfigConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRabbitmqConfigConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RabbitmqConfigLeaseRequest struct for RabbitmqConfigLeaseRequest
type RabbitmqConfigLeaseRequest struct {
	// Duration after which the issued credentials should not be allowed to be renewed
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Duration before which the issued credentials needs renewal
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewRabbitmqConfigLeaseRequest instantiates a new RabbitmqConfigLeaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRabbitmqConfigLeaseRequest() *RabbitmqConfigLeaseRequest {
	this := RabbitmqConfigLeaseRequest{}
	var maxTtl int32 = 0
	this.MaxTtl = &maxTtl
	var ttl int32 = 0
	this.Ttl = &ttl
	return &this
}

// NewRabbitmqConfigLeaseRequestWithDefaults instantiates a new RabbitmqConfigLeaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRabbitmqConfigLeaseRequestWithDefaults() *RabbitmqConfigLeaseRequest {
	this := RabbitmqConfigLeaseRequest{}
	var maxTtl int32 = 0
	this.MaxTtl = &maxTtl
	var ttl int32 = 0
	this.Ttl = &ttl
	return &this
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *RabbitmqConfigLeaseRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigLeaseRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *RabbitmqConfigLeaseRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *RabbitmqConfigLeaseRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *RabbitmqConfigLeaseRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigLeaseRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *RabbitmqConfigLeaseRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *RabbitmqConfigLeaseRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o RabbitmqConfigLeaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableRabbitmqConfigLeaseRequest struct {
	value *RabbitmqConfigLeaseRequest
	isSet bool
}

func (v NullableRabbitmqConfigLeaseRequest) Get() *RabbitmqConfigLeaseRequest {
	return v.value
}

func (v *NullableRabbitmqConfigLeaseRequest) Set(val *RabbitmqConfigLeaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRabbitmqConfigLeaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRabbitmqConfigLeaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRabbitmqConfigLeaseRequest(val *RabbitmqConfigLeaseRequest) *NullableRabbitmqConfigLeaseRequest {
	return &NullableRabbitmqConfigLeaseRequest{value: val, isSet: true}
}

func (v NullableRabbitmqConfigLeaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRabbitmqConfigLeaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RabbitmqRolesRequest struct for RabbitmqRolesRequest
type RabbitmqRolesRequest struct {
	// Comma-separated list of tags for this role.
	Tags *string `json:"tags,omitempty"`
	// A nested map of virtual hosts and exchanges to topic permissions.
	VhostTopics *string `json:"vhost_topics,omitempty"`
	// A map of virtual hosts to permissions.
	Vhosts *string `json:"vhosts,omitempty"`
}

// NewRabbitmqRolesRequest instantiates a new RabbitmqRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRabbitmqRolesRequest() *RabbitmqRolesRequest {
	this := RabbitmqRolesRequest{}
	return &this
}

// NewRabbitmqRolesRequestWithDefaults instantiates a new RabbitmqRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRabbitmqRolesRequestWithDefaults() *RabbitmqRolesRequest {
	this := RabbitmqRolesRequest{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *RabbitmqRolesRequest) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqRolesRequest) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *RabbitmqRolesRequest) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *RabbitmqRolesRequest) SetTags(v string) {
	o.Tags = &v
}

// GetVhostTopics returns the VhostTopics field value if set, zero value otherwise.
func (o *RabbitmqRolesRequest) GetVhostTopics() string {
	if o == nil || o.VhostTopics == nil {
		var ret string
		return ret
	}
	return *o.VhostTopics
}

// GetVhostTopicsOk returns a tuple with the VhostTopics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqRolesRequest) GetVhostTopicsOk() (*string, bool) {
	if o == nil || o.VhostTopics == nil {
		return nil, false
	}
	return o.VhostTopics, true
}

// HasVhostTopics returns a boolean if a field has been set.
func (o *RabbitmqRolesRequest) HasVhostTopics() bool {
	if o != nil && o.VhostTopics != nil {
		return true
	}

	return false
}

// SetVhostTopics gets a reference to the given string and assigns it to the VhostTopics field.
func (o *RabbitmqRolesRequest) SetVhostTopics(v string) {
	o.VhostTopics = &v
}

// GetVhosts returns the Vhosts field value if set, zero value otherwise.
func (o *RabbitmqRolesRequest) GetVhosts() string {
	if o == nil || o.Vhosts == nil {
		var ret string
		return ret
	}
	return *o.Vhosts
}

// GetVhostsOk returns a tuple with the Vhosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqRolesRequest) GetVhostsOk() (*string, bool) {
	if o == nil || o.Vhosts == nil {
		return nil, false
	}
	return o.Vhosts, true
}

// HasVhosts returns a boolean if a field has been set.
func (o *RabbitmqRolesRequest) HasVhosts() bool {
	if o != nil && o.Vhosts != nil {
		return true
	}

	return false
}

// SetVhosts gets a reference to the given string and assigns it to the Vhosts field.
func (o *RabbitmqRolesRequest) SetVhosts(v string) {
	o.Vhosts = &v
}

func (o RabbitmqRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.VhostTopics != nil {
		toSerialize["vhost_topics"] = o.VhostTopics
	}
	if o.Vhosts != nil {
		toSerialize["vhosts"] = o.Vhosts
	}
	return json.Marshal(toSerialize)
}

type NullableRabbitmqRolesRequest struct {
	value *RabbitmqRolesRequest
	isSet bool
}

func (v NullableRabbitmqRolesRequest) Get() *RabbitmqRolesRequest {
	return v.value
}

func (v *NullableRabbitmqRolesRequest) Set(val *RabbitmqRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRabbitmqRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRabbitmqRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRabbitmqRolesRequest(val *RabbitmqRolesRequest) *NullableRabbitmqRolesRequest {
	return &NullableRabbitmqRolesRequest{value: val, isSet: true}
}

func (v NullableRabbitmqRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRabbitmqRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RadiusConfigRequest struct for RadiusConfigRequest
type RadiusConfigRequest struct {
	// Number of seconds before connect times out (default: 10)
	DialTimeout *int32 `json:"dial_timeout,omitempty"`
	// RADIUS server host
	Host *string `json:"host,omitempty"`
	// RADIUS NAS Identifier field (optional)
	NasIdentifier *string `json:"nas_identifier,omitempty"`
	// RADIUS NAS port field (default: 10)
	NasPort *int32 `json:"nas_port,omitempty"`
	// RADIUS server port (default: 1812)
	Port *int32 `json:"port,omitempty"`
	// Number of seconds before response times out (default: 10)
	ReadTimeout *int32 `json:"read_timeout,omitempty"`
	// Secret shared with the RADIUS server
	Secret *string `json:"secret,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies. This will apply to all tokens generated by this auth method, in addition to any configured for specific users.
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Comma-separated list of policies to grant upon successful RADIUS authentication of an unregisted user (default: empty)
	UnregisteredUserPolicies *string `json:"unregistered_user_policies,omitempty"`
}

// NewRadiusConfigRequest instantiates a new RadiusConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRadiusConfigRequest() *RadiusConfigRequest {
	this := RadiusConfigRequest{}
	var dialTimeout int32 = 10
	this.DialTimeout = &dialTimeout
	var nasIdentifier string = ""
	this.NasIdentifier = &nasIdentifier
	var nasPort int32 = 10
	this.NasPort = &nasPort
	var port int32 = 1812
	this.Port = &port
	var readTimeout int32 = 10
	this.ReadTimeout = &readTimeout
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	var unregisteredUserPolicies string = ""
	this.UnregisteredUserPolicies = &unregisteredUserPolicies
	return &this
}

// NewRadiusConfigRequestWithDefaults instantiates a new RadiusConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadiusConfigRequestWithDefaults() *RadiusConfigRequest {
	this := RadiusConfigRequest{}
	var dialTimeout int32 = 10
	this.DialTimeout = &dialTimeout
	var nasIdentifier string = ""
	this.NasIdentifier = &nasIdentifier
	var nasPort int32 = 10
	this.NasPort = &nasPort
	var port int32 = 1812
	this.Port = &port
	var readTimeout int32 = 10
	this.ReadTimeout = &readTimeout
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	var unregisteredUserPolicies string = ""
	this.UnregisteredUserPolicies = &unregisteredUserPolicies
	return &this
}

// GetDialTimeout returns the DialTimeout field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetDialTimeout() int32 {
	if o == nil || o.DialTimeout == nil {
		var ret int32
		return ret
	}
	return *o.DialTimeout
}

// GetDialTimeoutOk returns a tuple with the DialTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetDialTimeoutOk() (*int32, bool) {
	if o == nil || o.DialTimeout == nil {
		return nil, false
	}
	return o.DialTimeout, true
}

// HasDialTimeout returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasDialTimeout() bool {
	if o != nil && o.DialTimeout != nil {
		return true
	}

	return false
}

// SetDialTimeout gets a reference to the given int32 and assigns it to the DialTimeout field.
func (o *RadiusConfigRequest) SetDialTimeout(v int32) {
	o.DialTimeout = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *RadiusConfigRequest) SetHost(v string) {
	o.Host = &v
}

// GetNasIdentifier returns the NasIdentifier field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetNasIdentifier() string {
	if o == nil || o.NasIdentifier == nil {
		var ret string
		return ret
	}
	return *o.NasIdentifier
}

// GetNasIdentifierOk returns a tuple with the NasIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetNasIdentifierOk() (*string, bool) {
	if o == nil || o.NasIdentifier == nil {
		return nil, false
	}
	return o.NasIdentifier, true
}

// HasNasIdentifier returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasNasIdentifier() bool {
	if o != nil && o.NasIdentifier != nil {
		return true
	}

	return false
}

// SetNasIdentifier gets a reference to the given string and assigns it to the NasIdentifier field.
func (o *RadiusConfigRequest) SetNasIdentifier(v string) {
	o.NasIdentifier = &v
}

// GetNasPort returns the NasPort field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetNasPort() int32 {
	if o == nil || o.NasPort == nil {
		var ret int32
		return ret
	}
	return *o.NasPort
}

// GetNasPortOk returns a tuple with the NasPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetNasPortOk() (*int32, bool) {
	if o == nil || o.NasPort == nil {
		return nil, false
	}
	return o.NasPort, true
}

// HasNasPort returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasNasPort() bool {
	if o != nil && o.NasPort != nil {
		return true
	}

	return false
}

// SetNasPort gets a reference to the given int32 and assigns it to the NasPort field.
func (o *RadiusConfigRequest) SetNasPort(v int32) {
	o.NasPort = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *RadiusConfigRequest) SetPort(v int32) {
	o.Port = &v
}

// GetReadTimeout returns the ReadTimeout field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetReadTimeout() int32 {
	if o == nil || o.ReadTimeout == nil {
		var ret int32
		return ret
	}
	return *o.ReadTimeout
}

// GetReadTimeoutOk returns a tuple with the ReadTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetReadTimeoutOk() (*int32, bool) {
	if o == nil || o.ReadTimeout == nil {
		return nil, false
	}
	return o.ReadTimeout, true
}

// HasReadTimeout returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasReadTimeout() bool {
	if o != nil && o.ReadTimeout != nil {
		return true
	}

	return false
}

// SetReadTimeout gets a reference to the given int32 and assigns it to the ReadTimeout field.
func (o *RadiusConfigRequest) SetReadTimeout(v int32) {
	o.ReadTimeout = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *RadiusConfigRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *RadiusConfigRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *RadiusConfigRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *RadiusConfigRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *RadiusConfigRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *RadiusConfigRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *RadiusConfigRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *RadiusConfigRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *RadiusConfigRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *RadiusConfigRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetUnregisteredUserPolicies returns the UnregisteredUserPolicies field value if set, zero value otherwise.
func (o *RadiusConfigRequest) GetUnregisteredUserPolicies() string {
	if o == nil || o.UnregisteredUserPolicies == nil {
		var ret string
		return ret
	}
	return *o.UnregisteredUserPolicies
}

// GetUnregisteredUserPoliciesOk returns a tuple with the UnregisteredUserPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusConfigRequest) GetUnregisteredUserPoliciesOk() (*string, bool) {
	if o == nil || o.UnregisteredUserPolicies == nil {
		return nil, false
	}
	return o.UnregisteredUserPolicies, true
}

// HasUnregisteredUserPolicies returns a boolean if a field has been set.
func (o *RadiusConfigRequest) HasUnregisteredUserPolicies() bool {
	if o != nil && o.UnregisteredUserPolicies != nil {
		return true
	}

	return false
}

// SetUnregisteredUserPolicies gets a reference to the given string and assigns it to the UnregisteredUserPolicies field.
func (o *RadiusConfigRequest) SetUnregisteredUserPolicies(v string) {
	o.UnregisteredUserPolicies = &v
}

func (o RadiusConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DialTimeout != nil {
		toSerialize["dial_timeout"] = o.DialTimeout
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.NasIdentifier != nil {
		toSerialize["nas_identifier"] = o.NasIdentifier
	}
	if o.NasPort != nil {
		toSerialize["nas_port"] = o.NasPort
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.ReadTimeout != nil {
		toSerialize["read_timeout"] = o.ReadTimeout
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.UnregisteredUserPolicies != nil {
		toSerialize["unregistered_user_policies"] = o.UnregisteredUserPolicies
	}
	return json.Marshal(toSerialize)
}

type NullableRadiusConfigRequest struct {
	value *RadiusConfigRequest
	isSet bool
}

func (v NullableRadiusConfigRequest) Get() *RadiusConfigRequest {
	return v.value
}

func (v *NullableRadiusConfigRequest) Set(val *RadiusConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRadiusConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRadiusConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRadiusConfigRequest(val *RadiusConfigRequest) *NullableRadiusConfigRequest {
	return &NullableRadiusConfigRequest{value: val, isSet: true}
}

func (v NullableRadiusConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRadiusConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RadiusLoginRequest struct for RadiusLoginRequest
type RadiusLoginRequest struct {
	// Password for this user.
	Password *string `json:"password,omitempty"`
	// Username to be used for login. (URL parameter)
	Urlusername *string `json:"urlusername,omitempty"`
	// Username to be used for login. (POST request body)
	Username *string `json:"username,omitempty"`
}

// NewRadiusLoginRequest instantiates a new RadiusLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRadiusLoginRequest() *RadiusLoginRequest {
	this := RadiusLoginRequest{}
	return &this
}

// NewRadiusLoginRequestWithDefaults instantiates a new RadiusLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadiusLoginRequestWithDefaults() *RadiusLoginRequest {
	this := RadiusLoginRequest{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *RadiusLoginRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusLoginRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *RadiusLoginRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *RadiusLoginRequest) SetPassword(v string) {
	o.Password = &v
}

// GetUrlusername returns the Urlusername field value if set, zero value otherwise.
func (o *RadiusLoginRequest) GetUrlusername() string {
	if o == nil || o.Urlusername == nil {
		var ret string
		return ret
	}
	return *o.Urlusername
}

// GetUrlusernameOk returns a tuple with the Urlusername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusLoginRequest) GetUrlusernameOk() (*string, bool) {
	if o == nil || o.Urlusername == nil {
		return nil, false
	}
	return o.Urlusername, true
}

// HasUrlusername returns a boolean if a field has been set.
func (o *RadiusLoginRequest) HasUrlusername() bool {
	if o != nil && o.Urlusername != nil {
		return true
	}

	return false
}

// SetUrlusername gets a reference to the given string and assigns it to the Urlusername field.
func (o *RadiusLoginRequest) SetUrlusername(v string) {
	o.Urlusername = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *RadiusLoginRequest) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusLoginRequest) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *RadiusLoginRequest) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *RadiusLoginRequest) SetUsername(v string) {
	o.Username = &v
}

func (o RadiusLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Urlusername != nil {
		toSerialize["urlusername"] = o.Urlusername
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableRadiusLoginRequest struct {
	value *RadiusLoginRequest
	isSet bool
}

func (v NullableRadiusLoginRequest) Get() *RadiusLoginRequest {
	return v.value
}

func (v *NullableRadiusLoginRequest) Set(val *RadiusLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRadiusLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRadiusLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRadiusLoginRequest(val *RadiusLoginRequest) *NullableRadiusLoginRequest {
	return &NullableRadiusLoginRequest{value: val, isSet: true}
}

func (v NullableRadiusLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRadiusLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RadiusUsersRequest struct for RadiusUsersRequest
type RadiusUsersRequest struct {
	// Comma-separated list of policies associated to the user.
	Policies []string `json:"policies,omitempty"`
}

// NewRadiusUsersRequest instantiates a new RadiusUsersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRadiusUsersRequest() *RadiusUsersRequest {
	this := RadiusUsersRequest{}
	return &this
}

// NewRadiusUsersRequestWithDefaults instantiates a new RadiusUsersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadiusUsersRequestWithDefaults() *RadiusUsersRequest {
	this := RadiusUsersRequest{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *RadiusUsersRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadiusUsersRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *RadiusUsersRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *RadiusUsersRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o RadiusUsersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableRadiusUsersRequest struct {
	value *RadiusUsersRequest
	isSet bool
}

func (v NullableRadiusUsersRequest) Get() *RadiusUsersRequest {
	return v.value
}

func (v *NullableRadiusUsersRequest) Set(val *RadiusUsersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRadiusUsersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRadiusUsersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRadiusUsersRequest(val *RadiusUsersRequest) *NullableRadiusUsersRequest {
	return &NullableRadiusUsersRequest{value: val, isSet: true}
}

func (v NullableRadiusUsersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRadiusUsersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SshConfigCaRequest struct for SshConfigCaRequest
type SshConfigCaRequest struct {
	// Generate SSH key pair internally rather than use the private_key and public_key fields.
	GenerateSigningKey *bool `json:"generate_signing_key,omitempty"`
	// Specifies the desired key bits when generating variable-length keys (such as when key_type=\"ssh-rsa\") or which NIST P-curve to use when key_type=\"ec\" (256, 384, or 521).
	KeyBits *int32 `json:"key_bits,omitempty"`
	// Specifies the desired key type when generating; could be a OpenSSH key type identifier (ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, ecdsa-sha2-nistp521, or ssh-ed25519) or an algorithm (rsa, ec, ed25519).
	KeyType *string `json:"key_type,omitempty"`
	// Private half of the SSH key that will be used to sign certificates.
	PrivateKey *string `json:"private_key,omitempty"`
	// Public half of the SSH key that will be used to sign certificates.
	PublicKey *string `json:"public_key,omitempty"`
}

// NewSshConfigCaRequest instantiates a new SshConfigCaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshConfigCaRequest() *SshConfigCaRequest {
	this := SshConfigCaRequest{}
	var generateSigningKey bool = true
	this.GenerateSigningKey = &generateSigningKey
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyType string = "ssh-rsa"
	this.KeyType = &keyType
	return &this
}

// NewSshConfigCaRequestWithDefaults instantiates a new SshConfigCaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshConfigCaRequestWithDefaults() *SshConfigCaRequest {
	this := SshConfigCaRequest{}
	var generateSigningKey bool = true
	this.GenerateSigningKey = &generateSigningKey
	var keyBits int32 = 0
	this.KeyBits = &keyBits
	var keyType string = "ssh-rsa"
	this.KeyType = &keyType
	return &this
}

// GetGenerateSigningKey returns the GenerateSigningKey field value if set, zero value otherwise.
func (o *SshConfigCaRequest) GetGenerateSigningKey() bool {
	if o == nil || o.GenerateSigningKey == nil {
		var ret bool
		return ret
	}
	return *o.GenerateSigningKey
}

// GetGenerateSigningKeyOk returns a tuple with the GenerateSigningKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshConfigCaRequest) GetGenerateSigningKeyOk() (*bool, bool) {
	if o == nil || o.GenerateSigningKey == nil {
		return nil, false
	}
	return o.GenerateSigningKey, true
}

// HasGenerateSigningKey returns a boolean if a field has been set.
func (o *SshConfigCaRequest) HasGenerateSigningKey() bool {
	if o != nil && o.GenerateSigningKey != nil {
		return true
	}

	return false
}

// SetGenerateSigningKey gets a reference to the given bool and assigns it to the GenerateSigningKey field.
func (o *SshConfigCaRequest) SetGenerateSigningKey(v bool) {
	o.GenerateSigningKey = &v
}

// GetKeyBits returns the KeyBits field value if set, zero value otherwise.
func (o *SshConfigCaRequest) GetKeyBits() int32 {
	if o == nil || o.KeyBits == nil {
		var ret int32
		return ret
	}
	return *o.KeyBits
}

// GetKeyBitsOk returns a tuple with the KeyBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshConfigCaRequest) GetKeyBitsOk() (*int32, bool) {
	if o == nil || o.KeyBits == nil {
		return nil, false
	}
	return o.KeyBits, true
}

// HasKeyBits returns a boolean if a field has been set.
func (o *SshConfigCaRequest) HasKeyBits() bool {
	if o != nil && o.KeyBits != nil {
		return true
	}

	return false
}

// SetKeyBits gets a reference to the given int32 and assigns it to the KeyBits field.
func (o *SshConfigCaRequest) SetKeyBits(v int32) {
	o.KeyBits = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *SshConfigCaRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshConfigCaRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *SshConfigCaRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *SshConfigCaRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *SshConfigCaRequest) GetPrivateKey() string {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshConfigCaRequest) GetPrivateKeyOk() (*string, bool) {
	if o == nil || o.PrivateKey == nil {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *SshConfigCaRequest) HasPrivateKey() bool {
	if o != nil && o.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *SshConfigCaRequest) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *SshConfigCaRequest) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshConfigCaRequest) GetPublicKeyOk() (*string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *SshConfigCaRequest) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *SshConfigCaRequest) SetPublicKey(v string) {
	o.PublicKey = &v
}

func (o SshConfigCaRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GenerateSigningKey != nil {
		toSerialize["generate_signing_key"] = o.GenerateSigningKey
	}
	if o.KeyBits != nil {
		toSerialize["key_bits"] = o.KeyBits
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.PrivateKey != nil {
		toSerialize["private_key"] = o.PrivateKey
	}
	if o.PublicKey != nil {
		toSerialize["public_key"] = o.PublicKey
	}
	return json.Marshal(toSerialize)
}

type NullableSshConfigCaRequest struct {
	value *SshConfigCaRequest
	isSet bool
}

func (v NullableSshConfigCaRequest) Get() *SshConfigCaRequest {
	return v.value
}

func (v *NullableSshConfigCaRequest) Set(val *SshConfigCaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshConfigCaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshConfigCaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshConfigCaRequest(val *SshConfigCaRequest) *NullableSshConfigCaRequest {
	return &NullableSshConfigCaRequest{value: val, isSet: true}
}

func (v NullableSshConfigCaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshConfigCaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SshConfigZeroaddressRequest struct for SshConfigZeroaddressRequest
type SshConfigZeroaddressRequest struct {
	// [Required] Comma separated list of role names which allows credentials to be requested for any IP address. CIDR blocks previously registered under these roles will be ignored.
	Roles []string `json:"roles,omitempty"`
}

// NewSshConfigZeroaddressRequest instantiates a new SshConfigZeroaddressRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshConfigZeroaddressRequest() *SshConfigZeroaddressRequest {
	this := SshConfigZeroaddressRequest{}
	return &this
}

// NewSshConfigZeroaddressRequestWithDefaults instantiates a new SshConfigZeroaddressRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshConfigZeroaddressRequestWithDefaults() *SshConfigZeroaddressRequest {
	this := SshConfigZeroaddressRequest{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *SshConfigZeroaddressRequest) GetRoles() []string {
	if o == nil || o.Roles == nil {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshConfigZeroaddressRequest) GetRolesOk() ([]string, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *SshConfigZeroaddressRequest) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *SshConfigZeroaddressRequest) SetRoles(v []string) {
	o.Roles = v
}

func (o SshConfigZeroaddressRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableSshConfigZeroaddressRequest struct {
	value *SshConfigZeroaddressRequest
	isSet bool
}

func (v NullableSshConfigZeroaddressRequest) Get() *SshConfigZeroaddressRequest {
	return v.value
}

func (v *NullableSshConfigZeroaddressRequest) Set(val *SshConfigZeroaddressRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshConfigZeroaddressRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshConfigZeroaddressRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshConfigZeroaddressRequest(val *SshConfigZeroaddressRequest) *NullableSshConfigZeroaddressRequest {
	return &NullableSshConfigZeroaddressRequest{value: val, isSet: true}
}

func (v NullableSshConfigZeroaddressRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshConfigZeroaddressRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SshCredsRequest struct for SshCredsRequest
type SshCredsRequest struct {
	// [Required] IP of the remote host
	Ip *string `json:"ip,omitempty"`
	// [Optional] Username in remote host
	Username *string `json:"username,omitempty"`
}

// NewSshCredsRequest instantiates a new SshCredsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshCredsRequest() *SshCredsRequest {
	this := SshCredsRequest{}
	return &this
}

// NewSshCredsRequestWithDefaults instantiates a new SshCredsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshCredsRequestWithDefaults() *SshCredsRequest {
	this := SshCredsRequest{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *SshCredsRequest) GetIp() string {
	if o == nil || o.Ip == nil {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshCredsRequest) GetIpOk() (*string, bool) {
	if o == nil || o.Ip == nil {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *SshCredsRequest) HasIp() bool {
	if o != nil && o.Ip != nil {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *SshCredsRequest) SetIp(v string) {
	o.Ip = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *SshCredsRequest) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshCredsRequest) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *SshCredsRequest) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *SshCredsRequest) SetUsername(v string) {
	o.Username = &v
}

func (o SshCredsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ip != nil {
		toSerialize["ip"] = o.Ip
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableSshCredsRequest struct {
	value *SshCredsRequest
	isSet bool
}

func (v NullableSshCredsRequest) Get() *SshCredsRequest {
	return v.value
}

func (v *NullableSshCredsRequest) Set(val *SshCredsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshCredsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshCredsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshCredsRequest(val *SshCredsRequest) *NullableSshCredsRequest {
	return &NullableSshCredsRequest{value: val, isSet: true}
}

func (v NullableSshCredsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshCredsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SshKeysRequest struct for SshKeysRequest
type SshKeysRequest struct {
	// [Required] SSH private key with super user privileges in host
	Key *string `json:"key,omitempty"`
}

// NewSshKeysRequest instantiates a new SshKeysRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshKeysRequest() *SshKeysRequest {
	this := SshKeysRequest{}
	return &this
}

// NewSshKeysRequestWithDefaults instantiates a new SshKeysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshKeysRequestWithDefaults() *SshKeysRequest {
	this := SshKeysRequest{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SshKeysRequest) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshKeysRequest) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SshKeysRequest) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SshKeysRequest) SetKey(v string) {
	o.Key = &v
}

func (o SshKeysRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableSshKeysRequest struct {
	value *SshKeysRequest
	isSet bool
}

func (v NullableSshKeysRequest) Get() *SshKeysRequest {
	return v.value
}

func (v *NullableSshKeysRequest) Set(val *SshKeysRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshKeysRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshKeysRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshKeysRequest(val *SshKeysRequest) *NullableSshKeysRequest {
	return &NullableSshKeysRequest{value: val, isSet: true}
}

func (v NullableSshKeysRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshKeysRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SshLookupRequest struct for SshLookupRequest
type SshLookupRequest struct {
	// [Required] IP address of remote host
	Ip *string `json:"ip,omitempty"`
}

// NewSshLookupRequest instantiates a new SshLookupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshLookupRequest() *SshLookupRequest {
	this := SshLookupRequest{}
	return &this
}

// NewSshLookupRequestWithDefaults instantiates a new SshLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshLookupRequestWithDefaults() *SshLookupRequest {
	this := SshLookupRequest{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *SshLookupRequest) GetIp() string {
	if o == nil || o.Ip == nil {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshLookupRequest) GetIpOk() (*string, bool) {
	if o == nil || o.Ip == nil {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *SshLookupRequest) HasIp() bool {
	if o != nil && o.Ip != nil {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *SshLookupRequest) SetIp(v string) {
	o.Ip = &v
}

func (o SshLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ip != nil {
		toSerialize["ip"] = o.Ip
	}
	return json.Marshal(toSerialize)
}

type NullableSshLookupRequest struct {
	value *SshLookupRequest
	isSet bool
}

func (v NullableSshLookupRequest) Get() *SshLookupRequest {
	return v.value
}

func (v *NullableSshLookupRequest) Set(val *SshLookupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshLookupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshLookupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshLookupRequest(val *SshLookupRequest) *NullableSshLookupRequest {
	return &NullableSshLookupRequest{value: val, isSet: true}
}

func (v NullableSshLookupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshLookupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SshRolesRequest struct for SshRolesRequest
type SshRolesRequest struct {
	// [Required for Dynamic type] [Not applicable for OTP type] [Not applicable for CA type] Admin user at remote host. The shared key being registered should be for this user and should have root privileges. Everytime a dynamic credential is being generated for other users, Vault uses this admin username to login to remote host and install the generated credential for the other user.
	AdminUser *string `json:"admin_user,omitempty"`
	// When supplied, this value specifies a signing algorithm for the key. Possible values: ssh-rsa, rsa-sha2-256, rsa-sha2-512, default, or the empty string.
	AlgorithmSigner *string `json:"algorithm_signer,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, host certificates that are requested are allowed to use the base domains listed in \"allowed_domains\", e.g. \"example.com\". This is a separate option as in some cases this can be considered a security threat.
	AllowBareDomains *bool `json:"allow_bare_domains,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, certificates are allowed to be signed for use as a 'host'.
	AllowHostCertificates *bool `json:"allow_host_certificates,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, host certificates that are requested are allowed to use subdomains of those listed in \"allowed_domains\".
	AllowSubdomains *bool `json:"allow_subdomains,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, certificates are allowed to be signed for use as a 'user'.
	AllowUserCertificates *bool `json:"allow_user_certificates,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If true, users can override the key ID for a signed certificate with the \"key_id\" field. When false, the key ID will always be the token display name. The key ID is logged by the SSH server and can be useful for auditing.
	AllowUserKeyIds *bool `json:"allow_user_key_ids,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] A comma-separated list of critical options that certificates can have when signed. To allow any critical options, set this to an empty string.
	AllowedCriticalOptions *string `json:"allowed_critical_options,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If this option is not specified, client can request for a signed certificate for any valid host. If only certain domains are allowed, then this list enforces it.
	AllowedDomains *string `json:"allowed_domains,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] A comma-separated list of extensions that certificates can have when signed. An empty list means that no extension overrides are allowed by an end-user; explicitly specify '*' to allow any extensions to be set.
	AllowedExtensions *string `json:"allowed_extensions,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, allows the enforcement of key types and minimum key sizes to be signed.
	AllowedUserKeyLengths map[string]interface{} `json:"allowed_user_key_lengths,omitempty"`
	// [Optional for all types] [Works differently for CA type] If this option is not specified, or is '*', client can request a credential for any valid user at the remote host, including the admin user. If only certain usernames are to be allowed, then this list enforces it. If this field is set, then credentials can only be created for default_user and usernames present in this list. Setting this option will enable all the users with access to this role to fetch credentials for all other usernames in this list. Use with caution. N.B.: with the CA type, an empty list means that no users are allowed; explicitly specify '*' to allow any user.
	AllowedUsers *string `json:"allowed_users,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, Allowed users can be specified using identity template policies. Non-templated users are also permitted.
	AllowedUsersTemplate *bool `json:"allowed_users_template,omitempty"`
	// [Optional for Dynamic type] [Optional for OTP type] [Not applicable for CA type] Comma separated list of CIDR blocks for which the role is applicable for. CIDR blocks can belong to more than one role.
	CidrList *string `json:"cidr_list,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] Critical options certificates should have if none are provided when signing. This field takes in key value pairs in JSON format. Note that these are not restricted by \"allowed_critical_options\". Defaults to none.
	DefaultCriticalOptions map[string]interface{} `json:"default_critical_options,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] Extensions certificates should have if none are provided when signing. This field takes in key value pairs in JSON format. Note that these are not restricted by \"allowed_extensions\". Defaults to none.
	DefaultExtensions map[string]interface{} `json:"default_extensions,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, Default extension values can be specified using identity template policies. Non-templated extension values are also permitted.
	DefaultExtensionsTemplate *bool `json:"default_extensions_template,omitempty"`
	// [Required for Dynamic type] [Required for OTP type] [Optional for CA type] Default username for which a credential will be generated. When the endpoint 'creds/' is used without a username, this value will be used as default username.
	DefaultUser *string `json:"default_user,omitempty"`
	// [Optional for Dynamic type] [Optional for OTP type] [Not applicable for CA type] Comma separated list of CIDR blocks. IP addresses belonging to these blocks are not accepted by the role. This is particularly useful when big CIDR blocks are being used by the role and certain parts of it needs to be kept out.
	ExcludeCidrList *string `json:"exclude_cidr_list,omitempty"`
	// [Optional for Dynamic type] [Not-applicable for OTP type] [Not applicable for CA type] Script used to install and uninstall public keys in the target machine. The inbuilt default install script will be for Linux hosts. For sample script, refer the project documentation website.
	InstallScript *string `json:"install_script,omitempty"`
	// [Required for Dynamic type] [Not applicable for OTP type] [Not applicable for CA type] Name of the registered key in Vault. Before creating the role, use the 'keys/' endpoint to create a named key.
	Key *string `json:"key,omitempty"`
	// [Optional for Dynamic type] [Not applicable for OTP type] [Not applicable for CA type] Length of the RSA dynamic key in bits. It is 1024 by default or it can be 2048.
	KeyBits *int32 `json:"key_bits,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] When supplied, this value specifies a custom format for the key id of a signed certificate. The following variables are available for use: '{{token_display_name}}' - The display name of the token used to make the request. '{{role_name}}' - The name of the role signing the request. '{{public_key_hash}}' - A SHA256 checksum of the public key that is being signed.
	KeyIdFormat *string `json:"key_id_format,omitempty"`
	// [Optional for Dynamic type] [Not applicable for OTP type] [Not applicable for CA type] Comma separated option specifications which will be prefixed to RSA key in authorized_keys file. Options should be valid and comply with authorized_keys file format and should not contain spaces.
	KeyOptionSpecs *string `json:"key_option_specs,omitempty"`
	// [Required for all types] Type of key used to login to hosts. It can be either 'otp', 'dynamic' or 'ca'. 'otp' type requires agent to be installed in remote hosts.
	KeyType *string `json:"key_type,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] The maximum allowed lease duration
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// The duration that the SSH certificate should be backdated by at issuance.
	NotBeforeDuration *int32 `json:"not_before_duration,omitempty"`
	// [Optional for Dynamic type] [Optional for OTP type] [Not applicable for CA type] Port number for SSH connection. Default is '22'. Port number does not play any role in creation of OTP. For 'otp' type, this is just a way to inform client about the port number to use. Port number will be returned to client by Vault server along with OTP.
	Port *int32 `json:"port,omitempty"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] The lease duration if no specific lease duration is requested. The lease duration controls the expiration of certificates issued by this backend. Defaults to the value of max_ttl.
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewSshRolesRequest instantiates a new SshRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshRolesRequest() *SshRolesRequest {
	this := SshRolesRequest{}
	var allowHostCertificates bool = false
	this.AllowHostCertificates = &allowHostCertificates
	var allowUserCertificates bool = false
	this.AllowUserCertificates = &allowUserCertificates
	var allowedUsersTemplate bool = false
	this.AllowedUsersTemplate = &allowedUsersTemplate
	var defaultExtensionsTemplate bool = false
	this.DefaultExtensionsTemplate = &defaultExtensionsTemplate
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	return &this
}

// NewSshRolesRequestWithDefaults instantiates a new SshRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshRolesRequestWithDefaults() *SshRolesRequest {
	this := SshRolesRequest{}
	var allowHostCertificates bool = false
	this.AllowHostCertificates = &allowHostCertificates
	var allowUserCertificates bool = false
	this.AllowUserCertificates = &allowUserCertificates
	var allowedUsersTemplate bool = false
	this.AllowedUsersTemplate = &allowedUsersTemplate
	var defaultExtensionsTemplate bool = false
	this.DefaultExtensionsTemplate = &defaultExtensionsTemplate
	var notBeforeDuration int32 = 30
	this.NotBeforeDuration = &notBeforeDuration
	return &this
}

// GetAdminUser returns the AdminUser field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAdminUser() string {
	if o == nil || o.AdminUser == nil {
		var ret string
		return ret
	}
	return *o.AdminUser
}

// GetAdminUserOk returns a tuple with the AdminUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAdminUserOk() (*string, bool) {
	if o == nil || o.AdminUser == nil {
		return nil, false
	}
	return o.AdminUser, true
}

// HasAdminUser returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAdminUser() bool {
	if o != nil && o.AdminUser != nil {
		return true
	}

	return false
}

// SetAdminUser gets a reference to the given string and assigns it to the AdminUser field.
func (o *SshRolesRequest) SetAdminUser(v string) {
	o.AdminUser = &v
}

// GetAlgorithmSigner returns the AlgorithmSigner field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAlgorithmSigner() string {
	if o == nil || o.AlgorithmSigner == nil {
		var ret string
		return ret
	}
	return *o.AlgorithmSigner
}

// GetAlgorithmSignerOk returns a tuple with the AlgorithmSigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAlgorithmSignerOk() (*string, bool) {
	if o == nil || o.AlgorithmSigner == nil {
		return nil, false
	}
	return o.AlgorithmSigner, true
}

// HasAlgorithmSigner returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAlgorithmSigner() bool {
	if o != nil && o.AlgorithmSigner != nil {
		return true
	}

	return false
}

// SetAlgorithmSigner gets a reference to the given string and assigns it to the AlgorithmSigner field.
func (o *SshRolesRequest) SetAlgorithmSigner(v string) {
	o.AlgorithmSigner = &v
}

// GetAllowBareDomains returns the AllowBareDomains field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAllowBareDomains() bool {
	if o == nil || o.AllowBareDomains == nil {
		var ret bool
		return ret
	}
	return *o.AllowBareDomains
}

// GetAllowBareDomainsOk returns a tuple with the AllowBareDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAllowBareDomainsOk() (*bool, bool) {
	if o == nil || o.AllowBareDomains == nil {
		return nil, false
	}
	return o.AllowBareDomains, true
}

// HasAllowBareDomains returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAllowBareDomains() bool {
	if o != nil && o.AllowBareDomains != nil {
		return true
	}

	return false
}

// SetAllowBareDomains gets a reference to the given bool and assigns it to the AllowBareDomains field.
func (o *SshRolesRequest) SetAllowBareDomains(v bool) {
	o.AllowBareDomains = &v
}

// GetAllowHostCertificates returns the AllowHostCertificates field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAllowHostCertificates() bool {
	if o == nil || o.AllowHostCertificates == nil {
		var ret bool
		return ret
	}
	return *o.AllowHostCertificates
}

// GetAllowHostCertificatesOk returns a tuple with the AllowHostCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAllowHostCertificatesOk() (*bool, bool) {
	if o == nil || o.AllowHostCertificates == nil {
		return nil, false
	}
	return o.AllowHostCertificates, true
}

// HasAllowHostCertificates returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAllowHostCertificates() bool {
	if o != nil && o.AllowHostCertificates != nil {
		return true
	}

	return false
}

// SetAllowHostCertificates gets a reference to the given bool and assigns it to the AllowHostCertificates field.
func (o *SshRolesRequest) SetAllowHostCertificates(v bool) {
	o.AllowHostCertificates = &v
}

// GetAllowSubdomains returns the AllowSubdomains field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAllowSubdomains() bool {
	if o == nil || o.AllowSubdomains == nil {
		var ret bool
		return ret
	}
	return *o.AllowSubdomains
}

// GetAllowSubdomainsOk returns a tuple with the AllowSubdomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAllowSubdomainsOk() (*bool, bool) {
	if o == nil || o.AllowSubdomains == nil {
		return nil, false
	}
	return o.AllowSubdomains, true
}

// HasAllowSubdomains returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAllowSubdomains() bool {
	if o != nil && o.AllowSubdomains != nil {
		return true
	}

	return false
}

// SetAllowSubdomains gets a reference to the given bool and assigns it to the AllowSubdomains field.
func (o *SshRolesRequest) SetAllowSubdomains(v bool) {
	o.AllowSubdomains = &v
}

// GetAllowUserCertificates returns the AllowUserCertificates field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAllowUserCertificates() bool {
	if o == nil || o.AllowUserCertificates == nil {
		var ret bool
		return ret
	}
	return *o.AllowUserCertificates
}

// GetAllowUserCertificatesOk returns a tuple with the AllowUserCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAllowUserCertificatesOk() (*bool, bool) {
	if o == nil || o.AllowUserCertificates == nil {
		return nil, false
	}
	return o.AllowUserCertificates, true
}

// HasAllowUserCertificates returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAllowUserCertificates() bool {
	if o != nil && o.AllowUserCertificates != nil {
		return true
	}

	return false
}

// SetAllowUserCertificates gets a reference to the given bool and assigns it to the AllowUserCertificates field.
func (o *SshRolesRequest) SetAllowUserCertificates(v bool) {
	o.AllowUserCertificates = &v
}

// GetAllowUserKeyIds returns the AllowUserKeyIds field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAllowUserKeyIds() bool {
	if o == nil || o.AllowUserKeyIds == nil {
		var ret bool
		return ret
	}
	return *o.AllowUserKeyIds
}

// GetAllowUserKeyIdsOk returns a tuple with the AllowUserKeyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAllowUserKeyIdsOk() (*bool, bool) {
	if o == nil || o.AllowUserKeyIds == nil {
		return nil, false
	}
	return o.AllowUserKeyIds, true
}

// HasAllowUserKeyIds returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAllowUserKeyIds() bool {
	if o != nil && o.AllowUserKeyIds != nil {
		return true
	}

	return false
}

// SetAllowUserKeyIds gets a reference to the given bool and assigns it to the AllowUserKeyIds field.
func (o *SshRolesRequest) SetAllowUserKeyIds(v bool) {
	o.AllowUserKeyIds = &v
}

// GetAllowedCriticalOptions returns the AllowedCriticalOptions field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAllowedCriticalOptions() string {
	if o == nil || o.AllowedCriticalOptions == nil {
		var ret string
		return ret
	}
	return *o.AllowedCriticalOptions
}

// GetAllowedCriticalOptionsOk returns a tuple with the AllowedCriticalOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAllowedCriticalOptionsOk() (*string, bool) {
	if o == nil || o.AllowedCriticalOptions == nil {
		return nil, false
	}
	return o.AllowedCriticalOptions, true
}

// HasAllowedCriticalOptions returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAllowedCriticalOptions() bool {
	if o != nil && o.AllowedCriticalOptions != nil {
		return true
	}

	return false
}

// SetAllowedCriticalOptions gets a reference to the given string and assigns it to the AllowedCriticalOptions field.
func (o *SshRolesRequest) SetAllowedCriticalOptions(v string) {
	o.AllowedCriticalOptions = &v
}

// GetAllowedDomains returns the AllowedDomains field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAllowedDomains() string {
	if o == nil || o.AllowedDomains == nil {
		var ret string
		return ret
	}
	return *o.AllowedDomains
}

// GetAllowedDomainsOk returns a tuple with the AllowedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAllowedDomainsOk() (*string, bool) {
	if o == nil || o.AllowedDomains == nil {
		return nil, false
	}
	return o.AllowedDomains, true
}

// HasAllowedDomains returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAllowedDomains() bool {
	if o != nil && o.AllowedDomains != nil {
		return true
	}

	return false
}

// SetAllowedDomains gets a reference to the given string and assigns it to the AllowedDomains field.
func (o *SshRolesRequest) SetAllowedDomains(v string) {
	o.AllowedDomains = &v
}

// GetAllowedExtensions returns the AllowedExtensions field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAllowedExtensions() string {
	if o == nil || o.AllowedExtensions == nil {
		var ret string
		return ret
	}
	return *o.AllowedExtensions
}

// GetAllowedExtensionsOk returns a tuple with the AllowedExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAllowedExtensionsOk() (*string, bool) {
	if o == nil || o.AllowedExtensions == nil {
		return nil, false
	}
	return o.AllowedExtensions, true
}

// HasAllowedExtensions returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAllowedExtensions() bool {
	if o != nil && o.AllowedExtensions != nil {
		return true
	}

	return false
}

// SetAllowedExtensions gets a reference to the given string and assigns it to the AllowedExtensions field.
func (o *SshRolesRequest) SetAllowedExtensions(v string) {
	o.AllowedExtensions = &v
}

// GetAllowedUserKeyLengths returns the AllowedUserKeyLengths field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAllowedUserKeyLengths() map[string]interface{} {
	if o == nil || o.AllowedUserKeyLengths == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.AllowedUserKeyLengths
}

// GetAllowedUserKeyLengthsOk returns a tuple with the AllowedUserKeyLengths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAllowedUserKeyLengthsOk() (map[string]interface{}, bool) {
	if o == nil || o.AllowedUserKeyLengths == nil {
		return nil, false
	}
	return o.AllowedUserKeyLengths, true
}

// HasAllowedUserKeyLengths returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAllowedUserKeyLengths() bool {
	if o != nil && o.AllowedUserKeyLengths != nil {
		return true
	}

	return false
}

// SetAllowedUserKeyLengths gets a reference to the given map[string]interface{} and assigns it to the AllowedUserKeyLengths field.
func (o *SshRolesRequest) SetAllowedUserKeyLengths(v map[string]interface{}) {
	o.AllowedUserKeyLengths = v
}

// GetAllowedUsers returns the AllowedUsers field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAllowedUsers() string {
	if o == nil || o.AllowedUsers == nil {
		var ret string
		return ret
	}
	return *o.AllowedUsers
}

// GetAllowedUsersOk returns a tuple with the AllowedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAllowedUsersOk() (*string, bool) {
	if o == nil || o.AllowedUsers == nil {
		return nil, false
	}
	return o.AllowedUsers, true
}

// HasAllowedUsers returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAllowedUsers() bool {
	if o != nil && o.AllowedUsers != nil {
		return true
	}

	return false
}

// SetAllowedUsers gets a reference to the given string and assigns it to the AllowedUsers field.
func (o *SshRolesRequest) SetAllowedUsers(v string) {
	o.AllowedUsers = &v
}

// GetAllowedUsersTemplate returns the AllowedUsersTemplate field value if set, zero value otherwise.
func (o *SshRolesRequest) GetAllowedUsersTemplate() bool {
	if o == nil || o.AllowedUsersTemplate == nil {
		var ret bool
		return ret
	}
	return *o.AllowedUsersTemplate
}

// GetAllowedUsersTemplateOk returns a tuple with the AllowedUsersTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetAllowedUsersTemplateOk() (*bool, bool) {
	if o == nil || o.AllowedUsersTemplate == nil {
		return nil, false
	}
	return o.AllowedUsersTemplate, true
}

// HasAllowedUsersTemplate returns a boolean if a field has been set.
func (o *SshRolesRequest) HasAllowedUsersTemplate() bool {
	if o != nil && o.AllowedUsersTemplate != nil {
		return true
	}

	return false
}

// SetAllowedUsersTemplate gets a reference to the given bool and assigns it to the AllowedUsersTemplate field.
func (o *SshRolesRequest) SetAllowedUsersTemplate(v bool) {
	o.AllowedUsersTemplate = &v
}

// GetCidrList returns the CidrList field value if set, zero value otherwise.
func (o *SshRolesRequest) GetCidrList() string {
	if o == nil || o.CidrList == nil {
		var ret string
		return ret
	}
	return *o.CidrList
}

// GetCidrListOk returns a tuple with the CidrList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetCidrListOk() (*string, bool) {
	if o == nil || o.CidrList == nil {
		return nil, false
	}
	return o.CidrList, true
}

// HasCidrList returns a boolean if a field has been set.
func (o *SshRolesRequest) HasCidrList() bool {
	if o != nil && o.CidrList != nil {
		return true
	}

	return false
}

// SetCidrList gets a reference to the given string and assigns it to the CidrList field.
func (o *SshRolesRequest) SetCidrList(v string) {
	o.CidrList = &v
}

// GetDefaultCriticalOptions returns the DefaultCriticalOptions field value if set, zero value otherwise.
func (o *SshRolesRequest) GetDefaultCriticalOptions() map[string]interface{} {
	if o == nil || o.DefaultCriticalOptions == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.DefaultCriticalOptions
}

// GetDefaultCriticalOptionsOk returns a tuple with the DefaultCriticalOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetDefaultCriticalOptionsOk() (map[string]interface{}, bool) {
	if o == nil || o.DefaultCriticalOptions == nil {
		return nil, false
	}
	return o.DefaultCriticalOptions, true
}

// HasDefaultCriticalOptions returns a boolean if a field has been set.
func (o *SshRolesRequest) HasDefaultCriticalOptions() bool {
	if o != nil && o.DefaultCriticalOptions != nil {
		return true
	}

	return false
}

// SetDefaultCriticalOptions gets a reference to the given map[string]interface{} and assigns it to the DefaultCriticalOptions field.
func (o *SshRolesRequest) SetDefaultCriticalOptions(v map[string]interface{}) {
	o.DefaultCriticalOptions = v
}

// GetDefaultExtensions returns the DefaultExtensions field value if set, zero value otherwise.
func (o *SshRolesRequest) GetDefaultExtensions() map[string]interface{} {
	if o == nil || o.DefaultExtensions == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.DefaultExtensions
}

// GetDefaultExtensionsOk returns a tuple with the DefaultExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetDefaultExtensionsOk() (map[string]interface{}, bool) {
	if o == nil || o.DefaultExtensions == nil {
		return nil, false
	}
	return o.DefaultExtensions, true
}

// HasDefaultExtensions returns a boolean if a field has been set.
func (o *SshRolesRequest) HasDefaultExtensions() bool {
	if o != nil && o.DefaultExtensions != nil {
		return true
	}

	return false
}

// SetDefaultExtensions gets a reference to the given map[string]interface{} and assigns it to the DefaultExtensions field.
func (o *SshRolesRequest) SetDefaultExtensions(v map[string]interface{}) {
	o.DefaultExtensions = v
}

// GetDefaultExtensionsTemplate returns the DefaultExtensionsTemplate field value if set, zero value otherwise.
func (o *SshRolesRequest) GetDefaultExtensionsTemplate() bool {
	if o == nil || o.DefaultExtensionsTemplate == nil {
		var ret bool
		return ret
	}
	return *o.DefaultExtensionsTemplate
}

// GetDefaultExtensionsTemplateOk returns a tuple with the DefaultExtensionsTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetDefaultExtensionsTemplateOk() (*bool, bool) {
	if o == nil || o.DefaultExtensionsTemplate == nil {
		return nil, false
	}
	return o.DefaultExtensionsTemplate, true
}

// HasDefaultExtensionsTemplate returns a boolean if a field has been set.
func (o *SshRolesRequest) HasDefaultExtensionsTemplate() bool {
	if o != nil && o.DefaultExtensionsTemplate != nil {
		return true
	}

	return false
}

// SetDefaultExtensionsTemplate gets a reference to the given bool and assigns it to the DefaultExtensionsTemplate field.
func (o *SshRolesRequest) SetDefaultExtensionsTemplate(v bool) {
	o.DefaultExtensionsTemplate = &v
}

// GetDefaultUser returns the DefaultUser field value if set, zero value otherwise.
func (o *SshRolesRequest) GetDefaultUser() string {
	if o == nil || o.DefaultUser == nil {
		var ret string
		return ret
	}
	return *o.DefaultUser
}

// GetDefaultUserOk returns a tuple with the DefaultUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetDefaultUserOk() (*string, bool) {
	if o == nil || o.DefaultUser == nil {
		return nil, false
	}
	return o.DefaultUser, true
}

// HasDefaultUser returns a boolean if a field has been set.
func (o *SshRolesRequest) HasDefaultUser() bool {
	if o != nil && o.DefaultUser != nil {
		return true
	}

	return false
}

// SetDefaultUser gets a reference to the given string and assigns it to the DefaultUser field.
func (o *SshRolesRequest) SetDefaultUser(v string) {
	o.DefaultUser = &v
}

// GetExcludeCidrList returns the ExcludeCidrList field value if set, zero value otherwise.
func (o *SshRolesRequest) GetExcludeCidrList() string {
	if o == nil || o.ExcludeCidrList == nil {
		var ret string
		return ret
	}
	return *o.ExcludeCidrList
}

// GetExcludeCidrListOk returns a tuple with the ExcludeCidrList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetExcludeCidrListOk() (*string, bool) {
	if o == nil || o.ExcludeCidrList == nil {
		return nil, false
	}
	return o.ExcludeCidrList, true
}

// HasExcludeCidrList returns a boolean if a field has been set.
func (o *SshRolesRequest) HasExcludeCidrList() bool {
	if o != nil && o.ExcludeCidrList != nil {
		return true
	}

	return false
}

// SetExcludeCidrList gets a reference to the given string and assigns it to the ExcludeCidrList field.
func (o *SshRolesRequest) SetExcludeCidrList(v string) {
	o.ExcludeCidrList = &v
}

// GetInstallScript returns the InstallScript field value if set, zero value otherwise.
func (o *SshRolesRequest) GetInstallScript() string {
	if o == nil || o.InstallScript == nil {
		var ret string
		return ret
	}
	return *o.InstallScript
}

// GetInstallScriptOk returns a tuple with the InstallScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetInstallScriptOk() (*string, bool) {
	if o == nil || o.InstallScript == nil {
		return nil, false
	}
	return o.InstallScript, true
}

// HasInstallScript returns a boolean if a field has been set.
func (o *SshRolesRequest) HasInstallScript() bool {
	if o != nil && o.InstallScript != nil {
		return true
	}

	return false
}

// SetInstallScript gets a reference to the given string and assigns it to the InstallScript field.
func (o *SshRolesRequest) SetInstallScript(v string) {
	o.InstallScript = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SshRolesRequest) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SshRolesRequest) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SshRolesRequest) SetKey(v string) {
	o.Key = &v
}

// GetKeyBits returns the KeyBits field value if set, zero value otherwise.
func (o *SshRolesRequest) GetKeyBits() int32 {
	if o == nil || o.KeyBits == nil {
		var ret int32
		return ret
	}
	return *o.KeyBits
}

// GetKeyBitsOk returns a tuple with the KeyBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetKeyBitsOk() (*int32, bool) {
	if o == nil || o.KeyBits == nil {
		return nil, false
	}
	return o.KeyBits, true
}

// HasKeyBits returns a boolean if a field has been set.
func (o *SshRolesRequest) HasKeyBits() bool {
	if o != nil && o.KeyBits != nil {
		return true
	}

	return false
}

// SetKeyBits gets a reference to the given int32 and assigns it to the KeyBits field.
func (o *SshRolesRequest) SetKeyBits(v int32) {
	o.KeyBits = &v
}

// GetKeyIdFormat returns the KeyIdFormat field value if set, zero value otherwise.
func (o *SshRolesRequest) GetKeyIdFormat() string {
	if o == nil || o.KeyIdFormat == nil {
		var ret string
		return ret
	}
	return *o.KeyIdFormat
}

// GetKeyIdFormatOk returns a tuple with the KeyIdFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetKeyIdFormatOk() (*string, bool) {
	if o == nil || o.KeyIdFormat == nil {
		return nil, false
	}
	return o.KeyIdFormat, true
}

// HasKeyIdFormat returns a boolean if a field has been set.
func (o *SshRolesRequest) HasKeyIdFormat() bool {
	if o != nil && o.KeyIdFormat != nil {
		return true
	}

	return false
}

// SetKeyIdFormat gets a reference to the given string and assigns it to the KeyIdFormat field.
func (o *SshRolesRequest) SetKeyIdFormat(v string) {
	o.KeyIdFormat = &v
}

// GetKeyOptionSpecs returns the KeyOptionSpecs field value if set, zero value otherwise.
func (o *SshRolesRequest) GetKeyOptionSpecs() string {
	if o == nil || o.KeyOptionSpecs == nil {
		var ret string
		return ret
	}
	return *o.KeyOptionSpecs
}

// GetKeyOptionSpecsOk returns a tuple with the KeyOptionSpecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetKeyOptionSpecsOk() (*string, bool) {
	if o == nil || o.KeyOptionSpecs == nil {
		return nil, false
	}
	return o.KeyOptionSpecs, true
}

// HasKeyOptionSpecs returns a boolean if a field has been set.
func (o *SshRolesRequest) HasKeyOptionSpecs() bool {
	if o != nil && o.KeyOptionSpecs != nil {
		return true
	}

	return false
}

// SetKeyOptionSpecs gets a reference to the given string and assigns it to the KeyOptionSpecs field.
func (o *SshRolesRequest) SetKeyOptionSpecs(v string) {
	o.KeyOptionSpecs = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *SshRolesRequest) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *SshRolesRequest) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *SshRolesRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *SshRolesRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *SshRolesRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *SshRolesRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetNotBeforeDuration returns the NotBeforeDuration field value if set, zero value otherwise.
func (o *SshRolesRequest) GetNotBeforeDuration() int32 {
	if o == nil || o.NotBeforeDuration == nil {
		var ret int32
		return ret
	}
	return *o.NotBeforeDuration
}

// GetNotBeforeDurationOk returns a tuple with the NotBeforeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetNotBeforeDurationOk() (*int32, bool) {
	if o == nil || o.NotBeforeDuration == nil {
		return nil, false
	}
	return o.NotBeforeDuration, true
}

// HasNotBeforeDuration returns a boolean if a field has been set.
func (o *SshRolesRequest) HasNotBeforeDuration() bool {
	if o != nil && o.NotBeforeDuration != nil {
		return true
	}

	return false
}

// SetNotBeforeDuration gets a reference to the given int32 and assigns it to the NotBeforeDuration field.
func (o *SshRolesRequest) SetNotBeforeDuration(v int32) {
	o.NotBeforeDuration = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *SshRolesRequest) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *SshRolesRequest) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *SshRolesRequest) SetPort(v int32) {
	o.Port = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *SshRolesRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshRolesRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *SshRolesRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *SshRolesRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o SshRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminUser != nil {
		toSerialize["admin_user"] = o.AdminUser
	}
	if o.AlgorithmSigner != nil {
		toSerialize["algorithm_signer"] = o.AlgorithmSigner
	}
	if o.AllowBareDomains != nil {
		toSerialize["allow_bare_domains"] = o.AllowBareDomains
	}
	if o.AllowHostCertificates != nil {
		toSerialize["allow_host_certificates"] = o.AllowHostCertificates
	}
	if o.AllowSubdomains != nil {
		toSerialize["allow_subdomains"] = o.AllowSubdomains
	}
	if o.AllowUserCertificates != nil {
		toSerialize["allow_user_certificates"] = o.AllowUserCertificates
	}
	if o.AllowUserKeyIds != nil {
		toSerialize["allow_user_key_ids"] = o.AllowUserKeyIds
	}
	if o.AllowedCriticalOptions != nil {
		toSerialize["allowed_critical_options"] = o.AllowedCriticalOptions
	}
	if o.AllowedDomains != nil {
		toSerialize["allowed_domains"] = o.AllowedDomains
	}
	if o.AllowedExtensions != nil {
		toSerialize["allowed_extensions"] = o.AllowedExtensions
	}
	if o.AllowedUserKeyLengths != nil {
		toSerialize["allowed_user_key_lengths"] = o.AllowedUserKeyLengths
	}
	if o.AllowedUsers != nil {
		toSerialize["allowed_users"] = o.AllowedUsers
	}
	if o.AllowedUsersTemplate != nil {
		toSerialize["allowed_users_template"] = o.AllowedUsersTemplate
	}
	if o.CidrList != nil {
		toSerialize["cidr_list"] = o.CidrList
	}
	if o.DefaultCriticalOptions != nil {
		toSerialize["default_critical_options"] = o.DefaultCriticalOptions
	}
	if o.DefaultExtensions != nil {
		toSerialize["default_extensions"] = o.DefaultExtensions
	}
	if o.DefaultExtensionsTemplate != nil {
		toSerialize["default_extensions_template"] = o.DefaultExtensionsTemplate
	}
	if o.DefaultUser != nil {
		toSerialize["default_user"] = o.DefaultUser
	}
	if o.ExcludeCidrList != nil {
		toSerialize["exclude_cidr_list"] = o.ExcludeCidrList
	}
	if o.InstallScript != nil {
		toSerialize["install_script"] = o.InstallScript
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.KeyBits != nil {
		toSerialize["key_bits"] = o.KeyBits
	}
	if o.KeyIdFormat != nil {
		toSerialize["key_id_format"] = o.KeyIdFormat
	}
	if o.KeyOptionSpecs != nil {
		toSerialize["key_option_specs"] = o.KeyOptionSpecs
	}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.NotBeforeDuration != nil {
		toSerialize["not_before_duration"] = o.NotBeforeDuration
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableSshRolesRequest struct {
	value *SshRolesRequest
	isSet bool
}

func (v NullableSshRolesRequest) Get() *SshRolesRequest {
	return v.value
}

func (v *NullableSshRolesRequest) Set(val *SshRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshRolesRequest(val *SshRolesRequest) *NullableSshRolesRequest {
	return &NullableSshRolesRequest{value: val, isSet: true}
}

func (v NullableSshRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SshSignRequest struct for SshSignRequest
type SshSignRequest struct {
	// Type of certificate to be created; either \"user\" or \"host\".
	CertType *string `json:"cert_type,omitempty"`
	// Critical options that the certificate should be signed for.
	CriticalOptions map[string]interface{} `json:"critical_options,omitempty"`
	// Extensions that the certificate should be signed for.
	Extensions map[string]interface{} `json:"extensions,omitempty"`
	// Key id that the created certificate should have. If not specified, the display name of the token will be used.
	KeyId *string `json:"key_id,omitempty"`
	// SSH public key that should be signed.
	PublicKey *string `json:"public_key,omitempty"`
	// The requested Time To Live for the SSH certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be later than the role max TTL.
	Ttl *int32 `json:"ttl,omitempty"`
	// Valid principals, either usernames or hostnames, that the certificate should be signed for.
	ValidPrincipals *string `json:"valid_principals,omitempty"`
}

// NewSshSignRequest instantiates a new SshSignRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshSignRequest() *SshSignRequest {
	this := SshSignRequest{}
	var certType string = "user"
	this.CertType = &certType
	return &this
}

// NewSshSignRequestWithDefaults instantiates a new SshSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshSignRequestWithDefaults() *SshSignRequest {
	this := SshSignRequest{}
	var certType string = "user"
	this.CertType = &certType
	return &this
}

// GetCertType returns the CertType field value if set, zero value otherwise.
func (o *SshSignRequest) GetCertType() string {
	if o == nil || o.CertType == nil {
		var ret string
		return ret
	}
	return *o.CertType
}

// GetCertTypeOk returns a tuple with the CertType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetCertTypeOk() (*string, bool) {
	if o == nil || o.CertType == nil {
		return nil, false
	}
	return o.CertType, true
}

// HasCertType returns a boolean if a field has been set.
func (o *SshSignRequest) HasCertType() bool {
	if o != nil && o.CertType != nil {
		return true
	}

	return false
}

// SetCertType gets a reference to the given string and assigns it to the CertType field.
func (o *SshSignRequest) SetCertType(v string) {
	o.CertType = &v
}

// GetCriticalOptions returns the CriticalOptions field value if set, zero value otherwise.
func (o *SshSignRequest) GetCriticalOptions() map[string]interface{} {
	if o == nil || o.CriticalOptions == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CriticalOptions
}

// GetCriticalOptionsOk returns a tuple with the CriticalOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetCriticalOptionsOk() (map[string]interface{}, bool) {
	if o == nil || o.CriticalOptions == nil {
		return nil, false
	}
	return o.CriticalOptions, true
}

// HasCriticalOptions returns a boolean if a field has been set.
func (o *SshSignRequest) HasCriticalOptions() bool {
	if o != nil && o.CriticalOptions != nil {
		return true
	}

	return false
}

// SetCriticalOptions gets a reference to the given map[string]interface{} and assigns it to the CriticalOptions field.
func (o *SshSignRequest) SetCriticalOptions(v map[string]interface{}) {
	o.CriticalOptions = v
}

// GetExtensions returns the Extensions field value if set, zero value otherwise.
func (o *SshSignRequest) GetExtensions() map[string]interface{} {
	if o == nil || o.Extensions == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetExtensionsOk() (map[string]interface{}, bool) {
	if o == nil || o.Extensions == nil {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *SshSignRequest) HasExtensions() bool {
	if o != nil && o.Extensions != nil {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given map[string]interface{} and assigns it to the Extensions field.
func (o *SshSignRequest) SetExtensions(v map[string]interface{}) {
	o.Extensions = v
}

// GetKeyId returns the KeyId field value if set, zero value otherwise.
func (o *SshSignRequest) GetKeyId() string {
	if o == nil || o.KeyId == nil {
		var ret string
		return ret
	}
	return *o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetKeyIdOk() (*string, bool) {
	if o == nil || o.KeyId == nil {
		return nil, false
	}
	return o.KeyId, true
}

// HasKeyId returns a boolean if a field has been set.
func (o *SshSignRequest) HasKeyId() bool {
	if o != nil && o.KeyId != nil {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given string and assigns it to the KeyId field.
func (o *SshSignRequest) SetKeyId(v string) {
	o.KeyId = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *SshSignRequest) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetPublicKeyOk() (*string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *SshSignRequest) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *SshSignRequest) SetPublicKey(v string) {
	o.PublicKey = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *SshSignRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *SshSignRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *SshSignRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetValidPrincipals returns the ValidPrincipals field value if set, zero value otherwise.
func (o *SshSignRequest) GetValidPrincipals() string {
	if o == nil || o.ValidPrincipals == nil {
		var ret string
		return ret
	}
	return *o.ValidPrincipals
}

// GetValidPrincipalsOk returns a tuple with the ValidPrincipals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshSignRequest) GetValidPrincipalsOk() (*string, bool) {
	if o == nil || o.ValidPrincipals == nil {
		return nil, false
	}
	return o.ValidPrincipals, true
}

// HasValidPrincipals returns a boolean if a field has been set.
func (o *SshSignRequest) HasValidPrincipals() bool {
	if o != nil && o.ValidPrincipals != nil {
		return true
	}

	return false
}

// SetValidPrincipals gets a reference to the given string and assigns it to the ValidPrincipals field.
func (o *SshSignRequest) SetValidPrincipals(v string) {
	o.ValidPrincipals = &v
}

func (o SshSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CertType != nil {
		toSerialize["cert_type"] = o.CertType
	}
	if o.CriticalOptions != nil {
		toSerialize["critical_options"] = o.CriticalOptions
	}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.KeyId != nil {
		toSerialize["key_id"] = o.KeyId
	}
	if o.PublicKey != nil {
		toSerialize["public_key"] = o.PublicKey
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.ValidPrincipals != nil {
		toSerialize["valid_principals"] = o.ValidPrincipals
	}
	return json.Marshal(toSerialize)
}

type NullableSshSignRequest struct {
	value *SshSignRequest
	isSet bool
}

func (v NullableSshSignRequest) Get() *SshSignRequest {
	return v.value
}

func (v *NullableSshSignRequest) Set(val *SshSignRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshSignRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshSignRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshSignRequest(val *SshSignRequest) *NullableSshSignRequest {
	return &NullableSshSignRequest{value: val, isSet: true}
}

func (v NullableSshSignRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshSignRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SshVerifyRequest struct for SshVerifyRequest
type SshVerifyRequest struct {
	// [Required] One-Time-Key that needs to be validated
	Otp *string `json:"otp,omitempty"`
}

// NewSshVerifyRequest instantiates a new SshVerifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshVerifyRequest() *SshVerifyRequest {
	this := SshVerifyRequest{}
	return &this
}

// NewSshVerifyRequestWithDefaults instantiates a new SshVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshVerifyRequestWithDefaults() *SshVerifyRequest {
	this := SshVerifyRequest{}
	return &this
}

// GetOtp returns the Otp field value if set, zero value otherwise.
func (o *SshVerifyRequest) GetOtp() string {
	if o == nil || o.Otp == nil {
		var ret string
		return ret
	}
	return *o.Otp
}

// GetOtpOk returns a tuple with the Otp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshVerifyRequest) GetOtpOk() (*string, bool) {
	if o == nil || o.Otp == nil {
		return nil, false
	}
	return o.Otp, true
}

// HasOtp returns a boolean if a field has been set.
func (o *SshVerifyRequest) HasOtp() bool {
	if o != nil && o.Otp != nil {
		return true
	}

	return false
}

// SetOtp gets a reference to the given string and assigns it to the Otp field.
func (o *SshVerifyRequest) SetOtp(v string) {
	o.Otp = &v
}

func (o SshVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Otp != nil {
		toSerialize["otp"] = o.Otp
	}
	return json.Marshal(toSerialize)
}

type NullableSshVerifyRequest struct {
	value *SshVerifyRequest
	isSet bool
}

func (v NullableSshVerifyRequest) Get() *SshVerifyRequest {
	return v.value
}

func (v *NullableSshVerifyRequest) Set(val *SshVerifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshVerifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshVerifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshVerifyRequest(val *SshVerifyRequest) *NullableSshVerifyRequest {
	return &NullableSshVerifyRequest{value: val, isSet: true}
}

func (v NullableSshVerifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshVerifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemAuditHashRequest struct for SystemAuditHashRequest
type SystemAuditHashRequest struct {
	Input *string `json:"input,omitempty"`
}

// NewSystemAuditHashRequest instantiates a new SystemAuditHashRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemAuditHashRequest() *SystemAuditHashRequest {
	this := SystemAuditHashRequest{}
	return &this
}

// NewSystemAuditHashRequestWithDefaults instantiates a new SystemAuditHashRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemAuditHashRequestWithDefaults() *SystemAuditHashRequest {
	this := SystemAuditHashRequest{}
	return &this
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *SystemAuditHashRequest) GetInput() string {
	if o == nil || o.Input == nil {
		var ret string
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuditHashRequest) GetInputOk() (*string, bool) {
	if o == nil || o.Input == nil {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *SystemAuditHashRequest) HasInput() bool {
	if o != nil && o.Input != nil {
		return true
	}

	return false
}

// SetInput gets a reference to the given string and assigns it to the Input field.
func (o *SystemAuditHashRequest) SetInput(v string) {
	o.Input = &v
}

func (o SystemAuditHashRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	return json.Marshal(toSerialize)
}

type NullableSystemAuditHashRequest struct {
	value *SystemAuditHashRequest
	isSet bool
}

func (v NullableSystemAuditHashRequest) Get() *SystemAuditHashRequest {
	return v.value
}

func (v *NullableSystemAuditHashRequest) Set(val *SystemAuditHashRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemAuditHashRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemAuditHashRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemAuditHashRequest(val *SystemAuditHashRequest) *NullableSystemAuditHashRequest {
	return &NullableSystemAuditHashRequest{value: val, isSet: true}
}

func (v NullableSystemAuditHashRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemAuditHashRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemAuditRequest struct for SystemAuditRequest
type SystemAuditRequest struct {
	// User-friendly description for this audit backend.
	Description *string `json:"description,omitempty"`
	// Mark the mount as a local mount, which is not replicated and is unaffected by replication.
	Local *bool `json:"local,omitempty"`
	// Configuration options for the audit backend.
	Options map[string]interface{} `json:"options,omitempty"`
	// The type of the backend. Example: \"mysql\"
	Type *string `json:"type,omitempty"`
}

// NewSystemAuditRequest instantiates a new SystemAuditRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemAuditRequest() *SystemAuditRequest {
	this := SystemAuditRequest{}
	var local bool = false
	this.Local = &local
	return &this
}

// NewSystemAuditRequestWithDefaults instantiates a new SystemAuditRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemAuditRequestWithDefaults() *SystemAuditRequest {
	this := SystemAuditRequest{}
	var local bool = false
	this.Local = &local
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SystemAuditRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuditRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SystemAuditRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SystemAuditRequest) SetDescription(v string) {
	o.Description = &v
}

// GetLocal returns the Local field value if set, zero value otherwise.
func (o *SystemAuditRequest) GetLocal() bool {
	if o == nil || o.Local == nil {
		var ret bool
		return ret
	}
	return *o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuditRequest) GetLocalOk() (*bool, bool) {
	if o == nil || o.Local == nil {
		return nil, false
	}
	return o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *SystemAuditRequest) HasLocal() bool {
	if o != nil && o.Local != nil {
		return true
	}

	return false
}

// SetLocal gets a reference to the given bool and assigns it to the Local field.
func (o *SystemAuditRequest) SetLocal(v bool) {
	o.Local = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *SystemAuditRequest) GetOptions() map[string]interface{} {
	if o == nil || o.Options == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuditRequest) GetOptionsOk() (map[string]interface{}, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *SystemAuditRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given map[string]interface{} and assigns it to the Options field.
func (o *SystemAuditRequest) SetOptions(v map[string]interface{}) {
	o.Options = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SystemAuditRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuditRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SystemAuditRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SystemAuditRequest) SetType(v string) {
	o.Type = &v
}

func (o SystemAuditRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Local != nil {
		toSerialize["local"] = o.Local
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableSystemAuditRequest struct {
	value *SystemAuditRequest
	isSet bool
}

func (v NullableSystemAuditRequest) Get() *SystemAuditRequest {
	return v.value
}

func (v *NullableSystemAuditRequest) Set(val *SystemAuditRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemAuditRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemAuditRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemAuditRequest(val *SystemAuditRequest) *NullableSystemAuditRequest {
	return &NullableSystemAuditRequest{value: val, isSet: true}
}

func (v NullableSystemAuditRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemAuditRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemAuthRequest struct for SystemAuthRequest
type SystemAuthRequest struct {
	// Configuration for this mount, such as plugin_name.
	Config map[string]interface{} `json:"config,omitempty"`
	// User-friendly description for this credential backend.
	Description *string `json:"description,omitempty"`
	// Whether to give the mount access to Vault's external entropy.
	ExternalEntropyAccess *bool `json:"external_entropy_access,omitempty"`
	// Mark the mount as a local mount, which is not replicated and is unaffected by replication.
	Local *bool `json:"local,omitempty"`
	// The options to pass into the backend. Should be a json object with string keys and values.
	Options map[string]interface{} `json:"options,omitempty"`
	// Name of the auth plugin to use based from the name in the plugin catalog.
	PluginName *string `json:"plugin_name,omitempty"`
	// Whether to turn on seal wrapping for the mount.
	SealWrap *bool `json:"seal_wrap,omitempty"`
	// The type of the backend. Example: \"userpass\"
	Type *string `json:"type,omitempty"`
}

// NewSystemAuthRequest instantiates a new SystemAuthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemAuthRequest() *SystemAuthRequest {
	this := SystemAuthRequest{}
	var externalEntropyAccess bool = false
	this.ExternalEntropyAccess = &externalEntropyAccess
	var local bool = false
	this.Local = &local
	var sealWrap bool = false
	this.SealWrap = &sealWrap
	return &this
}

// NewSystemAuthRequestWithDefaults instantiates a new SystemAuthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemAuthRequestWithDefaults() *SystemAuthRequest {
	this := SystemAuthRequest{}
	var externalEntropyAccess bool = false
	this.ExternalEntropyAccess = &externalEntropyAccess
	var local bool = false
	this.Local = &local
	var sealWrap bool = false
	this.SealWrap = &sealWrap
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *SystemAuthRequest) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SystemAuthRequest) SetDescription(v string) {
	o.Description = &v
}

// GetExternalEntropyAccess returns the ExternalEntropyAccess field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetExternalEntropyAccess() bool {
	if o == nil || o.ExternalEntropyAccess == nil {
		var ret bool
		return ret
	}
	return *o.ExternalEntropyAccess
}

// GetExternalEntropyAccessOk returns a tuple with the ExternalEntropyAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetExternalEntropyAccessOk() (*bool, bool) {
	if o == nil || o.ExternalEntropyAccess == nil {
		return nil, false
	}
	return o.ExternalEntropyAccess, true
}

// HasExternalEntropyAccess returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasExternalEntropyAccess() bool {
	if o != nil && o.ExternalEntropyAccess != nil {
		return true
	}

	return false
}

// SetExternalEntropyAccess gets a reference to the given bool and assigns it to the ExternalEntropyAccess field.
func (o *SystemAuthRequest) SetExternalEntropyAccess(v bool) {
	o.ExternalEntropyAccess = &v
}

// GetLocal returns the Local field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetLocal() bool {
	if o == nil || o.Local == nil {
		var ret bool
		return ret
	}
	return *o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetLocalOk() (*bool, bool) {
	if o == nil || o.Local == nil {
		return nil, false
	}
	return o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasLocal() bool {
	if o != nil && o.Local != nil {
		return true
	}

	return false
}

// SetLocal gets a reference to the given bool and assigns it to the Local field.
func (o *SystemAuthRequest) SetLocal(v bool) {
	o.Local = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetOptions() map[string]interface{} {
	if o == nil || o.Options == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetOptionsOk() (map[string]interface{}, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given map[string]interface{} and assigns it to the Options field.
func (o *SystemAuthRequest) SetOptions(v map[string]interface{}) {
	o.Options = v
}

// GetPluginName returns the PluginName field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetPluginName() string {
	if o == nil || o.PluginName == nil {
		var ret string
		return ret
	}
	return *o.PluginName
}

// GetPluginNameOk returns a tuple with the PluginName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetPluginNameOk() (*string, bool) {
	if o == nil || o.PluginName == nil {
		return nil, false
	}
	return o.PluginName, true
}

// HasPluginName returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasPluginName() bool {
	if o != nil && o.PluginName != nil {
		return true
	}

	return false
}

// SetPluginName gets a reference to the given string and assigns it to the PluginName field.
func (o *SystemAuthRequest) SetPluginName(v string) {
	o.PluginName = &v
}

// GetSealWrap returns the SealWrap field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetSealWrap() bool {
	if o == nil || o.SealWrap == nil {
		var ret bool
		return ret
	}
	return *o.SealWrap
}

// GetSealWrapOk returns a tuple with the SealWrap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetSealWrapOk() (*bool, bool) {
	if o == nil || o.SealWrap == nil {
		return nil, false
	}
	return o.SealWrap, true
}

// HasSealWrap returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasSealWrap() bool {
	if o != nil && o.SealWrap != nil {
		return true
	}

	return false
}

// SetSealWrap gets a reference to the given bool and assigns it to the SealWrap field.
func (o *SystemAuthRequest) SetSealWrap(v bool) {
	o.SealWrap = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SystemAuthRequest) SetType(v string) {
	o.Type = &v
}

func (o SystemAuthRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ExternalEntropyAccess != nil {
		toSerialize["external_entropy_access"] = o.ExternalEntropyAccess
	}
	if o.Local != nil {
		toSerialize["local"] = o.Local
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.PluginName != nil {
		toSerialize["plugin_name"] = o.PluginName
	}
	if o.SealWrap != nil {
		toSerialize["seal_wrap"] = o.SealWrap
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableSystemAuthRequest struct {
	value *SystemAuthRequest
	isSet bool
}

func (v NullableSystemAuthRequest) Get() *SystemAuthRequest {
	return v.value
}

func (v *NullableSystemAuthRequest) Set(val *SystemAuthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemAuthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemAuthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemAuthRequest(val *SystemAuthRequest) *NullableSystemAuthRequest {
	return &NullableSystemAuthRequest{value: val, isSet: true}
}

func (v NullableSystemAuthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemAuthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemAuthTuneRequest struct for SystemAuthTuneRequest
type SystemAuthTuneRequest struct {
	// A list of headers to whitelist and allow a plugin to set on responses.
	AllowedResponseHeaders []string `json:"allowed_response_headers,omitempty"`
	// The list of keys in the request data object that will not be HMAC'ed by audit devices.
	AuditNonHmacRequestKeys []string `json:"audit_non_hmac_request_keys,omitempty"`
	// The list of keys in the response data object that will not be HMAC'ed by audit devices.
	AuditNonHmacResponseKeys []string `json:"audit_non_hmac_response_keys,omitempty"`
	// The default lease TTL for this mount.
	DefaultLeaseTtl *string `json:"default_lease_ttl,omitempty"`
	// User-friendly description for this credential backend.
	Description *string `json:"description,omitempty"`
	// Determines the visibility of the mount in the UI-specific listing endpoint. Accepted value are 'unauth' and ''.
	ListingVisibility *string `json:"listing_visibility,omitempty"`
	// The max lease TTL for this mount.
	MaxLeaseTtl *string `json:"max_lease_ttl,omitempty"`
	// The options to pass into the backend. Should be a json object with string keys and values.
	Options map[string]interface{} `json:"options,omitempty"`
	// A list of headers to whitelist and pass from the request to the plugin.
	PassthroughRequestHeaders []string `json:"passthrough_request_headers,omitempty"`
	// The type of token to issue (service or batch).
	TokenType *string `json:"token_type,omitempty"`
}

// NewSystemAuthTuneRequest instantiates a new SystemAuthTuneRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemAuthTuneRequest() *SystemAuthTuneRequest {
	this := SystemAuthTuneRequest{}
	return &this
}

// NewSystemAuthTuneRequestWithDefaults instantiates a new SystemAuthTuneRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemAuthTuneRequestWithDefaults() *SystemAuthTuneRequest {
	this := SystemAuthTuneRequest{}
	return &this
}

// GetAllowedResponseHeaders returns the AllowedResponseHeaders field value if set, zero value otherwise.
func (o *SystemAuthTuneRequest) GetAllowedResponseHeaders() []string {
	if o == nil || o.AllowedResponseHeaders == nil {
		var ret []string
		return ret
	}
	return o.AllowedResponseHeaders
}

// GetAllowedResponseHeadersOk returns a tuple with the AllowedResponseHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthTuneRequest) GetAllowedResponseHeadersOk() ([]string, bool) {
	if o == nil || o.AllowedResponseHeaders == nil {
		return nil, false
	}
	return o.AllowedResponseHeaders, true
}

// HasAllowedResponseHeaders returns a boolean if a field has been set.
func (o *SystemAuthTuneRequest) HasAllowedResponseHeaders() bool {
	if o != nil && o.AllowedResponseHeaders != nil {
		return true
	}

	return false
}

// SetAllowedResponseHeaders gets a reference to the given []string and assigns it to the AllowedResponseHeaders field.
func (o *SystemAuthTuneRequest) SetAllowedResponseHeaders(v []string) {
	o.AllowedResponseHeaders = v
}

// GetAuditNonHmacRequestKeys returns the AuditNonHmacRequestKeys field value if set, zero value otherwise.
func (o *SystemAuthTuneRequest) GetAuditNonHmacRequestKeys() []string {
	if o == nil || o.AuditNonHmacRequestKeys == nil {
		var ret []string
		return ret
	}
	return o.AuditNonHmacRequestKeys
}

// GetAuditNonHmacRequestKeysOk returns a tuple with the AuditNonHmacRequestKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthTuneRequest) GetAuditNonHmacRequestKeysOk() ([]string, bool) {
	if o == nil || o.AuditNonHmacRequestKeys == nil {
		return nil, false
	}
	return o.AuditNonHmacRequestKeys, true
}

// HasAuditNonHmacRequestKeys returns a boolean if a field has been set.
func (o *SystemAuthTuneRequest) HasAuditNonHmacRequestKeys() bool {
	if o != nil && o.AuditNonHmacRequestKeys != nil {
		return true
	}

	return false
}

// SetAuditNonHmacRequestKeys gets a reference to the given []string and assigns it to the AuditNonHmacRequestKeys field.
func (o *SystemAuthTuneRequest) SetAuditNonHmacRequestKeys(v []string) {
	o.AuditNonHmacRequestKeys = v
}

// GetAuditNonHmacResponseKeys returns the AuditNonHmacResponseKeys field value if set, zero value otherwise.
func (o *SystemAuthTuneRequest) GetAuditNonHmacResponseKeys() []string {
	if o == nil || o.AuditNonHmacResponseKeys == nil {
		var ret []string
		return ret
	}
	return o.AuditNonHmacResponseKeys
}

// GetAuditNonHmacResponseKeysOk returns a tuple with the AuditNonHmacResponseKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthTuneRequest) GetAuditNonHmacResponseKeysOk() ([]string, bool) {
	if o == nil || o.AuditNonHmacResponseKeys == nil {
		return nil, false
	}
	return o.AuditNonHmacResponseKeys, true
}

// HasAuditNonHmacResponseKeys returns a boolean if a field has been set.
func (o *SystemAuthTuneRequest) HasAuditNonHmacResponseKeys() bool {
	if o != nil && o.AuditNonHmacResponseKeys != nil {
		return true
	}

	return false
}

// SetAuditNonHmacResponseKeys gets a reference to the given []string and assigns it to the AuditNonHmacResponseKeys field.
func (o *SystemAuthTuneRequest) SetAuditNonHmacResponseKeys(v []string) {
	o.AuditNonHmacResponseKeys = v
}

// GetDefaultLeaseTtl returns the DefaultLeaseTtl field value if set, zero value otherwise.
func (o *SystemAuthTuneRequest) GetDefaultLeaseTtl() string {
	if o == nil || o.DefaultLeaseTtl == nil {
		var ret string
		return ret
	}
	return *o.DefaultLeaseTtl
}

// GetDefaultLeaseTtlOk returns a tuple with the DefaultLeaseTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthTuneRequest) GetDefaultLeaseTtlOk() (*string, bool) {
	if o == nil || o.DefaultLeaseTtl == nil {
		return nil, false
	}
	return o.DefaultLeaseTtl, true
}

// HasDefaultLeaseTtl returns a boolean if a field has been set.
func (o *SystemAuthTuneRequest) HasDefaultLeaseTtl() bool {
	if o != nil && o.DefaultLeaseTtl != nil {
		return true
	}

	return false
}

// SetDefaultLeaseTtl gets a reference to the given string and assigns it to the DefaultLeaseTtl field.
func (o *SystemAuthTuneRequest) SetDefaultLeaseTtl(v string) {
	o.DefaultLeaseTtl = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SystemAuthTuneRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthTuneRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SystemAuthTuneRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SystemAuthTuneRequest) SetDescription(v string) {
	o.Description = &v
}

// GetListingVisibility returns the ListingVisibility field value if set, zero value otherwise.
func (o *SystemAuthTuneRequest) GetListingVisibility() string {
	if o == nil || o.ListingVisibility == nil {
		var ret string
		return ret
	}
	return *o.ListingVisibility
}

// GetListingVisibilityOk returns a tuple with the ListingVisibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthTuneRequest) GetListingVisibilityOk() (*string, bool) {
	if o == nil || o.ListingVisibility == nil {
		return nil, false
	}
	return o.ListingVisibility, true
}

// HasListingVisibility returns a boolean if a field has been set.
func (o *SystemAuthTuneRequest) HasListingVisibility() bool {
	if o != nil && o.ListingVisibility != nil {
		return true
	}

	return false
}

// SetListingVisibility gets a reference to the given string and assigns it to the ListingVisibility field.
func (o *SystemAuthTuneRequest) SetListingVisibility(v string) {
	o.ListingVisibility = &v
}

// GetMaxLeaseTtl returns the MaxLeaseTtl field value if set, zero value otherwise.
func (o *SystemAuthTuneRequest) GetMaxLeaseTtl() string {
	if o == nil || o.MaxLeaseTtl == nil {
		var ret string
		return ret
	}
	return *o.MaxLeaseTtl
}

// GetMaxLeaseTtlOk returns a tuple with the MaxLeaseTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthTuneRequest) GetMaxLeaseTtlOk() (*string, bool) {
	if o == nil || o.MaxLeaseTtl == nil {
		return nil, false
	}
	return o.MaxLeaseTtl, true
}

// HasMaxLeaseTtl returns a boolean if a field has been set.
func (o *SystemAuthTuneRequest) HasMaxLeaseTtl() bool {
	if o != nil && o.MaxLeaseTtl != nil {
		return true
	}

	return false
}

// SetMaxLeaseTtl gets a reference to the given string and assigns it to the MaxLeaseTtl field.
func (o *SystemAuthTuneRequest) SetMaxLeaseTtl(v string) {
	o.MaxLeaseTtl = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *SystemAuthTuneRequest) GetOptions() map[string]interface{} {
	if o == nil || o.Options == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthTuneRequest) GetOptionsOk() (map[string]interface{}, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *SystemAuthTuneRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given map[string]interface{} and assigns it to the Options field.
func (o *SystemAuthTuneRequest) SetOptions(v map[string]interface{}) {
	o.Options = v
}

// GetPassthroughRequestHeaders returns the PassthroughRequestHeaders field value if set, zero value otherwise.
func (o *SystemAuthTuneRequest) GetPassthroughRequestHeaders() []string {
	if o == nil || o.PassthroughRequestHeaders == nil {
		var ret []string
		return ret
	}
	return o.PassthroughRequestHeaders
}

// GetPassthroughRequestHeadersOk returns a tuple with the PassthroughRequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthTuneRequest) GetPassthroughRequestHeadersOk() ([]string, bool) {
	if o == nil || o.PassthroughRequestHeaders == nil {
		return nil, false
	}
	return o.PassthroughRequestHeaders, true
}

// HasPassthroughRequestHeaders returns a boolean if a field has been set.
func (o *SystemAuthTuneRequest) HasPassthroughRequestHeaders() bool {
	if o != nil && o.PassthroughRequestHeaders != nil {
		return true
	}

	return false
}

// SetPassthroughRequestHeaders gets a reference to the given []string and assigns it to the PassthroughRequestHeaders field.
func (o *SystemAuthTuneRequest) SetPassthroughRequestHeaders(v []string) {
	o.PassthroughRequestHeaders = v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *SystemAuthTuneRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthTuneRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *SystemAuthTuneRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *SystemAuthTuneRequest) SetTokenType(v string) {
	o.TokenType = &v
}

func (o SystemAuthTuneRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedResponseHeaders != nil {
		toSerialize["allowed_response_headers"] = o.AllowedResponseHeaders
	}
	if o.AuditNonHmacRequestKeys != nil {
		toSerialize["audit_non_hmac_request_keys"] = o.AuditNonHmacRequestKeys
	}
	if o.AuditNonHmacResponseKeys != nil {
		toSerialize["audit_non_hmac_response_keys"] = o.AuditNonHmacResponseKeys
	}
	if o.DefaultLeaseTtl != nil {
		toSerialize["default_lease_ttl"] = o.DefaultLeaseTtl
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ListingVisibility != nil {
		toSerialize["listing_visibility"] = o.ListingVisibility
	}
	if o.MaxLeaseTtl != nil {
		toSerialize["max_lease_ttl"] = o.MaxLeaseTtl
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.PassthroughRequestHeaders != nil {
		toSerialize["passthrough_request_headers"] = o.PassthroughRequestHeaders
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	return json.Marshal(toSerialize)
}

type NullableSystemAuthTuneRequest struct {
	value *SystemAuthTuneRequest
	isSet bool
}

func (v NullableSystemAuthTuneRequest) Get() *SystemAuthTuneRequest {
	return v.value
}

func (v *NullableSystemAuthTuneRequest) Set(val *SystemAuthTuneRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemAuthTuneRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemAuthTuneRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemAuthTuneRequest(val *SystemAuthTuneRequest) *NullableSystemAuthTuneRequest {
	return &NullableSystemAuthTuneRequest{value: val, isSet: true}
}

func (v NullableSystemAuthTuneRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemAuthTuneRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemCapabilitiesAccessorRequest struct for SystemCapabilitiesAccessorRequest
type SystemCapabilitiesAccessorRequest struct {
	// Accessor of the token for which capabilities are being queried.
	Accessor *string `json:"accessor,omitempty"`
	// Use 'paths' instead.
	// Deprecated
	Path []string `json:"path,omitempty"`
	// Paths on which capabilities are being queried.
	Paths []string `json:"paths,omitempty"`
}

// NewSystemCapabilitiesAccessorRequest instantiates a new SystemCapabilitiesAccessorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemCapabilitiesAccessorRequest() *SystemCapabilitiesAccessorRequest {
	this := SystemCapabilitiesAccessorRequest{}
	return &this
}

// NewSystemCapabilitiesAccessorRequestWithDefaults instantiates a new SystemCapabilitiesAccessorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemCapabilitiesAccessorRequestWithDefaults() *SystemCapabilitiesAccessorRequest {
	this := SystemCapabilitiesAccessorRequest{}
	return &this
}

// GetAccessor returns the Accessor field value if set, zero value otherwise.
func (o *SystemCapabilitiesAccessorRequest) GetAccessor() string {
	if o == nil || o.Accessor == nil {
		var ret string
		return ret
	}
	return *o.Accessor
}

// GetAccessorOk returns a tuple with the Accessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemCapabilitiesAccessorRequest) GetAccessorOk() (*string, bool) {
	if o == nil || o.Accessor == nil {
		return nil, false
	}
	return o.Accessor, true
}

// HasAccessor returns a boolean if a field has been set.
func (o *SystemCapabilitiesAccessorRequest) HasAccessor() bool {
	if o != nil && o.Accessor != nil {
		return true
	}

	return false
}

// SetAccessor gets a reference to the given string and assigns it to the Accessor field.
func (o *SystemCapabilitiesAccessorRequest) SetAccessor(v string) {
	o.Accessor = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
// Deprecated
func (o *SystemCapabilitiesAccessorRequest) GetPath() []string {
	if o == nil || o.Path == nil {
		var ret []string
		return ret
	}
	return o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *SystemCapabilitiesAccessorRequest) GetPathOk() ([]string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SystemCapabilitiesAccessorRequest) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given []string and assigns it to the Path field.
// Deprecated
func (o *SystemCapabilitiesAccessorRequest) SetPath(v []string) {
	o.Path = v
}

// GetPaths returns the Paths field value if set, zero value otherwise.
func (o *SystemCapabilitiesAccessorRequest) GetPaths() []string {
	if o == nil || o.Paths == nil {
		var ret []string
		return ret
	}
	return o.Paths
}

// GetPathsOk returns a tuple with the Paths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemCapabilitiesAccessorRequest) GetPathsOk() ([]string, bool) {
	if o == nil || o.Paths == nil {
		return nil, false
	}
	return o.Paths, true
}

// HasPaths returns a boolean if a field has been set.
func (o *SystemCapabilitiesAccessorRequest) HasPaths() bool {
	if o != nil && o.Paths != nil {
		return true
	}

	return false
}

// SetPaths gets a reference to the given []string and assigns it to the Paths field.
func (o *SystemCapabilitiesAccessorRequest) SetPaths(v []string) {
	o.Paths = v
}

func (o SystemCapabilitiesAccessorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accessor != nil {
		toSerialize["accessor"] = o.Accessor
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Paths != nil {
		toSerialize["paths"] = o.Paths
	}
	return json.Marshal(toSerialize)
}

type NullableSystemCapabilitiesAccessorRequest struct {
	value *SystemCapabilitiesAccessorRequest
	isSet bool
}

func (v NullableSystemCapabilitiesAccessorRequest) Get() *SystemCapabilitiesAccessorRequest {
	return v.value
}

func (v *NullableSystemCapabilitiesAccessorRequest) Set(val *SystemCapabilitiesAccessorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemCapabilitiesAccessorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemCapabilitiesAccessorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemCapabilitiesAccessorRequest(val *SystemCapabilitiesAccessorRequest) *NullableSystemCapabilitiesAccessorRequest {
	return &NullableSystemCapabilitiesAccessorRequest{value: val, isSet: true}
}

func (v NullableSystemCapabilitiesAccessorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemCapabilitiesAccessorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemCapabilitiesRequest struct for SystemCapabilitiesRequest
type SystemCapabilitiesRequest struct {
	// Use 'paths' instead.
	// Deprecated
	Path []string `json:"path,omitempty"`
	// Paths on which capabilities are being queried.
	Paths []string `json:"paths,omitempty"`
	// Token for which capabilities are being queried.
	Token *string `json:"token,omitempty"`
}

// NewSystemCapabilitiesRequest instantiates a new SystemCapabilitiesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemCapabilitiesRequest() *SystemCapabilitiesRequest {
	this := SystemCapabilitiesRequest{}
	return &this
}

// NewSystemCapabilitiesRequestWithDefaults instantiates a new SystemCapabilitiesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemCapabilitiesRequestWithDefaults() *SystemCapabilitiesRequest {
	this := SystemCapabilitiesRequest{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
// Deprecated
func (o *SystemCapabilitiesRequest) GetPath() []string {
	if o == nil || o.Path == nil {
		var ret []string
		return ret
	}
	return o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *SystemCapabilitiesRequest) GetPathOk() ([]string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SystemCapabilitiesRequest) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given []string and assigns it to the Path field.
// Deprecated
func (o *SystemCapabilitiesRequest) SetPath(v []string) {
	o.Path = v
}

// GetPaths returns the Paths field value if set, zero value otherwise.
func (o *SystemCapabilitiesRequest) GetPaths() []string {
	if o == nil || o.Paths == nil {
		var ret []string
		return ret
	}
	return o.Paths
}

// GetPathsOk returns a tuple with the Paths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemCapabilitiesRequest) GetPathsOk() ([]string, bool) {
	if o == nil || o.Paths == nil {
		return nil, false
	}
	return o.Paths, true
}

// HasPaths returns a boolean if a field has been set.
func (o *SystemCapabilitiesRequest) HasPaths() bool {
	if o != nil && o.Paths != nil {
		return true
	}

	return false
}

// SetPaths gets a reference to the given []string and assigns it to the Paths field.
func (o *SystemCapabilitiesRequest) SetPaths(v []string) {
	o.Paths = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *SystemCapabilitiesRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemCapabilitiesRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *SystemCapabilitiesRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *SystemCapabilitiesRequest) SetToken(v string) {
	o.Token = &v
}

func (o SystemCapabilitiesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Paths != nil {
		toSerialize["paths"] = o.Paths
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableSystemCapabilitiesRequest struct {
	value *SystemCapabilitiesRequest
	isSet bool
}

func (v NullableSystemCapabilitiesRequest) Get() *SystemCapabilitiesRequest {
	return v.value
}

func (v *NullableSystemCapabilitiesRequest) Set(val *SystemCapabilitiesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemCapabilitiesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemCapabilitiesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemCapabilitiesRequest(val *SystemCapabilitiesRequest) *NullableSystemCapabilitiesRequest {
	return &NullableSystemCapabilitiesRequest{value: val, isSet: true}
}

func (v NullableSystemCapabilitiesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemCapabilitiesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemCapabilitiesSelfRequest struct for SystemCapabilitiesSelfRequest
type SystemCapabilitiesSelfRequest struct {
	// Use 'paths' instead.
	// Deprecated
	Path []string `json:"path,omitempty"`
	// Paths on which capabilities are being queried.
	Paths []string `json:"paths,omitempty"`
	// Token for which capabilities are being queried.
	Token *string `json:"token,omitempty"`
}

// NewSystemCapabilitiesSelfRequest instantiates a new SystemCapabilitiesSelfRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemCapabilitiesSelfRequest() *SystemCapabilitiesSelfRequest {
	this := SystemCapabilitiesSelfRequest{}
	return &this
}

// NewSystemCapabilitiesSelfRequestWithDefaults instantiates a new SystemCapabilitiesSelfRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemCapabilitiesSelfRequestWithDefaults() *SystemCapabilitiesSelfRequest {
	this := SystemCapabilitiesSelfRequest{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
// Deprecated
func (o *SystemCapabilitiesSelfRequest) GetPath() []string {
	if o == nil || o.Path == nil {
		var ret []string
		return ret
	}
	return o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *SystemCapabilitiesSelfRequest) GetPathOk() ([]string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SystemCapabilitiesSelfRequest) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given []string and assigns it to the Path field.
// Deprecated
func (o *SystemCapabilitiesSelfRequest) SetPath(v []string) {
	o.Path = v
}

// GetPaths returns the Paths field value if set, zero value otherwise.
func (o *SystemCapabilitiesSelfRequest) GetPaths() []string {
	if o == nil || o.Paths == nil {
		var ret []string
		return ret
	}
	return o.Paths
}

// GetPathsOk returns a tuple with the Paths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemCapabilitiesSelfRequest) GetPathsOk() ([]string, bool) {
	if o == nil || o.Paths == nil {
		return nil, false
	}
	return o.Paths, true
}

// HasPaths returns a boolean if a field has been set.
func (o *SystemCapabilitiesSelfRequest) HasPaths() bool {
	if o != nil && o.Paths != nil {
		return true
	}

	return false
}

// SetPaths gets a reference to the given []string and assigns it to the Paths field.
func (o *SystemCapabilitiesSelfRequest) SetPaths(v []string) {
	o.Paths = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *SystemCapabilitiesSelfRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemCapabilitiesSelfRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *SystemCapabilitiesSelfRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *SystemCapabilitiesSelfRequest) SetToken(v string) {
	o.Token = &v
}

func (o SystemCapabilitiesSelfRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Paths != nil {
		toSerialize["paths"] = o.Paths
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableSystemCapabilitiesSelfRequest struct {
	value *SystemCapabilitiesSelfRequest
	isSet bool
}

func (v NullableSystemCapabilitiesSelfRequest) Get() *SystemCapabilitiesSelfRequest {
	return v.value
}

func (v *NullableSystemCapabilitiesSelfRequest) Set(val *SystemCapabilitiesSelfRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemCapabilitiesSelfRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemCapabilitiesSelfRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemCapabilitiesSelfRequest(val *SystemCapabilitiesSelfRequest) *NullableSystemCapabilitiesSelfRequest {
	return &NullableSystemCapabilitiesSelfRequest{value: val, isSet: true}
}

func (v NullableSystemCapabilitiesSelfRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemCapabilitiesSelfRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemConfigAuditingRequestHeadersRequest struct for SystemConfigAuditingRequestHeadersRequest
type SystemConfigAuditingRequestHeadersRequest struct {
	Hmac *bool `json:"hmac,omitempty"`
}

// NewSystemConfigAuditingRequestHeadersRequest instantiates a new SystemConfigAuditingRequestHeadersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemConfigAuditingRequestHeadersRequest() *SystemConfigAuditingRequestHeadersRequest {
	this := SystemConfigAuditingRequestHeadersRequest{}
	return &this
}

// NewSystemConfigAuditingRequestHeadersRequestWithDefaults instantiates a new SystemConfigAuditingRequestHeadersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemConfigAuditingRequestHeadersRequestWithDefaults() *SystemConfigAuditingRequestHeadersRequest {
	this := SystemConfigAuditingRequestHeadersRequest{}
	return &this
}

// GetHmac returns the Hmac field value if set, zero value otherwise.
func (o *SystemConfigAuditingRequestHeadersRequest) GetHmac() bool {
	if o == nil || o.Hmac == nil {
		var ret bool
		return ret
	}
	return *o.Hmac
}

// GetHmacOk returns a tuple with the Hmac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemConfigAuditingRequestHeadersRequest) GetHmacOk() (*bool, bool) {
	if o == nil || o.Hmac == nil {
		return nil, false
	}
	return o.Hmac, true
}

// HasHmac returns a boolean if a field has been set.
func (o *SystemConfigAuditingRequestHeadersRequest) HasHmac() bool {
	if o != nil && o.Hmac != nil {
		return true
	}

	return false
}

// SetHmac gets a reference to the given bool and assigns it to the Hmac field.
func (o *SystemConfigAuditingRequestHeadersRequest) SetHmac(v bool) {
	o.Hmac = &v
}

func (o SystemConfigAuditingRequestHeadersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hmac != nil {
		toSerialize["hmac"] = o.Hmac
	}
	return json.Marshal(toSerialize)
}

type NullableSystemConfigAuditingRequestHeadersRequest struct {
	value *SystemConfigAuditingRequestHeadersRequest
	isSet bool
}

func (v NullableSystemConfigAuditingRequestHeadersRequest) Get() *SystemConfigAuditingRequestHeadersRequest {
	return v.value
}

func (v *NullableSystemConfigAuditingRequestHeadersRequest) Set(val *SystemConfigAuditingRequestHeadersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemConfigAuditingRequestHeadersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemConfigAuditingRequestHeadersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemConfigAuditingRequestHeadersRequest(val *SystemConfigAuditingRequestHeadersRequest) *NullableSystemConfigAuditingRequestHeadersRequest {
	return &NullableSystemConfigAuditingRequestHeadersRequest{value: val, isSet: true}
}

func (v NullableSystemConfigAuditingRequestHeadersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemConfigAuditingRequestHeadersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemConfigCorsRequest struct for SystemConfigCorsRequest
type SystemConfigCorsRequest struct {
	// A comma-separated string or array of strings indicating headers that are allowed on cross-origin requests.
	AllowedHeaders []string `json:"allowed_headers,omitempty"`
	// A comma-separated string or array of strings indicating origins that may make cross-origin requests.
	AllowedOrigins []string `json:"allowed_origins,omitempty"`
	// Enables or disables CORS headers on requests.
	Enable *bool `json:"enable,omitempty"`
}

// NewSystemConfigCorsRequest instantiates a new SystemConfigCorsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemConfigCorsRequest() *SystemConfigCorsRequest {
	this := SystemConfigCorsRequest{}
	return &this
}

// NewSystemConfigCorsRequestWithDefaults instantiates a new SystemConfigCorsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemConfigCorsRequestWithDefaults() *SystemConfigCorsRequest {
	this := SystemConfigCorsRequest{}
	return &this
}

// GetAllowedHeaders returns the AllowedHeaders field value if set, zero value otherwise.
func (o *SystemConfigCorsRequest) GetAllowedHeaders() []string {
	if o == nil || o.AllowedHeaders == nil {
		var ret []string
		return ret
	}
	return o.AllowedHeaders
}

// GetAllowedHeadersOk returns a tuple with the AllowedHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemConfigCorsRequest) GetAllowedHeadersOk() ([]string, bool) {
	if o == nil || o.AllowedHeaders == nil {
		return nil, false
	}
	return o.AllowedHeaders, true
}

// HasAllowedHeaders returns a boolean if a field has been set.
func (o *SystemConfigCorsRequest) HasAllowedHeaders() bool {
	if o != nil && o.AllowedHeaders != nil {
		return true
	}

	return false
}

// SetAllowedHeaders gets a reference to the given []string and assigns it to the AllowedHeaders field.
func (o *SystemConfigCorsRequest) SetAllowedHeaders(v []string) {
	o.AllowedHeaders = v
}

// GetAllowedOrigins returns the AllowedOrigins field value if set, zero value otherwise.
func (o *SystemConfigCorsRequest) GetAllowedOrigins() []string {
	if o == nil || o.AllowedOrigins == nil {
		var ret []string
		return ret
	}
	return o.AllowedOrigins
}

// GetAllowedOriginsOk returns a tuple with the AllowedOrigins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemConfigCorsRequest) GetAllowedOriginsOk() ([]string, bool) {
	if o == nil || o.AllowedOrigins == nil {
		return nil, false
	}
	return o.AllowedOrigins, true
}

// HasAllowedOrigins returns a boolean if a field has been set.
func (o *SystemConfigCorsRequest) HasAllowedOrigins() bool {
	if o != nil && o.AllowedOrigins != nil {
		return true
	}

	return false
}

// SetAllowedOrigins gets a reference to the given []string and assigns it to the AllowedOrigins field.
func (o *SystemConfigCorsRequest) SetAllowedOrigins(v []string) {
	o.AllowedOrigins = v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *SystemConfigCorsRequest) GetEnable() bool {
	if o == nil || o.Enable == nil {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemConfigCorsRequest) GetEnableOk() (*bool, bool) {
	if o == nil || o.Enable == nil {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *SystemConfigCorsRequest) HasEnable() bool {
	if o != nil && o.Enable != nil {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *SystemConfigCorsRequest) SetEnable(v bool) {
	o.Enable = &v
}

func (o SystemConfigCorsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedHeaders != nil {
		toSerialize["allowed_headers"] = o.AllowedHeaders
	}
	if o.AllowedOrigins != nil {
		toSerialize["allowed_origins"] = o.AllowedOrigins
	}
	if o.Enable != nil {
		toSerialize["enable"] = o.Enable
	}
	return json.Marshal(toSerialize)
}

type NullableSystemConfigCorsRequest struct {
	value *SystemConfigCorsRequest
	isSet bool
}

func (v NullableSystemConfigCorsRequest) Get() *SystemConfigCorsRequest {
	return v.value
}

func (v *NullableSystemConfigCorsRequest) Set(val *SystemConfigCorsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemConfigCorsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemConfigCorsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemConfigCorsRequest(val *SystemConfigCorsRequest) *NullableSystemConfigCorsRequest {
	return &NullableSystemConfigCorsRequest{value: val, isSet: true}
}

func (v NullableSystemConfigCorsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemConfigCorsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemConfigUiHeadersRequest struct for SystemConfigUiHeadersRequest
type SystemConfigUiHeadersRequest struct {
	// Returns multiple values if true
	Multivalue *bool `json:"multivalue,omitempty"`
	// The values to set the header.
	Values []string `json:"values,omitempty"`
}

// NewSystemConfigUiHeadersRequest instantiates a new SystemConfigUiHeadersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemConfigUiHeadersRequest() *SystemConfigUiHeadersRequest {
	this := SystemConfigUiHeadersRequest{}
	return &this
}

// NewSystemConfigUiHeadersRequestWithDefaults instantiates a new SystemConfigUiHeadersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemConfigUiHeadersRequestWithDefaults() *SystemConfigUiHeadersRequest {
	this := SystemConfigUiHeadersRequest{}
	return &this
}

// GetMultivalue returns the Multivalue field value if set, zero value otherwise.
func (o *SystemConfigUiHeadersRequest) GetMultivalue() bool {
	if o == nil || o.Multivalue == nil {
		var ret bool
		return ret
	}
	return *o.Multivalue
}

// GetMultivalueOk returns a tuple with the Multivalue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemConfigUiHeadersRequest) GetMultivalueOk() (*bool, bool) {
	if o == nil || o.Multivalue == nil {
		return nil, false
	}
	return o.Multivalue, true
}

// HasMultivalue returns a boolean if a field has been set.
func (o *SystemConfigUiHeadersRequest) HasMultivalue() bool {
	if o != nil && o.Multivalue != nil {
		return true
	}

	return false
}

// SetMultivalue gets a reference to the given bool and assigns it to the Multivalue field.
func (o *SystemConfigUiHeadersRequest) SetMultivalue(v bool) {
	o.Multivalue = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *SystemConfigUiHeadersRequest) GetValues() []string {
	if o == nil || o.Values == nil {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemConfigUiHeadersRequest) GetValuesOk() ([]string, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *SystemConfigUiHeadersRequest) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *SystemConfigUiHeadersRequest) SetValues(v []string) {
	o.Values = v
}

func (o SystemConfigUiHeadersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Multivalue != nil {
		toSerialize["multivalue"] = o.Multivalue
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableSystemConfigUiHeadersRequest struct {
	value *SystemConfigUiHeadersRequest
	isSet bool
}

func (v NullableSystemConfigUiHeadersRequest) Get() *SystemConfigUiHeadersRequest {
	return v.value
}

func (v *NullableSystemConfigUiHeadersRequest) Set(val *SystemConfigUiHeadersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemConfigUiHeadersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemConfigUiHeadersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemConfigUiHeadersRequest(val *SystemConfigUiHeadersRequest) *NullableSystemConfigUiHeadersRequest {
	return &NullableSystemConfigUiHeadersRequest{value: val, isSet: true}
}

func (v NullableSystemConfigUiHeadersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemConfigUiHeadersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemGenerateRootAttemptRequest struct for SystemGenerateRootAttemptRequest
type SystemGenerateRootAttemptRequest struct {
	// Specifies a base64-encoded PGP public key.
	PgpKey *string `json:"pgp_key,omitempty"`
}

// NewSystemGenerateRootAttemptRequest instantiates a new SystemGenerateRootAttemptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemGenerateRootAttemptRequest() *SystemGenerateRootAttemptRequest {
	this := SystemGenerateRootAttemptRequest{}
	return &this
}

// NewSystemGenerateRootAttemptRequestWithDefaults instantiates a new SystemGenerateRootAttemptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemGenerateRootAttemptRequestWithDefaults() *SystemGenerateRootAttemptRequest {
	this := SystemGenerateRootAttemptRequest{}
	return &this
}

// GetPgpKey returns the PgpKey field value if set, zero value otherwise.
func (o *SystemGenerateRootAttemptRequest) GetPgpKey() string {
	if o == nil || o.PgpKey == nil {
		var ret string
		return ret
	}
	return *o.PgpKey
}

// GetPgpKeyOk returns a tuple with the PgpKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGenerateRootAttemptRequest) GetPgpKeyOk() (*string, bool) {
	if o == nil || o.PgpKey == nil {
		return nil, false
	}
	return o.PgpKey, true
}

// HasPgpKey returns a boolean if a field has been set.
func (o *SystemGenerateRootAttemptRequest) HasPgpKey() bool {
	if o != nil && o.PgpKey != nil {
		return true
	}

	return false
}

// SetPgpKey gets a reference to the given string and assigns it to the PgpKey field.
func (o *SystemGenerateRootAttemptRequest) SetPgpKey(v string) {
	o.PgpKey = &v
}

func (o SystemGenerateRootAttemptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PgpKey != nil {
		toSerialize["pgp_key"] = o.PgpKey
	}
	return json.Marshal(toSerialize)
}

type NullableSystemGenerateRootAttemptRequest struct {
	value *SystemGenerateRootAttemptRequest
	isSet bool
}

func (v NullableSystemGenerateRootAttemptRequest) Get() *SystemGenerateRootAttemptRequest {
	return v.value
}

func (v *NullableSystemGenerateRootAttemptRequest) Set(val *SystemGenerateRootAttemptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemGenerateRootAttemptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemGenerateRootAttemptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemGenerateRootAttemptRequest(val *SystemGenerateRootAttemptRequest) *NullableSystemGenerateRootAttemptRequest {
	return &NullableSystemGenerateRootAttemptRequest{value: val, isSet: true}
}

func (v NullableSystemGenerateRootAttemptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemGenerateRootAttemptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemGenerateRootRequest struct for SystemGenerateRootRequest
type SystemGenerateRootRequest struct {
	// Specifies a base64-encoded PGP public key.
	PgpKey *string `json:"pgp_key,omitempty"`
}

// NewSystemGenerateRootRequest instantiates a new SystemGenerateRootRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemGenerateRootRequest() *SystemGenerateRootRequest {
	this := SystemGenerateRootRequest{}
	return &this
}

// NewSystemGenerateRootRequestWithDefaults instantiates a new SystemGenerateRootRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemGenerateRootRequestWithDefaults() *SystemGenerateRootRequest {
	this := SystemGenerateRootRequest{}
	return &this
}

// GetPgpKey returns the PgpKey field value if set, zero value otherwise.
func (o *SystemGenerateRootRequest) GetPgpKey() string {
	if o == nil || o.PgpKey == nil {
		var ret string
		return ret
	}
	return *o.PgpKey
}

// GetPgpKeyOk returns a tuple with the PgpKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGenerateRootRequest) GetPgpKeyOk() (*string, bool) {
	if o == nil || o.PgpKey == nil {
		return nil, false
	}
	return o.PgpKey, true
}

// HasPgpKey returns a boolean if a field has been set.
func (o *SystemGenerateRootRequest) HasPgpKey() bool {
	if o != nil && o.PgpKey != nil {
		return true
	}

	return false
}

// SetPgpKey gets a reference to the given string and assigns it to the PgpKey field.
func (o *SystemGenerateRootRequest) SetPgpKey(v string) {
	o.PgpKey = &v
}

func (o SystemGenerateRootRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PgpKey != nil {
		toSerialize["pgp_key"] = o.PgpKey
	}
	return json.Marshal(toSerialize)
}

type NullableSystemGenerateRootRequest struct {
	value *SystemGenerateRootRequest
	isSet bool
}

func (v NullableSystemGenerateRootRequest) Get() *SystemGenerateRootRequest {
	return v.value
}

func (v *NullableSystemGenerateRootRequest) Set(val *SystemGenerateRootRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemGenerateRootRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemGenerateRootRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemGenerateRootRequest(val *SystemGenerateRootRequest) *NullableSystemGenerateRootRequest {
	return &NullableSystemGenerateRootRequest{value: val, isSet: true}
}

func (v NullableSystemGenerateRootRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemGenerateRootRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemGenerateRootUpdateRequest struct for SystemGenerateRootUpdateRequest
type SystemGenerateRootUpdateRequest struct {
	// Specifies a single unseal key share.
	Key *string `json:"key,omitempty"`
	// Specifies the nonce of the attempt.
	Nonce *string `json:"nonce,omitempty"`
}

// NewSystemGenerateRootUpdateRequest instantiates a new SystemGenerateRootUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemGenerateRootUpdateRequest() *SystemGenerateRootUpdateRequest {
	this := SystemGenerateRootUpdateRequest{}
	return &this
}

// NewSystemGenerateRootUpdateRequestWithDefaults instantiates a new SystemGenerateRootUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemGenerateRootUpdateRequestWithDefaults() *SystemGenerateRootUpdateRequest {
	this := SystemGenerateRootUpdateRequest{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SystemGenerateRootUpdateRequest) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGenerateRootUpdateRequest) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SystemGenerateRootUpdateRequest) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SystemGenerateRootUpdateRequest) SetKey(v string) {
	o.Key = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *SystemGenerateRootUpdateRequest) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGenerateRootUpdateRequest) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *SystemGenerateRootUpdateRequest) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *SystemGenerateRootUpdateRequest) SetNonce(v string) {
	o.Nonce = &v
}

func (o SystemGenerateRootUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	return json.Marshal(toSerialize)
}

type NullableSystemGenerateRootUpdateRequest struct {
	value *SystemGenerateRootUpdateRequest
	isSet bool
}

func (v NullableSystemGenerateRootUpdateRequest) Get() *SystemGenerateRootUpdateRequest {
	return v.value
}

func (v *NullableSystemGenerateRootUpdateRequest) Set(val *SystemGenerateRootUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemGenerateRootUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemGenerateRootUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemGenerateRootUpdateRequest(val *SystemGenerateRootUpdateRequest) *NullableSystemGenerateRootUpdateRequest {
	return &NullableSystemGenerateRootUpdateRequest{value: val, isSet: true}
}

func (v NullableSystemGenerateRootUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemGenerateRootUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemInitRequest struct for SystemInitRequest
type SystemInitRequest struct {
	// Specifies an array of PGP public keys used to encrypt the output unseal keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as `secret_shares`.
	PgpKeys []string `json:"pgp_keys,omitempty"`
	// Specifies an array of PGP public keys used to encrypt the output recovery keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as `recovery_shares`.
	RecoveryPgpKeys []string `json:"recovery_pgp_keys,omitempty"`
	// Specifies the number of shares to split the recovery key into.
	RecoveryShares *int32 `json:"recovery_shares,omitempty"`
	// Specifies the number of shares required to reconstruct the recovery key. This must be less than or equal to `recovery_shares`.
	RecoveryThreshold *int32 `json:"recovery_threshold,omitempty"`
	// Specifies a PGP public key used to encrypt the initial root token. The key must be base64-encoded from its original binary representation.
	RootTokenPgpKey *string `json:"root_token_pgp_key,omitempty"`
	// Specifies the number of shares to split the unseal key into.
	SecretShares *int32 `json:"secret_shares,omitempty"`
	// Specifies the number of shares required to reconstruct the unseal key. This must be less than or equal secret_shares. If using Vault HSM with auto-unsealing, this value must be the same as `secret_shares`.
	SecretThreshold *int32 `json:"secret_threshold,omitempty"`
	// Specifies the number of shares that should be encrypted by the HSM and stored for auto-unsealing. Currently must be the same as `secret_shares`.
	StoredShares *int32 `json:"stored_shares,omitempty"`
}

// NewSystemInitRequest instantiates a new SystemInitRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemInitRequest() *SystemInitRequest {
	this := SystemInitRequest{}
	return &this
}

// NewSystemInitRequestWithDefaults instantiates a new SystemInitRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemInitRequestWithDefaults() *SystemInitRequest {
	this := SystemInitRequest{}
	return &this
}

// GetPgpKeys returns the PgpKeys field value if set, zero value otherwise.
func (o *SystemInitRequest) GetPgpKeys() []string {
	if o == nil || o.PgpKeys == nil {
		var ret []string
		return ret
	}
	return o.PgpKeys
}

// GetPgpKeysOk returns a tuple with the PgpKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetPgpKeysOk() ([]string, bool) {
	if o == nil || o.PgpKeys == nil {
		return nil, false
	}
	return o.PgpKeys, true
}

// HasPgpKeys returns a boolean if a field has been set.
func (o *SystemInitRequest) HasPgpKeys() bool {
	if o != nil && o.PgpKeys != nil {
		return true
	}

	return false
}

// SetPgpKeys gets a reference to the given []string and assigns it to the PgpKeys field.
func (o *SystemInitRequest) SetPgpKeys(v []string) {
	o.PgpKeys = v
}

// GetRecoveryPgpKeys returns the RecoveryPgpKeys field value if set, zero value otherwise.
func (o *SystemInitRequest) GetRecoveryPgpKeys() []string {
	if o == nil || o.RecoveryPgpKeys == nil {
		var ret []string
		return ret
	}
	return o.RecoveryPgpKeys
}

// GetRecoveryPgpKeysOk returns a tuple with the RecoveryPgpKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetRecoveryPgpKeysOk() ([]string, bool) {
	if o == nil || o.RecoveryPgpKeys == nil {
		return nil, false
	}
	return o.RecoveryPgpKeys, true
}

// HasRecoveryPgpKeys returns a boolean if a field has been set.
func (o *SystemInitRequest) HasRecoveryPgpKeys() bool {
	if o != nil && o.RecoveryPgpKeys != nil {
		return true
	}

	return false
}

// SetRecoveryPgpKeys gets a reference to the given []string and assigns it to the RecoveryPgpKeys field.
func (o *SystemInitRequest) SetRecoveryPgpKeys(v []string) {
	o.RecoveryPgpKeys = v
}

// GetRecoveryShares returns the RecoveryShares field value if set, zero value otherwise.
func (o *SystemInitRequest) GetRecoveryShares() int32 {
	if o == nil || o.RecoveryShares == nil {
		var ret int32
		return ret
	}
	return *o.RecoveryShares
}

// GetRecoverySharesOk returns a tuple with the RecoveryShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetRecoverySharesOk() (*int32, bool) {
	if o == nil || o.RecoveryShares == nil {
		return nil, false
	}
	return o.RecoveryShares, true
}

// HasRecoveryShares returns a boolean if a field has been set.
func (o *SystemInitRequest) HasRecoveryShares() bool {
	if o != nil && o.RecoveryShares != nil {
		return true
	}

	return false
}

// SetRecoveryShares gets a reference to the given int32 and assigns it to the RecoveryShares field.
func (o *SystemInitRequest) SetRecoveryShares(v int32) {
	o.RecoveryShares = &v
}

// GetRecoveryThreshold returns the RecoveryThreshold field value if set, zero value otherwise.
func (o *SystemInitRequest) GetRecoveryThreshold() int32 {
	if o == nil || o.RecoveryThreshold == nil {
		var ret int32
		return ret
	}
	return *o.RecoveryThreshold
}

// GetRecoveryThresholdOk returns a tuple with the RecoveryThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetRecoveryThresholdOk() (*int32, bool) {
	if o == nil || o.RecoveryThreshold == nil {
		return nil, false
	}
	return o.RecoveryThreshold, true
}

// HasRecoveryThreshold returns a boolean if a field has been set.
func (o *SystemInitRequest) HasRecoveryThreshold() bool {
	if o != nil && o.RecoveryThreshold != nil {
		return true
	}

	return false
}

// SetRecoveryThreshold gets a reference to the given int32 and assigns it to the RecoveryThreshold field.
func (o *SystemInitRequest) SetRecoveryThreshold(v int32) {
	o.RecoveryThreshold = &v
}

// GetRootTokenPgpKey returns the RootTokenPgpKey field value if set, zero value otherwise.
func (o *SystemInitRequest) GetRootTokenPgpKey() string {
	if o == nil || o.RootTokenPgpKey == nil {
		var ret string
		return ret
	}
	return *o.RootTokenPgpKey
}

// GetRootTokenPgpKeyOk returns a tuple with the RootTokenPgpKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetRootTokenPgpKeyOk() (*string, bool) {
	if o == nil || o.RootTokenPgpKey == nil {
		return nil, false
	}
	return o.RootTokenPgpKey, true
}

// HasRootTokenPgpKey returns a boolean if a field has been set.
func (o *SystemInitRequest) HasRootTokenPgpKey() bool {
	if o != nil && o.RootTokenPgpKey != nil {
		return true
	}

	return false
}

// SetRootTokenPgpKey gets a reference to the given string and assigns it to the RootTokenPgpKey field.
func (o *SystemInitRequest) SetRootTokenPgpKey(v string) {
	o.RootTokenPgpKey = &v
}

// GetSecretShares returns the SecretShares field value if set, zero value otherwise.
func (o *SystemInitRequest) GetSecretShares() int32 {
	if o == nil || o.SecretShares == nil {
		var ret int32
		return ret
	}
	return *o.SecretShares
}

// GetSecretSharesOk returns a tuple with the SecretShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetSecretSharesOk() (*int32, bool) {
	if o == nil || o.SecretShares == nil {
		return nil, false
	}
	return o.SecretShares, true
}

// HasSecretShares returns a boolean if a field has been set.
func (o *SystemInitRequest) HasSecretShares() bool {
	if o != nil && o.SecretShares != nil {
		return true
	}

	return false
}

// SetSecretShares gets a reference to the given int32 and assigns it to the SecretShares field.
func (o *SystemInitRequest) SetSecretShares(v int32) {
	o.SecretShares = &v
}

// GetSecretThreshold returns the SecretThreshold field value if set, zero value otherwise.
func (o *SystemInitRequest) GetSecretThreshold() int32 {
	if o == nil || o.SecretThreshold == nil {
		var ret int32
		return ret
	}
	return *o.SecretThreshold
}

// GetSecretThresholdOk returns a tuple with the SecretThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetSecretThresholdOk() (*int32, bool) {
	if o == nil || o.SecretThreshold == nil {
		return nil, false
	}
	return o.SecretThreshold, true
}

// HasSecretThreshold returns a boolean if a field has been set.
func (o *SystemInitRequest) HasSecretThreshold() bool {
	if o != nil && o.SecretThreshold != nil {
		return true
	}

	return false
}

// SetSecretThreshold gets a reference to the given int32 and assigns it to the SecretThreshold field.
func (o *SystemInitRequest) SetSecretThreshold(v int32) {
	o.SecretThreshold = &v
}

// GetStoredShares returns the StoredShares field value if set, zero value otherwise.
func (o *SystemInitRequest) GetStoredShares() int32 {
	if o == nil || o.StoredShares == nil {
		var ret int32
		return ret
	}
	return *o.StoredShares
}

// GetStoredSharesOk returns a tuple with the StoredShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetStoredSharesOk() (*int32, bool) {
	if o == nil || o.StoredShares == nil {
		return nil, false
	}
	return o.StoredShares, true
}

// HasStoredShares returns a boolean if a field has been set.
func (o *SystemInitRequest) HasStoredShares() bool {
	if o != nil && o.StoredShares != nil {
		return true
	}

	return false
}

// SetStoredShares gets a reference to the given int32 and assigns it to the StoredShares field.
func (o *SystemInitRequest) SetStoredShares(v int32) {
	o.StoredShares = &v
}

func (o SystemInitRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PgpKeys != nil {
		toSerialize["pgp_keys"] = o.PgpKeys
	}
	if o.RecoveryPgpKeys != nil {
		toSerialize["recovery_pgp_keys"] = o.RecoveryPgpKeys
	}
	if o.RecoveryShares != nil {
		toSerialize["recovery_shares"] = o.RecoveryShares
	}
	if o.RecoveryThreshold != nil {
		toSerialize["recovery_threshold"] = o.RecoveryThreshold
	}
	if o.RootTokenPgpKey != nil {
		toSerialize["root_token_pgp_key"] = o.RootTokenPgpKey
	}
	if o.SecretShares != nil {
		toSerialize["secret_shares"] = o.SecretShares
	}
	if o.SecretThreshold != nil {
		toSerialize["secret_threshold"] = o.SecretThreshold
	}
	if o.StoredShares != nil {
		toSerialize["stored_shares"] = o.StoredShares
	}
	return json.Marshal(toSerialize)
}

type NullableSystemInitRequest struct {
	value *SystemInitRequest
	isSet bool
}

func (v NullableSystemInitRequest) Get() *SystemInitRequest {
	return v.value
}

func (v *NullableSystemInitRequest) Set(val *SystemInitRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemInitRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemInitRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemInitRequest(val *SystemInitRequest) *NullableSystemInitRequest {
	return &NullableSystemInitRequest{value: val, isSet: true}
}

func (v NullableSystemInitRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemInitRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemInternalCountersConfigRequest struct for SystemInternalCountersConfigRequest
type SystemInternalCountersConfigRequest struct {
	// Number of months to report if no start date specified.
	DefaultReportMonths *int32 `json:"default_report_months,omitempty"`
	// Enable or disable collection of client count: enable, disable, or default.
	Enabled *string `json:"enabled,omitempty"`
	// Number of months of client data to retain. Setting to 0 will clear all existing data.
	RetentionMonths *int32 `json:"retention_months,omitempty"`
}

// NewSystemInternalCountersConfigRequest instantiates a new SystemInternalCountersConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemInternalCountersConfigRequest() *SystemInternalCountersConfigRequest {
	this := SystemInternalCountersConfigRequest{}
	var defaultReportMonths int32 = 12
	this.DefaultReportMonths = &defaultReportMonths
	var enabled string = "default"
	this.Enabled = &enabled
	var retentionMonths int32 = 24
	this.RetentionMonths = &retentionMonths
	return &this
}

// NewSystemInternalCountersConfigRequestWithDefaults instantiates a new SystemInternalCountersConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemInternalCountersConfigRequestWithDefaults() *SystemInternalCountersConfigRequest {
	this := SystemInternalCountersConfigRequest{}
	var defaultReportMonths int32 = 12
	this.DefaultReportMonths = &defaultReportMonths
	var enabled string = "default"
	this.Enabled = &enabled
	var retentionMonths int32 = 24
	this.RetentionMonths = &retentionMonths
	return &this
}

// GetDefaultReportMonths returns the DefaultReportMonths field value if set, zero value otherwise.
func (o *SystemInternalCountersConfigRequest) GetDefaultReportMonths() int32 {
	if o == nil || o.DefaultReportMonths == nil {
		var ret int32
		return ret
	}
	return *o.DefaultReportMonths
}

// GetDefaultReportMonthsOk returns a tuple with the DefaultReportMonths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInternalCountersConfigRequest) GetDefaultReportMonthsOk() (*int32, bool) {
	if o == nil || o.DefaultReportMonths == nil {
		return nil, false
	}
	return o.DefaultReportMonths, true
}

// HasDefaultReportMonths returns a boolean if a field has been set.
func (o *SystemInternalCountersConfigRequest) HasDefaultReportMonths() bool {
	if o != nil && o.DefaultReportMonths != nil {
		return true
	}

	return false
}

// SetDefaultReportMonths gets a reference to the given int32 and assigns it to the DefaultReportMonths field.
func (o *SystemInternalCountersConfigRequest) SetDefaultReportMonths(v int32) {
	o.DefaultReportMonths = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *SystemInternalCountersConfigRequest) GetEnabled() string {
	if o == nil || o.Enabled == nil {
		var ret string
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInternalCountersConfigRequest) GetEnabledOk() (*string, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *SystemInternalCountersConfigRequest) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given string and assigns it to the Enabled field.
func (o *SystemInternalCountersConfigRequest) SetEnabled(v string) {
	o.Enabled = &v
}

// GetRetentionMonths returns the RetentionMonths field value if set, zero value otherwise.
func (o *SystemInternalCountersConfigRequest) GetRetentionMonths() int32 {
	if o == nil || o.RetentionMonths == nil {
		var ret int32
		return ret
	}
	return *o.RetentionMonths
}

// GetRetentionMonthsOk returns a tuple with the RetentionMonths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInternalCountersConfigRequest) GetRetentionMonthsOk() (*int32, bool) {
	if o == nil || o.RetentionMonths == nil {
		return nil, false
	}
	return o.RetentionMonths, true
}

// HasRetentionMonths returns a boolean if a field has been set.
func (o *SystemInternalCountersConfigRequest) HasRetentionMonths() bool {
	if o != nil && o.RetentionMonths != nil {
		return true
	}

	return false
}

// SetRetentionMonths gets a reference to the given int32 and assigns it to the RetentionMonths field.
func (o *SystemInternalCountersConfigRequest) SetRetentionMonths(v int32) {
	o.RetentionMonths = &v
}

func (o SystemInternalCountersConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DefaultReportMonths != nil {
		toSerialize["default_report_months"] = o.DefaultReportMonths
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.RetentionMonths != nil {
		toSerialize["retention_months"] = o.RetentionMonths
	}
	return json.Marshal(toSerialize)
}

type NullableSystemInternalCountersConfigRequest struct {
	value *SystemInternalCountersConfigRequest
	isSet bool
}

func (v NullableSystemInternalCountersConfigRequest) Get() *SystemInternalCountersConfigRequest {
	return v.value
}

func (v *NullableSystemInternalCountersConfigRequest) Set(val *SystemInternalCountersConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemInternalCountersConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemInternalCountersConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemInternalCountersConfigRequest(val *SystemInternalCountersConfigRequest) *NullableSystemInternalCountersConfigRequest {
	return &NullableSystemInternalCountersConfigRequest{value: val, isSet: true}
}

func (v NullableSystemInternalCountersConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemInternalCountersConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemInternalSpecsOpenapiRequest struct for SystemInternalSpecsOpenapiRequest
type SystemInternalSpecsOpenapiRequest struct {
	// Context string appended to every operationId
	Context *string `json:"context,omitempty"`
}

// NewSystemInternalSpecsOpenapiRequest instantiates a new SystemInternalSpecsOpenapiRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemInternalSpecsOpenapiRequest() *SystemInternalSpecsOpenapiRequest {
	this := SystemInternalSpecsOpenapiRequest{}
	return &this
}

// NewSystemInternalSpecsOpenapiRequestWithDefaults instantiates a new SystemInternalSpecsOpenapiRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemInternalSpecsOpenapiRequestWithDefaults() *SystemInternalSpecsOpenapiRequest {
	this := SystemInternalSpecsOpenapiRequest{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *SystemInternalSpecsOpenapiRequest) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInternalSpecsOpenapiRequest) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *SystemInternalSpecsOpenapiRequest) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *SystemInternalSpecsOpenapiRequest) SetContext(v string) {
	o.Context = &v
}

func (o SystemInternalSpecsOpenapiRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	return json.Marshal(toSerialize)
}

type NullableSystemInternalSpecsOpenapiRequest struct {
	value *SystemInternalSpecsOpenapiRequest
	isSet bool
}

func (v NullableSystemInternalSpecsOpenapiRequest) Get() *SystemInternalSpecsOpenapiRequest {
	return v.value
}

func (v *NullableSystemInternalSpecsOpenapiRequest) Set(val *SystemInternalSpecsOpenapiRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemInternalSpecsOpenapiRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemInternalSpecsOpenapiRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemInternalSpecsOpenapiRequest(val *SystemInternalSpecsOpenapiRequest) *NullableSystemInternalSpecsOpenapiRequest {
	return &NullableSystemInternalSpecsOpenapiRequest{value: val, isSet: true}
}

func (v NullableSystemInternalSpecsOpenapiRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemInternalSpecsOpenapiRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemLeasesLookupRequest struct for SystemLeasesLookupRequest
type SystemLeasesLookupRequest struct {
	// The lease identifier to renew. This is included with a lease.
	LeaseId *string `json:"lease_id,omitempty"`
}

// NewSystemLeasesLookupRequest instantiates a new SystemLeasesLookupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemLeasesLookupRequest() *SystemLeasesLookupRequest {
	this := SystemLeasesLookupRequest{}
	return &this
}

// NewSystemLeasesLookupRequestWithDefaults instantiates a new SystemLeasesLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemLeasesLookupRequestWithDefaults() *SystemLeasesLookupRequest {
	this := SystemLeasesLookupRequest{}
	return &this
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *SystemLeasesLookupRequest) GetLeaseId() string {
	if o == nil || o.LeaseId == nil {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesLookupRequest) GetLeaseIdOk() (*string, bool) {
	if o == nil || o.LeaseId == nil {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *SystemLeasesLookupRequest) HasLeaseId() bool {
	if o != nil && o.LeaseId != nil {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *SystemLeasesLookupRequest) SetLeaseId(v string) {
	o.LeaseId = &v
}

func (o SystemLeasesLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LeaseId != nil {
		toSerialize["lease_id"] = o.LeaseId
	}
	return json.Marshal(toSerialize)
}

type NullableSystemLeasesLookupRequest struct {
	value *SystemLeasesLookupRequest
	isSet bool
}

func (v NullableSystemLeasesLookupRequest) Get() *SystemLeasesLookupRequest {
	return v.value
}

func (v *NullableSystemLeasesLookupRequest) Set(val *SystemLeasesLookupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemLeasesLookupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemLeasesLookupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemLeasesLookupRequest(val *SystemLeasesLookupRequest) *NullableSystemLeasesLookupRequest {
	return &NullableSystemLeasesLookupRequest{value: val, isSet: true}
}

func (v NullableSystemLeasesLookupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemLeasesLookupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemLeasesRenewLeaseRequest struct for SystemLeasesRenewLeaseRequest
type SystemLeasesRenewLeaseRequest struct {
	// The desired increment in seconds to the lease
	Increment *int32 `json:"increment,omitempty"`
	// The lease identifier to renew. This is included with a lease.
	LeaseId *string `json:"lease_id,omitempty"`
}

// NewSystemLeasesRenewLeaseRequest instantiates a new SystemLeasesRenewLeaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemLeasesRenewLeaseRequest() *SystemLeasesRenewLeaseRequest {
	this := SystemLeasesRenewLeaseRequest{}
	return &this
}

// NewSystemLeasesRenewLeaseRequestWithDefaults instantiates a new SystemLeasesRenewLeaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemLeasesRenewLeaseRequestWithDefaults() *SystemLeasesRenewLeaseRequest {
	this := SystemLeasesRenewLeaseRequest{}
	return &this
}

// GetIncrement returns the Increment field value if set, zero value otherwise.
func (o *SystemLeasesRenewLeaseRequest) GetIncrement() int32 {
	if o == nil || o.Increment == nil {
		var ret int32
		return ret
	}
	return *o.Increment
}

// GetIncrementOk returns a tuple with the Increment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRenewLeaseRequest) GetIncrementOk() (*int32, bool) {
	if o == nil || o.Increment == nil {
		return nil, false
	}
	return o.Increment, true
}

// HasIncrement returns a boolean if a field has been set.
func (o *SystemLeasesRenewLeaseRequest) HasIncrement() bool {
	if o != nil && o.Increment != nil {
		return true
	}

	return false
}

// SetIncrement gets a reference to the given int32 and assigns it to the Increment field.
func (o *SystemLeasesRenewLeaseRequest) SetIncrement(v int32) {
	o.Increment = &v
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *SystemLeasesRenewLeaseRequest) GetLeaseId() string {
	if o == nil || o.LeaseId == nil {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRenewLeaseRequest) GetLeaseIdOk() (*string, bool) {
	if o == nil || o.LeaseId == nil {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *SystemLeasesRenewLeaseRequest) HasLeaseId() bool {
	if o != nil && o.LeaseId != nil {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *SystemLeasesRenewLeaseRequest) SetLeaseId(v string) {
	o.LeaseId = &v
}

func (o SystemLeasesRenewLeaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Increment != nil {
		toSerialize["increment"] = o.Increment
	}
	if o.LeaseId != nil {
		toSerialize["lease_id"] = o.LeaseId
	}
	return json.Marshal(toSerialize)
}

type NullableSystemLeasesRenewLeaseRequest struct {
	value *SystemLeasesRenewLeaseRequest
	isSet bool
}

func (v NullableSystemLeasesRenewLeaseRequest) Get() *SystemLeasesRenewLeaseRequest {
	return v.value
}

func (v *NullableSystemLeasesRenewLeaseRequest) Set(val *SystemLeasesRenewLeaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemLeasesRenewLeaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemLeasesRenewLeaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemLeasesRenewLeaseRequest(val *SystemLeasesRenewLeaseRequest) *NullableSystemLeasesRenewLeaseRequest {
	return &NullableSystemLeasesRenewLeaseRequest{value: val, isSet: true}
}

func (v NullableSystemLeasesRenewLeaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemLeasesRenewLeaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemLeasesRenewRequest struct for SystemLeasesRenewRequest
type SystemLeasesRenewRequest struct {
	// The desired increment in seconds to the lease
	Increment *int32 `json:"increment,omitempty"`
	// The lease identifier to renew. This is included with a lease.
	LeaseId *string `json:"lease_id,omitempty"`
	// The lease identifier to renew. This is included with a lease.
	UrlLeaseId *string `json:"url_lease_id,omitempty"`
}

// NewSystemLeasesRenewRequest instantiates a new SystemLeasesRenewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemLeasesRenewRequest() *SystemLeasesRenewRequest {
	this := SystemLeasesRenewRequest{}
	return &this
}

// NewSystemLeasesRenewRequestWithDefaults instantiates a new SystemLeasesRenewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemLeasesRenewRequestWithDefaults() *SystemLeasesRenewRequest {
	this := SystemLeasesRenewRequest{}
	return &this
}

// GetIncrement returns the Increment field value if set, zero value otherwise.
func (o *SystemLeasesRenewRequest) GetIncrement() int32 {
	if o == nil || o.Increment == nil {
		var ret int32
		return ret
	}
	return *o.Increment
}

// GetIncrementOk returns a tuple with the Increment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRenewRequest) GetIncrementOk() (*int32, bool) {
	if o == nil || o.Increment == nil {
		return nil, false
	}
	return o.Increment, true
}

// HasIncrement returns a boolean if a field has been set.
func (o *SystemLeasesRenewRequest) HasIncrement() bool {
	if o != nil && o.Increment != nil {
		return true
	}

	return false
}

// SetIncrement gets a reference to the given int32 and assigns it to the Increment field.
func (o *SystemLeasesRenewRequest) SetIncrement(v int32) {
	o.Increment = &v
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *SystemLeasesRenewRequest) GetLeaseId() string {
	if o == nil || o.LeaseId == nil {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRenewRequest) GetLeaseIdOk() (*string, bool) {
	if o == nil || o.LeaseId == nil {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *SystemLeasesRenewRequest) HasLeaseId() bool {
	if o != nil && o.LeaseId != nil {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *SystemLeasesRenewRequest) SetLeaseId(v string) {
	o.LeaseId = &v
}

// GetUrlLeaseId returns the UrlLeaseId field value if set, zero value otherwise.
func (o *SystemLeasesRenewRequest) GetUrlLeaseId() string {
	if o == nil || o.UrlLeaseId == nil {
		var ret string
		return ret
	}
	return *o.UrlLeaseId
}

// GetUrlLeaseIdOk returns a tuple with the UrlLeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRenewRequest) GetUrlLeaseIdOk() (*string, bool) {
	if o == nil || o.UrlLeaseId == nil {
		return nil, false
	}
	return o.UrlLeaseId, true
}

// HasUrlLeaseId returns a boolean if a field has been set.
func (o *SystemLeasesRenewRequest) HasUrlLeaseId() bool {
	if o != nil && o.UrlLeaseId != nil {
		return true
	}

	return false
}

// SetUrlLeaseId gets a reference to the given string and assigns it to the UrlLeaseId field.
func (o *SystemLeasesRenewRequest) SetUrlLeaseId(v string) {
	o.UrlLeaseId = &v
}

func (o SystemLeasesRenewRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Increment != nil {
		toSerialize["increment"] = o.Increment
	}
	if o.LeaseId != nil {
		toSerialize["lease_id"] = o.LeaseId
	}
	if o.UrlLeaseId != nil {
		toSerialize["url_lease_id"] = o.UrlLeaseId
	}
	return json.Marshal(toSerialize)
}

type NullableSystemLeasesRenewRequest struct {
	value *SystemLeasesRenewRequest
	isSet bool
}

func (v NullableSystemLeasesRenewRequest) Get() *SystemLeasesRenewRequest {
	return v.value
}

func (v *NullableSystemLeasesRenewRequest) Set(val *SystemLeasesRenewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemLeasesRenewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemLeasesRenewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemLeasesRenewRequest(val *SystemLeasesRenewRequest) *NullableSystemLeasesRenewRequest {
	return &NullableSystemLeasesRenewRequest{value: val, isSet: true}
}

func (v NullableSystemLeasesRenewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemLeasesRenewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemLeasesRevokeLeaseRequest struct for SystemLeasesRevokeLeaseRequest
type SystemLeasesRevokeLeaseRequest struct {
	// The lease identifier to renew. This is included with a lease.
	LeaseId *string `json:"lease_id,omitempty"`
	// Whether or not to perform the revocation synchronously
	Sync *bool `json:"sync,omitempty"`
}

// NewSystemLeasesRevokeLeaseRequest instantiates a new SystemLeasesRevokeLeaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemLeasesRevokeLeaseRequest() *SystemLeasesRevokeLeaseRequest {
	this := SystemLeasesRevokeLeaseRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// NewSystemLeasesRevokeLeaseRequestWithDefaults instantiates a new SystemLeasesRevokeLeaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemLeasesRevokeLeaseRequestWithDefaults() *SystemLeasesRevokeLeaseRequest {
	this := SystemLeasesRevokeLeaseRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *SystemLeasesRevokeLeaseRequest) GetLeaseId() string {
	if o == nil || o.LeaseId == nil {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRevokeLeaseRequest) GetLeaseIdOk() (*string, bool) {
	if o == nil || o.LeaseId == nil {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *SystemLeasesRevokeLeaseRequest) HasLeaseId() bool {
	if o != nil && o.LeaseId != nil {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *SystemLeasesRevokeLeaseRequest) SetLeaseId(v string) {
	o.LeaseId = &v
}

// GetSync returns the Sync field value if set, zero value otherwise.
func (o *SystemLeasesRevokeLeaseRequest) GetSync() bool {
	if o == nil || o.Sync == nil {
		var ret bool
		return ret
	}
	return *o.Sync
}

// GetSyncOk returns a tuple with the Sync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRevokeLeaseRequest) GetSyncOk() (*bool, bool) {
	if o == nil || o.Sync == nil {
		return nil, false
	}
	return o.Sync, true
}

// HasSync returns a boolean if a field has been set.
func (o *SystemLeasesRevokeLeaseRequest) HasSync() bool {
	if o != nil && o.Sync != nil {
		return true
	}

	return false
}

// SetSync gets a reference to the given bool and assigns it to the Sync field.
func (o *SystemLeasesRevokeLeaseRequest) SetSync(v bool) {
	o.Sync = &v
}

func (o SystemLeasesRevokeLeaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LeaseId != nil {
		toSerialize["lease_id"] = o.LeaseId
	}
	if o.Sync != nil {
		toSerialize["sync"] = o.Sync
	}
	return json.Marshal(toSerialize)
}

type NullableSystemLeasesRevokeLeaseRequest struct {
	value *SystemLeasesRevokeLeaseRequest
	isSet bool
}

func (v NullableSystemLeasesRevokeLeaseRequest) Get() *SystemLeasesRevokeLeaseRequest {
	return v.value
}

func (v *NullableSystemLeasesRevokeLeaseRequest) Set(val *SystemLeasesRevokeLeaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemLeasesRevokeLeaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemLeasesRevokeLeaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemLeasesRevokeLeaseRequest(val *SystemLeasesRevokeLeaseRequest) *NullableSystemLeasesRevokeLeaseRequest {
	return &NullableSystemLeasesRevokeLeaseRequest{value: val, isSet: true}
}

func (v NullableSystemLeasesRevokeLeaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemLeasesRevokeLeaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemLeasesRevokePrefixRequest struct for SystemLeasesRevokePrefixRequest
type SystemLeasesRevokePrefixRequest struct {
	// Whether or not to perform the revocation synchronously
	Sync *bool `json:"sync,omitempty"`
}

// NewSystemLeasesRevokePrefixRequest instantiates a new SystemLeasesRevokePrefixRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemLeasesRevokePrefixRequest() *SystemLeasesRevokePrefixRequest {
	this := SystemLeasesRevokePrefixRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// NewSystemLeasesRevokePrefixRequestWithDefaults instantiates a new SystemLeasesRevokePrefixRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemLeasesRevokePrefixRequestWithDefaults() *SystemLeasesRevokePrefixRequest {
	this := SystemLeasesRevokePrefixRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// GetSync returns the Sync field value if set, zero value otherwise.
func (o *SystemLeasesRevokePrefixRequest) GetSync() bool {
	if o == nil || o.Sync == nil {
		var ret bool
		return ret
	}
	return *o.Sync
}

// GetSyncOk returns a tuple with the Sync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRevokePrefixRequest) GetSyncOk() (*bool, bool) {
	if o == nil || o.Sync == nil {
		return nil, false
	}
	return o.Sync, true
}

// HasSync returns a boolean if a field has been set.
func (o *SystemLeasesRevokePrefixRequest) HasSync() bool {
	if o != nil && o.Sync != nil {
		return true
	}

	return false
}

// SetSync gets a reference to the given bool and assigns it to the Sync field.
func (o *SystemLeasesRevokePrefixRequest) SetSync(v bool) {
	o.Sync = &v
}

func (o SystemLeasesRevokePrefixRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sync != nil {
		toSerialize["sync"] = o.Sync
	}
	return json.Marshal(toSerialize)
}

type NullableSystemLeasesRevokePrefixRequest struct {
	value *SystemLeasesRevokePrefixRequest
	isSet bool
}

func (v NullableSystemLeasesRevokePrefixRequest) Get() *SystemLeasesRevokePrefixRequest {
	return v.value
}

func (v *NullableSystemLeasesRevokePrefixRequest) Set(val *SystemLeasesRevokePrefixRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemLeasesRevokePrefixRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemLeasesRevokePrefixRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemLeasesRevokePrefixRequest(val *SystemLeasesRevokePrefixRequest) *NullableSystemLeasesRevokePrefixRequest {
	return &NullableSystemLeasesRevokePrefixRequest{value: val, isSet: true}
}

func (v NullableSystemLeasesRevokePrefixRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemLeasesRevokePrefixRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemLeasesRevokeRequest struct for SystemLeasesRevokeRequest
type SystemLeasesRevokeRequest struct {
	// The lease identifier to renew. This is included with a lease.
	LeaseId *string `json:"lease_id,omitempty"`
	// Whether or not to perform the revocation synchronously
	Sync *bool `json:"sync,omitempty"`
	// The lease identifier to renew. This is included with a lease.
	UrlLeaseId *string `json:"url_lease_id,omitempty"`
}

// NewSystemLeasesRevokeRequest instantiates a new SystemLeasesRevokeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemLeasesRevokeRequest() *SystemLeasesRevokeRequest {
	this := SystemLeasesRevokeRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// NewSystemLeasesRevokeRequestWithDefaults instantiates a new SystemLeasesRevokeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemLeasesRevokeRequestWithDefaults() *SystemLeasesRevokeRequest {
	this := SystemLeasesRevokeRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *SystemLeasesRevokeRequest) GetLeaseId() string {
	if o == nil || o.LeaseId == nil {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRevokeRequest) GetLeaseIdOk() (*string, bool) {
	if o == nil || o.LeaseId == nil {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *SystemLeasesRevokeRequest) HasLeaseId() bool {
	if o != nil && o.LeaseId != nil {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *SystemLeasesRevokeRequest) SetLeaseId(v string) {
	o.LeaseId = &v
}

// GetSync returns the Sync field value if set, zero value otherwise.
func (o *SystemLeasesRevokeRequest) GetSync() bool {
	if o == nil || o.Sync == nil {
		var ret bool
		return ret
	}
	return *o.Sync
}

// GetSyncOk returns a tuple with the Sync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRevokeRequest) GetSyncOk() (*bool, bool) {
	if o == nil || o.Sync == nil {
		return nil, false
	}
	return o.Sync, true
}

// HasSync returns a boolean if a field has been set.
func (o *SystemLeasesRevokeRequest) HasSync() bool {
	if o != nil && o.Sync != nil {
		return true
	}

	return false
}

// SetSync gets a reference to the given bool and assigns it to the Sync field.
func (o *SystemLeasesRevokeRequest) SetSync(v bool) {
	o.Sync = &v
}

// GetUrlLeaseId returns the UrlLeaseId field value if set, zero value otherwise.
func (o *SystemLeasesRevokeRequest) GetUrlLeaseId() string {
	if o == nil || o.UrlLeaseId == nil {
		var ret string
		return ret
	}
	return *o.UrlLeaseId
}

// GetUrlLeaseIdOk returns a tuple with the UrlLeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRevokeRequest) GetUrlLeaseIdOk() (*string, bool) {
	if o == nil || o.UrlLeaseId == nil {
		return nil, false
	}
	return o.UrlLeaseId, true
}

// HasUrlLeaseId returns a boolean if a field has been set.
func (o *SystemLeasesRevokeRequest) HasUrlLeaseId() bool {
	if o != nil && o.UrlLeaseId != nil {
		return true
	}

	return false
}

// SetUrlLeaseId gets a reference to the given string and assigns it to the UrlLeaseId field.
func (o *SystemLeasesRevokeRequest) SetUrlLeaseId(v string) {
	o.UrlLeaseId = &v
}

func (o SystemLeasesRevokeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LeaseId != nil {
		toSerialize["lease_id"] = o.LeaseId
	}
	if o.Sync != nil {
		toSerialize["sync"] = o.Sync
	}
	if o.UrlLeaseId != nil {
		toSerialize["url_lease_id"] = o.UrlLeaseId
	}
	return json.Marshal(toSerialize)
}

type NullableSystemLeasesRevokeRequest struct {
	value *SystemLeasesRevokeRequest
	isSet bool
}

func (v NullableSystemLeasesRevokeRequest) Get() *SystemLeasesRevokeRequest {
	return v.value
}

func (v *NullableSystemLeasesRevokeRequest) Set(val *SystemLeasesRevokeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemLeasesRevokeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemLeasesRevokeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemLeasesRevokeRequest(val *SystemLeasesRevokeRequest) *NullableSystemLeasesRevokeRequest {
	return &NullableSystemLeasesRevokeRequest{value: val, isSet: true}
}

func (v NullableSystemLeasesRevokeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemLeasesRevokeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemMfaValidateRequest struct for SystemMfaValidateRequest
type SystemMfaValidateRequest struct {
	// A map from MFA method ID to a slice of passcodes or an empty slice if the method does not use passcodes
	MfaPayload map[string]interface{} `json:"mfa_payload"`
	// ID for this MFA request
	MfaRequestId string `json:"mfa_request_id"`
}

// NewSystemMfaValidateRequest instantiates a new SystemMfaValidateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemMfaValidateRequest(mfaPayload map[string]interface{}, mfaRequestId string) *SystemMfaValidateRequest {
	this := SystemMfaValidateRequest{}
	this.MfaPayload = mfaPayload
	this.MfaRequestId = mfaRequestId
	return &this
}

// NewSystemMfaValidateRequestWithDefaults instantiates a new SystemMfaValidateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemMfaValidateRequestWithDefaults() *SystemMfaValidateRequest {
	this := SystemMfaValidateRequest{}
	return &this
}

// GetMfaPayload returns the MfaPayload field value
func (o *SystemMfaValidateRequest) GetMfaPayload() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.MfaPayload
}

// GetMfaPayloadOk returns a tuple with the MfaPayload field value
// and a boolean to check if the value has been set.
func (o *SystemMfaValidateRequest) GetMfaPayloadOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.MfaPayload, true
}

// SetMfaPayload sets field value
func (o *SystemMfaValidateRequest) SetMfaPayload(v map[string]interface{}) {
	o.MfaPayload = v
}

// GetMfaRequestId returns the MfaRequestId field value
func (o *SystemMfaValidateRequest) GetMfaRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MfaRequestId
}

// GetMfaRequestIdOk returns a tuple with the MfaRequestId field value
// and a boolean to check if the value has been set.
func (o *SystemMfaValidateRequest) GetMfaRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MfaRequestId, true
}

// SetMfaRequestId sets field value
func (o *SystemMfaValidateRequest) SetMfaRequestId(v string) {
	o.MfaRequestId = v
}

func (o SystemMfaValidateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mfa_payload"] = o.MfaPayload
	}
	if true {
		toSerialize["mfa_request_id"] = o.MfaRequestId
	}
	return json.Marshal(toSerialize)
}

type NullableSystemMfaValidateRequest struct {
	value *SystemMfaValidateRequest
	isSet bool
}

func (v NullableSystemMfaValidateRequest) Get() *SystemMfaValidateRequest {
	return v.value
}

func (v *NullableSystemMfaValidateRequest) Set(val *SystemMfaValidateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemMfaValidateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemMfaValidateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemMfaValidateRequest(val *SystemMfaValidateRequest) *NullableSystemMfaValidateRequest {
	return &NullableSystemMfaValidateRequest{value: val, isSet: true}
}

func (v NullableSystemMfaValidateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemMfaValidateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemMountsRequest struct for SystemMountsRequest
type SystemMountsRequest struct {
	// Configuration for this mount, such as default_lease_ttl and max_lease_ttl.
	Config map[string]interface{} `json:"config,omitempty"`
	// User-friendly description for this mount.
	Description *string `json:"description,omitempty"`
	// Whether to give the mount access to Vault's external entropy.
	ExternalEntropyAccess *bool `json:"external_entropy_access,omitempty"`
	// Mark the mount as a local mount, which is not replicated and is unaffected by replication.
	Local *bool `json:"local,omitempty"`
	// The options to pass into the backend. Should be a json object with string keys and values.
	Options map[string]interface{} `json:"options,omitempty"`
	// Name of the plugin to mount based from the name registered in the plugin catalog.
	PluginName *string `json:"plugin_name,omitempty"`
	// Whether to turn on seal wrapping for the mount.
	SealWrap *bool `json:"seal_wrap,omitempty"`
	// The type of the backend. Example: \"passthrough\"
	Type *string `json:"type,omitempty"`
}

// NewSystemMountsRequest instantiates a new SystemMountsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemMountsRequest() *SystemMountsRequest {
	this := SystemMountsRequest{}
	var externalEntropyAccess bool = false
	this.ExternalEntropyAccess = &externalEntropyAccess
	var local bool = false
	this.Local = &local
	var sealWrap bool = false
	this.SealWrap = &sealWrap
	return &this
}

// NewSystemMountsRequestWithDefaults instantiates a new SystemMountsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemMountsRequestWithDefaults() *SystemMountsRequest {
	this := SystemMountsRequest{}
	var externalEntropyAccess bool = false
	this.ExternalEntropyAccess = &externalEntropyAccess
	var local bool = false
	this.Local = &local
	var sealWrap bool = false
	this.SealWrap = &sealWrap
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *SystemMountsRequest) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsRequest) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *SystemMountsRequest) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *SystemMountsRequest) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SystemMountsRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SystemMountsRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SystemMountsRequest) SetDescription(v string) {
	o.Description = &v
}

// GetExternalEntropyAccess returns the ExternalEntropyAccess field value if set, zero value otherwise.
func (o *SystemMountsRequest) GetExternalEntropyAccess() bool {
	if o == nil || o.ExternalEntropyAccess == nil {
		var ret bool
		return ret
	}
	return *o.ExternalEntropyAccess
}

// GetExternalEntropyAccessOk returns a tuple with the ExternalEntropyAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsRequest) GetExternalEntropyAccessOk() (*bool, bool) {
	if o == nil || o.ExternalEntropyAccess == nil {
		return nil, false
	}
	return o.ExternalEntropyAccess, true
}

// HasExternalEntropyAccess returns a boolean if a field has been set.
func (o *SystemMountsRequest) HasExternalEntropyAccess() bool {
	if o != nil && o.ExternalEntropyAccess != nil {
		return true
	}

	return false
}

// SetExternalEntropyAccess gets a reference to the given bool and assigns it to the ExternalEntropyAccess field.
func (o *SystemMountsRequest) SetExternalEntropyAccess(v bool) {
	o.ExternalEntropyAccess = &v
}

// GetLocal returns the Local field value if set, zero value otherwise.
func (o *SystemMountsRequest) GetLocal() bool {
	if o == nil || o.Local == nil {
		var ret bool
		return ret
	}
	return *o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsRequest) GetLocalOk() (*bool, bool) {
	if o == nil || o.Local == nil {
		return nil, false
	}
	return o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *SystemMountsRequest) HasLocal() bool {
	if o != nil && o.Local != nil {
		return true
	}

	return false
}

// SetLocal gets a reference to the given bool and assigns it to the Local field.
func (o *SystemMountsRequest) SetLocal(v bool) {
	o.Local = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *SystemMountsRequest) GetOptions() map[string]interface{} {
	if o == nil || o.Options == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsRequest) GetOptionsOk() (map[string]interface{}, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *SystemMountsRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given map[string]interface{} and assigns it to the Options field.
func (o *SystemMountsRequest) SetOptions(v map[string]interface{}) {
	o.Options = v
}

// GetPluginName returns the PluginName field value if set, zero value otherwise.
func (o *SystemMountsRequest) GetPluginName() string {
	if o == nil || o.PluginName == nil {
		var ret string
		return ret
	}
	return *o.PluginName
}

// GetPluginNameOk returns a tuple with the PluginName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsRequest) GetPluginNameOk() (*string, bool) {
	if o == nil || o.PluginName == nil {
		return nil, false
	}
	return o.PluginName, true
}

// HasPluginName returns a boolean if a field has been set.
func (o *SystemMountsRequest) HasPluginName() bool {
	if o != nil && o.PluginName != nil {
		return true
	}

	return false
}

// SetPluginName gets a reference to the given string and assigns it to the PluginName field.
func (o *SystemMountsRequest) SetPluginName(v string) {
	o.PluginName = &v
}

// GetSealWrap returns the SealWrap field value if set, zero value otherwise.
func (o *SystemMountsRequest) GetSealWrap() bool {
	if o == nil || o.SealWrap == nil {
		var ret bool
		return ret
	}
	return *o.SealWrap
}

// GetSealWrapOk returns a tuple with the SealWrap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsRequest) GetSealWrapOk() (*bool, bool) {
	if o == nil || o.SealWrap == nil {
		return nil, false
	}
	return o.SealWrap, true
}

// HasSealWrap returns a boolean if a field has been set.
func (o *SystemMountsRequest) HasSealWrap() bool {
	if o != nil && o.SealWrap != nil {
		return true
	}

	return false
}

// SetSealWrap gets a reference to the given bool and assigns it to the SealWrap field.
func (o *SystemMountsRequest) SetSealWrap(v bool) {
	o.SealWrap = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SystemMountsRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SystemMountsRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SystemMountsRequest) SetType(v string) {
	o.Type = &v
}

func (o SystemMountsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ExternalEntropyAccess != nil {
		toSerialize["external_entropy_access"] = o.ExternalEntropyAccess
	}
	if o.Local != nil {
		toSerialize["local"] = o.Local
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.PluginName != nil {
		toSerialize["plugin_name"] = o.PluginName
	}
	if o.SealWrap != nil {
		toSerialize["seal_wrap"] = o.SealWrap
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableSystemMountsRequest struct {
	value *SystemMountsRequest
	isSet bool
}

func (v NullableSystemMountsRequest) Get() *SystemMountsRequest {
	return v.value
}

func (v *NullableSystemMountsRequest) Set(val *SystemMountsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemMountsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemMountsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemMountsRequest(val *SystemMountsRequest) *NullableSystemMountsRequest {
	return &NullableSystemMountsRequest{value: val, isSet: true}
}

func (v NullableSystemMountsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemMountsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemMountsTuneRequest struct for SystemMountsTuneRequest
type SystemMountsTuneRequest struct {
	AllowedManagedKeys []string `json:"allowed_managed_keys,omitempty"`
	// A list of headers to whitelist and allow a plugin to set on responses.
	AllowedResponseHeaders []string `json:"allowed_response_headers,omitempty"`
	// The list of keys in the request data object that will not be HMAC'ed by audit devices.
	AuditNonHmacRequestKeys []string `json:"audit_non_hmac_request_keys,omitempty"`
	// The list of keys in the response data object that will not be HMAC'ed by audit devices.
	AuditNonHmacResponseKeys []string `json:"audit_non_hmac_response_keys,omitempty"`
	// The default lease TTL for this mount.
	DefaultLeaseTtl *string `json:"default_lease_ttl,omitempty"`
	// User-friendly description for this credential backend.
	Description *string `json:"description,omitempty"`
	// Determines the visibility of the mount in the UI-specific listing endpoint. Accepted value are 'unauth' and ''.
	ListingVisibility *string `json:"listing_visibility,omitempty"`
	// The max lease TTL for this mount.
	MaxLeaseTtl *string `json:"max_lease_ttl,omitempty"`
	// The options to pass into the backend. Should be a json object with string keys and values.
	Options map[string]interface{} `json:"options,omitempty"`
	// A list of headers to whitelist and pass from the request to the plugin.
	PassthroughRequestHeaders []string `json:"passthrough_request_headers,omitempty"`
	// The type of token to issue (service or batch).
	TokenType *string `json:"token_type,omitempty"`
}

// NewSystemMountsTuneRequest instantiates a new SystemMountsTuneRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemMountsTuneRequest() *SystemMountsTuneRequest {
	this := SystemMountsTuneRequest{}
	return &this
}

// NewSystemMountsTuneRequestWithDefaults instantiates a new SystemMountsTuneRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemMountsTuneRequestWithDefaults() *SystemMountsTuneRequest {
	this := SystemMountsTuneRequest{}
	return &this
}

// GetAllowedManagedKeys returns the AllowedManagedKeys field value if set, zero value otherwise.
func (o *SystemMountsTuneRequest) GetAllowedManagedKeys() []string {
	if o == nil || o.AllowedManagedKeys == nil {
		var ret []string
		return ret
	}
	return o.AllowedManagedKeys
}

// GetAllowedManagedKeysOk returns a tuple with the AllowedManagedKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsTuneRequest) GetAllowedManagedKeysOk() ([]string, bool) {
	if o == nil || o.AllowedManagedKeys == nil {
		return nil, false
	}
	return o.AllowedManagedKeys, true
}

// HasAllowedManagedKeys returns a boolean if a field has been set.
func (o *SystemMountsTuneRequest) HasAllowedManagedKeys() bool {
	if o != nil && o.AllowedManagedKeys != nil {
		return true
	}

	return false
}

// SetAllowedManagedKeys gets a reference to the given []string and assigns it to the AllowedManagedKeys field.
func (o *SystemMountsTuneRequest) SetAllowedManagedKeys(v []string) {
	o.AllowedManagedKeys = v
}

// GetAllowedResponseHeaders returns the AllowedResponseHeaders field value if set, zero value otherwise.
func (o *SystemMountsTuneRequest) GetAllowedResponseHeaders() []string {
	if o == nil || o.AllowedResponseHeaders == nil {
		var ret []string
		return ret
	}
	return o.AllowedResponseHeaders
}

// GetAllowedResponseHeadersOk returns a tuple with the AllowedResponseHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsTuneRequest) GetAllowedResponseHeadersOk() ([]string, bool) {
	if o == nil || o.AllowedResponseHeaders == nil {
		return nil, false
	}
	return o.AllowedResponseHeaders, true
}

// HasAllowedResponseHeaders returns a boolean if a field has been set.
func (o *SystemMountsTuneRequest) HasAllowedResponseHeaders() bool {
	if o != nil && o.AllowedResponseHeaders != nil {
		return true
	}

	return false
}

// SetAllowedResponseHeaders gets a reference to the given []string and assigns it to the AllowedResponseHeaders field.
func (o *SystemMountsTuneRequest) SetAllowedResponseHeaders(v []string) {
	o.AllowedResponseHeaders = v
}

// GetAuditNonHmacRequestKeys returns the AuditNonHmacRequestKeys field value if set, zero value otherwise.
func (o *SystemMountsTuneRequest) GetAuditNonHmacRequestKeys() []string {
	if o == nil || o.AuditNonHmacRequestKeys == nil {
		var ret []string
		return ret
	}
	return o.AuditNonHmacRequestKeys
}

// GetAuditNonHmacRequestKeysOk returns a tuple with the AuditNonHmacRequestKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsTuneRequest) GetAuditNonHmacRequestKeysOk() ([]string, bool) {
	if o == nil || o.AuditNonHmacRequestKeys == nil {
		return nil, false
	}
	return o.AuditNonHmacRequestKeys, true
}

// HasAuditNonHmacRequestKeys returns a boolean if a field has been set.
func (o *SystemMountsTuneRequest) HasAuditNonHmacRequestKeys() bool {
	if o != nil && o.AuditNonHmacRequestKeys != nil {
		return true
	}

	return false
}

// SetAuditNonHmacRequestKeys gets a reference to the given []string and assigns it to the AuditNonHmacRequestKeys field.
func (o *SystemMountsTuneRequest) SetAuditNonHmacRequestKeys(v []string) {
	o.AuditNonHmacRequestKeys = v
}

// GetAuditNonHmacResponseKeys returns the AuditNonHmacResponseKeys field value if set, zero value otherwise.
func (o *SystemMountsTuneRequest) GetAuditNonHmacResponseKeys() []string {
	if o == nil || o.AuditNonHmacResponseKeys == nil {
		var ret []string
		return ret
	}
	return o.AuditNonHmacResponseKeys
}

// GetAuditNonHmacResponseKeysOk returns a tuple with the AuditNonHmacResponseKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsTuneRequest) GetAuditNonHmacResponseKeysOk() ([]string, bool) {
	if o == nil || o.AuditNonHmacResponseKeys == nil {
		return nil, false
	}
	return o.AuditNonHmacResponseKeys, true
}

// HasAuditNonHmacResponseKeys returns a boolean if a field has been set.
func (o *SystemMountsTuneRequest) HasAuditNonHmacResponseKeys() bool {
	if o != nil && o.AuditNonHmacResponseKeys != nil {
		return true
	}

	return false
}

// SetAuditNonHmacResponseKeys gets a reference to the given []string and assigns it to the AuditNonHmacResponseKeys field.
func (o *SystemMountsTuneRequest) SetAuditNonHmacResponseKeys(v []string) {
	o.AuditNonHmacResponseKeys = v
}

// GetDefaultLeaseTtl returns the DefaultLeaseTtl field value if set, zero value otherwise.
func (o *SystemMountsTuneRequest) GetDefaultLeaseTtl() string {
	if o == nil || o.DefaultLeaseTtl == nil {
		var ret string
		return ret
	}
	return *o.DefaultLeaseTtl
}

// GetDefaultLeaseTtlOk returns a tuple with the DefaultLeaseTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsTuneRequest) GetDefaultLeaseTtlOk() (*string, bool) {
	if o == nil || o.DefaultLeaseTtl == nil {
		return nil, false
	}
	return o.DefaultLeaseTtl, true
}

// HasDefaultLeaseTtl returns a boolean if a field has been set.
func (o *SystemMountsTuneRequest) HasDefaultLeaseTtl() bool {
	if o != nil && o.DefaultLeaseTtl != nil {
		return true
	}

	return false
}

// SetDefaultLeaseTtl gets a reference to the given string and assigns it to the DefaultLeaseTtl field.
func (o *SystemMountsTuneRequest) SetDefaultLeaseTtl(v string) {
	o.DefaultLeaseTtl = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SystemMountsTuneRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsTuneRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SystemMountsTuneRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SystemMountsTuneRequest) SetDescription(v string) {
	o.Description = &v
}

// GetListingVisibility returns the ListingVisibility field value if set, zero value otherwise.
func (o *SystemMountsTuneRequest) GetListingVisibility() string {
	if o == nil || o.ListingVisibility == nil {
		var ret string
		return ret
	}
	return *o.ListingVisibility
}

// GetListingVisibilityOk returns a tuple with the ListingVisibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsTuneRequest) GetListingVisibilityOk() (*string, bool) {
	if o == nil || o.ListingVisibility == nil {
		return nil, false
	}
	return o.ListingVisibility, true
}

// HasListingVisibility returns a boolean if a field has been set.
func (o *SystemMountsTuneRequest) HasListingVisibility() bool {
	if o != nil && o.ListingVisibility != nil {
		return true
	}

	return false
}

// SetListingVisibility gets a reference to the given string and assigns it to the ListingVisibility field.
func (o *SystemMountsTuneRequest) SetListingVisibility(v string) {
	o.ListingVisibility = &v
}

// GetMaxLeaseTtl returns the MaxLeaseTtl field value if set, zero value otherwise.
func (o *SystemMountsTuneRequest) GetMaxLeaseTtl() string {
	if o == nil || o.MaxLeaseTtl == nil {
		var ret string
		return ret
	}
	return *o.MaxLeaseTtl
}

// GetMaxLeaseTtlOk returns a tuple with the MaxLeaseTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsTuneRequest) GetMaxLeaseTtlOk() (*string, bool) {
	if o == nil || o.MaxLeaseTtl == nil {
		return nil, false
	}
	return o.MaxLeaseTtl, true
}

// HasMaxLeaseTtl returns a boolean if a field has been set.
func (o *SystemMountsTuneRequest) HasMaxLeaseTtl() bool {
	if o != nil && o.MaxLeaseTtl != nil {
		return true
	}

	return false
}

// SetMaxLeaseTtl gets a reference to the given string and assigns it to the MaxLeaseTtl field.
func (o *SystemMountsTuneRequest) SetMaxLeaseTtl(v string) {
	o.MaxLeaseTtl = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *SystemMountsTuneRequest) GetOptions() map[string]interface{} {
	if o == nil || o.Options == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsTuneRequest) GetOptionsOk() (map[string]interface{}, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *SystemMountsTuneRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given map[string]interface{} and assigns it to the Options field.
func (o *SystemMountsTuneRequest) SetOptions(v map[string]interface{}) {
	o.Options = v
}

// GetPassthroughRequestHeaders returns the PassthroughRequestHeaders field value if set, zero value otherwise.
func (o *SystemMountsTuneRequest) GetPassthroughRequestHeaders() []string {
	if o == nil || o.PassthroughRequestHeaders == nil {
		var ret []string
		return ret
	}
	return o.PassthroughRequestHeaders
}

// GetPassthroughRequestHeadersOk returns a tuple with the PassthroughRequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsTuneRequest) GetPassthroughRequestHeadersOk() ([]string, bool) {
	if o == nil || o.PassthroughRequestHeaders == nil {
		return nil, false
	}
	return o.PassthroughRequestHeaders, true
}

// HasPassthroughRequestHeaders returns a boolean if a field has been set.
func (o *SystemMountsTuneRequest) HasPassthroughRequestHeaders() bool {
	if o != nil && o.PassthroughRequestHeaders != nil {
		return true
	}

	return false
}

// SetPassthroughRequestHeaders gets a reference to the given []string and assigns it to the PassthroughRequestHeaders field.
func (o *SystemMountsTuneRequest) SetPassthroughRequestHeaders(v []string) {
	o.PassthroughRequestHeaders = v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *SystemMountsTuneRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemMountsTuneRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *SystemMountsTuneRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *SystemMountsTuneRequest) SetTokenType(v string) {
	o.TokenType = &v
}

func (o SystemMountsTuneRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedManagedKeys != nil {
		toSerialize["allowed_managed_keys"] = o.AllowedManagedKeys
	}
	if o.AllowedResponseHeaders != nil {
		toSerialize["allowed_response_headers"] = o.AllowedResponseHeaders
	}
	if o.AuditNonHmacRequestKeys != nil {
		toSerialize["audit_non_hmac_request_keys"] = o.AuditNonHmacRequestKeys
	}
	if o.AuditNonHmacResponseKeys != nil {
		toSerialize["audit_non_hmac_response_keys"] = o.AuditNonHmacResponseKeys
	}
	if o.DefaultLeaseTtl != nil {
		toSerialize["default_lease_ttl"] = o.DefaultLeaseTtl
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ListingVisibility != nil {
		toSerialize["listing_visibility"] = o.ListingVisibility
	}
	if o.MaxLeaseTtl != nil {
		toSerialize["max_lease_ttl"] = o.MaxLeaseTtl
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.PassthroughRequestHeaders != nil {
		toSerialize["passthrough_request_headers"] = o.PassthroughRequestHeaders
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	return json.Marshal(toSerialize)
}

type NullableSystemMountsTuneRequest struct {
	value *SystemMountsTuneRequest
	isSet bool
}

func (v NullableSystemMountsTuneRequest) Get() *SystemMountsTuneRequest {
	return v.value
}

func (v *NullableSystemMountsTuneRequest) Set(val *SystemMountsTuneRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemMountsTuneRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemMountsTuneRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemMountsTuneRequest(val *SystemMountsTuneRequest) *NullableSystemMountsTuneRequest {
	return &NullableSystemMountsTuneRequest{value: val, isSet: true}
}

func (v NullableSystemMountsTuneRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemMountsTuneRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemPluginsCatalogRequest struct for SystemPluginsCatalogRequest
type SystemPluginsCatalogRequest struct {
	// The args passed to plugin command.
	Args []string `json:"args,omitempty"`
	// The command used to start the plugin. The executable defined in this command must exist in vault's plugin directory.
	Command *string `json:"command,omitempty"`
	// The environment variables passed to plugin command. Each entry is of the form \"key=value\".
	Env []string `json:"env,omitempty"`
	// The SHA256 sum of the executable used in the command field. This should be HEX encoded.
	Sha256 *string `json:"sha256,omitempty"`
	// The type of the plugin, may be auth, secret, or database
	Type *string `json:"type,omitempty"`
}

// NewSystemPluginsCatalogRequest instantiates a new SystemPluginsCatalogRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemPluginsCatalogRequest() *SystemPluginsCatalogRequest {
	this := SystemPluginsCatalogRequest{}
	return &this
}

// NewSystemPluginsCatalogRequestWithDefaults instantiates a new SystemPluginsCatalogRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemPluginsCatalogRequestWithDefaults() *SystemPluginsCatalogRequest {
	this := SystemPluginsCatalogRequest{}
	return &this
}

// GetArgs returns the Args field value if set, zero value otherwise.
func (o *SystemPluginsCatalogRequest) GetArgs() []string {
	if o == nil || o.Args == nil {
		var ret []string
		return ret
	}
	return o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPluginsCatalogRequest) GetArgsOk() ([]string, bool) {
	if o == nil || o.Args == nil {
		return nil, false
	}
	return o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *SystemPluginsCatalogRequest) HasArgs() bool {
	if o != nil && o.Args != nil {
		return true
	}

	return false
}

// SetArgs gets a reference to the given []string and assigns it to the Args field.
func (o *SystemPluginsCatalogRequest) SetArgs(v []string) {
	o.Args = v
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *SystemPluginsCatalogRequest) GetCommand() string {
	if o == nil || o.Command == nil {
		var ret string
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPluginsCatalogRequest) GetCommandOk() (*string, bool) {
	if o == nil || o.Command == nil {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *SystemPluginsCatalogRequest) HasCommand() bool {
	if o != nil && o.Command != nil {
		return true
	}

	return false
}

// SetCommand gets a reference to the given string and assigns it to the Command field.
func (o *SystemPluginsCatalogRequest) SetCommand(v string) {
	o.Command = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *SystemPluginsCatalogRequest) GetEnv() []string {
	if o == nil || o.Env == nil {
		var ret []string
		return ret
	}
	return o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPluginsCatalogRequest) GetEnvOk() ([]string, bool) {
	if o == nil || o.Env == nil {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *SystemPluginsCatalogRequest) HasEnv() bool {
	if o != nil && o.Env != nil {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []string and assigns it to the Env field.
func (o *SystemPluginsCatalogRequest) SetEnv(v []string) {
	o.Env = v
}

// GetSha256 returns the Sha256 field value if set, zero value otherwise.
func (o *SystemPluginsCatalogRequest) GetSha256() string {
	if o == nil || o.Sha256 == nil {
		var ret string
		return ret
	}
	return *o.Sha256
}

// GetSha256Ok returns a tuple with the Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPluginsCatalogRequest) GetSha256Ok() (*string, bool) {
	if o == nil || o.Sha256 == nil {
		return nil, false
	}
	return o.Sha256, true
}

// HasSha256 returns a boolean if a field has been set.
func (o *SystemPluginsCatalogRequest) HasSha256() bool {
	if o != nil && o.Sha256 != nil {
		return true
	}

	return false
}

// SetSha256 gets a reference to the given string and assigns it to the Sha256 field.
func (o *SystemPluginsCatalogRequest) SetSha256(v string) {
	o.Sha256 = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SystemPluginsCatalogRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPluginsCatalogRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SystemPluginsCatalogRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SystemPluginsCatalogRequest) SetType(v string) {
	o.Type = &v
}

func (o SystemPluginsCatalogRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Args != nil {
		toSerialize["args"] = o.Args
	}
	if o.Command != nil {
		toSerialize["command"] = o.Command
	}
	if o.Env != nil {
		toSerialize["env"] = o.Env
	}
	if o.Sha256 != nil {
		toSerialize["sha256"] = o.Sha256
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableSystemPluginsCatalogRequest struct {
	value *SystemPluginsCatalogRequest
	isSet bool
}

func (v NullableSystemPluginsCatalogRequest) Get() *SystemPluginsCatalogRequest {
	return v.value
}

func (v *NullableSystemPluginsCatalogRequest) Set(val *SystemPluginsCatalogRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemPluginsCatalogRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemPluginsCatalogRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemPluginsCatalogRequest(val *SystemPluginsCatalogRequest) *NullableSystemPluginsCatalogRequest {
	return &NullableSystemPluginsCatalogRequest{value: val, isSet: true}
}

func (v NullableSystemPluginsCatalogRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemPluginsCatalogRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemPluginsReloadBackendRequest struct for SystemPluginsReloadBackendRequest
type SystemPluginsReloadBackendRequest struct {
	// The mount paths of the plugin backends to reload.
	Mounts []string `json:"mounts,omitempty"`
	// The name of the plugin to reload, as registered in the plugin catalog.
	Plugin *string `json:"plugin,omitempty"`
	Scope  *string `json:"scope,omitempty"`
}

// NewSystemPluginsReloadBackendRequest instantiates a new SystemPluginsReloadBackendRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemPluginsReloadBackendRequest() *SystemPluginsReloadBackendRequest {
	this := SystemPluginsReloadBackendRequest{}
	return &this
}

// NewSystemPluginsReloadBackendRequestWithDefaults instantiates a new SystemPluginsReloadBackendRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemPluginsReloadBackendRequestWithDefaults() *SystemPluginsReloadBackendRequest {
	this := SystemPluginsReloadBackendRequest{}
	return &this
}

// GetMounts returns the Mounts field value if set, zero value otherwise.
func (o *SystemPluginsReloadBackendRequest) GetMounts() []string {
	if o == nil || o.Mounts == nil {
		var ret []string
		return ret
	}
	return o.Mounts
}

// GetMountsOk returns a tuple with the Mounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPluginsReloadBackendRequest) GetMountsOk() ([]string, bool) {
	if o == nil || o.Mounts == nil {
		return nil, false
	}
	return o.Mounts, true
}

// HasMounts returns a boolean if a field has been set.
func (o *SystemPluginsReloadBackendRequest) HasMounts() bool {
	if o != nil && o.Mounts != nil {
		return true
	}

	return false
}

// SetMounts gets a reference to the given []string and assigns it to the Mounts field.
func (o *SystemPluginsReloadBackendRequest) SetMounts(v []string) {
	o.Mounts = v
}

// GetPlugin returns the Plugin field value if set, zero value otherwise.
func (o *SystemPluginsReloadBackendRequest) GetPlugin() string {
	if o == nil || o.Plugin == nil {
		var ret string
		return ret
	}
	return *o.Plugin
}

// GetPluginOk returns a tuple with the Plugin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPluginsReloadBackendRequest) GetPluginOk() (*string, bool) {
	if o == nil || o.Plugin == nil {
		return nil, false
	}
	return o.Plugin, true
}

// HasPlugin returns a boolean if a field has been set.
func (o *SystemPluginsReloadBackendRequest) HasPlugin() bool {
	if o != nil && o.Plugin != nil {
		return true
	}

	return false
}

// SetPlugin gets a reference to the given string and assigns it to the Plugin field.
func (o *SystemPluginsReloadBackendRequest) SetPlugin(v string) {
	o.Plugin = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *SystemPluginsReloadBackendRequest) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPluginsReloadBackendRequest) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *SystemPluginsReloadBackendRequest) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *SystemPluginsReloadBackendRequest) SetScope(v string) {
	o.Scope = &v
}

func (o SystemPluginsReloadBackendRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Mounts != nil {
		toSerialize["mounts"] = o.Mounts
	}
	if o.Plugin != nil {
		toSerialize["plugin"] = o.Plugin
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	return json.Marshal(toSerialize)
}

type NullableSystemPluginsReloadBackendRequest struct {
	value *SystemPluginsReloadBackendRequest
	isSet bool
}

func (v NullableSystemPluginsReloadBackendRequest) Get() *SystemPluginsReloadBackendRequest {
	return v.value
}

func (v *NullableSystemPluginsReloadBackendRequest) Set(val *SystemPluginsReloadBackendRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemPluginsReloadBackendRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemPluginsReloadBackendRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemPluginsReloadBackendRequest(val *SystemPluginsReloadBackendRequest) *NullableSystemPluginsReloadBackendRequest {
	return &NullableSystemPluginsReloadBackendRequest{value: val, isSet: true}
}

func (v NullableSystemPluginsReloadBackendRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemPluginsReloadBackendRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemPoliciesAclRequest struct for SystemPoliciesAclRequest
type SystemPoliciesAclRequest struct {
	// The rules of the policy.
	Policy *string `json:"policy,omitempty"`
}

// NewSystemPoliciesAclRequest instantiates a new SystemPoliciesAclRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemPoliciesAclRequest() *SystemPoliciesAclRequest {
	this := SystemPoliciesAclRequest{}
	return &this
}

// NewSystemPoliciesAclRequestWithDefaults instantiates a new SystemPoliciesAclRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemPoliciesAclRequestWithDefaults() *SystemPoliciesAclRequest {
	this := SystemPoliciesAclRequest{}
	return &this
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *SystemPoliciesAclRequest) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPoliciesAclRequest) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *SystemPoliciesAclRequest) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *SystemPoliciesAclRequest) SetPolicy(v string) {
	o.Policy = &v
}

func (o SystemPoliciesAclRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	return json.Marshal(toSerialize)
}

type NullableSystemPoliciesAclRequest struct {
	value *SystemPoliciesAclRequest
	isSet bool
}

func (v NullableSystemPoliciesAclRequest) Get() *SystemPoliciesAclRequest {
	return v.value
}

func (v *NullableSystemPoliciesAclRequest) Set(val *SystemPoliciesAclRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemPoliciesAclRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemPoliciesAclRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemPoliciesAclRequest(val *SystemPoliciesAclRequest) *NullableSystemPoliciesAclRequest {
	return &NullableSystemPoliciesAclRequest{value: val, isSet: true}
}

func (v NullableSystemPoliciesAclRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemPoliciesAclRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemPoliciesPasswordRequest struct for SystemPoliciesPasswordRequest
type SystemPoliciesPasswordRequest struct {
	// The password policy
	Policy *string `json:"policy,omitempty"`
}

// NewSystemPoliciesPasswordRequest instantiates a new SystemPoliciesPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemPoliciesPasswordRequest() *SystemPoliciesPasswordRequest {
	this := SystemPoliciesPasswordRequest{}
	return &this
}

// NewSystemPoliciesPasswordRequestWithDefaults instantiates a new SystemPoliciesPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemPoliciesPasswordRequestWithDefaults() *SystemPoliciesPasswordRequest {
	this := SystemPoliciesPasswordRequest{}
	return &this
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *SystemPoliciesPasswordRequest) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPoliciesPasswordRequest) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *SystemPoliciesPasswordRequest) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *SystemPoliciesPasswordRequest) SetPolicy(v string) {
	o.Policy = &v
}

func (o SystemPoliciesPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	return json.Marshal(toSerialize)
}

type NullableSystemPoliciesPasswordRequest struct {
	value *SystemPoliciesPasswordRequest
	isSet bool
}

func (v NullableSystemPoliciesPasswordRequest) Get() *SystemPoliciesPasswordRequest {
	return v.value
}

func (v *NullableSystemPoliciesPasswordRequest) Set(val *SystemPoliciesPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemPoliciesPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemPoliciesPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemPoliciesPasswordRequest(val *SystemPoliciesPasswordRequest) *NullableSystemPoliciesPasswordRequest {
	return &NullableSystemPoliciesPasswordRequest{value: val, isSet: true}
}

func (v NullableSystemPoliciesPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemPoliciesPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemPolicyRequest struct for SystemPolicyRequest
type SystemPolicyRequest struct {
	// The rules of the policy.
	Policy *string `json:"policy,omitempty"`
	// The rules of the policy.
	// Deprecated
	Rules *string `json:"rules,omitempty"`
}

// NewSystemPolicyRequest instantiates a new SystemPolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemPolicyRequest() *SystemPolicyRequest {
	this := SystemPolicyRequest{}
	return &this
}

// NewSystemPolicyRequestWithDefaults instantiates a new SystemPolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemPolicyRequestWithDefaults() *SystemPolicyRequest {
	this := SystemPolicyRequest{}
	return &this
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *SystemPolicyRequest) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemPolicyRequest) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *SystemPolicyRequest) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *SystemPolicyRequest) SetPolicy(v string) {
	o.Policy = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
// Deprecated
func (o *SystemPolicyRequest) GetRules() string {
	if o == nil || o.Rules == nil {
		var ret string
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *SystemPolicyRequest) GetRulesOk() (*string, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *SystemPolicyRequest) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given string and assigns it to the Rules field.
// Deprecated
func (o *SystemPolicyRequest) SetRules(v string) {
	o.Rules = &v
}

func (o SystemPolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	if o.Rules != nil {
		toSerialize["rules"] = o.Rules
	}
	return json.Marshal(toSerialize)
}

type NullableSystemPolicyRequest struct {
	value *SystemPolicyRequest
	isSet bool
}

func (v NullableSystemPolicyRequest) Get() *SystemPolicyRequest {
	return v.value
}

func (v *NullableSystemPolicyRequest) Set(val *SystemPolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemPolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemPolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemPolicyRequest(val *SystemPolicyRequest) *NullableSystemPolicyRequest {
	return &NullableSystemPolicyRequest{value: val, isSet: true}
}

func (v NullableSystemPolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemPolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemQuotasConfigRequest struct for SystemQuotasConfigRequest
type SystemQuotasConfigRequest struct {
	// If set, starts audit logging of requests that get rejected due to rate limit quota rule violations.
	EnableRateLimitAuditLogging *bool `json:"enable_rate_limit_audit_logging,omitempty"`
	// If set, additional rate limit quota HTTP headers will be added to responses.
	EnableRateLimitResponseHeaders *bool `json:"enable_rate_limit_response_headers,omitempty"`
	// Specifies the list of exempt paths from all rate limit quotas. If empty no paths will be exempt.
	RateLimitExemptPaths []string `json:"rate_limit_exempt_paths,omitempty"`
}

// NewSystemQuotasConfigRequest instantiates a new SystemQuotasConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemQuotasConfigRequest() *SystemQuotasConfigRequest {
	this := SystemQuotasConfigRequest{}
	return &this
}

// NewSystemQuotasConfigRequestWithDefaults instantiates a new SystemQuotasConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemQuotasConfigRequestWithDefaults() *SystemQuotasConfigRequest {
	this := SystemQuotasConfigRequest{}
	return &this
}

// GetEnableRateLimitAuditLogging returns the EnableRateLimitAuditLogging field value if set, zero value otherwise.
func (o *SystemQuotasConfigRequest) GetEnableRateLimitAuditLogging() bool {
	if o == nil || o.EnableRateLimitAuditLogging == nil {
		var ret bool
		return ret
	}
	return *o.EnableRateLimitAuditLogging
}

// GetEnableRateLimitAuditLoggingOk returns a tuple with the EnableRateLimitAuditLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemQuotasConfigRequest) GetEnableRateLimitAuditLoggingOk() (*bool, bool) {
	if o == nil || o.EnableRateLimitAuditLogging == nil {
		return nil, false
	}
	return o.EnableRateLimitAuditLogging, true
}

// HasEnableRateLimitAuditLogging returns a boolean if a field has been set.
func (o *SystemQuotasConfigRequest) HasEnableRateLimitAuditLogging() bool {
	if o != nil && o.EnableRateLimitAuditLogging != nil {
		return true
	}

	return false
}

// SetEnableRateLimitAuditLogging gets a reference to the given bool and assigns it to the EnableRateLimitAuditLogging field.
func (o *SystemQuotasConfigRequest) SetEnableRateLimitAuditLogging(v bool) {
	o.EnableRateLimitAuditLogging = &v
}

// GetEnableRateLimitResponseHeaders returns the EnableRateLimitResponseHeaders field value if set, zero value otherwise.
func (o *SystemQuotasConfigRequest) GetEnableRateLimitResponseHeaders() bool {
	if o == nil || o.EnableRateLimitResponseHeaders == nil {
		var ret bool
		return ret
	}
	return *o.EnableRateLimitResponseHeaders
}

// GetEnableRateLimitResponseHeadersOk returns a tuple with the EnableRateLimitResponseHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemQuotasConfigRequest) GetEnableRateLimitResponseHeadersOk() (*bool, bool) {
	if o == nil || o.EnableRateLimitResponseHeaders == nil {
		return nil, false
	}
	return o.EnableRateLimitResponseHeaders, true
}

// HasEnableRateLimitResponseHeaders returns a boolean if a field has been set.
func (o *SystemQuotasConfigRequest) HasEnableRateLimitResponseHeaders() bool {
	if o != nil && o.EnableRateLimitResponseHeaders != nil {
		return true
	}

	return false
}

// SetEnableRateLimitResponseHeaders gets a reference to the given bool and assigns it to the EnableRateLimitResponseHeaders field.
func (o *SystemQuotasConfigRequest) SetEnableRateLimitResponseHeaders(v bool) {
	o.EnableRateLimitResponseHeaders = &v
}

// GetRateLimitExemptPaths returns the RateLimitExemptPaths field value if set, zero value otherwise.
func (o *SystemQuotasConfigRequest) GetRateLimitExemptPaths() []string {
	if o == nil || o.RateLimitExemptPaths == nil {
		var ret []string
		return ret
	}
	return o.RateLimitExemptPaths
}

// GetRateLimitExemptPathsOk returns a tuple with the RateLimitExemptPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemQuotasConfigRequest) GetRateLimitExemptPathsOk() ([]string, bool) {
	if o == nil || o.RateLimitExemptPaths == nil {
		return nil, false
	}
	return o.RateLimitExemptPaths, true
}

// HasRateLimitExemptPaths returns a boolean if a field has been set.
func (o *SystemQuotasConfigRequest) HasRateLimitExemptPaths() bool {
	if o != nil && o.RateLimitExemptPaths != nil {
		return true
	}

	return false
}

// SetRateLimitExemptPaths gets a reference to the given []string and assigns it to the RateLimitExemptPaths field.
func (o *SystemQuotasConfigRequest) SetRateLimitExemptPaths(v []string) {
	o.RateLimitExemptPaths = v
}

func (o SystemQuotasConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EnableRateLimitAuditLogging != nil {
		toSerialize["enable_rate_limit_audit_logging"] = o.EnableRateLimitAuditLogging
	}
	if o.EnableRateLimitResponseHeaders != nil {
		toSerialize["enable_rate_limit_response_headers"] = o.EnableRateLimitResponseHeaders
	}
	if o.RateLimitExemptPaths != nil {
		toSerialize["rate_limit_exempt_paths"] = o.RateLimitExemptPaths
	}
	return json.Marshal(toSerialize)
}

type NullableSystemQuotasConfigRequest struct {
	value *SystemQuotasConfigRequest
	isSet bool
}

func (v NullableSystemQuotasConfigRequest) Get() *SystemQuotasConfigRequest {
	return v.value
}

func (v *NullableSystemQuotasConfigRequest) Set(val *SystemQuotasConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemQuotasConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemQuotasConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemQuotasConfigRequest(val *SystemQuotasConfigRequest) *NullableSystemQuotasConfigRequest {
	return &NullableSystemQuotasConfigRequest{value: val, isSet: true}
}

func (v NullableSystemQuotasConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemQuotasConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemQuotasRateLimitRequest struct for SystemQuotasRateLimitRequest
type SystemQuotasRateLimitRequest struct {
	// If set, when a client reaches a rate limit threshold, the client will be prohibited from any further requests until after the 'block_interval' has elapsed.
	BlockInterval *int32 `json:"block_interval,omitempty"`
	// The duration to enforce rate limiting for (default '1s').
	Interval *int32 `json:"interval,omitempty"`
	// Path of the mount or namespace to apply the quota. A blank path configures a global quota. For example namespace1/ adds a quota to a full namespace, namespace1/auth/userpass adds a quota to userpass in namespace1.
	Path *string `json:"path,omitempty"`
	// The maximum number of requests in a given interval to be allowed by the quota rule. The 'rate' must be positive.
	Rate *float32 `json:"rate,omitempty"`
	// Type of the quota rule.
	Type *string `json:"type,omitempty"`
}

// NewSystemQuotasRateLimitRequest instantiates a new SystemQuotasRateLimitRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemQuotasRateLimitRequest() *SystemQuotasRateLimitRequest {
	this := SystemQuotasRateLimitRequest{}
	return &this
}

// NewSystemQuotasRateLimitRequestWithDefaults instantiates a new SystemQuotasRateLimitRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemQuotasRateLimitRequestWithDefaults() *SystemQuotasRateLimitRequest {
	this := SystemQuotasRateLimitRequest{}
	return &this
}

// GetBlockInterval returns the BlockInterval field value if set, zero value otherwise.
func (o *SystemQuotasRateLimitRequest) GetBlockInterval() int32 {
	if o == nil || o.BlockInterval == nil {
		var ret int32
		return ret
	}
	return *o.BlockInterval
}

// GetBlockIntervalOk returns a tuple with the BlockInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemQuotasRateLimitRequest) GetBlockIntervalOk() (*int32, bool) {
	if o == nil || o.BlockInterval == nil {
		return nil, false
	}
	return o.BlockInterval, true
}

// HasBlockInterval returns a boolean if a field has been set.
func (o *SystemQuotasRateLimitRequest) HasBlockInterval() bool {
	if o != nil && o.BlockInterval != nil {
		return true
	}

	return false
}

// SetBlockInterval gets a reference to the given int32 and assigns it to the BlockInterval field.
func (o *SystemQuotasRateLimitRequest) SetBlockInterval(v int32) {
	o.BlockInterval = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *SystemQuotasRateLimitRequest) GetInterval() int32 {
	if o == nil || o.Interval == nil {
		var ret int32
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemQuotasRateLimitRequest) GetIntervalOk() (*int32, bool) {
	if o == nil || o.Interval == nil {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *SystemQuotasRateLimitRequest) HasInterval() bool {
	if o != nil && o.Interval != nil {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int32 and assigns it to the Interval field.
func (o *SystemQuotasRateLimitRequest) SetInterval(v int32) {
	o.Interval = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *SystemQuotasRateLimitRequest) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemQuotasRateLimitRequest) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SystemQuotasRateLimitRequest) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *SystemQuotasRateLimitRequest) SetPath(v string) {
	o.Path = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *SystemQuotasRateLimitRequest) GetRate() float32 {
	if o == nil || o.Rate == nil {
		var ret float32
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemQuotasRateLimitRequest) GetRateOk() (*float32, bool) {
	if o == nil || o.Rate == nil {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *SystemQuotasRateLimitRequest) HasRate() bool {
	if o != nil && o.Rate != nil {
		return true
	}

	return false
}

// SetRate gets a reference to the given float32 and assigns it to the Rate field.
func (o *SystemQuotasRateLimitRequest) SetRate(v float32) {
	o.Rate = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SystemQuotasRateLimitRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemQuotasRateLimitRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SystemQuotasRateLimitRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SystemQuotasRateLimitRequest) SetType(v string) {
	o.Type = &v
}

func (o SystemQuotasRateLimitRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BlockInterval != nil {
		toSerialize["block_interval"] = o.BlockInterval
	}
	if o.Interval != nil {
		toSerialize["interval"] = o.Interval
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Rate != nil {
		toSerialize["rate"] = o.Rate
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableSystemQuotasRateLimitRequest struct {
	value *SystemQuotasRateLimitRequest
	isSet bool
}

func (v NullableSystemQuotasRateLimitRequest) Get() *SystemQuotasRateLimitRequest {
	return v.value
}

func (v *NullableSystemQuotasRateLimitRequest) Set(val *SystemQuotasRateLimitRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemQuotasRateLimitRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemQuotasRateLimitRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemQuotasRateLimitRequest(val *SystemQuotasRateLimitRequest) *NullableSystemQuotasRateLimitRequest {
	return &NullableSystemQuotasRateLimitRequest{value: val, isSet: true}
}

func (v NullableSystemQuotasRateLimitRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemQuotasRateLimitRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemRawRequest struct for SystemRawRequest
type SystemRawRequest struct {
	Compressed      *bool   `json:"compressed,omitempty"`
	CompressionType *string `json:"compression_type,omitempty"`
	Encoding        *string `json:"encoding,omitempty"`
	Value           *string `json:"value,omitempty"`
}

// NewSystemRawRequest instantiates a new SystemRawRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRawRequest() *SystemRawRequest {
	this := SystemRawRequest{}
	return &this
}

// NewSystemRawRequestWithDefaults instantiates a new SystemRawRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRawRequestWithDefaults() *SystemRawRequest {
	this := SystemRawRequest{}
	return &this
}

// GetCompressed returns the Compressed field value if set, zero value otherwise.
func (o *SystemRawRequest) GetCompressed() bool {
	if o == nil || o.Compressed == nil {
		var ret bool
		return ret
	}
	return *o.Compressed
}

// GetCompressedOk returns a tuple with the Compressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRawRequest) GetCompressedOk() (*bool, bool) {
	if o == nil || o.Compressed == nil {
		return nil, false
	}
	return o.Compressed, true
}

// HasCompressed returns a boolean if a field has been set.
func (o *SystemRawRequest) HasCompressed() bool {
	if o != nil && o.Compressed != nil {
		return true
	}

	return false
}

// SetCompressed gets a reference to the given bool and assigns it to the Compressed field.
func (o *SystemRawRequest) SetCompressed(v bool) {
	o.Compressed = &v
}

// GetCompressionType returns the CompressionType field value if set, zero value otherwise.
func (o *SystemRawRequest) GetCompressionType() string {
	if o == nil || o.CompressionType == nil {
		var ret string
		return ret
	}
	return *o.CompressionType
}

// GetCompressionTypeOk returns a tuple with the CompressionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRawRequest) GetCompressionTypeOk() (*string, bool) {
	if o == nil || o.CompressionType == nil {
		return nil, false
	}
	return o.CompressionType, true
}

// HasCompressionType returns a boolean if a field has been set.
func (o *SystemRawRequest) HasCompressionType() bool {
	if o != nil && o.CompressionType != nil {
		return true
	}

	return false
}

// SetCompressionType gets a reference to the given string and assigns it to the CompressionType field.
func (o *SystemRawRequest) SetCompressionType(v string) {
	o.CompressionType = &v
}

// GetEncoding returns the Encoding field value if set, zero value otherwise.
func (o *SystemRawRequest) GetEncoding() string {
	if o == nil || o.Encoding == nil {
		var ret string
		return ret
	}
	return *o.Encoding
}

// GetEncodingOk returns a tuple with the Encoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRawRequest) GetEncodingOk() (*string, bool) {
	if o == nil || o.Encoding == nil {
		return nil, false
	}
	return o.Encoding, true
}

// HasEncoding returns a boolean if a field has been set.
func (o *SystemRawRequest) HasEncoding() bool {
	if o != nil && o.Encoding != nil {
		return true
	}

	return false
}

// SetEncoding gets a reference to the given string and assigns it to the Encoding field.
func (o *SystemRawRequest) SetEncoding(v string) {
	o.Encoding = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *SystemRawRequest) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRawRequest) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *SystemRawRequest) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *SystemRawRequest) SetValue(v string) {
	o.Value = &v
}

func (o SystemRawRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Compressed != nil {
		toSerialize["compressed"] = o.Compressed
	}
	if o.CompressionType != nil {
		toSerialize["compression_type"] = o.CompressionType
	}
	if o.Encoding != nil {
		toSerialize["encoding"] = o.Encoding
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRawRequest struct {
	value *SystemRawRequest
	isSet bool
}

func (v NullableSystemRawRequest) Get() *SystemRawRequest {
	return v.value
}

func (v *NullableSystemRawRequest) Set(val *SystemRawRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRawRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRawRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRawRequest(val *SystemRawRequest) *NullableSystemRawRequest {
	return &NullableSystemRawRequest{value: val, isSet: true}
}

func (v NullableSystemRawRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRawRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemRekeyInitRequest struct for SystemRekeyInitRequest
type SystemRekeyInitRequest struct {
	// Specifies if using PGP-encrypted keys, whether Vault should also store a plaintext backup of the PGP-encrypted keys.
	Backup *bool `json:"backup,omitempty"`
	// Specifies an array of PGP public keys used to encrypt the output unseal keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as secret_shares.
	PgpKeys []string `json:"pgp_keys,omitempty"`
	// Turns on verification functionality
	RequireVerification *bool `json:"require_verification,omitempty"`
	// Specifies the number of shares to split the unseal key into.
	SecretShares *int32 `json:"secret_shares,omitempty"`
	// Specifies the number of shares required to reconstruct the unseal key. This must be less than or equal secret_shares. If using Vault HSM with auto-unsealing, this value must be the same as secret_shares.
	SecretThreshold *int32 `json:"secret_threshold,omitempty"`
}

// NewSystemRekeyInitRequest instantiates a new SystemRekeyInitRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRekeyInitRequest() *SystemRekeyInitRequest {
	this := SystemRekeyInitRequest{}
	return &this
}

// NewSystemRekeyInitRequestWithDefaults instantiates a new SystemRekeyInitRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRekeyInitRequestWithDefaults() *SystemRekeyInitRequest {
	this := SystemRekeyInitRequest{}
	return &this
}

// GetBackup returns the Backup field value if set, zero value otherwise.
func (o *SystemRekeyInitRequest) GetBackup() bool {
	if o == nil || o.Backup == nil {
		var ret bool
		return ret
	}
	return *o.Backup
}

// GetBackupOk returns a tuple with the Backup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyInitRequest) GetBackupOk() (*bool, bool) {
	if o == nil || o.Backup == nil {
		return nil, false
	}
	return o.Backup, true
}

// HasBackup returns a boolean if a field has been set.
func (o *SystemRekeyInitRequest) HasBackup() bool {
	if o != nil && o.Backup != nil {
		return true
	}

	return false
}

// SetBackup gets a reference to the given bool and assigns it to the Backup field.
func (o *SystemRekeyInitRequest) SetBackup(v bool) {
	o.Backup = &v
}

// GetPgpKeys returns the PgpKeys field value if set, zero value otherwise.
func (o *SystemRekeyInitRequest) GetPgpKeys() []string {
	if o == nil || o.PgpKeys == nil {
		var ret []string
		return ret
	}
	return o.PgpKeys
}

// GetPgpKeysOk returns a tuple with the PgpKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyInitRequest) GetPgpKeysOk() ([]string, bool) {
	if o == nil || o.PgpKeys == nil {
		return nil, false
	}
	return o.PgpKeys, true
}

// HasPgpKeys returns a boolean if a field has been set.
func (o *SystemRekeyInitRequest) HasPgpKeys() bool {
	if o != nil && o.PgpKeys != nil {
		return true
	}

	return false
}

// SetPgpKeys gets a reference to the given []string and assigns it to the PgpKeys field.
func (o *SystemRekeyInitRequest) SetPgpKeys(v []string) {
	o.PgpKeys = v
}

// GetRequireVerification returns the RequireVerification field value if set, zero value otherwise.
func (o *SystemRekeyInitRequest) GetRequireVerification() bool {
	if o == nil || o.RequireVerification == nil {
		var ret bool
		return ret
	}
	return *o.RequireVerification
}

// GetRequireVerificationOk returns a tuple with the RequireVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyInitRequest) GetRequireVerificationOk() (*bool, bool) {
	if o == nil || o.RequireVerification == nil {
		return nil, false
	}
	return o.RequireVerification, true
}

// HasRequireVerification returns a boolean if a field has been set.
func (o *SystemRekeyInitRequest) HasRequireVerification() bool {
	if o != nil && o.RequireVerification != nil {
		return true
	}

	return false
}

// SetRequireVerification gets a reference to the given bool and assigns it to the RequireVerification field.
func (o *SystemRekeyInitRequest) SetRequireVerification(v bool) {
	o.RequireVerification = &v
}

// GetSecretShares returns the SecretShares field value if set, zero value otherwise.
func (o *SystemRekeyInitRequest) GetSecretShares() int32 {
	if o == nil || o.SecretShares == nil {
		var ret int32
		return ret
	}
	return *o.SecretShares
}

// GetSecretSharesOk returns a tuple with the SecretShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyInitRequest) GetSecretSharesOk() (*int32, bool) {
	if o == nil || o.SecretShares == nil {
		return nil, false
	}
	return o.SecretShares, true
}

// HasSecretShares returns a boolean if a field has been set.
func (o *SystemRekeyInitRequest) HasSecretShares() bool {
	if o != nil && o.SecretShares != nil {
		return true
	}

	return false
}

// SetSecretShares gets a reference to the given int32 and assigns it to the SecretShares field.
func (o *SystemRekeyInitRequest) SetSecretShares(v int32) {
	o.SecretShares = &v
}

// GetSecretThreshold returns the SecretThreshold field value if set, zero value otherwise.
func (o *SystemRekeyInitRequest) GetSecretThreshold() int32 {
	if o == nil || o.SecretThreshold == nil {
		var ret int32
		return ret
	}
	return *o.SecretThreshold
}

// GetSecretThresholdOk returns a tuple with the SecretThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyInitRequest) GetSecretThresholdOk() (*int32, bool) {
	if o == nil || o.SecretThreshold == nil {
		return nil, false
	}
	return o.SecretThreshold, true
}

// HasSecretThreshold returns a boolean if a field has been set.
func (o *SystemRekeyInitRequest) HasSecretThreshold() bool {
	if o != nil && o.SecretThreshold != nil {
		return true
	}

	return false
}

// SetSecretThreshold gets a reference to the given int32 and assigns it to the SecretThreshold field.
func (o *SystemRekeyInitRequest) SetSecretThreshold(v int32) {
	o.SecretThreshold = &v
}

func (o SystemRekeyInitRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Backup != nil {
		toSerialize["backup"] = o.Backup
	}
	if o.PgpKeys != nil {
		toSerialize["pgp_keys"] = o.PgpKeys
	}
	if o.RequireVerification != nil {
		toSerialize["require_verification"] = o.RequireVerification
	}
	if o.SecretShares != nil {
		toSerialize["secret_shares"] = o.SecretShares
	}
	if o.SecretThreshold != nil {
		toSerialize["secret_threshold"] = o.SecretThreshold
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRekeyInitRequest struct {
	value *SystemRekeyInitRequest
	isSet bool
}

func (v NullableSystemRekeyInitRequest) Get() *SystemRekeyInitRequest {
	return v.value
}

func (v *NullableSystemRekeyInitRequest) Set(val *SystemRekeyInitRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRekeyInitRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRekeyInitRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRekeyInitRequest(val *SystemRekeyInitRequest) *NullableSystemRekeyInitRequest {
	return &NullableSystemRekeyInitRequest{value: val, isSet: true}
}

func (v NullableSystemRekeyInitRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRekeyInitRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemRekeyUpdateRequest struct for SystemRekeyUpdateRequest
type SystemRekeyUpdateRequest struct {
	// Specifies a single unseal key share.
	Key *string `json:"key,omitempty"`
	// Specifies the nonce of the rekey attempt.
	Nonce *string `json:"nonce,omitempty"`
}

// NewSystemRekeyUpdateRequest instantiates a new SystemRekeyUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRekeyUpdateRequest() *SystemRekeyUpdateRequest {
	this := SystemRekeyUpdateRequest{}
	return &this
}

// NewSystemRekeyUpdateRequestWithDefaults instantiates a new SystemRekeyUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRekeyUpdateRequestWithDefaults() *SystemRekeyUpdateRequest {
	this := SystemRekeyUpdateRequest{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SystemRekeyUpdateRequest) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyUpdateRequest) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SystemRekeyUpdateRequest) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SystemRekeyUpdateRequest) SetKey(v string) {
	o.Key = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *SystemRekeyUpdateRequest) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyUpdateRequest) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *SystemRekeyUpdateRequest) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *SystemRekeyUpdateRequest) SetNonce(v string) {
	o.Nonce = &v
}

func (o SystemRekeyUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRekeyUpdateRequest struct {
	value *SystemRekeyUpdateRequest
	isSet bool
}

func (v NullableSystemRekeyUpdateRequest) Get() *SystemRekeyUpdateRequest {
	return v.value
}

func (v *NullableSystemRekeyUpdateRequest) Set(val *SystemRekeyUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRekeyUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRekeyUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRekeyUpdateRequest(val *SystemRekeyUpdateRequest) *NullableSystemRekeyUpdateRequest {
	return &NullableSystemRekeyUpdateRequest{value: val, isSet: true}
}

func (v NullableSystemRekeyUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRekeyUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemRekeyVerifyRequest struct for SystemRekeyVerifyRequest
type SystemRekeyVerifyRequest struct {
	// Specifies a single unseal share key from the new set of shares.
	Key *string `json:"key,omitempty"`
	// Specifies the nonce of the rekey verification operation.
	Nonce *string `json:"nonce,omitempty"`
}

// NewSystemRekeyVerifyRequest instantiates a new SystemRekeyVerifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRekeyVerifyRequest() *SystemRekeyVerifyRequest {
	this := SystemRekeyVerifyRequest{}
	return &this
}

// NewSystemRekeyVerifyRequestWithDefaults instantiates a new SystemRekeyVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRekeyVerifyRequestWithDefaults() *SystemRekeyVerifyRequest {
	this := SystemRekeyVerifyRequest{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SystemRekeyVerifyRequest) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyVerifyRequest) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SystemRekeyVerifyRequest) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SystemRekeyVerifyRequest) SetKey(v string) {
	o.Key = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *SystemRekeyVerifyRequest) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyVerifyRequest) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *SystemRekeyVerifyRequest) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *SystemRekeyVerifyRequest) SetNonce(v string) {
	o.Nonce = &v
}

func (o SystemRekeyVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRekeyVerifyRequest struct {
	value *SystemRekeyVerifyRequest
	isSet bool
}

func (v NullableSystemRekeyVerifyRequest) Get() *SystemRekeyVerifyRequest {
	return v.value
}

func (v *NullableSystemRekeyVerifyRequest) Set(val *SystemRekeyVerifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRekeyVerifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRekeyVerifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRekeyVerifyRequest(val *SystemRekeyVerifyRequest) *NullableSystemRekeyVerifyRequest {
	return &NullableSystemRekeyVerifyRequest{value: val, isSet: true}
}

func (v NullableSystemRekeyVerifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRekeyVerifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemRemountRequest struct for SystemRemountRequest
type SystemRemountRequest struct {
	// The previous mount point.
	From *string `json:"from,omitempty"`
	// The new mount point.
	To *string `json:"to,omitempty"`
}

// NewSystemRemountRequest instantiates a new SystemRemountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRemountRequest() *SystemRemountRequest {
	this := SystemRemountRequest{}
	return &this
}

// NewSystemRemountRequestWithDefaults instantiates a new SystemRemountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRemountRequestWithDefaults() *SystemRemountRequest {
	this := SystemRemountRequest{}
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *SystemRemountRequest) GetFrom() string {
	if o == nil || o.From == nil {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRemountRequest) GetFromOk() (*string, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *SystemRemountRequest) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *SystemRemountRequest) SetFrom(v string) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *SystemRemountRequest) GetTo() string {
	if o == nil || o.To == nil {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRemountRequest) GetToOk() (*string, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *SystemRemountRequest) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *SystemRemountRequest) SetTo(v string) {
	o.To = &v
}

func (o SystemRemountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRemountRequest struct {
	value *SystemRemountRequest
	isSet bool
}

func (v NullableSystemRemountRequest) Get() *SystemRemountRequest {
	return v.value
}

func (v *NullableSystemRemountRequest) Set(val *SystemRemountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRemountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRemountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRemountRequest(val *SystemRemountRequest) *NullableSystemRemountRequest {
	return &NullableSystemRemountRequest{value: val, isSet: true}
}

func (v NullableSystemRemountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRemountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemRenewLeaseRequest struct for SystemRenewLeaseRequest
type SystemRenewLeaseRequest struct {
	// The desired increment in seconds to the lease
	Increment *int32 `json:"increment,omitempty"`
	// The lease identifier to renew. This is included with a lease.
	LeaseId *string `json:"lease_id,omitempty"`
}

// NewSystemRenewLeaseRequest instantiates a new SystemRenewLeaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRenewLeaseRequest() *SystemRenewLeaseRequest {
	this := SystemRenewLeaseRequest{}
	return &this
}

// NewSystemRenewLeaseRequestWithDefaults instantiates a new SystemRenewLeaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRenewLeaseRequestWithDefaults() *SystemRenewLeaseRequest {
	this := SystemRenewLeaseRequest{}
	return &this
}

// GetIncrement returns the Increment field value if set, zero value otherwise.
func (o *SystemRenewLeaseRequest) GetIncrement() int32 {
	if o == nil || o.Increment == nil {
		var ret int32
		return ret
	}
	return *o.Increment
}

// GetIncrementOk returns a tuple with the Increment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRenewLeaseRequest) GetIncrementOk() (*int32, bool) {
	if o == nil || o.Increment == nil {
		return nil, false
	}
	return o.Increment, true
}

// HasIncrement returns a boolean if a field has been set.
func (o *SystemRenewLeaseRequest) HasIncrement() bool {
	if o != nil && o.Increment != nil {
		return true
	}

	return false
}

// SetIncrement gets a reference to the given int32 and assigns it to the Increment field.
func (o *SystemRenewLeaseRequest) SetIncrement(v int32) {
	o.Increment = &v
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *SystemRenewLeaseRequest) GetLeaseId() string {
	if o == nil || o.LeaseId == nil {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRenewLeaseRequest) GetLeaseIdOk() (*string, bool) {
	if o == nil || o.LeaseId == nil {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *SystemRenewLeaseRequest) HasLeaseId() bool {
	if o != nil && o.LeaseId != nil {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *SystemRenewLeaseRequest) SetLeaseId(v string) {
	o.LeaseId = &v
}

func (o SystemRenewLeaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Increment != nil {
		toSerialize["increment"] = o.Increment
	}
	if o.LeaseId != nil {
		toSerialize["lease_id"] = o.LeaseId
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRenewLeaseRequest struct {
	value *SystemRenewLeaseRequest
	isSet bool
}

func (v NullableSystemRenewLeaseRequest) Get() *SystemRenewLeaseRequest {
	return v.value
}

func (v *NullableSystemRenewLeaseRequest) Set(val *SystemRenewLeaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRenewLeaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRenewLeaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRenewLeaseRequest(val *SystemRenewLeaseRequest) *NullableSystemRenewLeaseRequest {
	return &NullableSystemRenewLeaseRequest{value: val, isSet: true}
}

func (v NullableSystemRenewLeaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRenewLeaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemRenewRequest struct for SystemRenewRequest
type SystemRenewRequest struct {
	// The desired increment in seconds to the lease
	Increment *int32 `json:"increment,omitempty"`
	// The lease identifier to renew. This is included with a lease.
	LeaseId *string `json:"lease_id,omitempty"`
	// The lease identifier to renew. This is included with a lease.
	UrlLeaseId *string `json:"url_lease_id,omitempty"`
}

// NewSystemRenewRequest instantiates a new SystemRenewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRenewRequest() *SystemRenewRequest {
	this := SystemRenewRequest{}
	return &this
}

// NewSystemRenewRequestWithDefaults instantiates a new SystemRenewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRenewRequestWithDefaults() *SystemRenewRequest {
	this := SystemRenewRequest{}
	return &this
}

// GetIncrement returns the Increment field value if set, zero value otherwise.
func (o *SystemRenewRequest) GetIncrement() int32 {
	if o == nil || o.Increment == nil {
		var ret int32
		return ret
	}
	return *o.Increment
}

// GetIncrementOk returns a tuple with the Increment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRenewRequest) GetIncrementOk() (*int32, bool) {
	if o == nil || o.Increment == nil {
		return nil, false
	}
	return o.Increment, true
}

// HasIncrement returns a boolean if a field has been set.
func (o *SystemRenewRequest) HasIncrement() bool {
	if o != nil && o.Increment != nil {
		return true
	}

	return false
}

// SetIncrement gets a reference to the given int32 and assigns it to the Increment field.
func (o *SystemRenewRequest) SetIncrement(v int32) {
	o.Increment = &v
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *SystemRenewRequest) GetLeaseId() string {
	if o == nil || o.LeaseId == nil {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRenewRequest) GetLeaseIdOk() (*string, bool) {
	if o == nil || o.LeaseId == nil {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *SystemRenewRequest) HasLeaseId() bool {
	if o != nil && o.LeaseId != nil {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *SystemRenewRequest) SetLeaseId(v string) {
	o.LeaseId = &v
}

// GetUrlLeaseId returns the UrlLeaseId field value if set, zero value otherwise.
func (o *SystemRenewRequest) GetUrlLeaseId() string {
	if o == nil || o.UrlLeaseId == nil {
		var ret string
		return ret
	}
	return *o.UrlLeaseId
}

// GetUrlLeaseIdOk returns a tuple with the UrlLeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRenewRequest) GetUrlLeaseIdOk() (*string, bool) {
	if o == nil || o.UrlLeaseId == nil {
		return nil, false
	}
	return o.UrlLeaseId, true
}

// HasUrlLeaseId returns a boolean if a field has been set.
func (o *SystemRenewRequest) HasUrlLeaseId() bool {
	if o != nil && o.UrlLeaseId != nil {
		return true
	}

	return false
}

// SetUrlLeaseId gets a reference to the given string and assigns it to the UrlLeaseId field.
func (o *SystemRenewRequest) SetUrlLeaseId(v string) {
	o.UrlLeaseId = &v
}

func (o SystemRenewRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Increment != nil {
		toSerialize["increment"] = o.Increment
	}
	if o.LeaseId != nil {
		toSerialize["lease_id"] = o.LeaseId
	}
	if o.UrlLeaseId != nil {
		toSerialize["url_lease_id"] = o.UrlLeaseId
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRenewRequest struct {
	value *SystemRenewRequest
	isSet bool
}

func (v NullableSystemRenewRequest) Get() *SystemRenewRequest {
	return v.value
}

func (v *NullableSystemRenewRequest) Set(val *SystemRenewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRenewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRenewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRenewRequest(val *SystemRenewRequest) *NullableSystemRenewRequest {
	return &NullableSystemRenewRequest{value: val, isSet: true}
}

func (v NullableSystemRenewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRenewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemRevokeLeaseRequest struct for SystemRevokeLeaseRequest
type SystemRevokeLeaseRequest struct {
	// The lease identifier to renew. This is included with a lease.
	LeaseId *string `json:"lease_id,omitempty"`
	// Whether or not to perform the revocation synchronously
	Sync *bool `json:"sync,omitempty"`
}

// NewSystemRevokeLeaseRequest instantiates a new SystemRevokeLeaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRevokeLeaseRequest() *SystemRevokeLeaseRequest {
	this := SystemRevokeLeaseRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// NewSystemRevokeLeaseRequestWithDefaults instantiates a new SystemRevokeLeaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRevokeLeaseRequestWithDefaults() *SystemRevokeLeaseRequest {
	this := SystemRevokeLeaseRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *SystemRevokeLeaseRequest) GetLeaseId() string {
	if o == nil || o.LeaseId == nil {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRevokeLeaseRequest) GetLeaseIdOk() (*string, bool) {
	if o == nil || o.LeaseId == nil {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *SystemRevokeLeaseRequest) HasLeaseId() bool {
	if o != nil && o.LeaseId != nil {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *SystemRevokeLeaseRequest) SetLeaseId(v string) {
	o.LeaseId = &v
}

// GetSync returns the Sync field value if set, zero value otherwise.
func (o *SystemRevokeLeaseRequest) GetSync() bool {
	if o == nil || o.Sync == nil {
		var ret bool
		return ret
	}
	return *o.Sync
}

// GetSyncOk returns a tuple with the Sync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRevokeLeaseRequest) GetSyncOk() (*bool, bool) {
	if o == nil || o.Sync == nil {
		return nil, false
	}
	return o.Sync, true
}

// HasSync returns a boolean if a field has been set.
func (o *SystemRevokeLeaseRequest) HasSync() bool {
	if o != nil && o.Sync != nil {
		return true
	}

	return false
}

// SetSync gets a reference to the given bool and assigns it to the Sync field.
func (o *SystemRevokeLeaseRequest) SetSync(v bool) {
	o.Sync = &v
}

func (o SystemRevokeLeaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LeaseId != nil {
		toSerialize["lease_id"] = o.LeaseId
	}
	if o.Sync != nil {
		toSerialize["sync"] = o.Sync
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRevokeLeaseRequest struct {
	value *SystemRevokeLeaseRequest
	isSet bool
}

func (v NullableSystemRevokeLeaseRequest) Get() *SystemRevokeLeaseRequest {
	return v.value
}

func (v *NullableSystemRevokeLeaseRequest) Set(val *SystemRevokeLeaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRevokeLeaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRevokeLeaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRevokeLeaseRequest(val *SystemRevokeLeaseRequest) *NullableSystemRevokeLeaseRequest {
	return &NullableSystemRevokeLeaseRequest{value: val, isSet: true}
}

func (v NullableSystemRevokeLeaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRevokeLeaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemRevokePrefixRequest struct for SystemRevokePrefixRequest
type SystemRevokePrefixRequest struct {
	// Whether or not to perform the revocation synchronously
	Sync *bool `json:"sync,omitempty"`
}

// NewSystemRevokePrefixRequest instantiates a new SystemRevokePrefixRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRevokePrefixRequest() *SystemRevokePrefixRequest {
	this := SystemRevokePrefixRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// NewSystemRevokePrefixRequestWithDefaults instantiates a new SystemRevokePrefixRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRevokePrefixRequestWithDefaults() *SystemRevokePrefixRequest {
	this := SystemRevokePrefixRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// GetSync returns the Sync field value if set, zero value otherwise.
func (o *SystemRevokePrefixRequest) GetSync() bool {
	if o == nil || o.Sync == nil {
		var ret bool
		return ret
	}
	return *o.Sync
}

// GetSyncOk returns a tuple with the Sync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRevokePrefixRequest) GetSyncOk() (*bool, bool) {
	if o == nil || o.Sync == nil {
		return nil, false
	}
	return o.Sync, true
}

// HasSync returns a boolean if a field has been set.
func (o *SystemRevokePrefixRequest) HasSync() bool {
	if o != nil && o.Sync != nil {
		return true
	}

	return false
}

// SetSync gets a reference to the given bool and assigns it to the Sync field.
func (o *SystemRevokePrefixRequest) SetSync(v bool) {
	o.Sync = &v
}

func (o SystemRevokePrefixRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sync != nil {
		toSerialize["sync"] = o.Sync
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRevokePrefixRequest struct {
	value *SystemRevokePrefixRequest
	isSet bool
}

func (v NullableSystemRevokePrefixRequest) Get() *SystemRevokePrefixRequest {
	return v.value
}

func (v *NullableSystemRevokePrefixRequest) Set(val *SystemRevokePrefixRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRevokePrefixRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRevokePrefixRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRevokePrefixRequest(val *SystemRevokePrefixRequest) *NullableSystemRevokePrefixRequest {
	return &NullableSystemRevokePrefixRequest{value: val, isSet: true}
}

func (v NullableSystemRevokePrefixRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRevokePrefixRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemRevokeRequest struct for SystemRevokeRequest
type SystemRevokeRequest struct {
	// The lease identifier to renew. This is included with a lease.
	LeaseId *string `json:"lease_id,omitempty"`
	// Whether or not to perform the revocation synchronously
	Sync *bool `json:"sync,omitempty"`
	// The lease identifier to renew. This is included with a lease.
	UrlLeaseId *string `json:"url_lease_id,omitempty"`
}

// NewSystemRevokeRequest instantiates a new SystemRevokeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRevokeRequest() *SystemRevokeRequest {
	this := SystemRevokeRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// NewSystemRevokeRequestWithDefaults instantiates a new SystemRevokeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRevokeRequestWithDefaults() *SystemRevokeRequest {
	this := SystemRevokeRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *SystemRevokeRequest) GetLeaseId() string {
	if o == nil || o.LeaseId == nil {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRevokeRequest) GetLeaseIdOk() (*string, bool) {
	if o == nil || o.LeaseId == nil {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *SystemRevokeRequest) HasLeaseId() bool {
	if o != nil && o.LeaseId != nil {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *SystemRevokeRequest) SetLeaseId(v string) {
	o.LeaseId = &v
}

// GetSync returns the Sync field value if set, zero value otherwise.
func (o *SystemRevokeRequest) GetSync() bool {
	if o == nil || o.Sync == nil {
		var ret bool
		return ret
	}
	return *o.Sync
}

// GetSyncOk returns a tuple with the Sync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRevokeRequest) GetSyncOk() (*bool, bool) {
	if o == nil || o.Sync == nil {
		return nil, false
	}
	return o.Sync, true
}

// HasSync returns a boolean if a field has been set.
func (o *SystemRevokeRequest) HasSync() bool {
	if o != nil && o.Sync != nil {
		return true
	}

	return false
}

// SetSync gets a reference to the given bool and assigns it to the Sync field.
func (o *SystemRevokeRequest) SetSync(v bool) {
	o.Sync = &v
}

// GetUrlLeaseId returns the UrlLeaseId field value if set, zero value otherwise.
func (o *SystemRevokeRequest) GetUrlLeaseId() string {
	if o == nil || o.UrlLeaseId == nil {
		var ret string
		return ret
	}
	return *o.UrlLeaseId
}

// GetUrlLeaseIdOk returns a tuple with the UrlLeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRevokeRequest) GetUrlLeaseIdOk() (*string, bool) {
	if o == nil || o.UrlLeaseId == nil {
		return nil, false
	}
	return o.UrlLeaseId, true
}

// HasUrlLeaseId returns a boolean if a field has been set.
func (o *SystemRevokeRequest) HasUrlLeaseId() bool {
	if o != nil && o.UrlLeaseId != nil {
		return true
	}

	return false
}

// SetUrlLeaseId gets a reference to the given string and assigns it to the UrlLeaseId field.
func (o *SystemRevokeRequest) SetUrlLeaseId(v string) {
	o.UrlLeaseId = &v
}

func (o SystemRevokeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LeaseId != nil {
		toSerialize["lease_id"] = o.LeaseId
	}
	if o.Sync != nil {
		toSerialize["sync"] = o.Sync
	}
	if o.UrlLeaseId != nil {
		toSerialize["url_lease_id"] = o.UrlLeaseId
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRevokeRequest struct {
	value *SystemRevokeRequest
	isSet bool
}

func (v NullableSystemRevokeRequest) Get() *SystemRevokeRequest {
	return v.value
}

func (v *NullableSystemRevokeRequest) Set(val *SystemRevokeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRevokeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRevokeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRevokeRequest(val *SystemRevokeRequest) *NullableSystemRevokeRequest {
	return &NullableSystemRevokeRequest{value: val, isSet: true}
}

func (v NullableSystemRevokeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRevokeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemRotateConfigRequest struct for SystemRotateConfigRequest
type SystemRotateConfigRequest struct {
	// Whether automatic rotation is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// How long after installation of an active key term that the key will be automatically rotated.
	Interval *int32 `json:"interval,omitempty"`
	// The number of encryption operations performed before the barrier key is automatically rotated.
	MaxOperations *int64 `json:"max_operations,omitempty"`
}

// NewSystemRotateConfigRequest instantiates a new SystemRotateConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRotateConfigRequest() *SystemRotateConfigRequest {
	this := SystemRotateConfigRequest{}
	return &this
}

// NewSystemRotateConfigRequestWithDefaults instantiates a new SystemRotateConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRotateConfigRequestWithDefaults() *SystemRotateConfigRequest {
	this := SystemRotateConfigRequest{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *SystemRotateConfigRequest) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRotateConfigRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *SystemRotateConfigRequest) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *SystemRotateConfigRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *SystemRotateConfigRequest) GetInterval() int32 {
	if o == nil || o.Interval == nil {
		var ret int32
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRotateConfigRequest) GetIntervalOk() (*int32, bool) {
	if o == nil || o.Interval == nil {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *SystemRotateConfigRequest) HasInterval() bool {
	if o != nil && o.Interval != nil {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int32 and assigns it to the Interval field.
func (o *SystemRotateConfigRequest) SetInterval(v int32) {
	o.Interval = &v
}

// GetMaxOperations returns the MaxOperations field value if set, zero value otherwise.
func (o *SystemRotateConfigRequest) GetMaxOperations() int64 {
	if o == nil || o.MaxOperations == nil {
		var ret int64
		return ret
	}
	return *o.MaxOperations
}

// GetMaxOperationsOk returns a tuple with the MaxOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRotateConfigRequest) GetMaxOperationsOk() (*int64, bool) {
	if o == nil || o.MaxOperations == nil {
		return nil, false
	}
	return o.MaxOperations, true
}

// HasMaxOperations returns a boolean if a field has been set.
func (o *SystemRotateConfigRequest) HasMaxOperations() bool {
	if o != nil && o.MaxOperations != nil {
		return true
	}

	return false
}

// SetMaxOperations gets a reference to the given int64 and assigns it to the MaxOperations field.
func (o *SystemRotateConfigRequest) SetMaxOperations(v int64) {
	o.MaxOperations = &v
}

func (o SystemRotateConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Interval != nil {
		toSerialize["interval"] = o.Interval
	}
	if o.MaxOperations != nil {
		toSerialize["max_operations"] = o.MaxOperations
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRotateConfigRequest struct {
	value *SystemRotateConfigRequest
	isSet bool
}

func (v NullableSystemRotateConfigRequest) Get() *SystemRotateConfigRequest {
	return v.value
}

func (v *NullableSystemRotateConfigRequest) Set(val *SystemRotateConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRotateConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRotateConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRotateConfigRequest(val *SystemRotateConfigRequest) *NullableSystemRotateConfigRequest {
	return &NullableSystemRotateConfigRequest{value: val, isSet: true}
}

func (v NullableSystemRotateConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRotateConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemToolsHashRequest struct for SystemToolsHashRequest
type SystemToolsHashRequest struct {
	// Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\".
	Algorithm *string `json:"algorithm,omitempty"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"hex\".
	Format *string `json:"format,omitempty"`
	// The base64-encoded input data
	Input *string `json:"input,omitempty"`
	// Algorithm to use (POST URL parameter)
	Urlalgorithm *string `json:"urlalgorithm,omitempty"`
}

// NewSystemToolsHashRequest instantiates a new SystemToolsHashRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemToolsHashRequest() *SystemToolsHashRequest {
	this := SystemToolsHashRequest{}
	var algorithm string = "sha2-256"
	this.Algorithm = &algorithm
	var format string = "hex"
	this.Format = &format
	return &this
}

// NewSystemToolsHashRequestWithDefaults instantiates a new SystemToolsHashRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemToolsHashRequestWithDefaults() *SystemToolsHashRequest {
	this := SystemToolsHashRequest{}
	var algorithm string = "sha2-256"
	this.Algorithm = &algorithm
	var format string = "hex"
	this.Format = &format
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *SystemToolsHashRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemToolsHashRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *SystemToolsHashRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *SystemToolsHashRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *SystemToolsHashRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemToolsHashRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *SystemToolsHashRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *SystemToolsHashRequest) SetFormat(v string) {
	o.Format = &v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *SystemToolsHashRequest) GetInput() string {
	if o == nil || o.Input == nil {
		var ret string
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemToolsHashRequest) GetInputOk() (*string, bool) {
	if o == nil || o.Input == nil {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *SystemToolsHashRequest) HasInput() bool {
	if o != nil && o.Input != nil {
		return true
	}

	return false
}

// SetInput gets a reference to the given string and assigns it to the Input field.
func (o *SystemToolsHashRequest) SetInput(v string) {
	o.Input = &v
}

// GetUrlalgorithm returns the Urlalgorithm field value if set, zero value otherwise.
func (o *SystemToolsHashRequest) GetUrlalgorithm() string {
	if o == nil || o.Urlalgorithm == nil {
		var ret string
		return ret
	}
	return *o.Urlalgorithm
}

// GetUrlalgorithmOk returns a tuple with the Urlalgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemToolsHashRequest) GetUrlalgorithmOk() (*string, bool) {
	if o == nil || o.Urlalgorithm == nil {
		return nil, false
	}
	return o.Urlalgorithm, true
}

// HasUrlalgorithm returns a boolean if a field has been set.
func (o *SystemToolsHashRequest) HasUrlalgorithm() bool {
	if o != nil && o.Urlalgorithm != nil {
		return true
	}

	return false
}

// SetUrlalgorithm gets a reference to the given string and assigns it to the Urlalgorithm field.
func (o *SystemToolsHashRequest) SetUrlalgorithm(v string) {
	o.Urlalgorithm = &v
}

func (o SystemToolsHashRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	if o.Urlalgorithm != nil {
		toSerialize["urlalgorithm"] = o.Urlalgorithm
	}
	return json.Marshal(toSerialize)
}

type NullableSystemToolsHashRequest struct {
	value *SystemToolsHashRequest
	isSet bool
}

func (v NullableSystemToolsHashRequest) Get() *SystemToolsHashRequest {
	return v.value
}

func (v *NullableSystemToolsHashRequest) Set(val *SystemToolsHashRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemToolsHashRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemToolsHashRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemToolsHashRequest(val *SystemToolsHashRequest) *NullableSystemToolsHashRequest {
	return &NullableSystemToolsHashRequest{value: val, isSet: true}
}

func (v NullableSystemToolsHashRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemToolsHashRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemToolsRandomRequest struct for SystemToolsRandomRequest
type SystemToolsRandomRequest struct {
	// The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits).
	Bytes *int32 `json:"bytes,omitempty"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\".
	Format *string `json:"format,omitempty"`
	// Which system to source random data from, ether \"platform\", \"seal\", or \"all\".
	Source *string `json:"source,omitempty"`
	// The number of bytes to generate (POST URL parameter)
	Urlbytes *string `json:"urlbytes,omitempty"`
}

// NewSystemToolsRandomRequest instantiates a new SystemToolsRandomRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemToolsRandomRequest() *SystemToolsRandomRequest {
	this := SystemToolsRandomRequest{}
	var bytes int32 = 32
	this.Bytes = &bytes
	var format string = "base64"
	this.Format = &format
	var source string = "platform"
	this.Source = &source
	return &this
}

// NewSystemToolsRandomRequestWithDefaults instantiates a new SystemToolsRandomRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemToolsRandomRequestWithDefaults() *SystemToolsRandomRequest {
	this := SystemToolsRandomRequest{}
	var bytes int32 = 32
	this.Bytes = &bytes
	var format string = "base64"
	this.Format = &format
	var source string = "platform"
	this.Source = &source
	return &this
}

// GetBytes returns the Bytes field value if set, zero value otherwise.
func (o *SystemToolsRandomRequest) GetBytes() int32 {
	if o == nil || o.Bytes == nil {
		var ret int32
		return ret
	}
	return *o.Bytes
}

// GetBytesOk returns a tuple with the Bytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemToolsRandomRequest) GetBytesOk() (*int32, bool) {
	if o == nil || o.Bytes == nil {
		return nil, false
	}
	return o.Bytes, true
}

// HasBytes returns a boolean if a field has been set.
func (o *SystemToolsRandomRequest) HasBytes() bool {
	if o != nil && o.Bytes != nil {
		return true
	}

	return false
}

// SetBytes gets a reference to the given int32 and assigns it to the Bytes field.
func (o *SystemToolsRandomRequest) SetBytes(v int32) {
	o.Bytes = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *SystemToolsRandomRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemToolsRandomRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *SystemToolsRandomRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *SystemToolsRandomRequest) SetFormat(v string) {
	o.Format = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *SystemToolsRandomRequest) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemToolsRandomRequest) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *SystemToolsRandomRequest) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *SystemToolsRandomRequest) SetSource(v string) {
	o.Source = &v
}

// GetUrlbytes returns the Urlbytes field value if set, zero value otherwise.
func (o *SystemToolsRandomRequest) GetUrlbytes() string {
	if o == nil || o.Urlbytes == nil {
		var ret string
		return ret
	}
	return *o.Urlbytes
}

// GetUrlbytesOk returns a tuple with the Urlbytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemToolsRandomRequest) GetUrlbytesOk() (*string, bool) {
	if o == nil || o.Urlbytes == nil {
		return nil, false
	}
	return o.Urlbytes, true
}

// HasUrlbytes returns a boolean if a field has been set.
func (o *SystemToolsRandomRequest) HasUrlbytes() bool {
	if o != nil && o.Urlbytes != nil {
		return true
	}

	return false
}

// SetUrlbytes gets a reference to the given string and assigns it to the Urlbytes field.
func (o *SystemToolsRandomRequest) SetUrlbytes(v string) {
	o.Urlbytes = &v
}

func (o SystemToolsRandomRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bytes != nil {
		toSerialize["bytes"] = o.Bytes
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.Urlbytes != nil {
		toSerialize["urlbytes"] = o.Urlbytes
	}
	return json.Marshal(toSerialize)
}

type NullableSystemToolsRandomRequest struct {
	value *SystemToolsRandomRequest
	isSet bool
}

func (v NullableSystemToolsRandomRequest) Get() *SystemToolsRandomRequest {
	return v.value
}

func (v *NullableSystemToolsRandomRequest) Set(val *SystemToolsRandomRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemToolsRandomRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemToolsRandomRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemToolsRandomRequest(val *SystemToolsRandomRequest) *NullableSystemToolsRandomRequest {
	return &NullableSystemToolsRandomRequest{value: val, isSet: true}
}

func (v NullableSystemToolsRandomRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemToolsRandomRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemUnsealRequest struct for SystemUnsealRequest
type SystemUnsealRequest struct {
	// Specifies a single unseal key share. This is required unless reset is true.
	Key *string `json:"key,omitempty"`
	// Specifies if previously-provided unseal keys are discarded and the unseal process is reset.
	Reset *bool `json:"reset,omitempty"`
}

// NewSystemUnsealRequest instantiates a new SystemUnsealRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemUnsealRequest() *SystemUnsealRequest {
	this := SystemUnsealRequest{}
	return &this
}

// NewSystemUnsealRequestWithDefaults instantiates a new SystemUnsealRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemUnsealRequestWithDefaults() *SystemUnsealRequest {
	this := SystemUnsealRequest{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SystemUnsealRequest) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemUnsealRequest) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SystemUnsealRequest) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SystemUnsealRequest) SetKey(v string) {
	o.Key = &v
}

// GetReset returns the Reset field value if set, zero value otherwise.
func (o *SystemUnsealRequest) GetReset() bool {
	if o == nil || o.Reset == nil {
		var ret bool
		return ret
	}
	return *o.Reset
}

// GetResetOk returns a tuple with the Reset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemUnsealRequest) GetResetOk() (*bool, bool) {
	if o == nil || o.Reset == nil {
		return nil, false
	}
	return o.Reset, true
}

// HasReset returns a boolean if a field has been set.
func (o *SystemUnsealRequest) HasReset() bool {
	if o != nil && o.Reset != nil {
		return true
	}

	return false
}

// SetReset gets a reference to the given bool and assigns it to the Reset field.
func (o *SystemUnsealRequest) SetReset(v bool) {
	o.Reset = &v
}

func (o SystemUnsealRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Reset != nil {
		toSerialize["reset"] = o.Reset
	}
	return json.Marshal(toSerialize)
}

type NullableSystemUnsealRequest struct {
	value *SystemUnsealRequest
	isSet bool
}

func (v NullableSystemUnsealRequest) Get() *SystemUnsealRequest {
	return v.value
}

func (v *NullableSystemUnsealRequest) Set(val *SystemUnsealRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemUnsealRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemUnsealRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemUnsealRequest(val *SystemUnsealRequest) *NullableSystemUnsealRequest {
	return &NullableSystemUnsealRequest{value: val, isSet: true}
}

func (v NullableSystemUnsealRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemUnsealRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemWrappingLookupRequest struct for SystemWrappingLookupRequest
type SystemWrappingLookupRequest struct {
	Token *string `json:"token,omitempty"`
}

// NewSystemWrappingLookupRequest instantiates a new SystemWrappingLookupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemWrappingLookupRequest() *SystemWrappingLookupRequest {
	this := SystemWrappingLookupRequest{}
	return &this
}

// NewSystemWrappingLookupRequestWithDefaults instantiates a new SystemWrappingLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemWrappingLookupRequestWithDefaults() *SystemWrappingLookupRequest {
	this := SystemWrappingLookupRequest{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *SystemWrappingLookupRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemWrappingLookupRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *SystemWrappingLookupRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *SystemWrappingLookupRequest) SetToken(v string) {
	o.Token = &v
}

func (o SystemWrappingLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableSystemWrappingLookupRequest struct {
	value *SystemWrappingLookupRequest
	isSet bool
}

func (v NullableSystemWrappingLookupRequest) Get() *SystemWrappingLookupRequest {
	return v.value
}

func (v *NullableSystemWrappingLookupRequest) Set(val *SystemWrappingLookupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemWrappingLookupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemWrappingLookupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemWrappingLookupRequest(val *SystemWrappingLookupRequest) *NullableSystemWrappingLookupRequest {
	return &NullableSystemWrappingLookupRequest{value: val, isSet: true}
}

func (v NullableSystemWrappingLookupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemWrappingLookupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemWrappingRewrapRequest struct for SystemWrappingRewrapRequest
type SystemWrappingRewrapRequest struct {
	Token *string `json:"token,omitempty"`
}

// NewSystemWrappingRewrapRequest instantiates a new SystemWrappingRewrapRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemWrappingRewrapRequest() *SystemWrappingRewrapRequest {
	this := SystemWrappingRewrapRequest{}
	return &this
}

// NewSystemWrappingRewrapRequestWithDefaults instantiates a new SystemWrappingRewrapRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemWrappingRewrapRequestWithDefaults() *SystemWrappingRewrapRequest {
	this := SystemWrappingRewrapRequest{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *SystemWrappingRewrapRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemWrappingRewrapRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *SystemWrappingRewrapRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *SystemWrappingRewrapRequest) SetToken(v string) {
	o.Token = &v
}

func (o SystemWrappingRewrapRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableSystemWrappingRewrapRequest struct {
	value *SystemWrappingRewrapRequest
	isSet bool
}

func (v NullableSystemWrappingRewrapRequest) Get() *SystemWrappingRewrapRequest {
	return v.value
}

func (v *NullableSystemWrappingRewrapRequest) Set(val *SystemWrappingRewrapRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemWrappingRewrapRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemWrappingRewrapRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemWrappingRewrapRequest(val *SystemWrappingRewrapRequest) *NullableSystemWrappingRewrapRequest {
	return &NullableSystemWrappingRewrapRequest{value: val, isSet: true}
}

func (v NullableSystemWrappingRewrapRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemWrappingRewrapRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SystemWrappingUnwrapRequest struct for SystemWrappingUnwrapRequest
type SystemWrappingUnwrapRequest struct {
	Token *string `json:"token,omitempty"`
}

// NewSystemWrappingUnwrapRequest instantiates a new SystemWrappingUnwrapRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemWrappingUnwrapRequest() *SystemWrappingUnwrapRequest {
	this := SystemWrappingUnwrapRequest{}
	return &this
}

// NewSystemWrappingUnwrapRequestWithDefaults instantiates a new SystemWrappingUnwrapRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemWrappingUnwrapRequestWithDefaults() *SystemWrappingUnwrapRequest {
	this := SystemWrappingUnwrapRequest{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *SystemWrappingUnwrapRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemWrappingUnwrapRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *SystemWrappingUnwrapRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *SystemWrappingUnwrapRequest) SetToken(v string) {
	o.Token = &v
}

func (o SystemWrappingUnwrapRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableSystemWrappingUnwrapRequest struct {
	value *SystemWrappingUnwrapRequest
	isSet bool
}

func (v NullableSystemWrappingUnwrapRequest) Get() *SystemWrappingUnwrapRequest {
	return v.value
}

func (v *NullableSystemWrappingUnwrapRequest) Set(val *SystemWrappingUnwrapRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemWrappingUnwrapRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemWrappingUnwrapRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemWrappingUnwrapRequest(val *SystemWrappingUnwrapRequest) *NullableSystemWrappingUnwrapRequest {
	return &NullableSystemWrappingUnwrapRequest{value: val, isSet: true}
}

func (v NullableSystemWrappingUnwrapRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemWrappingUnwrapRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TerraformConfigRequest struct for TerraformConfigRequest
type TerraformConfigRequest struct {
	// The address to access Terraform Cloud or Enterprise. Default is \"https://app.terraform.io\".
	Address *string `json:"address,omitempty"`
	// The base path for the Terraform Cloud or Enterprise API. Default is \"/api/v2/\".
	BasePath *string `json:"base_path,omitempty"`
	// The token to access Terraform Cloud
	Token string `json:"token"`
}

// NewTerraformConfigRequest instantiates a new TerraformConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerraformConfigRequest(token string) *TerraformConfigRequest {
	this := TerraformConfigRequest{}
	var address string = "https://app.terraform.io"
	this.Address = &address
	var basePath string = "/api/v2/"
	this.BasePath = &basePath
	this.Token = token
	return &this
}

// NewTerraformConfigRequestWithDefaults instantiates a new TerraformConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerraformConfigRequestWithDefaults() *TerraformConfigRequest {
	this := TerraformConfigRequest{}
	var address string = "https://app.terraform.io"
	this.Address = &address
	var basePath string = "/api/v2/"
	this.BasePath = &basePath
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *TerraformConfigRequest) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformConfigRequest) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *TerraformConfigRequest) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *TerraformConfigRequest) SetAddress(v string) {
	o.Address = &v
}

// GetBasePath returns the BasePath field value if set, zero value otherwise.
func (o *TerraformConfigRequest) GetBasePath() string {
	if o == nil || o.BasePath == nil {
		var ret string
		return ret
	}
	return *o.BasePath
}

// GetBasePathOk returns a tuple with the BasePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformConfigRequest) GetBasePathOk() (*string, bool) {
	if o == nil || o.BasePath == nil {
		return nil, false
	}
	return o.BasePath, true
}

// HasBasePath returns a boolean if a field has been set.
func (o *TerraformConfigRequest) HasBasePath() bool {
	if o != nil && o.BasePath != nil {
		return true
	}

	return false
}

// SetBasePath gets a reference to the given string and assigns it to the BasePath field.
func (o *TerraformConfigRequest) SetBasePath(v string) {
	o.BasePath = &v
}

// GetToken returns the Token field value
func (o *TerraformConfigRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *TerraformConfigRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *TerraformConfigRequest) SetToken(v string) {
	o.Token = v
}

func (o TerraformConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.BasePath != nil {
		toSerialize["base_path"] = o.BasePath
	}
	if true {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableTerraformConfigRequest struct {
	value *TerraformConfigRequest
	isSet bool
}

func (v NullableTerraformConfigRequest) Get() *TerraformConfigRequest {
	return v.value
}

func (v *NullableTerraformConfigRequest) Set(val *TerraformConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTerraformConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTerraformConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerraformConfigRequest(val *TerraformConfigRequest) *NullableTerraformConfigRequest {
	return &NullableTerraformConfigRequest{value: val, isSet: true}
}

func (v NullableTerraformConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerraformConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TerraformRoleRequest struct for TerraformRoleRequest
type TerraformRoleRequest struct {
	// Maximum time for role. If not set or set to 0, will use system default.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Name of the Terraform Cloud or Enterprise organization
	Organization *string `json:"organization,omitempty"`
	// ID of the Terraform Cloud or Enterprise team under organization (e.g., settings/teams/team-xxxxxxxxxxxxx)
	TeamId *string `json:"team_id,omitempty"`
	// Default lease for generated credentials. If not set or set to 0, will use system default.
	Ttl *int32 `json:"ttl,omitempty"`
	// ID of the Terraform Cloud or Enterprise user (e.g., user-xxxxxxxxxxxxxxxx)
	UserId *string `json:"user_id,omitempty"`
}

// NewTerraformRoleRequest instantiates a new TerraformRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerraformRoleRequest() *TerraformRoleRequest {
	this := TerraformRoleRequest{}
	return &this
}

// NewTerraformRoleRequestWithDefaults instantiates a new TerraformRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerraformRoleRequestWithDefaults() *TerraformRoleRequest {
	this := TerraformRoleRequest{}
	return &this
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *TerraformRoleRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformRoleRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *TerraformRoleRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *TerraformRoleRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *TerraformRoleRequest) GetOrganization() string {
	if o == nil || o.Organization == nil {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformRoleRequest) GetOrganizationOk() (*string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *TerraformRoleRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *TerraformRoleRequest) SetOrganization(v string) {
	o.Organization = &v
}

// GetTeamId returns the TeamId field value if set, zero value otherwise.
func (o *TerraformRoleRequest) GetTeamId() string {
	if o == nil || o.TeamId == nil {
		var ret string
		return ret
	}
	return *o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformRoleRequest) GetTeamIdOk() (*string, bool) {
	if o == nil || o.TeamId == nil {
		return nil, false
	}
	return o.TeamId, true
}

// HasTeamId returns a boolean if a field has been set.
func (o *TerraformRoleRequest) HasTeamId() bool {
	if o != nil && o.TeamId != nil {
		return true
	}

	return false
}

// SetTeamId gets a reference to the given string and assigns it to the TeamId field.
func (o *TerraformRoleRequest) SetTeamId(v string) {
	o.TeamId = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *TerraformRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *TerraformRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *TerraformRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *TerraformRoleRequest) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformRoleRequest) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *TerraformRoleRequest) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *TerraformRoleRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o TerraformRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.TeamId != nil {
		toSerialize["team_id"] = o.TeamId
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableTerraformRoleRequest struct {
	value *TerraformRoleRequest
	isSet bool
}

func (v NullableTerraformRoleRequest) Get() *TerraformRoleRequest {
	return v.value
}

func (v *NullableTerraformRoleRequest) Set(val *TerraformRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTerraformRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTerraformRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerraformRoleRequest(val *TerraformRoleRequest) *NullableTerraformRoleRequest {
	return &NullableTerraformRoleRequest{value: val, isSet: true}
}

func (v NullableTerraformRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerraformRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenLookupAccessorRequest struct for TokenLookupAccessorRequest
type TokenLookupAccessorRequest struct {
	// Accessor of the token to look up (request body)
	Accessor *string `json:"accessor,omitempty"`
}

// NewTokenLookupAccessorRequest instantiates a new TokenLookupAccessorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenLookupAccessorRequest() *TokenLookupAccessorRequest {
	this := TokenLookupAccessorRequest{}
	return &this
}

// NewTokenLookupAccessorRequestWithDefaults instantiates a new TokenLookupAccessorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenLookupAccessorRequestWithDefaults() *TokenLookupAccessorRequest {
	this := TokenLookupAccessorRequest{}
	return &this
}

// GetAccessor returns the Accessor field value if set, zero value otherwise.
func (o *TokenLookupAccessorRequest) GetAccessor() string {
	if o == nil || o.Accessor == nil {
		var ret string
		return ret
	}
	return *o.Accessor
}

// GetAccessorOk returns a tuple with the Accessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenLookupAccessorRequest) GetAccessorOk() (*string, bool) {
	if o == nil || o.Accessor == nil {
		return nil, false
	}
	return o.Accessor, true
}

// HasAccessor returns a boolean if a field has been set.
func (o *TokenLookupAccessorRequest) HasAccessor() bool {
	if o != nil && o.Accessor != nil {
		return true
	}

	return false
}

// SetAccessor gets a reference to the given string and assigns it to the Accessor field.
func (o *TokenLookupAccessorRequest) SetAccessor(v string) {
	o.Accessor = &v
}

func (o TokenLookupAccessorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accessor != nil {
		toSerialize["accessor"] = o.Accessor
	}
	return json.Marshal(toSerialize)
}

type NullableTokenLookupAccessorRequest struct {
	value *TokenLookupAccessorRequest
	isSet bool
}

func (v NullableTokenLookupAccessorRequest) Get() *TokenLookupAccessorRequest {
	return v.value
}

func (v *NullableTokenLookupAccessorRequest) Set(val *TokenLookupAccessorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenLookupAccessorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenLookupAccessorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenLookupAccessorRequest(val *TokenLookupAccessorRequest) *NullableTokenLookupAccessorRequest {
	return &NullableTokenLookupAccessorRequest{value: val, isSet: true}
}

func (v NullableTokenLookupAccessorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenLookupAccessorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenLookupRequest struct for TokenLookupRequest
type TokenLookupRequest struct {
	// Token to lookup (POST request body)
	Token *string `json:"token,omitempty"`
}

// NewTokenLookupRequest instantiates a new TokenLookupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenLookupRequest() *TokenLookupRequest {
	this := TokenLookupRequest{}
	return &this
}

// NewTokenLookupRequestWithDefaults instantiates a new TokenLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenLookupRequestWithDefaults() *TokenLookupRequest {
	this := TokenLookupRequest{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *TokenLookupRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenLookupRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *TokenLookupRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *TokenLookupRequest) SetToken(v string) {
	o.Token = &v
}

func (o TokenLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableTokenLookupRequest struct {
	value *TokenLookupRequest
	isSet bool
}

func (v NullableTokenLookupRequest) Get() *TokenLookupRequest {
	return v.value
}

func (v *NullableTokenLookupRequest) Set(val *TokenLookupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenLookupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenLookupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenLookupRequest(val *TokenLookupRequest) *NullableTokenLookupRequest {
	return &NullableTokenLookupRequest{value: val, isSet: true}
}

func (v NullableTokenLookupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenLookupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenLookupSelfRequest struct for TokenLookupSelfRequest
type TokenLookupSelfRequest struct {
	// Token to look up (unused, does not need to be set)
	Token *string `json:"token,omitempty"`
}

// NewTokenLookupSelfRequest instantiates a new TokenLookupSelfRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenLookupSelfRequest() *TokenLookupSelfRequest {
	this := TokenLookupSelfRequest{}
	return &this
}

// NewTokenLookupSelfRequestWithDefaults instantiates a new TokenLookupSelfRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenLookupSelfRequestWithDefaults() *TokenLookupSelfRequest {
	this := TokenLookupSelfRequest{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *TokenLookupSelfRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenLookupSelfRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *TokenLookupSelfRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *TokenLookupSelfRequest) SetToken(v string) {
	o.Token = &v
}

func (o TokenLookupSelfRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableTokenLookupSelfRequest struct {
	value *TokenLookupSelfRequest
	isSet bool
}

func (v NullableTokenLookupSelfRequest) Get() *TokenLookupSelfRequest {
	return v.value
}

func (v *NullableTokenLookupSelfRequest) Set(val *TokenLookupSelfRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenLookupSelfRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenLookupSelfRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenLookupSelfRequest(val *TokenLookupSelfRequest) *NullableTokenLookupSelfRequest {
	return &NullableTokenLookupSelfRequest{value: val, isSet: true}
}

func (v NullableTokenLookupSelfRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenLookupSelfRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRenewAccessorRequest struct for TokenRenewAccessorRequest
type TokenRenewAccessorRequest struct {
	// Accessor of the token to renew (request body)
	Accessor *string `json:"accessor,omitempty"`
	// The desired increment in seconds to the token expiration
	Increment *int32 `json:"increment,omitempty"`
}

// NewTokenRenewAccessorRequest instantiates a new TokenRenewAccessorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenRenewAccessorRequest() *TokenRenewAccessorRequest {
	this := TokenRenewAccessorRequest{}
	var increment int32 = 0
	this.Increment = &increment
	return &this
}

// NewTokenRenewAccessorRequestWithDefaults instantiates a new TokenRenewAccessorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRenewAccessorRequestWithDefaults() *TokenRenewAccessorRequest {
	this := TokenRenewAccessorRequest{}
	var increment int32 = 0
	this.Increment = &increment
	return &this
}

// GetAccessor returns the Accessor field value if set, zero value otherwise.
func (o *TokenRenewAccessorRequest) GetAccessor() string {
	if o == nil || o.Accessor == nil {
		var ret string
		return ret
	}
	return *o.Accessor
}

// GetAccessorOk returns a tuple with the Accessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRenewAccessorRequest) GetAccessorOk() (*string, bool) {
	if o == nil || o.Accessor == nil {
		return nil, false
	}
	return o.Accessor, true
}

// HasAccessor returns a boolean if a field has been set.
func (o *TokenRenewAccessorRequest) HasAccessor() bool {
	if o != nil && o.Accessor != nil {
		return true
	}

	return false
}

// SetAccessor gets a reference to the given string and assigns it to the Accessor field.
func (o *TokenRenewAccessorRequest) SetAccessor(v string) {
	o.Accessor = &v
}

// GetIncrement returns the Increment field value if set, zero value otherwise.
func (o *TokenRenewAccessorRequest) GetIncrement() int32 {
	if o == nil || o.Increment == nil {
		var ret int32
		return ret
	}
	return *o.Increment
}

// GetIncrementOk returns a tuple with the Increment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRenewAccessorRequest) GetIncrementOk() (*int32, bool) {
	if o == nil || o.Increment == nil {
		return nil, false
	}
	return o.Increment, true
}

// HasIncrement returns a boolean if a field has been set.
func (o *TokenRenewAccessorRequest) HasIncrement() bool {
	if o != nil && o.Increment != nil {
		return true
	}

	return false
}

// SetIncrement gets a reference to the given int32 and assigns it to the Increment field.
func (o *TokenRenewAccessorRequest) SetIncrement(v int32) {
	o.Increment = &v
}

func (o TokenRenewAccessorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accessor != nil {
		toSerialize["accessor"] = o.Accessor
	}
	if o.Increment != nil {
		toSerialize["increment"] = o.Increment
	}
	return json.Marshal(toSerialize)
}

type NullableTokenRenewAccessorRequest struct {
	value *TokenRenewAccessorRequest
	isSet bool
}

func (v NullableTokenRenewAccessorRequest) Get() *TokenRenewAccessorRequest {
	return v.value
}

func (v *NullableTokenRenewAccessorRequest) Set(val *TokenRenewAccessorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenRenewAccessorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenRenewAccessorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenRenewAccessorRequest(val *TokenRenewAccessorRequest) *NullableTokenRenewAccessorRequest {
	return &NullableTokenRenewAccessorRequest{value: val, isSet: true}
}

func (v NullableTokenRenewAccessorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenRenewAccessorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRenewRequest struct for TokenRenewRequest
type TokenRenewRequest struct {
	// The desired increment in seconds to the token expiration
	Increment *int32 `json:"increment,omitempty"`
	// Token to renew (request body)
	Token *string `json:"token,omitempty"`
}

// NewTokenRenewRequest instantiates a new TokenRenewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenRenewRequest() *TokenRenewRequest {
	this := TokenRenewRequest{}
	var increment int32 = 0
	this.Increment = &increment
	return &this
}

// NewTokenRenewRequestWithDefaults instantiates a new TokenRenewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRenewRequestWithDefaults() *TokenRenewRequest {
	this := TokenRenewRequest{}
	var increment int32 = 0
	this.Increment = &increment
	return &this
}

// GetIncrement returns the Increment field value if set, zero value otherwise.
func (o *TokenRenewRequest) GetIncrement() int32 {
	if o == nil || o.Increment == nil {
		var ret int32
		return ret
	}
	return *o.Increment
}

// GetIncrementOk returns a tuple with the Increment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRenewRequest) GetIncrementOk() (*int32, bool) {
	if o == nil || o.Increment == nil {
		return nil, false
	}
	return o.Increment, true
}

// HasIncrement returns a boolean if a field has been set.
func (o *TokenRenewRequest) HasIncrement() bool {
	if o != nil && o.Increment != nil {
		return true
	}

	return false
}

// SetIncrement gets a reference to the given int32 and assigns it to the Increment field.
func (o *TokenRenewRequest) SetIncrement(v int32) {
	o.Increment = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *TokenRenewRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRenewRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *TokenRenewRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *TokenRenewRequest) SetToken(v string) {
	o.Token = &v
}

func (o TokenRenewRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Increment != nil {
		toSerialize["increment"] = o.Increment
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableTokenRenewRequest struct {
	value *TokenRenewRequest
	isSet bool
}

func (v NullableTokenRenewRequest) Get() *TokenRenewRequest {
	return v.value
}

func (v *NullableTokenRenewRequest) Set(val *TokenRenewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenRenewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenRenewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenRenewRequest(val *TokenRenewRequest) *NullableTokenRenewRequest {
	return &NullableTokenRenewRequest{value: val, isSet: true}
}

func (v NullableTokenRenewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenRenewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRenewSelfRequest struct for TokenRenewSelfRequest
type TokenRenewSelfRequest struct {
	// The desired increment in seconds to the token expiration
	Increment *int32 `json:"increment,omitempty"`
	// Token to renew (unused, does not need to be set)
	Token *string `json:"token,omitempty"`
}

// NewTokenRenewSelfRequest instantiates a new TokenRenewSelfRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenRenewSelfRequest() *TokenRenewSelfRequest {
	this := TokenRenewSelfRequest{}
	var increment int32 = 0
	this.Increment = &increment
	return &this
}

// NewTokenRenewSelfRequestWithDefaults instantiates a new TokenRenewSelfRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRenewSelfRequestWithDefaults() *TokenRenewSelfRequest {
	this := TokenRenewSelfRequest{}
	var increment int32 = 0
	this.Increment = &increment
	return &this
}

// GetIncrement returns the Increment field value if set, zero value otherwise.
func (o *TokenRenewSelfRequest) GetIncrement() int32 {
	if o == nil || o.Increment == nil {
		var ret int32
		return ret
	}
	return *o.Increment
}

// GetIncrementOk returns a tuple with the Increment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRenewSelfRequest) GetIncrementOk() (*int32, bool) {
	if o == nil || o.Increment == nil {
		return nil, false
	}
	return o.Increment, true
}

// HasIncrement returns a boolean if a field has been set.
func (o *TokenRenewSelfRequest) HasIncrement() bool {
	if o != nil && o.Increment != nil {
		return true
	}

	return false
}

// SetIncrement gets a reference to the given int32 and assigns it to the Increment field.
func (o *TokenRenewSelfRequest) SetIncrement(v int32) {
	o.Increment = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *TokenRenewSelfRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRenewSelfRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *TokenRenewSelfRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *TokenRenewSelfRequest) SetToken(v string) {
	o.Token = &v
}

func (o TokenRenewSelfRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Increment != nil {
		toSerialize["increment"] = o.Increment
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableTokenRenewSelfRequest struct {
	value *TokenRenewSelfRequest
	isSet bool
}

func (v NullableTokenRenewSelfRequest) Get() *TokenRenewSelfRequest {
	return v.value
}

func (v *NullableTokenRenewSelfRequest) Set(val *TokenRenewSelfRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenRenewSelfRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenRenewSelfRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenRenewSelfRequest(val *TokenRenewSelfRequest) *NullableTokenRenewSelfRequest {
	return &NullableTokenRenewSelfRequest{value: val, isSet: true}
}

func (v NullableTokenRenewSelfRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenRenewSelfRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRevokeAccessorRequest struct for TokenRevokeAccessorRequest
type TokenRevokeAccessorRequest struct {
	// Accessor of the token (request body)
	Accessor *string `json:"accessor,omitempty"`
}

// NewTokenRevokeAccessorRequest instantiates a new TokenRevokeAccessorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenRevokeAccessorRequest() *TokenRevokeAccessorRequest {
	this := TokenRevokeAccessorRequest{}
	return &this
}

// NewTokenRevokeAccessorRequestWithDefaults instantiates a new TokenRevokeAccessorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRevokeAccessorRequestWithDefaults() *TokenRevokeAccessorRequest {
	this := TokenRevokeAccessorRequest{}
	return &this
}

// GetAccessor returns the Accessor field value if set, zero value otherwise.
func (o *TokenRevokeAccessorRequest) GetAccessor() string {
	if o == nil || o.Accessor == nil {
		var ret string
		return ret
	}
	return *o.Accessor
}

// GetAccessorOk returns a tuple with the Accessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRevokeAccessorRequest) GetAccessorOk() (*string, bool) {
	if o == nil || o.Accessor == nil {
		return nil, false
	}
	return o.Accessor, true
}

// HasAccessor returns a boolean if a field has been set.
func (o *TokenRevokeAccessorRequest) HasAccessor() bool {
	if o != nil && o.Accessor != nil {
		return true
	}

	return false
}

// SetAccessor gets a reference to the given string and assigns it to the Accessor field.
func (o *TokenRevokeAccessorRequest) SetAccessor(v string) {
	o.Accessor = &v
}

func (o TokenRevokeAccessorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accessor != nil {
		toSerialize["accessor"] = o.Accessor
	}
	return json.Marshal(toSerialize)
}

type NullableTokenRevokeAccessorRequest struct {
	value *TokenRevokeAccessorRequest
	isSet bool
}

func (v NullableTokenRevokeAccessorRequest) Get() *TokenRevokeAccessorRequest {
	return v.value
}

func (v *NullableTokenRevokeAccessorRequest) Set(val *TokenRevokeAccessorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenRevokeAccessorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenRevokeAccessorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenRevokeAccessorRequest(val *TokenRevokeAccessorRequest) *NullableTokenRevokeAccessorRequest {
	return &NullableTokenRevokeAccessorRequest{value: val, isSet: true}
}

func (v NullableTokenRevokeAccessorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenRevokeAccessorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRevokeOrphanRequest struct for TokenRevokeOrphanRequest
type TokenRevokeOrphanRequest struct {
	// Token to revoke (request body)
	Token *string `json:"token,omitempty"`
}

// NewTokenRevokeOrphanRequest instantiates a new TokenRevokeOrphanRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenRevokeOrphanRequest() *TokenRevokeOrphanRequest {
	this := TokenRevokeOrphanRequest{}
	return &this
}

// NewTokenRevokeOrphanRequestWithDefaults instantiates a new TokenRevokeOrphanRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRevokeOrphanRequestWithDefaults() *TokenRevokeOrphanRequest {
	this := TokenRevokeOrphanRequest{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *TokenRevokeOrphanRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRevokeOrphanRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *TokenRevokeOrphanRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *TokenRevokeOrphanRequest) SetToken(v string) {
	o.Token = &v
}

func (o TokenRevokeOrphanRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableTokenRevokeOrphanRequest struct {
	value *TokenRevokeOrphanRequest
	isSet bool
}

func (v NullableTokenRevokeOrphanRequest) Get() *TokenRevokeOrphanRequest {
	return v.value
}

func (v *NullableTokenRevokeOrphanRequest) Set(val *TokenRevokeOrphanRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenRevokeOrphanRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenRevokeOrphanRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenRevokeOrphanRequest(val *TokenRevokeOrphanRequest) *NullableTokenRevokeOrphanRequest {
	return &NullableTokenRevokeOrphanRequest{value: val, isSet: true}
}

func (v NullableTokenRevokeOrphanRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenRevokeOrphanRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRevokeRequest struct for TokenRevokeRequest
type TokenRevokeRequest struct {
	// Token to revoke (request body)
	Token *string `json:"token,omitempty"`
}

// NewTokenRevokeRequest instantiates a new TokenRevokeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenRevokeRequest() *TokenRevokeRequest {
	this := TokenRevokeRequest{}
	return &this
}

// NewTokenRevokeRequestWithDefaults instantiates a new TokenRevokeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRevokeRequestWithDefaults() *TokenRevokeRequest {
	this := TokenRevokeRequest{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *TokenRevokeRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRevokeRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *TokenRevokeRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *TokenRevokeRequest) SetToken(v string) {
	o.Token = &v
}

func (o TokenRevokeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableTokenRevokeRequest struct {
	value *TokenRevokeRequest
	isSet bool
}

func (v NullableTokenRevokeRequest) Get() *TokenRevokeRequest {
	return v.value
}

func (v *NullableTokenRevokeRequest) Set(val *TokenRevokeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenRevokeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenRevokeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenRevokeRequest(val *TokenRevokeRequest) *NullableTokenRevokeRequest {
	return &NullableTokenRevokeRequest{value: val, isSet: true}
}

func (v NullableTokenRevokeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenRevokeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRolesRequest struct for TokenRolesRequest
type TokenRolesRequest struct {
	// String or JSON list of allowed entity aliases. If set, specifies the entity aliases which are allowed to be used during token generation. This field supports globbing.
	AllowedEntityAliases []string `json:"allowed_entity_aliases,omitempty"`
	// If set, tokens can be created with any subset of the policies in this list, rather than the normal semantics of tokens being a subset of the calling token's policies. The parameter is a comma-delimited string of policy names.
	AllowedPolicies []string `json:"allowed_policies,omitempty"`
	// If set, tokens can be created with any subset of glob matched policies in this list, rather than the normal semantics of tokens being a subset of the calling token's policies. The parameter is a comma-delimited string of policy name globs.
	AllowedPoliciesGlob []string `json:"allowed_policies_glob,omitempty"`
	// Use 'token_bound_cidrs' instead.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs,omitempty"`
	// If set, successful token creation via this role will require that no policies in the given list are requested. The parameter is a comma-delimited string of policy names.
	DisallowedPolicies []string `json:"disallowed_policies,omitempty"`
	// If set, successful token creation via this role will require that no requested policies glob match any of policies in this list. The parameter is a comma-delimited string of policy name globs.
	DisallowedPoliciesGlob []string `json:"disallowed_policies_glob,omitempty"`
	// Use 'token_explicit_max_ttl' instead.
	// Deprecated
	ExplicitMaxTtl *int32 `json:"explicit_max_ttl,omitempty"`
	// If true, tokens created via this role will be orphan tokens (have no parent)
	Orphan *bool `json:"orphan,omitempty"`
	// If set, tokens created via this role will contain the given suffix as a part of their path. This can be used to assist use of the 'revoke-prefix' endpoint later on. The given suffix must match the regular expression.\\w[\\w-.]+\\w
	PathSuffix *string `json:"path_suffix,omitempty"`
	// Use 'token_period' instead.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Tokens created via this role will be renewable or not according to this value. Defaults to \"true\".
	Renewable *bool `json:"renewable,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
}

// NewTokenRolesRequest instantiates a new TokenRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenRolesRequest() *TokenRolesRequest {
	this := TokenRolesRequest{}
	var renewable bool = true
	this.Renewable = &renewable
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewTokenRolesRequestWithDefaults instantiates a new TokenRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRolesRequestWithDefaults() *TokenRolesRequest {
	this := TokenRolesRequest{}
	var renewable bool = true
	this.Renewable = &renewable
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetAllowedEntityAliases returns the AllowedEntityAliases field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetAllowedEntityAliases() []string {
	if o == nil || o.AllowedEntityAliases == nil {
		var ret []string
		return ret
	}
	return o.AllowedEntityAliases
}

// GetAllowedEntityAliasesOk returns a tuple with the AllowedEntityAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetAllowedEntityAliasesOk() ([]string, bool) {
	if o == nil || o.AllowedEntityAliases == nil {
		return nil, false
	}
	return o.AllowedEntityAliases, true
}

// HasAllowedEntityAliases returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasAllowedEntityAliases() bool {
	if o != nil && o.AllowedEntityAliases != nil {
		return true
	}

	return false
}

// SetAllowedEntityAliases gets a reference to the given []string and assigns it to the AllowedEntityAliases field.
func (o *TokenRolesRequest) SetAllowedEntityAliases(v []string) {
	o.AllowedEntityAliases = v
}

// GetAllowedPolicies returns the AllowedPolicies field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetAllowedPolicies() []string {
	if o == nil || o.AllowedPolicies == nil {
		var ret []string
		return ret
	}
	return o.AllowedPolicies
}

// GetAllowedPoliciesOk returns a tuple with the AllowedPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetAllowedPoliciesOk() ([]string, bool) {
	if o == nil || o.AllowedPolicies == nil {
		return nil, false
	}
	return o.AllowedPolicies, true
}

// HasAllowedPolicies returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasAllowedPolicies() bool {
	if o != nil && o.AllowedPolicies != nil {
		return true
	}

	return false
}

// SetAllowedPolicies gets a reference to the given []string and assigns it to the AllowedPolicies field.
func (o *TokenRolesRequest) SetAllowedPolicies(v []string) {
	o.AllowedPolicies = v
}

// GetAllowedPoliciesGlob returns the AllowedPoliciesGlob field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetAllowedPoliciesGlob() []string {
	if o == nil || o.AllowedPoliciesGlob == nil {
		var ret []string
		return ret
	}
	return o.AllowedPoliciesGlob
}

// GetAllowedPoliciesGlobOk returns a tuple with the AllowedPoliciesGlob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetAllowedPoliciesGlobOk() ([]string, bool) {
	if o == nil || o.AllowedPoliciesGlob == nil {
		return nil, false
	}
	return o.AllowedPoliciesGlob, true
}

// HasAllowedPoliciesGlob returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasAllowedPoliciesGlob() bool {
	if o != nil && o.AllowedPoliciesGlob != nil {
		return true
	}

	return false
}

// SetAllowedPoliciesGlob gets a reference to the given []string and assigns it to the AllowedPoliciesGlob field.
func (o *TokenRolesRequest) SetAllowedPoliciesGlob(v []string) {
	o.AllowedPoliciesGlob = v
}

// GetBoundCidrs returns the BoundCidrs field value if set, zero value otherwise.
// Deprecated
func (o *TokenRolesRequest) GetBoundCidrs() []string {
	if o == nil || o.BoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrs
}

// GetBoundCidrsOk returns a tuple with the BoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *TokenRolesRequest) GetBoundCidrsOk() ([]string, bool) {
	if o == nil || o.BoundCidrs == nil {
		return nil, false
	}
	return o.BoundCidrs, true
}

// HasBoundCidrs returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasBoundCidrs() bool {
	if o != nil && o.BoundCidrs != nil {
		return true
	}

	return false
}

// SetBoundCidrs gets a reference to the given []string and assigns it to the BoundCidrs field.
// Deprecated
func (o *TokenRolesRequest) SetBoundCidrs(v []string) {
	o.BoundCidrs = v
}

// GetDisallowedPolicies returns the DisallowedPolicies field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetDisallowedPolicies() []string {
	if o == nil || o.DisallowedPolicies == nil {
		var ret []string
		return ret
	}
	return o.DisallowedPolicies
}

// GetDisallowedPoliciesOk returns a tuple with the DisallowedPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetDisallowedPoliciesOk() ([]string, bool) {
	if o == nil || o.DisallowedPolicies == nil {
		return nil, false
	}
	return o.DisallowedPolicies, true
}

// HasDisallowedPolicies returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasDisallowedPolicies() bool {
	if o != nil && o.DisallowedPolicies != nil {
		return true
	}

	return false
}

// SetDisallowedPolicies gets a reference to the given []string and assigns it to the DisallowedPolicies field.
func (o *TokenRolesRequest) SetDisallowedPolicies(v []string) {
	o.DisallowedPolicies = v
}

// GetDisallowedPoliciesGlob returns the DisallowedPoliciesGlob field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetDisallowedPoliciesGlob() []string {
	if o == nil || o.DisallowedPoliciesGlob == nil {
		var ret []string
		return ret
	}
	return o.DisallowedPoliciesGlob
}

// GetDisallowedPoliciesGlobOk returns a tuple with the DisallowedPoliciesGlob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetDisallowedPoliciesGlobOk() ([]string, bool) {
	if o == nil || o.DisallowedPoliciesGlob == nil {
		return nil, false
	}
	return o.DisallowedPoliciesGlob, true
}

// HasDisallowedPoliciesGlob returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasDisallowedPoliciesGlob() bool {
	if o != nil && o.DisallowedPoliciesGlob != nil {
		return true
	}

	return false
}

// SetDisallowedPoliciesGlob gets a reference to the given []string and assigns it to the DisallowedPoliciesGlob field.
func (o *TokenRolesRequest) SetDisallowedPoliciesGlob(v []string) {
	o.DisallowedPoliciesGlob = v
}

// GetExplicitMaxTtl returns the ExplicitMaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *TokenRolesRequest) GetExplicitMaxTtl() int32 {
	if o == nil || o.ExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.ExplicitMaxTtl
}

// GetExplicitMaxTtlOk returns a tuple with the ExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *TokenRolesRequest) GetExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.ExplicitMaxTtl == nil {
		return nil, false
	}
	return o.ExplicitMaxTtl, true
}

// HasExplicitMaxTtl returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasExplicitMaxTtl() bool {
	if o != nil && o.ExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetExplicitMaxTtl gets a reference to the given int32 and assigns it to the ExplicitMaxTtl field.
// Deprecated
func (o *TokenRolesRequest) SetExplicitMaxTtl(v int32) {
	o.ExplicitMaxTtl = &v
}

// GetOrphan returns the Orphan field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetOrphan() bool {
	if o == nil || o.Orphan == nil {
		var ret bool
		return ret
	}
	return *o.Orphan
}

// GetOrphanOk returns a tuple with the Orphan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetOrphanOk() (*bool, bool) {
	if o == nil || o.Orphan == nil {
		return nil, false
	}
	return o.Orphan, true
}

// HasOrphan returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasOrphan() bool {
	if o != nil && o.Orphan != nil {
		return true
	}

	return false
}

// SetOrphan gets a reference to the given bool and assigns it to the Orphan field.
func (o *TokenRolesRequest) SetOrphan(v bool) {
	o.Orphan = &v
}

// GetPathSuffix returns the PathSuffix field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetPathSuffix() string {
	if o == nil || o.PathSuffix == nil {
		var ret string
		return ret
	}
	return *o.PathSuffix
}

// GetPathSuffixOk returns a tuple with the PathSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetPathSuffixOk() (*string, bool) {
	if o == nil || o.PathSuffix == nil {
		return nil, false
	}
	return o.PathSuffix, true
}

// HasPathSuffix returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasPathSuffix() bool {
	if o != nil && o.PathSuffix != nil {
		return true
	}

	return false
}

// SetPathSuffix gets a reference to the given string and assigns it to the PathSuffix field.
func (o *TokenRolesRequest) SetPathSuffix(v string) {
	o.PathSuffix = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *TokenRolesRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *TokenRolesRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *TokenRolesRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetRenewable returns the Renewable field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetRenewable() bool {
	if o == nil || o.Renewable == nil {
		var ret bool
		return ret
	}
	return *o.Renewable
}

// GetRenewableOk returns a tuple with the Renewable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetRenewableOk() (*bool, bool) {
	if o == nil || o.Renewable == nil {
		return nil, false
	}
	return o.Renewable, true
}

// HasRenewable returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasRenewable() bool {
	if o != nil && o.Renewable != nil {
		return true
	}

	return false
}

// SetRenewable gets a reference to the given bool and assigns it to the Renewable field.
func (o *TokenRolesRequest) SetRenewable(v bool) {
	o.Renewable = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *TokenRolesRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *TokenRolesRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *TokenRolesRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *TokenRolesRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *TokenRolesRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *TokenRolesRequest) SetTokenType(v string) {
	o.TokenType = &v
}

func (o TokenRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedEntityAliases != nil {
		toSerialize["allowed_entity_aliases"] = o.AllowedEntityAliases
	}
	if o.AllowedPolicies != nil {
		toSerialize["allowed_policies"] = o.AllowedPolicies
	}
	if o.AllowedPoliciesGlob != nil {
		toSerialize["allowed_policies_glob"] = o.AllowedPoliciesGlob
	}
	if o.BoundCidrs != nil {
		toSerialize["bound_cidrs"] = o.BoundCidrs
	}
	if o.DisallowedPolicies != nil {
		toSerialize["disallowed_policies"] = o.DisallowedPolicies
	}
	if o.DisallowedPoliciesGlob != nil {
		toSerialize["disallowed_policies_glob"] = o.DisallowedPoliciesGlob
	}
	if o.ExplicitMaxTtl != nil {
		toSerialize["explicit_max_ttl"] = o.ExplicitMaxTtl
	}
	if o.Orphan != nil {
		toSerialize["orphan"] = o.Orphan
	}
	if o.PathSuffix != nil {
		toSerialize["path_suffix"] = o.PathSuffix
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Renewable != nil {
		toSerialize["renewable"] = o.Renewable
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	return json.Marshal(toSerialize)
}

type NullableTokenRolesRequest struct {
	value *TokenRolesRequest
	isSet bool
}

func (v NullableTokenRolesRequest) Get() *TokenRolesRequest {
	return v.value
}

func (v *NullableTokenRolesRequest) Set(val *TokenRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenRolesRequest(val *TokenRolesRequest) *NullableTokenRolesRequest {
	return &NullableTokenRolesRequest{value: val, isSet: true}
}

func (v NullableTokenRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TotpCodeRequest struct for TotpCodeRequest
type TotpCodeRequest struct {
	// TOTP code to be validated.
	Code *string `json:"code,omitempty"`
}

// NewTotpCodeRequest instantiates a new TotpCodeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTotpCodeRequest() *TotpCodeRequest {
	this := TotpCodeRequest{}
	return &this
}

// NewTotpCodeRequestWithDefaults instantiates a new TotpCodeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTotpCodeRequestWithDefaults() *TotpCodeRequest {
	this := TotpCodeRequest{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *TotpCodeRequest) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpCodeRequest) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *TotpCodeRequest) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *TotpCodeRequest) SetCode(v string) {
	o.Code = &v
}

func (o TotpCodeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableTotpCodeRequest struct {
	value *TotpCodeRequest
	isSet bool
}

func (v NullableTotpCodeRequest) Get() *TotpCodeRequest {
	return v.value
}

func (v *NullableTotpCodeRequest) Set(val *TotpCodeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTotpCodeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTotpCodeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTotpCodeRequest(val *TotpCodeRequest) *NullableTotpCodeRequest {
	return &NullableTotpCodeRequest{value: val, isSet: true}
}

func (v NullableTotpCodeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTotpCodeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TotpKeysRequest struct for TotpKeysRequest
type TotpKeysRequest struct {
	// The name of the account associated with the key. Required if generate is true.
	AccountName *string `json:"account_name,omitempty"`
	// The hashing algorithm used to generate the TOTP token. Options include SHA1, SHA256 and SHA512.
	Algorithm *string `json:"algorithm,omitempty"`
	// The number of digits in the generated TOTP token. This value can either be 6 or 8.
	Digits *int32 `json:"digits,omitempty"`
	// Determines if a QR code and url are returned upon generating a key. Only used if generate is true.
	Exported *bool `json:"exported,omitempty"`
	// Determines if a key should be generated by Vault or if a key is being passed from another service.
	Generate *bool `json:"generate,omitempty"`
	// The name of the key's issuing organization. Required if generate is true.
	Issuer *string `json:"issuer,omitempty"`
	// The shared master key used to generate a TOTP token. Only used if generate is false.
	Key *string `json:"key,omitempty"`
	// Determines the size in bytes of the generated key. Only used if generate is true.
	KeySize *int32 `json:"key_size,omitempty"`
	// The length of time used to generate a counter for the TOTP token calculation.
	Period *int32 `json:"period,omitempty"`
	// The pixel size of the generated square QR code. Only used if generate is true and exported is true. If this value is 0, a QR code will not be returned.
	QrSize *int32 `json:"qr_size,omitempty"`
	// The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1. Only used if generate is true.
	Skew *int32 `json:"skew,omitempty"`
	// A TOTP url string containing all of the parameters for key setup. Only used if generate is false.
	Url *string `json:"url,omitempty"`
}

// NewTotpKeysRequest instantiates a new TotpKeysRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTotpKeysRequest() *TotpKeysRequest {
	this := TotpKeysRequest{}
	var algorithm string = "SHA1"
	this.Algorithm = &algorithm
	var digits int32 = 6
	this.Digits = &digits
	var exported bool = true
	this.Exported = &exported
	var generate bool = false
	this.Generate = &generate
	var keySize int32 = 20
	this.KeySize = &keySize
	var period int32 = 30
	this.Period = &period
	var qrSize int32 = 200
	this.QrSize = &qrSize
	var skew int32 = 1
	this.Skew = &skew
	return &this
}

// NewTotpKeysRequestWithDefaults instantiates a new TotpKeysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTotpKeysRequestWithDefaults() *TotpKeysRequest {
	this := TotpKeysRequest{}
	var algorithm string = "SHA1"
	this.Algorithm = &algorithm
	var digits int32 = 6
	this.Digits = &digits
	var exported bool = true
	this.Exported = &exported
	var generate bool = false
	this.Generate = &generate
	var keySize int32 = 20
	this.KeySize = &keySize
	var period int32 = 30
	this.Period = &period
	var qrSize int32 = 200
	this.QrSize = &qrSize
	var skew int32 = 1
	this.Skew = &skew
	return &this
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetAccountName() string {
	if o == nil || o.AccountName == nil {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetAccountNameOk() (*string, bool) {
	if o == nil || o.AccountName == nil {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasAccountName() bool {
	if o != nil && o.AccountName != nil {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *TotpKeysRequest) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *TotpKeysRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetDigits returns the Digits field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetDigits() int32 {
	if o == nil || o.Digits == nil {
		var ret int32
		return ret
	}
	return *o.Digits
}

// GetDigitsOk returns a tuple with the Digits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetDigitsOk() (*int32, bool) {
	if o == nil || o.Digits == nil {
		return nil, false
	}
	return o.Digits, true
}

// HasDigits returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasDigits() bool {
	if o != nil && o.Digits != nil {
		return true
	}

	return false
}

// SetDigits gets a reference to the given int32 and assigns it to the Digits field.
func (o *TotpKeysRequest) SetDigits(v int32) {
	o.Digits = &v
}

// GetExported returns the Exported field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetExported() bool {
	if o == nil || o.Exported == nil {
		var ret bool
		return ret
	}
	return *o.Exported
}

// GetExportedOk returns a tuple with the Exported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetExportedOk() (*bool, bool) {
	if o == nil || o.Exported == nil {
		return nil, false
	}
	return o.Exported, true
}

// HasExported returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasExported() bool {
	if o != nil && o.Exported != nil {
		return true
	}

	return false
}

// SetExported gets a reference to the given bool and assigns it to the Exported field.
func (o *TotpKeysRequest) SetExported(v bool) {
	o.Exported = &v
}

// GetGenerate returns the Generate field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetGenerate() bool {
	if o == nil || o.Generate == nil {
		var ret bool
		return ret
	}
	return *o.Generate
}

// GetGenerateOk returns a tuple with the Generate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetGenerateOk() (*bool, bool) {
	if o == nil || o.Generate == nil {
		return nil, false
	}
	return o.Generate, true
}

// HasGenerate returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasGenerate() bool {
	if o != nil && o.Generate != nil {
		return true
	}

	return false
}

// SetGenerate gets a reference to the given bool and assigns it to the Generate field.
func (o *TotpKeysRequest) SetGenerate(v bool) {
	o.Generate = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *TotpKeysRequest) SetIssuer(v string) {
	o.Issuer = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *TotpKeysRequest) SetKey(v string) {
	o.Key = &v
}

// GetKeySize returns the KeySize field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetKeySize() int32 {
	if o == nil || o.KeySize == nil {
		var ret int32
		return ret
	}
	return *o.KeySize
}

// GetKeySizeOk returns a tuple with the KeySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetKeySizeOk() (*int32, bool) {
	if o == nil || o.KeySize == nil {
		return nil, false
	}
	return o.KeySize, true
}

// HasKeySize returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasKeySize() bool {
	if o != nil && o.KeySize != nil {
		return true
	}

	return false
}

// SetKeySize gets a reference to the given int32 and assigns it to the KeySize field.
func (o *TotpKeysRequest) SetKeySize(v int32) {
	o.KeySize = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
func (o *TotpKeysRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetQrSize returns the QrSize field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetQrSize() int32 {
	if o == nil || o.QrSize == nil {
		var ret int32
		return ret
	}
	return *o.QrSize
}

// GetQrSizeOk returns a tuple with the QrSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetQrSizeOk() (*int32, bool) {
	if o == nil || o.QrSize == nil {
		return nil, false
	}
	return o.QrSize, true
}

// HasQrSize returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasQrSize() bool {
	if o != nil && o.QrSize != nil {
		return true
	}

	return false
}

// SetQrSize gets a reference to the given int32 and assigns it to the QrSize field.
func (o *TotpKeysRequest) SetQrSize(v int32) {
	o.QrSize = &v
}

// GetSkew returns the Skew field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetSkew() int32 {
	if o == nil || o.Skew == nil {
		var ret int32
		return ret
	}
	return *o.Skew
}

// GetSkewOk returns a tuple with the Skew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetSkewOk() (*int32, bool) {
	if o == nil || o.Skew == nil {
		return nil, false
	}
	return o.Skew, true
}

// HasSkew returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasSkew() bool {
	if o != nil && o.Skew != nil {
		return true
	}

	return false
}

// SetSkew gets a reference to the given int32 and assigns it to the Skew field.
func (o *TotpKeysRequest) SetSkew(v int32) {
	o.Skew = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *TotpKeysRequest) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotpKeysRequest) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *TotpKeysRequest) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *TotpKeysRequest) SetUrl(v string) {
	o.Url = &v
}

func (o TotpKeysRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountName != nil {
		toSerialize["account_name"] = o.AccountName
	}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.Digits != nil {
		toSerialize["digits"] = o.Digits
	}
	if o.Exported != nil {
		toSerialize["exported"] = o.Exported
	}
	if o.Generate != nil {
		toSerialize["generate"] = o.Generate
	}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.KeySize != nil {
		toSerialize["key_size"] = o.KeySize
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.QrSize != nil {
		toSerialize["qr_size"] = o.QrSize
	}
	if o.Skew != nil {
		toSerialize["skew"] = o.Skew
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableTotpKeysRequest struct {
	value *TotpKeysRequest
	isSet bool
}

func (v NullableTotpKeysRequest) Get() *TotpKeysRequest {
	return v.value
}

func (v *NullableTotpKeysRequest) Set(val *TotpKeysRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTotpKeysRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTotpKeysRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTotpKeysRequest(val *TotpKeysRequest) *NullableTotpKeysRequest {
	return &NullableTotpKeysRequest{value: val, isSet: true}
}

func (v NullableTotpKeysRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTotpKeysRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitCacheConfigRequest struct for TransitCacheConfigRequest
type TransitCacheConfigRequest struct {
	// Size of cache, use 0 for an unlimited cache size, defaults to 0
	Size *int32 `json:"size,omitempty"`
}

// NewTransitCacheConfigRequest instantiates a new TransitCacheConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitCacheConfigRequest() *TransitCacheConfigRequest {
	this := TransitCacheConfigRequest{}
	var size int32 = 0
	this.Size = &size
	return &this
}

// NewTransitCacheConfigRequestWithDefaults instantiates a new TransitCacheConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitCacheConfigRequestWithDefaults() *TransitCacheConfigRequest {
	this := TransitCacheConfigRequest{}
	var size int32 = 0
	this.Size = &size
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *TransitCacheConfigRequest) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitCacheConfigRequest) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *TransitCacheConfigRequest) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *TransitCacheConfigRequest) SetSize(v int32) {
	o.Size = &v
}

func (o TransitCacheConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	return json.Marshal(toSerialize)
}

type NullableTransitCacheConfigRequest struct {
	value *TransitCacheConfigRequest
	isSet bool
}

func (v NullableTransitCacheConfigRequest) Get() *TransitCacheConfigRequest {
	return v.value
}

func (v *NullableTransitCacheConfigRequest) Set(val *TransitCacheConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitCacheConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitCacheConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitCacheConfigRequest(val *TransitCacheConfigRequest) *NullableTransitCacheConfigRequest {
	return &NullableTransitCacheConfigRequest{value: val, isSet: true}
}

func (v NullableTransitCacheConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitCacheConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitDatakeyRequest struct for TransitDatakeyRequest
type TransitDatakeyRequest struct {
	// Number of bits for the key; currently 128, 256, and 512 bits are supported. Defaults to 256.
	Bits *int32 `json:"bits,omitempty"`
	// Context for key derivation. Required for derived keys.
	Context *string `json:"context,omitempty"`
	// The version of the Vault key to use for encryption of the data key. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion *int32 `json:"key_version,omitempty"`
	// Nonce for when convergent encryption v1 is used (only in Vault 0.6.1)
	Nonce *string `json:"nonce,omitempty"`
}

// NewTransitDatakeyRequest instantiates a new TransitDatakeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitDatakeyRequest() *TransitDatakeyRequest {
	this := TransitDatakeyRequest{}
	var bits int32 = 256
	this.Bits = &bits
	return &this
}

// NewTransitDatakeyRequestWithDefaults instantiates a new TransitDatakeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitDatakeyRequestWithDefaults() *TransitDatakeyRequest {
	this := TransitDatakeyRequest{}
	var bits int32 = 256
	this.Bits = &bits
	return &this
}

// GetBits returns the Bits field value if set, zero value otherwise.
func (o *TransitDatakeyRequest) GetBits() int32 {
	if o == nil || o.Bits == nil {
		var ret int32
		return ret
	}
	return *o.Bits
}

// GetBitsOk returns a tuple with the Bits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitDatakeyRequest) GetBitsOk() (*int32, bool) {
	if o == nil || o.Bits == nil {
		return nil, false
	}
	return o.Bits, true
}

// HasBits returns a boolean if a field has been set.
func (o *TransitDatakeyRequest) HasBits() bool {
	if o != nil && o.Bits != nil {
		return true
	}

	return false
}

// SetBits gets a reference to the given int32 and assigns it to the Bits field.
func (o *TransitDatakeyRequest) SetBits(v int32) {
	o.Bits = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *TransitDatakeyRequest) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitDatakeyRequest) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *TransitDatakeyRequest) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *TransitDatakeyRequest) SetContext(v string) {
	o.Context = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *TransitDatakeyRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitDatakeyRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *TransitDatakeyRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *TransitDatakeyRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *TransitDatakeyRequest) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitDatakeyRequest) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *TransitDatakeyRequest) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *TransitDatakeyRequest) SetNonce(v string) {
	o.Nonce = &v
}

func (o TransitDatakeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bits != nil {
		toSerialize["bits"] = o.Bits
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	return json.Marshal(toSerialize)
}

type NullableTransitDatakeyRequest struct {
	value *TransitDatakeyRequest
	isSet bool
}

func (v NullableTransitDatakeyRequest) Get() *TransitDatakeyRequest {
	return v.value
}

func (v *NullableTransitDatakeyRequest) Set(val *TransitDatakeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitDatakeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitDatakeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitDatakeyRequest(val *TransitDatakeyRequest) *NullableTransitDatakeyRequest {
	return &NullableTransitDatakeyRequest{value: val, isSet: true}
}

func (v NullableTransitDatakeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitDatakeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitDecryptRequest struct for TransitDecryptRequest
type TransitDecryptRequest struct {
	// The ciphertext to decrypt, provided as returned by encrypt.
	Ciphertext *string `json:"ciphertext,omitempty"`
	// Base64 encoded context for key derivation. Required if key derivation is enabled.
	Context *string `json:"context,omitempty"`
	// Base64 encoded nonce value used during encryption. Must be provided if convergent encryption is enabled for this key and the key was generated with Vault 0.6.1. Not required for keys created in 0.6.2+.
	Nonce *string `json:"nonce,omitempty"`
}

// NewTransitDecryptRequest instantiates a new TransitDecryptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitDecryptRequest() *TransitDecryptRequest {
	this := TransitDecryptRequest{}
	return &this
}

// NewTransitDecryptRequestWithDefaults instantiates a new TransitDecryptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitDecryptRequestWithDefaults() *TransitDecryptRequest {
	this := TransitDecryptRequest{}
	return &this
}

// GetCiphertext returns the Ciphertext field value if set, zero value otherwise.
func (o *TransitDecryptRequest) GetCiphertext() string {
	if o == nil || o.Ciphertext == nil {
		var ret string
		return ret
	}
	return *o.Ciphertext
}

// GetCiphertextOk returns a tuple with the Ciphertext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitDecryptRequest) GetCiphertextOk() (*string, bool) {
	if o == nil || o.Ciphertext == nil {
		return nil, false
	}
	return o.Ciphertext, true
}

// HasCiphertext returns a boolean if a field has been set.
func (o *TransitDecryptRequest) HasCiphertext() bool {
	if o != nil && o.Ciphertext != nil {
		return true
	}

	return false
}

// SetCiphertext gets a reference to the given string and assigns it to the Ciphertext field.
func (o *TransitDecryptRequest) SetCiphertext(v string) {
	o.Ciphertext = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *TransitDecryptRequest) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitDecryptRequest) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *TransitDecryptRequest) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *TransitDecryptRequest) SetContext(v string) {
	o.Context = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *TransitDecryptRequest) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitDecryptRequest) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *TransitDecryptRequest) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *TransitDecryptRequest) SetNonce(v string) {
	o.Nonce = &v
}

func (o TransitDecryptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ciphertext != nil {
		toSerialize["ciphertext"] = o.Ciphertext
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	return json.Marshal(toSerialize)
}

type NullableTransitDecryptRequest struct {
	value *TransitDecryptRequest
	isSet bool
}

func (v NullableTransitDecryptRequest) Get() *TransitDecryptRequest {
	return v.value
}

func (v *NullableTransitDecryptRequest) Set(val *TransitDecryptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitDecryptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitDecryptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitDecryptRequest(val *TransitDecryptRequest) *NullableTransitDecryptRequest {
	return &NullableTransitDecryptRequest{value: val, isSet: true}
}

func (v NullableTransitDecryptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitDecryptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitEncryptRequest struct for TransitEncryptRequest
type TransitEncryptRequest struct {
	// Base64 encoded context for key derivation. Required if key derivation is enabled
	Context *string `json:"context,omitempty"`
	// This parameter will only be used when a key is expected to be created. Whether to support convergent encryption. This is only supported when using a key with key derivation enabled and will require all requests to carry both a context and 96-bit (12-byte) nonce. The given nonce will be used in place of a randomly generated nonce. As a result, when the same context and nonce are supplied, the same ciphertext is generated. It is *very important* when using this mode that you ensure that all nonces are unique for a given context. Failing to do so will severely impact the ciphertext's security.
	ConvergentEncryption *bool `json:"convergent_encryption,omitempty"`
	// The version of the key to use for encryption. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion *int32 `json:"key_version,omitempty"`
	// Base64 encoded nonce value. Must be provided if convergent encryption is enabled for this key and the key was generated with Vault 0.6.1. Not required for keys created in 0.6.2+. The value must be exactly 96 bits (12 bytes) long and the user must ensure that for any given context (and thus, any given encryption key) this nonce value is **never reused**.
	Nonce *string `json:"nonce,omitempty"`
	// Base64 encoded plaintext value to be encrypted
	Plaintext *string `json:"plaintext,omitempty"`
	// This parameter is required when encryption key is expected to be created. When performing an upsert operation, the type of key to create. Currently, \"aes128-gcm96\" (symmetric) and \"aes256-gcm96\" (symmetric) are the only types supported. Defaults to \"aes256-gcm96\".
	Type *string `json:"type,omitempty"`
}

// NewTransitEncryptRequest instantiates a new TransitEncryptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitEncryptRequest() *TransitEncryptRequest {
	this := TransitEncryptRequest{}
	var type_ string = "aes256-gcm96"
	this.Type = &type_
	return &this
}

// NewTransitEncryptRequestWithDefaults instantiates a new TransitEncryptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitEncryptRequestWithDefaults() *TransitEncryptRequest {
	this := TransitEncryptRequest{}
	var type_ string = "aes256-gcm96"
	this.Type = &type_
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *TransitEncryptRequest) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitEncryptRequest) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *TransitEncryptRequest) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *TransitEncryptRequest) SetContext(v string) {
	o.Context = &v
}

// GetConvergentEncryption returns the ConvergentEncryption field value if set, zero value otherwise.
func (o *TransitEncryptRequest) GetConvergentEncryption() bool {
	if o == nil || o.ConvergentEncryption == nil {
		var ret bool
		return ret
	}
	return *o.ConvergentEncryption
}

// GetConvergentEncryptionOk returns a tuple with the ConvergentEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitEncryptRequest) GetConvergentEncryptionOk() (*bool, bool) {
	if o == nil || o.ConvergentEncryption == nil {
		return nil, false
	}
	return o.ConvergentEncryption, true
}

// HasConvergentEncryption returns a boolean if a field has been set.
func (o *TransitEncryptRequest) HasConvergentEncryption() bool {
	if o != nil && o.ConvergentEncryption != nil {
		return true
	}

	return false
}

// SetConvergentEncryption gets a reference to the given bool and assigns it to the ConvergentEncryption field.
func (o *TransitEncryptRequest) SetConvergentEncryption(v bool) {
	o.ConvergentEncryption = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *TransitEncryptRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitEncryptRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *TransitEncryptRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *TransitEncryptRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *TransitEncryptRequest) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitEncryptRequest) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *TransitEncryptRequest) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *TransitEncryptRequest) SetNonce(v string) {
	o.Nonce = &v
}

// GetPlaintext returns the Plaintext field value if set, zero value otherwise.
func (o *TransitEncryptRequest) GetPlaintext() string {
	if o == nil || o.Plaintext == nil {
		var ret string
		return ret
	}
	return *o.Plaintext
}

// GetPlaintextOk returns a tuple with the Plaintext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitEncryptRequest) GetPlaintextOk() (*string, bool) {
	if o == nil || o.Plaintext == nil {
		return nil, false
	}
	return o.Plaintext, true
}

// HasPlaintext returns a boolean if a field has been set.
func (o *TransitEncryptRequest) HasPlaintext() bool {
	if o != nil && o.Plaintext != nil {
		return true
	}

	return false
}

// SetPlaintext gets a reference to the given string and assigns it to the Plaintext field.
func (o *TransitEncryptRequest) SetPlaintext(v string) {
	o.Plaintext = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TransitEncryptRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitEncryptRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TransitEncryptRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TransitEncryptRequest) SetType(v string) {
	o.Type = &v
}

func (o TransitEncryptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.ConvergentEncryption != nil {
		toSerialize["convergent_encryption"] = o.ConvergentEncryption
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	if o.Plaintext != nil {
		toSerialize["plaintext"] = o.Plaintext
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableTransitEncryptRequest struct {
	value *TransitEncryptRequest
	isSet bool
}

func (v NullableTransitEncryptRequest) Get() *TransitEncryptRequest {
	return v.value
}

func (v *NullableTransitEncryptRequest) Set(val *TransitEncryptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitEncryptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitEncryptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitEncryptRequest(val *TransitEncryptRequest) *NullableTransitEncryptRequest {
	return &NullableTransitEncryptRequest{value: val, isSet: true}
}

func (v NullableTransitEncryptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitEncryptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitHashRequest struct for TransitHashRequest
type TransitHashRequest struct {
	// Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 Defaults to \"sha2-256\".
	Algorithm *string `json:"algorithm,omitempty"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"hex\".
	Format *string `json:"format,omitempty"`
	// The base64-encoded input data
	Input *string `json:"input,omitempty"`
	// Algorithm to use (POST URL parameter)
	Urlalgorithm *string `json:"urlalgorithm,omitempty"`
}

// NewTransitHashRequest instantiates a new TransitHashRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitHashRequest() *TransitHashRequest {
	this := TransitHashRequest{}
	var algorithm string = "sha2-256"
	this.Algorithm = &algorithm
	var format string = "hex"
	this.Format = &format
	return &this
}

// NewTransitHashRequestWithDefaults instantiates a new TransitHashRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitHashRequestWithDefaults() *TransitHashRequest {
	this := TransitHashRequest{}
	var algorithm string = "sha2-256"
	this.Algorithm = &algorithm
	var format string = "hex"
	this.Format = &format
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *TransitHashRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitHashRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *TransitHashRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *TransitHashRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *TransitHashRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitHashRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *TransitHashRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *TransitHashRequest) SetFormat(v string) {
	o.Format = &v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *TransitHashRequest) GetInput() string {
	if o == nil || o.Input == nil {
		var ret string
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitHashRequest) GetInputOk() (*string, bool) {
	if o == nil || o.Input == nil {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *TransitHashRequest) HasInput() bool {
	if o != nil && o.Input != nil {
		return true
	}

	return false
}

// SetInput gets a reference to the given string and assigns it to the Input field.
func (o *TransitHashRequest) SetInput(v string) {
	o.Input = &v
}

// GetUrlalgorithm returns the Urlalgorithm field value if set, zero value otherwise.
func (o *TransitHashRequest) GetUrlalgorithm() string {
	if o == nil || o.Urlalgorithm == nil {
		var ret string
		return ret
	}
	return *o.Urlalgorithm
}

// GetUrlalgorithmOk returns a tuple with the Urlalgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitHashRequest) GetUrlalgorithmOk() (*string, bool) {
	if o == nil || o.Urlalgorithm == nil {
		return nil, false
	}
	return o.Urlalgorithm, true
}

// HasUrlalgorithm returns a boolean if a field has been set.
func (o *TransitHashRequest) HasUrlalgorithm() bool {
	if o != nil && o.Urlalgorithm != nil {
		return true
	}

	return false
}

// SetUrlalgorithm gets a reference to the given string and assigns it to the Urlalgorithm field.
func (o *TransitHashRequest) SetUrlalgorithm(v string) {
	o.Urlalgorithm = &v
}

func (o TransitHashRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	if o.Urlalgorithm != nil {
		toSerialize["urlalgorithm"] = o.Urlalgorithm
	}
	return json.Marshal(toSerialize)
}

type NullableTransitHashRequest struct {
	value *TransitHashRequest
	isSet bool
}

func (v NullableTransitHashRequest) Get() *TransitHashRequest {
	return v.value
}

func (v *NullableTransitHashRequest) Set(val *TransitHashRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitHashRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitHashRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitHashRequest(val *TransitHashRequest) *NullableTransitHashRequest {
	return &NullableTransitHashRequest{value: val, isSet: true}
}

func (v NullableTransitHashRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitHashRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitHmacRequest struct for TransitHmacRequest
type TransitHmacRequest struct {
	// Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 Defaults to \"sha2-256\".
	Algorithm *string `json:"algorithm,omitempty"`
	// The base64-encoded input data
	Input *string `json:"input,omitempty"`
	// The version of the key to use for generating the HMAC. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion *int32 `json:"key_version,omitempty"`
	// Algorithm to use (POST URL parameter)
	Urlalgorithm *string `json:"urlalgorithm,omitempty"`
}

// NewTransitHmacRequest instantiates a new TransitHmacRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitHmacRequest() *TransitHmacRequest {
	this := TransitHmacRequest{}
	var algorithm string = "sha2-256"
	this.Algorithm = &algorithm
	return &this
}

// NewTransitHmacRequestWithDefaults instantiates a new TransitHmacRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitHmacRequestWithDefaults() *TransitHmacRequest {
	this := TransitHmacRequest{}
	var algorithm string = "sha2-256"
	this.Algorithm = &algorithm
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *TransitHmacRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitHmacRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *TransitHmacRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *TransitHmacRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *TransitHmacRequest) GetInput() string {
	if o == nil || o.Input == nil {
		var ret string
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitHmacRequest) GetInputOk() (*string, bool) {
	if o == nil || o.Input == nil {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *TransitHmacRequest) HasInput() bool {
	if o != nil && o.Input != nil {
		return true
	}

	return false
}

// SetInput gets a reference to the given string and assigns it to the Input field.
func (o *TransitHmacRequest) SetInput(v string) {
	o.Input = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *TransitHmacRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitHmacRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *TransitHmacRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *TransitHmacRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

// GetUrlalgorithm returns the Urlalgorithm field value if set, zero value otherwise.
func (o *TransitHmacRequest) GetUrlalgorithm() string {
	if o == nil || o.Urlalgorithm == nil {
		var ret string
		return ret
	}
	return *o.Urlalgorithm
}

// GetUrlalgorithmOk returns a tuple with the Urlalgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitHmacRequest) GetUrlalgorithmOk() (*string, bool) {
	if o == nil || o.Urlalgorithm == nil {
		return nil, false
	}
	return o.Urlalgorithm, true
}

// HasUrlalgorithm returns a boolean if a field has been set.
func (o *TransitHmacRequest) HasUrlalgorithm() bool {
	if o != nil && o.Urlalgorithm != nil {
		return true
	}

	return false
}

// SetUrlalgorithm gets a reference to the given string and assigns it to the Urlalgorithm field.
func (o *TransitHmacRequest) SetUrlalgorithm(v string) {
	o.Urlalgorithm = &v
}

func (o TransitHmacRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	if o.Urlalgorithm != nil {
		toSerialize["urlalgorithm"] = o.Urlalgorithm
	}
	return json.Marshal(toSerialize)
}

type NullableTransitHmacRequest struct {
	value *TransitHmacRequest
	isSet bool
}

func (v NullableTransitHmacRequest) Get() *TransitHmacRequest {
	return v.value
}

func (v *NullableTransitHmacRequest) Set(val *TransitHmacRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitHmacRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitHmacRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitHmacRequest(val *TransitHmacRequest) *NullableTransitHmacRequest {
	return &NullableTransitHmacRequest{value: val, isSet: true}
}

func (v NullableTransitHmacRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitHmacRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitKeysConfigRequest struct for TransitKeysConfigRequest
type TransitKeysConfigRequest struct {
	// Enables taking a backup of the named key in plaintext format. Once set, this cannot be disabled.
	AllowPlaintextBackup *bool `json:"allow_plaintext_backup,omitempty"`
	// Amount of time the key should live before being automatically rotated. A value of 0 disables automatic rotation for the key.
	AutoRotatePeriod *int32 `json:"auto_rotate_period,omitempty"`
	// Whether to allow deletion of the key
	DeletionAllowed *bool `json:"deletion_allowed,omitempty"`
	// Enables export of the key. Once set, this cannot be disabled.
	Exportable *bool `json:"exportable,omitempty"`
	// If set, the minimum version of the key allowed to be decrypted. For signing keys, the minimum version allowed to be used for verification.
	MinDecryptionVersion *int32 `json:"min_decryption_version,omitempty"`
	// If set, the minimum version of the key allowed to be used for encryption; or for signing keys, to be used for signing. If set to zero, only the latest version of the key is allowed.
	MinEncryptionVersion *int32 `json:"min_encryption_version,omitempty"`
}

// NewTransitKeysConfigRequest instantiates a new TransitKeysConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitKeysConfigRequest() *TransitKeysConfigRequest {
	this := TransitKeysConfigRequest{}
	return &this
}

// NewTransitKeysConfigRequestWithDefaults instantiates a new TransitKeysConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitKeysConfigRequestWithDefaults() *TransitKeysConfigRequest {
	this := TransitKeysConfigRequest{}
	return &this
}

// GetAllowPlaintextBackup returns the AllowPlaintextBackup field value if set, zero value otherwise.
func (o *TransitKeysConfigRequest) GetAllowPlaintextBackup() bool {
	if o == nil || o.AllowPlaintextBackup == nil {
		var ret bool
		return ret
	}
	return *o.AllowPlaintextBackup
}

// GetAllowPlaintextBackupOk returns a tuple with the AllowPlaintextBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysConfigRequest) GetAllowPlaintextBackupOk() (*bool, bool) {
	if o == nil || o.AllowPlaintextBackup == nil {
		return nil, false
	}
	return o.AllowPlaintextBackup, true
}

// HasAllowPlaintextBackup returns a boolean if a field has been set.
func (o *TransitKeysConfigRequest) HasAllowPlaintextBackup() bool {
	if o != nil && o.AllowPlaintextBackup != nil {
		return true
	}

	return false
}

// SetAllowPlaintextBackup gets a reference to the given bool and assigns it to the AllowPlaintextBackup field.
func (o *TransitKeysConfigRequest) SetAllowPlaintextBackup(v bool) {
	o.AllowPlaintextBackup = &v
}

// GetAutoRotatePeriod returns the AutoRotatePeriod field value if set, zero value otherwise.
func (o *TransitKeysConfigRequest) GetAutoRotatePeriod() int32 {
	if o == nil || o.AutoRotatePeriod == nil {
		var ret int32
		return ret
	}
	return *o.AutoRotatePeriod
}

// GetAutoRotatePeriodOk returns a tuple with the AutoRotatePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysConfigRequest) GetAutoRotatePeriodOk() (*int32, bool) {
	if o == nil || o.AutoRotatePeriod == nil {
		return nil, false
	}
	return o.AutoRotatePeriod, true
}

// HasAutoRotatePeriod returns a boolean if a field has been set.
func (o *TransitKeysConfigRequest) HasAutoRotatePeriod() bool {
	if o != nil && o.AutoRotatePeriod != nil {
		return true
	}

	return false
}

// SetAutoRotatePeriod gets a reference to the given int32 and assigns it to the AutoRotatePeriod field.
func (o *TransitKeysConfigRequest) SetAutoRotatePeriod(v int32) {
	o.AutoRotatePeriod = &v
}

// GetDeletionAllowed returns the DeletionAllowed field value if set, zero value otherwise.
func (o *TransitKeysConfigRequest) GetDeletionAllowed() bool {
	if o == nil || o.DeletionAllowed == nil {
		var ret bool
		return ret
	}
	return *o.DeletionAllowed
}

// GetDeletionAllowedOk returns a tuple with the DeletionAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysConfigRequest) GetDeletionAllowedOk() (*bool, bool) {
	if o == nil || o.DeletionAllowed == nil {
		return nil, false
	}
	return o.DeletionAllowed, true
}

// HasDeletionAllowed returns a boolean if a field has been set.
func (o *TransitKeysConfigRequest) HasDeletionAllowed() bool {
	if o != nil && o.DeletionAllowed != nil {
		return true
	}

	return false
}

// SetDeletionAllowed gets a reference to the given bool and assigns it to the DeletionAllowed field.
func (o *TransitKeysConfigRequest) SetDeletionAllowed(v bool) {
	o.DeletionAllowed = &v
}

// GetExportable returns the Exportable field value if set, zero value otherwise.
func (o *TransitKeysConfigRequest) GetExportable() bool {
	if o == nil || o.Exportable == nil {
		var ret bool
		return ret
	}
	return *o.Exportable
}

// GetExportableOk returns a tuple with the Exportable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysConfigRequest) GetExportableOk() (*bool, bool) {
	if o == nil || o.Exportable == nil {
		return nil, false
	}
	return o.Exportable, true
}

// HasExportable returns a boolean if a field has been set.
func (o *TransitKeysConfigRequest) HasExportable() bool {
	if o != nil && o.Exportable != nil {
		return true
	}

	return false
}

// SetExportable gets a reference to the given bool and assigns it to the Exportable field.
func (o *TransitKeysConfigRequest) SetExportable(v bool) {
	o.Exportable = &v
}

// GetMinDecryptionVersion returns the MinDecryptionVersion field value if set, zero value otherwise.
func (o *TransitKeysConfigRequest) GetMinDecryptionVersion() int32 {
	if o == nil || o.MinDecryptionVersion == nil {
		var ret int32
		return ret
	}
	return *o.MinDecryptionVersion
}

// GetMinDecryptionVersionOk returns a tuple with the MinDecryptionVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysConfigRequest) GetMinDecryptionVersionOk() (*int32, bool) {
	if o == nil || o.MinDecryptionVersion == nil {
		return nil, false
	}
	return o.MinDecryptionVersion, true
}

// HasMinDecryptionVersion returns a boolean if a field has been set.
func (o *TransitKeysConfigRequest) HasMinDecryptionVersion() bool {
	if o != nil && o.MinDecryptionVersion != nil {
		return true
	}

	return false
}

// SetMinDecryptionVersion gets a reference to the given int32 and assigns it to the MinDecryptionVersion field.
func (o *TransitKeysConfigRequest) SetMinDecryptionVersion(v int32) {
	o.MinDecryptionVersion = &v
}

// GetMinEncryptionVersion returns the MinEncryptionVersion field value if set, zero value otherwise.
func (o *TransitKeysConfigRequest) GetMinEncryptionVersion() int32 {
	if o == nil || o.MinEncryptionVersion == nil {
		var ret int32
		return ret
	}
	return *o.MinEncryptionVersion
}

// GetMinEncryptionVersionOk returns a tuple with the MinEncryptionVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysConfigRequest) GetMinEncryptionVersionOk() (*int32, bool) {
	if o == nil || o.MinEncryptionVersion == nil {
		return nil, false
	}
	return o.MinEncryptionVersion, true
}

// HasMinEncryptionVersion returns a boolean if a field has been set.
func (o *TransitKeysConfigRequest) HasMinEncryptionVersion() bool {
	if o != nil && o.MinEncryptionVersion != nil {
		return true
	}

	return false
}

// SetMinEncryptionVersion gets a reference to the given int32 and assigns it to the MinEncryptionVersion field.
func (o *TransitKeysConfigRequest) SetMinEncryptionVersion(v int32) {
	o.MinEncryptionVersion = &v
}

func (o TransitKeysConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowPlaintextBackup != nil {
		toSerialize["allow_plaintext_backup"] = o.AllowPlaintextBackup
	}
	if o.AutoRotatePeriod != nil {
		toSerialize["auto_rotate_period"] = o.AutoRotatePeriod
	}
	if o.DeletionAllowed != nil {
		toSerialize["deletion_allowed"] = o.DeletionAllowed
	}
	if o.Exportable != nil {
		toSerialize["exportable"] = o.Exportable
	}
	if o.MinDecryptionVersion != nil {
		toSerialize["min_decryption_version"] = o.MinDecryptionVersion
	}
	if o.MinEncryptionVersion != nil {
		toSerialize["min_encryption_version"] = o.MinEncryptionVersion
	}
	return json.Marshal(toSerialize)
}

type NullableTransitKeysConfigRequest struct {
	value *TransitKeysConfigRequest
	isSet bool
}

func (v NullableTransitKeysConfigRequest) Get() *TransitKeysConfigRequest {
	return v.value
}

func (v *NullableTransitKeysConfigRequest) Set(val *TransitKeysConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitKeysConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitKeysConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitKeysConfigRequest(val *TransitKeysConfigRequest) *NullableTransitKeysConfigRequest {
	return &NullableTransitKeysConfigRequest{value: val, isSet: true}
}

func (v NullableTransitKeysConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitKeysConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitKeysImportRequest struct for TransitKeysImportRequest
type TransitKeysImportRequest struct {
	// Enables taking a backup of the named key in plaintext format. Once set, this cannot be disabled.
	AllowPlaintextBackup *bool `json:"allow_plaintext_backup,omitempty"`
	// True if the imported key may be rotated within Vault; false otherwise.
	AllowRotation *bool `json:"allow_rotation,omitempty"`
	// Amount of time the key should live before being automatically rotated. A value of 0 (default) disables automatic rotation for the key.
	AutoRotatePeriod *int32 `json:"auto_rotate_period,omitempty"`
	// The base64-encoded ciphertext of the keys. The AES key should be encrypted using OAEP with the wrapping key and then concatenated with the import key, wrapped by the AES key.
	Ciphertext *string `json:"ciphertext,omitempty"`
	// Base64 encoded context for key derivation. When reading a key with key derivation enabled, if the key type supports public keys, this will return the public key for the given context.
	Context *string `json:"context,omitempty"`
	// Enables key derivation mode. This allows for per-transaction unique keys for encryption operations.
	Derived *bool `json:"derived,omitempty"`
	// Enables keys to be exportable. This allows for all the valid keys in the key ring to be exported.
	Exportable *bool `json:"exportable,omitempty"`
	// The hash function used as a random oracle in the OAEP wrapping of the user-generated, ephemeral AES key. Can be one of \"SHA1\", \"SHA224\", \"SHA256\" (default), \"SHA384\", or \"SHA512\"
	HashFunction *string `json:"hash_function,omitempty"`
	// The type of key being imported. Currently, \"aes128-gcm96\" (symmetric), \"aes256-gcm96\" (symmetric), \"ecdsa-p256\" (asymmetric), \"ecdsa-p384\" (asymmetric), \"ecdsa-p521\" (asymmetric), \"ed25519\" (asymmetric), \"rsa-2048\" (asymmetric), \"rsa-3072\" (asymmetric), \"rsa-4096\" (asymmetric) are supported. Defaults to \"aes256-gcm96\".
	Type *string `json:"type,omitempty"`
}

// NewTransitKeysImportRequest instantiates a new TransitKeysImportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitKeysImportRequest() *TransitKeysImportRequest {
	this := TransitKeysImportRequest{}
	var autoRotatePeriod int32 = 0
	this.AutoRotatePeriod = &autoRotatePeriod
	var hashFunction string = "SHA256"
	this.HashFunction = &hashFunction
	var type_ string = "aes256-gcm96"
	this.Type = &type_
	return &this
}

// NewTransitKeysImportRequestWithDefaults instantiates a new TransitKeysImportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitKeysImportRequestWithDefaults() *TransitKeysImportRequest {
	this := TransitKeysImportRequest{}
	var autoRotatePeriod int32 = 0
	this.AutoRotatePeriod = &autoRotatePeriod
	var hashFunction string = "SHA256"
	this.HashFunction = &hashFunction
	var type_ string = "aes256-gcm96"
	this.Type = &type_
	return &this
}

// GetAllowPlaintextBackup returns the AllowPlaintextBackup field value if set, zero value otherwise.
func (o *TransitKeysImportRequest) GetAllowPlaintextBackup() bool {
	if o == nil || o.AllowPlaintextBackup == nil {
		var ret bool
		return ret
	}
	return *o.AllowPlaintextBackup
}

// GetAllowPlaintextBackupOk returns a tuple with the AllowPlaintextBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysImportRequest) GetAllowPlaintextBackupOk() (*bool, bool) {
	if o == nil || o.AllowPlaintextBackup == nil {
		return nil, false
	}
	return o.AllowPlaintextBackup, true
}

// HasAllowPlaintextBackup returns a boolean if a field has been set.
func (o *TransitKeysImportRequest) HasAllowPlaintextBackup() bool {
	if o != nil && o.AllowPlaintextBackup != nil {
		return true
	}

	return false
}

// SetAllowPlaintextBackup gets a reference to the given bool and assigns it to the AllowPlaintextBackup field.
func (o *TransitKeysImportRequest) SetAllowPlaintextBackup(v bool) {
	o.AllowPlaintextBackup = &v
}

// GetAllowRotation returns the AllowRotation field value if set, zero value otherwise.
func (o *TransitKeysImportRequest) GetAllowRotation() bool {
	if o == nil || o.AllowRotation == nil {
		var ret bool
		return ret
	}
	return *o.AllowRotation
}

// GetAllowRotationOk returns a tuple with the AllowRotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysImportRequest) GetAllowRotationOk() (*bool, bool) {
	if o == nil || o.AllowRotation == nil {
		return nil, false
	}
	return o.AllowRotation, true
}

// HasAllowRotation returns a boolean if a field has been set.
func (o *TransitKeysImportRequest) HasAllowRotation() bool {
	if o != nil && o.AllowRotation != nil {
		return true
	}

	return false
}

// SetAllowRotation gets a reference to the given bool and assigns it to the AllowRotation field.
func (o *TransitKeysImportRequest) SetAllowRotation(v bool) {
	o.AllowRotation = &v
}

// GetAutoRotatePeriod returns the AutoRotatePeriod field value if set, zero value otherwise.
func (o *TransitKeysImportRequest) GetAutoRotatePeriod() int32 {
	if o == nil || o.AutoRotatePeriod == nil {
		var ret int32
		return ret
	}
	return *o.AutoRotatePeriod
}

// GetAutoRotatePeriodOk returns a tuple with the AutoRotatePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysImportRequest) GetAutoRotatePeriodOk() (*int32, bool) {
	if o == nil || o.AutoRotatePeriod == nil {
		return nil, false
	}
	return o.AutoRotatePeriod, true
}

// HasAutoRotatePeriod returns a boolean if a field has been set.
func (o *TransitKeysImportRequest) HasAutoRotatePeriod() bool {
	if o != nil && o.AutoRotatePeriod != nil {
		return true
	}

	return false
}

// SetAutoRotatePeriod gets a reference to the given int32 and assigns it to the AutoRotatePeriod field.
func (o *TransitKeysImportRequest) SetAutoRotatePeriod(v int32) {
	o.AutoRotatePeriod = &v
}

// GetCiphertext returns the Ciphertext field value if set, zero value otherwise.
func (o *TransitKeysImportRequest) GetCiphertext() string {
	if o == nil || o.Ciphertext == nil {
		var ret string
		return ret
	}
	return *o.Ciphertext
}

// GetCiphertextOk returns a tuple with the Ciphertext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysImportRequest) GetCiphertextOk() (*string, bool) {
	if o == nil || o.Ciphertext == nil {
		return nil, false
	}
	return o.Ciphertext, true
}

// HasCiphertext returns a boolean if a field has been set.
func (o *TransitKeysImportRequest) HasCiphertext() bool {
	if o != nil && o.Ciphertext != nil {
		return true
	}

	return false
}

// SetCiphertext gets a reference to the given string and assigns it to the Ciphertext field.
func (o *TransitKeysImportRequest) SetCiphertext(v string) {
	o.Ciphertext = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *TransitKeysImportRequest) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysImportRequest) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *TransitKeysImportRequest) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *TransitKeysImportRequest) SetContext(v string) {
	o.Context = &v
}

// GetDerived returns the Derived field value if set, zero value otherwise.
func (o *TransitKeysImportRequest) GetDerived() bool {
	if o == nil || o.Derived == nil {
		var ret bool
		return ret
	}
	return *o.Derived
}

// GetDerivedOk returns a tuple with the Derived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysImportRequest) GetDerivedOk() (*bool, bool) {
	if o == nil || o.Derived == nil {
		return nil, false
	}
	return o.Derived, true
}

// HasDerived returns a boolean if a field has been set.
func (o *TransitKeysImportRequest) HasDerived() bool {
	if o != nil && o.Derived != nil {
		return true
	}

	return false
}

// SetDerived gets a reference to the given bool and assigns it to the Derived field.
func (o *TransitKeysImportRequest) SetDerived(v bool) {
	o.Derived = &v
}

// GetExportable returns the Exportable field value if set, zero value otherwise.
func (o *TransitKeysImportRequest) GetExportable() bool {
	if o == nil || o.Exportable == nil {
		var ret bool
		return ret
	}
	return *o.Exportable
}

// GetExportableOk returns a tuple with the Exportable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysImportRequest) GetExportableOk() (*bool, bool) {
	if o == nil || o.Exportable == nil {
		return nil, false
	}
	return o.Exportable, true
}

// HasExportable returns a boolean if a field has been set.
func (o *TransitKeysImportRequest) HasExportable() bool {
	if o != nil && o.Exportable != nil {
		return true
	}

	return false
}

// SetExportable gets a reference to the given bool and assigns it to the Exportable field.
func (o *TransitKeysImportRequest) SetExportable(v bool) {
	o.Exportable = &v
}

// GetHashFunction returns the HashFunction field value if set, zero value otherwise.
func (o *TransitKeysImportRequest) GetHashFunction() string {
	if o == nil || o.HashFunction == nil {
		var ret string
		return ret
	}
	return *o.HashFunction
}

// GetHashFunctionOk returns a tuple with the HashFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysImportRequest) GetHashFunctionOk() (*string, bool) {
	if o == nil || o.HashFunction == nil {
		return nil, false
	}
	return o.HashFunction, true
}

// HasHashFunction returns a boolean if a field has been set.
func (o *TransitKeysImportRequest) HasHashFunction() bool {
	if o != nil && o.HashFunction != nil {
		return true
	}

	return false
}

// SetHashFunction gets a reference to the given string and assigns it to the HashFunction field.
func (o *TransitKeysImportRequest) SetHashFunction(v string) {
	o.HashFunction = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TransitKeysImportRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysImportRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TransitKeysImportRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TransitKeysImportRequest) SetType(v string) {
	o.Type = &v
}

func (o TransitKeysImportRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowPlaintextBackup != nil {
		toSerialize["allow_plaintext_backup"] = o.AllowPlaintextBackup
	}
	if o.AllowRotation != nil {
		toSerialize["allow_rotation"] = o.AllowRotation
	}
	if o.AutoRotatePeriod != nil {
		toSerialize["auto_rotate_period"] = o.AutoRotatePeriod
	}
	if o.Ciphertext != nil {
		toSerialize["ciphertext"] = o.Ciphertext
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.Derived != nil {
		toSerialize["derived"] = o.Derived
	}
	if o.Exportable != nil {
		toSerialize["exportable"] = o.Exportable
	}
	if o.HashFunction != nil {
		toSerialize["hash_function"] = o.HashFunction
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableTransitKeysImportRequest struct {
	value *TransitKeysImportRequest
	isSet bool
}

func (v NullableTransitKeysImportRequest) Get() *TransitKeysImportRequest {
	return v.value
}

func (v *NullableTransitKeysImportRequest) Set(val *TransitKeysImportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitKeysImportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitKeysImportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitKeysImportRequest(val *TransitKeysImportRequest) *NullableTransitKeysImportRequest {
	return &NullableTransitKeysImportRequest{value: val, isSet: true}
}

func (v NullableTransitKeysImportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitKeysImportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitKeysImportVersionRequest struct for TransitKeysImportVersionRequest
type TransitKeysImportVersionRequest struct {
	// The base64-encoded ciphertext of the keys. The AES key should be encrypted using OAEP with the wrapping key and then concatenated with the import key, wrapped by the AES key.
	Ciphertext *string `json:"ciphertext,omitempty"`
	// The hash function used as a random oracle in the OAEP wrapping of the user-generated, ephemeral AES key. Can be one of \"SHA1\", \"SHA224\", \"SHA256\" (default), \"SHA384\", or \"SHA512\"
	HashFunction *string `json:"hash_function,omitempty"`
}

// NewTransitKeysImportVersionRequest instantiates a new TransitKeysImportVersionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitKeysImportVersionRequest() *TransitKeysImportVersionRequest {
	this := TransitKeysImportVersionRequest{}
	var hashFunction string = "SHA256"
	this.HashFunction = &hashFunction
	return &this
}

// NewTransitKeysImportVersionRequestWithDefaults instantiates a new TransitKeysImportVersionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitKeysImportVersionRequestWithDefaults() *TransitKeysImportVersionRequest {
	this := TransitKeysImportVersionRequest{}
	var hashFunction string = "SHA256"
	this.HashFunction = &hashFunction
	return &this
}

// GetCiphertext returns the Ciphertext field value if set, zero value otherwise.
func (o *TransitKeysImportVersionRequest) GetCiphertext() string {
	if o == nil || o.Ciphertext == nil {
		var ret string
		return ret
	}
	return *o.Ciphertext
}

// GetCiphertextOk returns a tuple with the Ciphertext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysImportVersionRequest) GetCiphertextOk() (*string, bool) {
	if o == nil || o.Ciphertext == nil {
		return nil, false
	}
	return o.Ciphertext, true
}

// HasCiphertext returns a boolean if a field has been set.
func (o *TransitKeysImportVersionRequest) HasCiphertext() bool {
	if o != nil && o.Ciphertext != nil {
		return true
	}

	return false
}

// SetCiphertext gets a reference to the given string and assigns it to the Ciphertext field.
func (o *TransitKeysImportVersionRequest) SetCiphertext(v string) {
	o.Ciphertext = &v
}

// GetHashFunction returns the HashFunction field value if set, zero value otherwise.
func (o *TransitKeysImportVersionRequest) GetHashFunction() string {
	if o == nil || o.HashFunction == nil {
		var ret string
		return ret
	}
	return *o.HashFunction
}

// GetHashFunctionOk returns a tuple with the HashFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysImportVersionRequest) GetHashFunctionOk() (*string, bool) {
	if o == nil || o.HashFunction == nil {
		return nil, false
	}
	return o.HashFunction, true
}

// HasHashFunction returns a boolean if a field has been set.
func (o *TransitKeysImportVersionRequest) HasHashFunction() bool {
	if o != nil && o.HashFunction != nil {
		return true
	}

	return false
}

// SetHashFunction gets a reference to the given string and assigns it to the HashFunction field.
func (o *TransitKeysImportVersionRequest) SetHashFunction(v string) {
	o.HashFunction = &v
}

func (o TransitKeysImportVersionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ciphertext != nil {
		toSerialize["ciphertext"] = o.Ciphertext
	}
	if o.HashFunction != nil {
		toSerialize["hash_function"] = o.HashFunction
	}
	return json.Marshal(toSerialize)
}

type NullableTransitKeysImportVersionRequest struct {
	value *TransitKeysImportVersionRequest
	isSet bool
}

func (v NullableTransitKeysImportVersionRequest) Get() *TransitKeysImportVersionRequest {
	return v.value
}

func (v *NullableTransitKeysImportVersionRequest) Set(val *TransitKeysImportVersionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitKeysImportVersionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitKeysImportVersionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitKeysImportVersionRequest(val *TransitKeysImportVersionRequest) *NullableTransitKeysImportVersionRequest {
	return &NullableTransitKeysImportVersionRequest{value: val, isSet: true}
}

func (v NullableTransitKeysImportVersionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitKeysImportVersionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitKeysRequest struct for TransitKeysRequest
type TransitKeysRequest struct {
	// Enables taking a backup of the named key in plaintext format. Once set, this cannot be disabled.
	AllowPlaintextBackup *bool `json:"allow_plaintext_backup,omitempty"`
	// Amount of time the key should live before being automatically rotated. A value of 0 (default) disables automatic rotation for the key.
	AutoRotatePeriod *int32 `json:"auto_rotate_period,omitempty"`
	// Base64 encoded context for key derivation. When reading a key with key derivation enabled, if the key type supports public keys, this will return the public key for the given context.
	Context *string `json:"context,omitempty"`
	// Whether to support convergent encryption. This is only supported when using a key with key derivation enabled and will require all requests to carry both a context and 96-bit (12-byte) nonce. The given nonce will be used in place of a randomly generated nonce. As a result, when the same context and nonce are supplied, the same ciphertext is generated. It is *very important* when using this mode that you ensure that all nonces are unique for a given context. Failing to do so will severely impact the ciphertext's security.
	ConvergentEncryption *bool `json:"convergent_encryption,omitempty"`
	// Enables key derivation mode. This allows for per-transaction unique keys for encryption operations.
	Derived *bool `json:"derived,omitempty"`
	// Enables keys to be exportable. This allows for all the valid keys in the key ring to be exported.
	Exportable *bool `json:"exportable,omitempty"`
	// The type of key to create. Currently, \"aes128-gcm96\" (symmetric), \"aes256-gcm96\" (symmetric), \"ecdsa-p256\" (asymmetric), \"ecdsa-p384\" (asymmetric), \"ecdsa-p521\" (asymmetric), \"ed25519\" (asymmetric), \"rsa-2048\" (asymmetric), \"rsa-3072\" (asymmetric), \"rsa-4096\" (asymmetric) are supported. Defaults to \"aes256-gcm96\".
	Type *string `json:"type,omitempty"`
}

// NewTransitKeysRequest instantiates a new TransitKeysRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitKeysRequest() *TransitKeysRequest {
	this := TransitKeysRequest{}
	var autoRotatePeriod int32 = 0
	this.AutoRotatePeriod = &autoRotatePeriod
	var type_ string = "aes256-gcm96"
	this.Type = &type_
	return &this
}

// NewTransitKeysRequestWithDefaults instantiates a new TransitKeysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitKeysRequestWithDefaults() *TransitKeysRequest {
	this := TransitKeysRequest{}
	var autoRotatePeriod int32 = 0
	this.AutoRotatePeriod = &autoRotatePeriod
	var type_ string = "aes256-gcm96"
	this.Type = &type_
	return &this
}

// GetAllowPlaintextBackup returns the AllowPlaintextBackup field value if set, zero value otherwise.
func (o *TransitKeysRequest) GetAllowPlaintextBackup() bool {
	if o == nil || o.AllowPlaintextBackup == nil {
		var ret bool
		return ret
	}
	return *o.AllowPlaintextBackup
}

// GetAllowPlaintextBackupOk returns a tuple with the AllowPlaintextBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysRequest) GetAllowPlaintextBackupOk() (*bool, bool) {
	if o == nil || o.AllowPlaintextBackup == nil {
		return nil, false
	}
	return o.AllowPlaintextBackup, true
}

// HasAllowPlaintextBackup returns a boolean if a field has been set.
func (o *TransitKeysRequest) HasAllowPlaintextBackup() bool {
	if o != nil && o.AllowPlaintextBackup != nil {
		return true
	}

	return false
}

// SetAllowPlaintextBackup gets a reference to the given bool and assigns it to the AllowPlaintextBackup field.
func (o *TransitKeysRequest) SetAllowPlaintextBackup(v bool) {
	o.AllowPlaintextBackup = &v
}

// GetAutoRotatePeriod returns the AutoRotatePeriod field value if set, zero value otherwise.
func (o *TransitKeysRequest) GetAutoRotatePeriod() int32 {
	if o == nil || o.AutoRotatePeriod == nil {
		var ret int32
		return ret
	}
	return *o.AutoRotatePeriod
}

// GetAutoRotatePeriodOk returns a tuple with the AutoRotatePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysRequest) GetAutoRotatePeriodOk() (*int32, bool) {
	if o == nil || o.AutoRotatePeriod == nil {
		return nil, false
	}
	return o.AutoRotatePeriod, true
}

// HasAutoRotatePeriod returns a boolean if a field has been set.
func (o *TransitKeysRequest) HasAutoRotatePeriod() bool {
	if o != nil && o.AutoRotatePeriod != nil {
		return true
	}

	return false
}

// SetAutoRotatePeriod gets a reference to the given int32 and assigns it to the AutoRotatePeriod field.
func (o *TransitKeysRequest) SetAutoRotatePeriod(v int32) {
	o.AutoRotatePeriod = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *TransitKeysRequest) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysRequest) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *TransitKeysRequest) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *TransitKeysRequest) SetContext(v string) {
	o.Context = &v
}

// GetConvergentEncryption returns the ConvergentEncryption field value if set, zero value otherwise.
func (o *TransitKeysRequest) GetConvergentEncryption() bool {
	if o == nil || o.ConvergentEncryption == nil {
		var ret bool
		return ret
	}
	return *o.ConvergentEncryption
}

// GetConvergentEncryptionOk returns a tuple with the ConvergentEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysRequest) GetConvergentEncryptionOk() (*bool, bool) {
	if o == nil || o.ConvergentEncryption == nil {
		return nil, false
	}
	return o.ConvergentEncryption, true
}

// HasConvergentEncryption returns a boolean if a field has been set.
func (o *TransitKeysRequest) HasConvergentEncryption() bool {
	if o != nil && o.ConvergentEncryption != nil {
		return true
	}

	return false
}

// SetConvergentEncryption gets a reference to the given bool and assigns it to the ConvergentEncryption field.
func (o *TransitKeysRequest) SetConvergentEncryption(v bool) {
	o.ConvergentEncryption = &v
}

// GetDerived returns the Derived field value if set, zero value otherwise.
func (o *TransitKeysRequest) GetDerived() bool {
	if o == nil || o.Derived == nil {
		var ret bool
		return ret
	}
	return *o.Derived
}

// GetDerivedOk returns a tuple with the Derived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysRequest) GetDerivedOk() (*bool, bool) {
	if o == nil || o.Derived == nil {
		return nil, false
	}
	return o.Derived, true
}

// HasDerived returns a boolean if a field has been set.
func (o *TransitKeysRequest) HasDerived() bool {
	if o != nil && o.Derived != nil {
		return true
	}

	return false
}

// SetDerived gets a reference to the given bool and assigns it to the Derived field.
func (o *TransitKeysRequest) SetDerived(v bool) {
	o.Derived = &v
}

// GetExportable returns the Exportable field value if set, zero value otherwise.
func (o *TransitKeysRequest) GetExportable() bool {
	if o == nil || o.Exportable == nil {
		var ret bool
		return ret
	}
	return *o.Exportable
}

// GetExportableOk returns a tuple with the Exportable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysRequest) GetExportableOk() (*bool, bool) {
	if o == nil || o.Exportable == nil {
		return nil, false
	}
	return o.Exportable, true
}

// HasExportable returns a boolean if a field has been set.
func (o *TransitKeysRequest) HasExportable() bool {
	if o != nil && o.Exportable != nil {
		return true
	}

	return false
}

// SetExportable gets a reference to the given bool and assigns it to the Exportable field.
func (o *TransitKeysRequest) SetExportable(v bool) {
	o.Exportable = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TransitKeysRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TransitKeysRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TransitKeysRequest) SetType(v string) {
	o.Type = &v
}

func (o TransitKeysRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowPlaintextBackup != nil {
		toSerialize["allow_plaintext_backup"] = o.AllowPlaintextBackup
	}
	if o.AutoRotatePeriod != nil {
		toSerialize["auto_rotate_period"] = o.AutoRotatePeriod
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.ConvergentEncryption != nil {
		toSerialize["convergent_encryption"] = o.ConvergentEncryption
	}
	if o.Derived != nil {
		toSerialize["derived"] = o.Derived
	}
	if o.Exportable != nil {
		toSerialize["exportable"] = o.Exportable
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableTransitKeysRequest struct {
	value *TransitKeysRequest
	isSet bool
}

func (v NullableTransitKeysRequest) Get() *TransitKeysRequest {
	return v.value
}

func (v *NullableTransitKeysRequest) Set(val *TransitKeysRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitKeysRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitKeysRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitKeysRequest(val *TransitKeysRequest) *NullableTransitKeysRequest {
	return &NullableTransitKeysRequest{value: val, isSet: true}
}

func (v NullableTransitKeysRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitKeysRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitKeysTrimRequest struct for TransitKeysTrimRequest
type TransitKeysTrimRequest struct {
	// The minimum available version for the key ring. All versions before this version will be permanently deleted. This value can at most be equal to the lesser of 'min_decryption_version' and 'min_encryption_version'. This is not allowed to be set when either 'min_encryption_version' or 'min_decryption_version' is set to zero.
	MinAvailableVersion *int32 `json:"min_available_version,omitempty"`
}

// NewTransitKeysTrimRequest instantiates a new TransitKeysTrimRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitKeysTrimRequest() *TransitKeysTrimRequest {
	this := TransitKeysTrimRequest{}
	return &this
}

// NewTransitKeysTrimRequestWithDefaults instantiates a new TransitKeysTrimRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitKeysTrimRequestWithDefaults() *TransitKeysTrimRequest {
	this := TransitKeysTrimRequest{}
	return &this
}

// GetMinAvailableVersion returns the MinAvailableVersion field value if set, zero value otherwise.
func (o *TransitKeysTrimRequest) GetMinAvailableVersion() int32 {
	if o == nil || o.MinAvailableVersion == nil {
		var ret int32
		return ret
	}
	return *o.MinAvailableVersion
}

// GetMinAvailableVersionOk returns a tuple with the MinAvailableVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysTrimRequest) GetMinAvailableVersionOk() (*int32, bool) {
	if o == nil || o.MinAvailableVersion == nil {
		return nil, false
	}
	return o.MinAvailableVersion, true
}

// HasMinAvailableVersion returns a boolean if a field has been set.
func (o *TransitKeysTrimRequest) HasMinAvailableVersion() bool {
	if o != nil && o.MinAvailableVersion != nil {
		return true
	}

	return false
}

// SetMinAvailableVersion gets a reference to the given int32 and assigns it to the MinAvailableVersion field.
func (o *TransitKeysTrimRequest) SetMinAvailableVersion(v int32) {
	o.MinAvailableVersion = &v
}

func (o TransitKeysTrimRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MinAvailableVersion != nil {
		toSerialize["min_available_version"] = o.MinAvailableVersion
	}
	return json.Marshal(toSerialize)
}

type NullableTransitKeysTrimRequest struct {
	value *TransitKeysTrimRequest
	isSet bool
}

func (v NullableTransitKeysTrimRequest) Get() *TransitKeysTrimRequest {
	return v.value
}

func (v *NullableTransitKeysTrimRequest) Set(val *TransitKeysTrimRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitKeysTrimRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitKeysTrimRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitKeysTrimRequest(val *TransitKeysTrimRequest) *NullableTransitKeysTrimRequest {
	return &NullableTransitKeysTrimRequest{value: val, isSet: true}
}

func (v NullableTransitKeysTrimRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitKeysTrimRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitRandomRequest struct for TransitRandomRequest
type TransitRandomRequest struct {
	// The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits).
	Bytes *int32 `json:"bytes,omitempty"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\".
	Format *string `json:"format,omitempty"`
	// Which system to source random data from, ether \"platform\", \"seal\", or \"all\".
	Source *string `json:"source,omitempty"`
	// The number of bytes to generate (POST URL parameter)
	Urlbytes *string `json:"urlbytes,omitempty"`
}

// NewTransitRandomRequest instantiates a new TransitRandomRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitRandomRequest() *TransitRandomRequest {
	this := TransitRandomRequest{}
	var bytes int32 = 32
	this.Bytes = &bytes
	var format string = "base64"
	this.Format = &format
	var source string = "platform"
	this.Source = &source
	return &this
}

// NewTransitRandomRequestWithDefaults instantiates a new TransitRandomRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitRandomRequestWithDefaults() *TransitRandomRequest {
	this := TransitRandomRequest{}
	var bytes int32 = 32
	this.Bytes = &bytes
	var format string = "base64"
	this.Format = &format
	var source string = "platform"
	this.Source = &source
	return &this
}

// GetBytes returns the Bytes field value if set, zero value otherwise.
func (o *TransitRandomRequest) GetBytes() int32 {
	if o == nil || o.Bytes == nil {
		var ret int32
		return ret
	}
	return *o.Bytes
}

// GetBytesOk returns a tuple with the Bytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRandomRequest) GetBytesOk() (*int32, bool) {
	if o == nil || o.Bytes == nil {
		return nil, false
	}
	return o.Bytes, true
}

// HasBytes returns a boolean if a field has been set.
func (o *TransitRandomRequest) HasBytes() bool {
	if o != nil && o.Bytes != nil {
		return true
	}

	return false
}

// SetBytes gets a reference to the given int32 and assigns it to the Bytes field.
func (o *TransitRandomRequest) SetBytes(v int32) {
	o.Bytes = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *TransitRandomRequest) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRandomRequest) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *TransitRandomRequest) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *TransitRandomRequest) SetFormat(v string) {
	o.Format = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *TransitRandomRequest) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRandomRequest) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *TransitRandomRequest) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *TransitRandomRequest) SetSource(v string) {
	o.Source = &v
}

// GetUrlbytes returns the Urlbytes field value if set, zero value otherwise.
func (o *TransitRandomRequest) GetUrlbytes() string {
	if o == nil || o.Urlbytes == nil {
		var ret string
		return ret
	}
	return *o.Urlbytes
}

// GetUrlbytesOk returns a tuple with the Urlbytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRandomRequest) GetUrlbytesOk() (*string, bool) {
	if o == nil || o.Urlbytes == nil {
		return nil, false
	}
	return o.Urlbytes, true
}

// HasUrlbytes returns a boolean if a field has been set.
func (o *TransitRandomRequest) HasUrlbytes() bool {
	if o != nil && o.Urlbytes != nil {
		return true
	}

	return false
}

// SetUrlbytes gets a reference to the given string and assigns it to the Urlbytes field.
func (o *TransitRandomRequest) SetUrlbytes(v string) {
	o.Urlbytes = &v
}

func (o TransitRandomRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bytes != nil {
		toSerialize["bytes"] = o.Bytes
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.Urlbytes != nil {
		toSerialize["urlbytes"] = o.Urlbytes
	}
	return json.Marshal(toSerialize)
}

type NullableTransitRandomRequest struct {
	value *TransitRandomRequest
	isSet bool
}

func (v NullableTransitRandomRequest) Get() *TransitRandomRequest {
	return v.value
}

func (v *NullableTransitRandomRequest) Set(val *TransitRandomRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitRandomRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitRandomRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitRandomRequest(val *TransitRandomRequest) *NullableTransitRandomRequest {
	return &NullableTransitRandomRequest{value: val, isSet: true}
}

func (v NullableTransitRandomRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitRandomRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitRestoreRequest struct for TransitRestoreRequest
type TransitRestoreRequest struct {
	// Backed up key data to be restored. This should be the output from the 'backup/' endpoint.
	Backup *string `json:"backup,omitempty"`
	// If set and a key by the given name exists, force the restore operation and override the key.
	Force *bool `json:"force,omitempty"`
	// If set, this will be the name of the restored key.
	Name *string `json:"name,omitempty"`
}

// NewTransitRestoreRequest instantiates a new TransitRestoreRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitRestoreRequest() *TransitRestoreRequest {
	this := TransitRestoreRequest{}
	var force bool = false
	this.Force = &force
	return &this
}

// NewTransitRestoreRequestWithDefaults instantiates a new TransitRestoreRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitRestoreRequestWithDefaults() *TransitRestoreRequest {
	this := TransitRestoreRequest{}
	var force bool = false
	this.Force = &force
	return &this
}

// GetBackup returns the Backup field value if set, zero value otherwise.
func (o *TransitRestoreRequest) GetBackup() string {
	if o == nil || o.Backup == nil {
		var ret string
		return ret
	}
	return *o.Backup
}

// GetBackupOk returns a tuple with the Backup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRestoreRequest) GetBackupOk() (*string, bool) {
	if o == nil || o.Backup == nil {
		return nil, false
	}
	return o.Backup, true
}

// HasBackup returns a boolean if a field has been set.
func (o *TransitRestoreRequest) HasBackup() bool {
	if o != nil && o.Backup != nil {
		return true
	}

	return false
}

// SetBackup gets a reference to the given string and assigns it to the Backup field.
func (o *TransitRestoreRequest) SetBackup(v string) {
	o.Backup = &v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *TransitRestoreRequest) GetForce() bool {
	if o == nil || o.Force == nil {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRestoreRequest) GetForceOk() (*bool, bool) {
	if o == nil || o.Force == nil {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *TransitRestoreRequest) HasForce() bool {
	if o != nil && o.Force != nil {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *TransitRestoreRequest) SetForce(v bool) {
	o.Force = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TransitRestoreRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRestoreRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TransitRestoreRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TransitRestoreRequest) SetName(v string) {
	o.Name = &v
}

func (o TransitRestoreRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Backup != nil {
		toSerialize["backup"] = o.Backup
	}
	if o.Force != nil {
		toSerialize["force"] = o.Force
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableTransitRestoreRequest struct {
	value *TransitRestoreRequest
	isSet bool
}

func (v NullableTransitRestoreRequest) Get() *TransitRestoreRequest {
	return v.value
}

func (v *NullableTransitRestoreRequest) Set(val *TransitRestoreRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitRestoreRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitRestoreRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitRestoreRequest(val *TransitRestoreRequest) *NullableTransitRestoreRequest {
	return &NullableTransitRestoreRequest{value: val, isSet: true}
}

func (v NullableTransitRestoreRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitRestoreRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitRewrapRequest struct for TransitRewrapRequest
type TransitRewrapRequest struct {
	// Ciphertext value to rewrap
	Ciphertext *string `json:"ciphertext,omitempty"`
	// Base64 encoded context for key derivation. Required for derived keys.
	Context *string `json:"context,omitempty"`
	// The version of the key to use for encryption. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion *int32 `json:"key_version,omitempty"`
	// Nonce for when convergent encryption is used
	Nonce *string `json:"nonce,omitempty"`
}

// NewTransitRewrapRequest instantiates a new TransitRewrapRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitRewrapRequest() *TransitRewrapRequest {
	this := TransitRewrapRequest{}
	return &this
}

// NewTransitRewrapRequestWithDefaults instantiates a new TransitRewrapRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitRewrapRequestWithDefaults() *TransitRewrapRequest {
	this := TransitRewrapRequest{}
	return &this
}

// GetCiphertext returns the Ciphertext field value if set, zero value otherwise.
func (o *TransitRewrapRequest) GetCiphertext() string {
	if o == nil || o.Ciphertext == nil {
		var ret string
		return ret
	}
	return *o.Ciphertext
}

// GetCiphertextOk returns a tuple with the Ciphertext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRewrapRequest) GetCiphertextOk() (*string, bool) {
	if o == nil || o.Ciphertext == nil {
		return nil, false
	}
	return o.Ciphertext, true
}

// HasCiphertext returns a boolean if a field has been set.
func (o *TransitRewrapRequest) HasCiphertext() bool {
	if o != nil && o.Ciphertext != nil {
		return true
	}

	return false
}

// SetCiphertext gets a reference to the given string and assigns it to the Ciphertext field.
func (o *TransitRewrapRequest) SetCiphertext(v string) {
	o.Ciphertext = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *TransitRewrapRequest) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRewrapRequest) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *TransitRewrapRequest) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *TransitRewrapRequest) SetContext(v string) {
	o.Context = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *TransitRewrapRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRewrapRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *TransitRewrapRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *TransitRewrapRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *TransitRewrapRequest) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRewrapRequest) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *TransitRewrapRequest) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *TransitRewrapRequest) SetNonce(v string) {
	o.Nonce = &v
}

func (o TransitRewrapRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ciphertext != nil {
		toSerialize["ciphertext"] = o.Ciphertext
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	return json.Marshal(toSerialize)
}

type NullableTransitRewrapRequest struct {
	value *TransitRewrapRequest
	isSet bool
}

func (v NullableTransitRewrapRequest) Get() *TransitRewrapRequest {
	return v.value
}

func (v *NullableTransitRewrapRequest) Set(val *TransitRewrapRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitRewrapRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitRewrapRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitRewrapRequest(val *TransitRewrapRequest) *NullableTransitRewrapRequest {
	return &NullableTransitRewrapRequest{value: val, isSet: true}
}

func (v NullableTransitRewrapRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitRewrapRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitSignRequest struct for TransitSignRequest
type TransitSignRequest struct {
	// Deprecated: use \"hash_algorithm\" instead.
	Algorithm *string `json:"algorithm,omitempty"`
	// Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys.
	Context *string `json:"context,omitempty"`
	// Hash algorithm to use (POST body parameter). Valid values are: * sha1 * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 Defaults to \"sha2-256\". Not valid for all key types, including ed25519.
	HashAlgorithm *string `json:"hash_algorithm,omitempty"`
	// The base64-encoded input data
	Input *string `json:"input,omitempty"`
	// The version of the key to use for signing. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion *int32 `json:"key_version,omitempty"`
	// The method by which to marshal the signature. The default is 'asn1' which is used by openssl and X.509. It can also be set to 'jws' which is used for JWT signatures; setting it to this will also cause the encoding of the signature to be url-safe base64 instead of using standard base64 encoding. Currently only valid for ECDSA P-256 key types\".
	MarshalingAlgorithm *string `json:"marshaling_algorithm,omitempty"`
	// Set to 'true' when the input is already hashed. If the key type is 'rsa-2048', 'rsa-3072' or 'rsa-4096', then the algorithm used to hash the input should be indicated by the 'algorithm' parameter.
	Prehashed *bool `json:"prehashed,omitempty"`
	// The signature algorithm to use for signing. Currently only applies to RSA key types. Options are 'pss' or 'pkcs1v15'. Defaults to 'pss'
	SignatureAlgorithm *string `json:"signature_algorithm,omitempty"`
	// Hash algorithm to use (POST URL parameter)
	Urlalgorithm *string `json:"urlalgorithm,omitempty"`
}

// NewTransitSignRequest instantiates a new TransitSignRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitSignRequest() *TransitSignRequest {
	this := TransitSignRequest{}
	var algorithm string = "sha2-256"
	this.Algorithm = &algorithm
	var hashAlgorithm string = "sha2-256"
	this.HashAlgorithm = &hashAlgorithm
	var marshalingAlgorithm string = "asn1"
	this.MarshalingAlgorithm = &marshalingAlgorithm
	return &this
}

// NewTransitSignRequestWithDefaults instantiates a new TransitSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitSignRequestWithDefaults() *TransitSignRequest {
	this := TransitSignRequest{}
	var algorithm string = "sha2-256"
	this.Algorithm = &algorithm
	var hashAlgorithm string = "sha2-256"
	this.HashAlgorithm = &hashAlgorithm
	var marshalingAlgorithm string = "asn1"
	this.MarshalingAlgorithm = &marshalingAlgorithm
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *TransitSignRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *TransitSignRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *TransitSignRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *TransitSignRequest) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *TransitSignRequest) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *TransitSignRequest) SetContext(v string) {
	o.Context = &v
}

// GetHashAlgorithm returns the HashAlgorithm field value if set, zero value otherwise.
func (o *TransitSignRequest) GetHashAlgorithm() string {
	if o == nil || o.HashAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.HashAlgorithm
}

// GetHashAlgorithmOk returns a tuple with the HashAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetHashAlgorithmOk() (*string, bool) {
	if o == nil || o.HashAlgorithm == nil {
		return nil, false
	}
	return o.HashAlgorithm, true
}

// HasHashAlgorithm returns a boolean if a field has been set.
func (o *TransitSignRequest) HasHashAlgorithm() bool {
	if o != nil && o.HashAlgorithm != nil {
		return true
	}

	return false
}

// SetHashAlgorithm gets a reference to the given string and assigns it to the HashAlgorithm field.
func (o *TransitSignRequest) SetHashAlgorithm(v string) {
	o.HashAlgorithm = &v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *TransitSignRequest) GetInput() string {
	if o == nil || o.Input == nil {
		var ret string
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetInputOk() (*string, bool) {
	if o == nil || o.Input == nil {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *TransitSignRequest) HasInput() bool {
	if o != nil && o.Input != nil {
		return true
	}

	return false
}

// SetInput gets a reference to the given string and assigns it to the Input field.
func (o *TransitSignRequest) SetInput(v string) {
	o.Input = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *TransitSignRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *TransitSignRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *TransitSignRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

// GetMarshalingAlgorithm returns the MarshalingAlgorithm field value if set, zero value otherwise.
func (o *TransitSignRequest) GetMarshalingAlgorithm() string {
	if o == nil || o.MarshalingAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.MarshalingAlgorithm
}

// GetMarshalingAlgorithmOk returns a tuple with the MarshalingAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetMarshalingAlgorithmOk() (*string, bool) {
	if o == nil || o.MarshalingAlgorithm == nil {
		return nil, false
	}
	return o.MarshalingAlgorithm, true
}

// HasMarshalingAlgorithm returns a boolean if a field has been set.
func (o *TransitSignRequest) HasMarshalingAlgorithm() bool {
	if o != nil && o.MarshalingAlgorithm != nil {
		return true
	}

	return false
}

// SetMarshalingAlgorithm gets a reference to the given string and assigns it to the MarshalingAlgorithm field.
func (o *TransitSignRequest) SetMarshalingAlgorithm(v string) {
	o.MarshalingAlgorithm = &v
}

// GetPrehashed returns the Prehashed field value if set, zero value otherwise.
func (o *TransitSignRequest) GetPrehashed() bool {
	if o == nil || o.Prehashed == nil {
		var ret bool
		return ret
	}
	return *o.Prehashed
}

// GetPrehashedOk returns a tuple with the Prehashed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetPrehashedOk() (*bool, bool) {
	if o == nil || o.Prehashed == nil {
		return nil, false
	}
	return o.Prehashed, true
}

// HasPrehashed returns a boolean if a field has been set.
func (o *TransitSignRequest) HasPrehashed() bool {
	if o != nil && o.Prehashed != nil {
		return true
	}

	return false
}

// SetPrehashed gets a reference to the given bool and assigns it to the Prehashed field.
func (o *TransitSignRequest) SetPrehashed(v bool) {
	o.Prehashed = &v
}

// GetSignatureAlgorithm returns the SignatureAlgorithm field value if set, zero value otherwise.
func (o *TransitSignRequest) GetSignatureAlgorithm() string {
	if o == nil || o.SignatureAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.SignatureAlgorithm
}

// GetSignatureAlgorithmOk returns a tuple with the SignatureAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetSignatureAlgorithmOk() (*string, bool) {
	if o == nil || o.SignatureAlgorithm == nil {
		return nil, false
	}
	return o.SignatureAlgorithm, true
}

// HasSignatureAlgorithm returns a boolean if a field has been set.
func (o *TransitSignRequest) HasSignatureAlgorithm() bool {
	if o != nil && o.SignatureAlgorithm != nil {
		return true
	}

	return false
}

// SetSignatureAlgorithm gets a reference to the given string and assigns it to the SignatureAlgorithm field.
func (o *TransitSignRequest) SetSignatureAlgorithm(v string) {
	o.SignatureAlgorithm = &v
}

// GetUrlalgorithm returns the Urlalgorithm field value if set, zero value otherwise.
func (o *TransitSignRequest) GetUrlalgorithm() string {
	if o == nil || o.Urlalgorithm == nil {
		var ret string
		return ret
	}
	return *o.Urlalgorithm
}

// GetUrlalgorithmOk returns a tuple with the Urlalgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetUrlalgorithmOk() (*string, bool) {
	if o == nil || o.Urlalgorithm == nil {
		return nil, false
	}
	return o.Urlalgorithm, true
}

// HasUrlalgorithm returns a boolean if a field has been set.
func (o *TransitSignRequest) HasUrlalgorithm() bool {
	if o != nil && o.Urlalgorithm != nil {
		return true
	}

	return false
}

// SetUrlalgorithm gets a reference to the given string and assigns it to the Urlalgorithm field.
func (o *TransitSignRequest) SetUrlalgorithm(v string) {
	o.Urlalgorithm = &v
}

func (o TransitSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.HashAlgorithm != nil {
		toSerialize["hash_algorithm"] = o.HashAlgorithm
	}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	if o.MarshalingAlgorithm != nil {
		toSerialize["marshaling_algorithm"] = o.MarshalingAlgorithm
	}
	if o.Prehashed != nil {
		toSerialize["prehashed"] = o.Prehashed
	}
	if o.SignatureAlgorithm != nil {
		toSerialize["signature_algorithm"] = o.SignatureAlgorithm
	}
	if o.Urlalgorithm != nil {
		toSerialize["urlalgorithm"] = o.Urlalgorithm
	}
	return json.Marshal(toSerialize)
}

type NullableTransitSignRequest struct {
	value *TransitSignRequest
	isSet bool
}

func (v NullableTransitSignRequest) Get() *TransitSignRequest {
	return v.value
}

func (v *NullableTransitSignRequest) Set(val *TransitSignRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitSignRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitSignRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitSignRequest(val *TransitSignRequest) *NullableTransitSignRequest {
	return &NullableTransitSignRequest{value: val, isSet: true}
}

func (v NullableTransitSignRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitSignRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitVerifyRequest struct for TransitVerifyRequest
type TransitVerifyRequest struct {
	// Deprecated: use \"hash_algorithm\" instead.
	Algorithm *string `json:"algorithm,omitempty"`
	// Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys.
	Context *string `json:"context,omitempty"`
	// Hash algorithm to use (POST body parameter). Valid values are: * sha1 * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 Defaults to \"sha2-256\". Not valid for all key types.
	HashAlgorithm *string `json:"hash_algorithm,omitempty"`
	// The HMAC, including vault header/key version
	Hmac *string `json:"hmac,omitempty"`
	// The base64-encoded input data to verify
	Input *string `json:"input,omitempty"`
	// The method by which to unmarshal the signature when verifying. The default is 'asn1' which is used by openssl and X.509; can also be set to 'jws' which is used for JWT signatures in which case the signature is also expected to be url-safe base64 encoding instead of standard base64 encoding. Currently only valid for ECDSA P-256 key types\".
	MarshalingAlgorithm *string `json:"marshaling_algorithm,omitempty"`
	// Set to 'true' when the input is already hashed. If the key type is 'rsa-2048', 'rsa-3072' or 'rsa-4096', then the algorithm used to hash the input should be indicated by the 'algorithm' parameter.
	Prehashed *bool `json:"prehashed,omitempty"`
	// The signature, including vault header/key version
	Signature *string `json:"signature,omitempty"`
	// The signature algorithm to use for signature verification. Currently only applies to RSA key types. Options are 'pss' or 'pkcs1v15'. Defaults to 'pss'
	SignatureAlgorithm *string `json:"signature_algorithm,omitempty"`
	// Hash algorithm to use (POST URL parameter)
	Urlalgorithm *string `json:"urlalgorithm,omitempty"`
}

// NewTransitVerifyRequest instantiates a new TransitVerifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitVerifyRequest() *TransitVerifyRequest {
	this := TransitVerifyRequest{}
	var algorithm string = "sha2-256"
	this.Algorithm = &algorithm
	var hashAlgorithm string = "sha2-256"
	this.HashAlgorithm = &hashAlgorithm
	var marshalingAlgorithm string = "asn1"
	this.MarshalingAlgorithm = &marshalingAlgorithm
	return &this
}

// NewTransitVerifyRequestWithDefaults instantiates a new TransitVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitVerifyRequestWithDefaults() *TransitVerifyRequest {
	this := TransitVerifyRequest{}
	var algorithm string = "sha2-256"
	this.Algorithm = &algorithm
	var hashAlgorithm string = "sha2-256"
	this.HashAlgorithm = &hashAlgorithm
	var marshalingAlgorithm string = "asn1"
	this.MarshalingAlgorithm = &marshalingAlgorithm
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *TransitVerifyRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitVerifyRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *TransitVerifyRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *TransitVerifyRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *TransitVerifyRequest) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitVerifyRequest) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *TransitVerifyRequest) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *TransitVerifyRequest) SetContext(v string) {
	o.Context = &v
}

// GetHashAlgorithm returns the HashAlgorithm field value if set, zero value otherwise.
func (o *TransitVerifyRequest) GetHashAlgorithm() string {
	if o == nil || o.HashAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.HashAlgorithm
}

// GetHashAlgorithmOk returns a tuple with the HashAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitVerifyRequest) GetHashAlgorithmOk() (*string, bool) {
	if o == nil || o.HashAlgorithm == nil {
		return nil, false
	}
	return o.HashAlgorithm, true
}

// HasHashAlgorithm returns a boolean if a field has been set.
func (o *TransitVerifyRequest) HasHashAlgorithm() bool {
	if o != nil && o.HashAlgorithm != nil {
		return true
	}

	return false
}

// SetHashAlgorithm gets a reference to the given string and assigns it to the HashAlgorithm field.
func (o *TransitVerifyRequest) SetHashAlgorithm(v string) {
	o.HashAlgorithm = &v
}

// GetHmac returns the Hmac field value if set, zero value otherwise.
func (o *TransitVerifyRequest) GetHmac() string {
	if o == nil || o.Hmac == nil {
		var ret string
		return ret
	}
	return *o.Hmac
}

// GetHmacOk returns a tuple with the Hmac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitVerifyRequest) GetHmacOk() (*string, bool) {
	if o == nil || o.Hmac == nil {
		return nil, false
	}
	return o.Hmac, true
}

// HasHmac returns a boolean if a field has been set.
func (o *TransitVerifyRequest) HasHmac() bool {
	if o != nil && o.Hmac != nil {
		return true
	}

	return false
}

// SetHmac gets a reference to the given string and assigns it to the Hmac field.
func (o *TransitVerifyRequest) SetHmac(v string) {
	o.Hmac = &v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *TransitVerifyRequest) GetInput() string {
	if o == nil || o.Input == nil {
		var ret string
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitVerifyRequest) GetInputOk() (*string, bool) {
	if o == nil || o.Input == nil {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *TransitVerifyRequest) HasInput() bool {
	if o != nil && o.Input != nil {
		return true
	}

	return false
}

// SetInput gets a reference to the given string and assigns it to the Input field.
func (o *TransitVerifyRequest) SetInput(v string) {
	o.Input = &v
}

// GetMarshalingAlgorithm returns the MarshalingAlgorithm field value if set, zero value otherwise.
func (o *TransitVerifyRequest) GetMarshalingAlgorithm() string {
	if o == nil || o.MarshalingAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.MarshalingAlgorithm
}

// GetMarshalingAlgorithmOk returns a tuple with the MarshalingAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitVerifyRequest) GetMarshalingAlgorithmOk() (*string, bool) {
	if o == nil || o.MarshalingAlgorithm == nil {
		return nil, false
	}
	return o.MarshalingAlgorithm, true
}

// HasMarshalingAlgorithm returns a boolean if a field has been set.
func (o *TransitVerifyRequest) HasMarshalingAlgorithm() bool {
	if o != nil && o.MarshalingAlgorithm != nil {
		return true
	}

	return false
}

// SetMarshalingAlgorithm gets a reference to the given string and assigns it to the MarshalingAlgorithm field.
func (o *TransitVerifyRequest) SetMarshalingAlgorithm(v string) {
	o.MarshalingAlgorithm = &v
}

// GetPrehashed returns the Prehashed field value if set, zero value otherwise.
func (o *TransitVerifyRequest) GetPrehashed() bool {
	if o == nil || o.Prehashed == nil {
		var ret bool
		return ret
	}
	return *o.Prehashed
}

// GetPrehashedOk returns a tuple with the Prehashed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitVerifyRequest) GetPrehashedOk() (*bool, bool) {
	if o == nil || o.Prehashed == nil {
		return nil, false
	}
	return o.Prehashed, true
}

// HasPrehashed returns a boolean if a field has been set.
func (o *TransitVerifyRequest) HasPrehashed() bool {
	if o != nil && o.Prehashed != nil {
		return true
	}

	return false
}

// SetPrehashed gets a reference to the given bool and assigns it to the Prehashed field.
func (o *TransitVerifyRequest) SetPrehashed(v bool) {
	o.Prehashed = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *TransitVerifyRequest) GetSignature() string {
	if o == nil || o.Signature == nil {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitVerifyRequest) GetSignatureOk() (*string, bool) {
	if o == nil || o.Signature == nil {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *TransitVerifyRequest) HasSignature() bool {
	if o != nil && o.Signature != nil {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *TransitVerifyRequest) SetSignature(v string) {
	o.Signature = &v
}

// GetSignatureAlgorithm returns the SignatureAlgorithm field value if set, zero value otherwise.
func (o *TransitVerifyRequest) GetSignatureAlgorithm() string {
	if o == nil || o.SignatureAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.SignatureAlgorithm
}

// GetSignatureAlgorithmOk returns a tuple with the SignatureAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitVerifyRequest) GetSignatureAlgorithmOk() (*string, bool) {
	if o == nil || o.SignatureAlgorithm == nil {
		return nil, false
	}
	return o.SignatureAlgorithm, true
}

// HasSignatureAlgorithm returns a boolean if a field has been set.
func (o *TransitVerifyRequest) HasSignatureAlgorithm() bool {
	if o != nil && o.SignatureAlgorithm != nil {
		return true
	}

	return false
}

// SetSignatureAlgorithm gets a reference to the given string and assigns it to the SignatureAlgorithm field.
func (o *TransitVerifyRequest) SetSignatureAlgorithm(v string) {
	o.SignatureAlgorithm = &v
}

// GetUrlalgorithm returns the Urlalgorithm field value if set, zero value otherwise.
func (o *TransitVerifyRequest) GetUrlalgorithm() string {
	if o == nil || o.Urlalgorithm == nil {
		var ret string
		return ret
	}
	return *o.Urlalgorithm
}

// GetUrlalgorithmOk returns a tuple with the Urlalgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitVerifyRequest) GetUrlalgorithmOk() (*string, bool) {
	if o == nil || o.Urlalgorithm == nil {
		return nil, false
	}
	return o.Urlalgorithm, true
}

// HasUrlalgorithm returns a boolean if a field has been set.
func (o *TransitVerifyRequest) HasUrlalgorithm() bool {
	if o != nil && o.Urlalgorithm != nil {
		return true
	}

	return false
}

// SetUrlalgorithm gets a reference to the given string and assigns it to the Urlalgorithm field.
func (o *TransitVerifyRequest) SetUrlalgorithm(v string) {
	o.Urlalgorithm = &v
}

func (o TransitVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.HashAlgorithm != nil {
		toSerialize["hash_algorithm"] = o.HashAlgorithm
	}
	if o.Hmac != nil {
		toSerialize["hmac"] = o.Hmac
	}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	if o.MarshalingAlgorithm != nil {
		toSerialize["marshaling_algorithm"] = o.MarshalingAlgorithm
	}
	if o.Prehashed != nil {
		toSerialize["prehashed"] = o.Prehashed
	}
	if o.Signature != nil {
		toSerialize["signature"] = o.Signature
	}
	if o.SignatureAlgorithm != nil {
		toSerialize["signature_algorithm"] = o.SignatureAlgorithm
	}
	if o.Urlalgorithm != nil {
		toSerialize["urlalgorithm"] = o.Urlalgorithm
	}
	return json.Marshal(toSerialize)
}

type NullableTransitVerifyRequest struct {
	value *TransitVerifyRequest
	isSet bool
}

func (v NullableTransitVerifyRequest) Get() *TransitVerifyRequest {
	return v.value
}

func (v *NullableTransitVerifyRequest) Set(val *TransitVerifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitVerifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitVerifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitVerifyRequest(val *TransitVerifyRequest) *NullableTransitVerifyRequest {
	return &NullableTransitVerifyRequest{value: val, isSet: true}
}

func (v NullableTransitVerifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitVerifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// UserpassLoginRequest struct for UserpassLoginRequest
type UserpassLoginRequest struct {
	// Password for this user.
	Password *string `json:"password,omitempty"`
}

// NewUserpassLoginRequest instantiates a new UserpassLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserpassLoginRequest() *UserpassLoginRequest {
	this := UserpassLoginRequest{}
	return &this
}

// NewUserpassLoginRequestWithDefaults instantiates a new UserpassLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserpassLoginRequestWithDefaults() *UserpassLoginRequest {
	this := UserpassLoginRequest{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UserpassLoginRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassLoginRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UserpassLoginRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UserpassLoginRequest) SetPassword(v string) {
	o.Password = &v
}

func (o UserpassLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableUserpassLoginRequest struct {
	value *UserpassLoginRequest
	isSet bool
}

func (v NullableUserpassLoginRequest) Get() *UserpassLoginRequest {
	return v.value
}

func (v *NullableUserpassLoginRequest) Set(val *UserpassLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserpassLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserpassLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserpassLoginRequest(val *UserpassLoginRequest) *NullableUserpassLoginRequest {
	return &NullableUserpassLoginRequest{value: val, isSet: true}
}

func (v NullableUserpassLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserpassLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// UserpassUsersPasswordRequest struct for UserpassUsersPasswordRequest
type UserpassUsersPasswordRequest struct {
	// Password for this user.
	Password *string `json:"password,omitempty"`
}

// NewUserpassUsersPasswordRequest instantiates a new UserpassUsersPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserpassUsersPasswordRequest() *UserpassUsersPasswordRequest {
	this := UserpassUsersPasswordRequest{}
	return &this
}

// NewUserpassUsersPasswordRequestWithDefaults instantiates a new UserpassUsersPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserpassUsersPasswordRequestWithDefaults() *UserpassUsersPasswordRequest {
	this := UserpassUsersPasswordRequest{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UserpassUsersPasswordRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassUsersPasswordRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UserpassUsersPasswordRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UserpassUsersPasswordRequest) SetPassword(v string) {
	o.Password = &v
}

func (o UserpassUsersPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableUserpassUsersPasswordRequest struct {
	value *UserpassUsersPasswordRequest
	isSet bool
}

func (v NullableUserpassUsersPasswordRequest) Get() *UserpassUsersPasswordRequest {
	return v.value
}

func (v *NullableUserpassUsersPasswordRequest) Set(val *UserpassUsersPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserpassUsersPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserpassUsersPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserpassUsersPasswordRequest(val *UserpassUsersPasswordRequest) *NullableUserpassUsersPasswordRequest {
	return &NullableUserpassUsersPasswordRequest{value: val, isSet: true}
}

func (v NullableUserpassUsersPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserpassUsersPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// UserpassUsersPoliciesRequest struct for UserpassUsersPoliciesRequest
type UserpassUsersPoliciesRequest struct {
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
}

// NewUserpassUsersPoliciesRequest instantiates a new UserpassUsersPoliciesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserpassUsersPoliciesRequest() *UserpassUsersPoliciesRequest {
	this := UserpassUsersPoliciesRequest{}
	return &this
}

// NewUserpassUsersPoliciesRequestWithDefaults instantiates a new UserpassUsersPoliciesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserpassUsersPoliciesRequestWithDefaults() *UserpassUsersPoliciesRequest {
	this := UserpassUsersPoliciesRequest{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *UserpassUsersPoliciesRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UserpassUsersPoliciesRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *UserpassUsersPoliciesRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *UserpassUsersPoliciesRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *UserpassUsersPoliciesRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassUsersPoliciesRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *UserpassUsersPoliciesRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *UserpassUsersPoliciesRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

func (o UserpassUsersPoliciesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	return json.Marshal(toSerialize)
}

type NullableUserpassUsersPoliciesRequest struct {
	value *UserpassUsersPoliciesRequest
	isSet bool
}

func (v NullableUserpassUsersPoliciesRequest) Get() *UserpassUsersPoliciesRequest {
	return v.value
}

func (v *NullableUserpassUsersPoliciesRequest) Set(val *UserpassUsersPoliciesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserpassUsersPoliciesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserpassUsersPoliciesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserpassUsersPoliciesRequest(val *UserpassUsersPoliciesRequest) *NullableUserpassUsersPoliciesRequest {
	return &NullableUserpassUsersPoliciesRequest{value: val, isSet: true}
}

func (v NullableUserpassUsersPoliciesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserpassUsersPoliciesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// UserpassUsersRequest struct for UserpassUsersRequest
type UserpassUsersRequest struct {
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs,omitempty"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Password for this user.
	Password *string `json:"password,omitempty"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// The maximum lifetime of the generated token
	TokenMaxTtl *int32 `json:"token_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies,omitempty"`
	// The initial ttl of the token to generate
	TokenTtl *int32 `json:"token_ttl,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewUserpassUsersRequest instantiates a new UserpassUsersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserpassUsersRequest() *UserpassUsersRequest {
	this := UserpassUsersRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewUserpassUsersRequestWithDefaults instantiates a new UserpassUsersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserpassUsersRequestWithDefaults() *UserpassUsersRequest {
	this := UserpassUsersRequest{}
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetBoundCidrs returns the BoundCidrs field value if set, zero value otherwise.
// Deprecated
func (o *UserpassUsersRequest) GetBoundCidrs() []string {
	if o == nil || o.BoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrs
}

// GetBoundCidrsOk returns a tuple with the BoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UserpassUsersRequest) GetBoundCidrsOk() ([]string, bool) {
	if o == nil || o.BoundCidrs == nil {
		return nil, false
	}
	return o.BoundCidrs, true
}

// HasBoundCidrs returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasBoundCidrs() bool {
	if o != nil && o.BoundCidrs != nil {
		return true
	}

	return false
}

// SetBoundCidrs gets a reference to the given []string and assigns it to the BoundCidrs field.
// Deprecated
func (o *UserpassUsersRequest) SetBoundCidrs(v []string) {
	o.BoundCidrs = v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *UserpassUsersRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UserpassUsersRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
// Deprecated
func (o *UserpassUsersRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UserpassUsersRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassUsersRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UserpassUsersRequest) SetPassword(v string) {
	o.Password = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *UserpassUsersRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UserpassUsersRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *UserpassUsersRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *UserpassUsersRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassUsersRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *UserpassUsersRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *UserpassUsersRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassUsersRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *UserpassUsersRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenMaxTtl returns the TokenMaxTtl field value if set, zero value otherwise.
func (o *UserpassUsersRequest) GetTokenMaxTtl() int32 {
	if o == nil || o.TokenMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenMaxTtl
}

// GetTokenMaxTtlOk returns a tuple with the TokenMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassUsersRequest) GetTokenMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenMaxTtl == nil {
		return nil, false
	}
	return o.TokenMaxTtl, true
}

// HasTokenMaxTtl returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasTokenMaxTtl() bool {
	if o != nil && o.TokenMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenMaxTtl gets a reference to the given int32 and assigns it to the TokenMaxTtl field.
func (o *UserpassUsersRequest) SetTokenMaxTtl(v int32) {
	o.TokenMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *UserpassUsersRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassUsersRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *UserpassUsersRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *UserpassUsersRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassUsersRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *UserpassUsersRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *UserpassUsersRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassUsersRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *UserpassUsersRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenPolicies returns the TokenPolicies field value if set, zero value otherwise.
func (o *UserpassUsersRequest) GetTokenPolicies() []string {
	if o == nil || o.TokenPolicies == nil {
		var ret []string
		return ret
	}
	return o.TokenPolicies
}

// GetTokenPoliciesOk returns a tuple with the TokenPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassUsersRequest) GetTokenPoliciesOk() ([]string, bool) {
	if o == nil || o.TokenPolicies == nil {
		return nil, false
	}
	return o.TokenPolicies, true
}

// HasTokenPolicies returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasTokenPolicies() bool {
	if o != nil && o.TokenPolicies != nil {
		return true
	}

	return false
}

// SetTokenPolicies gets a reference to the given []string and assigns it to the TokenPolicies field.
func (o *UserpassUsersRequest) SetTokenPolicies(v []string) {
	o.TokenPolicies = v
}

// GetTokenTtl returns the TokenTtl field value if set, zero value otherwise.
func (o *UserpassUsersRequest) GetTokenTtl() int32 {
	if o == nil || o.TokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenTtl
}

// GetTokenTtlOk returns a tuple with the TokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassUsersRequest) GetTokenTtlOk() (*int32, bool) {
	if o == nil || o.TokenTtl == nil {
		return nil, false
	}
	return o.TokenTtl, true
}

// HasTokenTtl returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasTokenTtl() bool {
	if o != nil && o.TokenTtl != nil {
		return true
	}

	return false
}

// SetTokenTtl gets a reference to the given int32 and assigns it to the TokenTtl field.
func (o *UserpassUsersRequest) SetTokenTtl(v int32) {
	o.TokenTtl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *UserpassUsersRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserpassUsersRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *UserpassUsersRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
// Deprecated
func (o *UserpassUsersRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UserpassUsersRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *UserpassUsersRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
// Deprecated
func (o *UserpassUsersRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o UserpassUsersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BoundCidrs != nil {
		toSerialize["bound_cidrs"] = o.BoundCidrs
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenMaxTtl != nil {
		toSerialize["token_max_ttl"] = o.TokenMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenPolicies != nil {
		toSerialize["token_policies"] = o.TokenPolicies
	}
	if o.TokenTtl != nil {
		toSerialize["token_ttl"] = o.TokenTtl
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableUserpassUsersRequest struct {
	value *UserpassUsersRequest
	isSet bool
}

func (v NullableUserpassUsersRequest) Get() *UserpassUsersRequest {
	return v.value
}

func (v *NullableUserpassUsersRequest) Set(val *UserpassUsersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserpassUsersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserpassUsersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserpassUsersRequest(val *UserpassUsersRequest) *NullableUserpassUsersRequest {
	return &NullableUserpassUsersRequest{value: val, isSet: true}
}

func (v NullableUserpassUsersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserpassUsersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
