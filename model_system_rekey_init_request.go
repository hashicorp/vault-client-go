/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// SystemRekeyInitRequest struct for SystemRekeyInitRequest
type SystemRekeyInitRequest struct {
	// Specifies if using PGP-encrypted keys, whether Vault should also store a plaintext backup of the PGP-encrypted keys.
	Backup *bool `json:"backup,omitempty"`
	// Specifies an array of PGP public keys used to encrypt the output unseal keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as secret_shares.
	PgpKeys []string `json:"pgp_keys,omitempty"`
	// Turns on verification functionality
	RequireVerification *bool `json:"require_verification,omitempty"`
	// Specifies the number of shares to split the unseal key into.
	SecretShares *int32 `json:"secret_shares,omitempty"`
	// Specifies the number of shares required to reconstruct the unseal key. This must be less than or equal secret_shares. If using Vault HSM with auto-unsealing, this value must be the same as secret_shares.
	SecretThreshold *int32 `json:"secret_threshold,omitempty"`
}

// NewSystemRekeyInitRequest instantiates a new SystemRekeyInitRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRekeyInitRequest() *SystemRekeyInitRequest {
	this := SystemRekeyInitRequest{}
	return &this
}

// NewSystemRekeyInitRequestWithDefaults instantiates a new SystemRekeyInitRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRekeyInitRequestWithDefaults() *SystemRekeyInitRequest {
	this := SystemRekeyInitRequest{}
	return &this
}

// GetBackup returns the Backup field value if set, zero value otherwise.
func (o *SystemRekeyInitRequest) GetBackup() bool {
	if o == nil || o.Backup == nil {
		var ret bool
		return ret
	}
	return *o.Backup
}

// GetBackupOk returns a tuple with the Backup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyInitRequest) GetBackupOk() (*bool, bool) {
	if o == nil || o.Backup == nil {
		return nil, false
	}
	return o.Backup, true
}

// HasBackup returns a boolean if a field has been set.
func (o *SystemRekeyInitRequest) HasBackup() bool {
	if o != nil && o.Backup != nil {
		return true
	}

	return false
}

// SetBackup gets a reference to the given bool and assigns it to the Backup field.
func (o *SystemRekeyInitRequest) SetBackup(v bool) {
	o.Backup = &v
}

// GetPgpKeys returns the PgpKeys field value if set, zero value otherwise.
func (o *SystemRekeyInitRequest) GetPgpKeys() []string {
	if o == nil || o.PgpKeys == nil {
		var ret []string
		return ret
	}
	return o.PgpKeys
}

// GetPgpKeysOk returns a tuple with the PgpKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyInitRequest) GetPgpKeysOk() ([]string, bool) {
	if o == nil || o.PgpKeys == nil {
		return nil, false
	}
	return o.PgpKeys, true
}

// HasPgpKeys returns a boolean if a field has been set.
func (o *SystemRekeyInitRequest) HasPgpKeys() bool {
	if o != nil && o.PgpKeys != nil {
		return true
	}

	return false
}

// SetPgpKeys gets a reference to the given []string and assigns it to the PgpKeys field.
func (o *SystemRekeyInitRequest) SetPgpKeys(v []string) {
	o.PgpKeys = v
}

// GetRequireVerification returns the RequireVerification field value if set, zero value otherwise.
func (o *SystemRekeyInitRequest) GetRequireVerification() bool {
	if o == nil || o.RequireVerification == nil {
		var ret bool
		return ret
	}
	return *o.RequireVerification
}

// GetRequireVerificationOk returns a tuple with the RequireVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyInitRequest) GetRequireVerificationOk() (*bool, bool) {
	if o == nil || o.RequireVerification == nil {
		return nil, false
	}
	return o.RequireVerification, true
}

// HasRequireVerification returns a boolean if a field has been set.
func (o *SystemRekeyInitRequest) HasRequireVerification() bool {
	if o != nil && o.RequireVerification != nil {
		return true
	}

	return false
}

// SetRequireVerification gets a reference to the given bool and assigns it to the RequireVerification field.
func (o *SystemRekeyInitRequest) SetRequireVerification(v bool) {
	o.RequireVerification = &v
}

// GetSecretShares returns the SecretShares field value if set, zero value otherwise.
func (o *SystemRekeyInitRequest) GetSecretShares() int32 {
	if o == nil || o.SecretShares == nil {
		var ret int32
		return ret
	}
	return *o.SecretShares
}

// GetSecretSharesOk returns a tuple with the SecretShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyInitRequest) GetSecretSharesOk() (*int32, bool) {
	if o == nil || o.SecretShares == nil {
		return nil, false
	}
	return o.SecretShares, true
}

// HasSecretShares returns a boolean if a field has been set.
func (o *SystemRekeyInitRequest) HasSecretShares() bool {
	if o != nil && o.SecretShares != nil {
		return true
	}

	return false
}

// SetSecretShares gets a reference to the given int32 and assigns it to the SecretShares field.
func (o *SystemRekeyInitRequest) SetSecretShares(v int32) {
	o.SecretShares = &v
}

// GetSecretThreshold returns the SecretThreshold field value if set, zero value otherwise.
func (o *SystemRekeyInitRequest) GetSecretThreshold() int32 {
	if o == nil || o.SecretThreshold == nil {
		var ret int32
		return ret
	}
	return *o.SecretThreshold
}

// GetSecretThresholdOk returns a tuple with the SecretThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRekeyInitRequest) GetSecretThresholdOk() (*int32, bool) {
	if o == nil || o.SecretThreshold == nil {
		return nil, false
	}
	return o.SecretThreshold, true
}

// HasSecretThreshold returns a boolean if a field has been set.
func (o *SystemRekeyInitRequest) HasSecretThreshold() bool {
	if o != nil && o.SecretThreshold != nil {
		return true
	}

	return false
}

// SetSecretThreshold gets a reference to the given int32 and assigns it to the SecretThreshold field.
func (o *SystemRekeyInitRequest) SetSecretThreshold(v int32) {
	o.SecretThreshold = &v
}

func (o SystemRekeyInitRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Backup != nil {
		toSerialize["backup"] = o.Backup
	}
	if o.PgpKeys != nil {
		toSerialize["pgp_keys"] = o.PgpKeys
	}
	if o.RequireVerification != nil {
		toSerialize["require_verification"] = o.RequireVerification
	}
	if o.SecretShares != nil {
		toSerialize["secret_shares"] = o.SecretShares
	}
	if o.SecretThreshold != nil {
		toSerialize["secret_threshold"] = o.SecretThreshold
	}
	return json.Marshal(toSerialize)
}

type NullableSystemRekeyInitRequest struct {
	value *SystemRekeyInitRequest
	isSet bool
}

func (v NullableSystemRekeyInitRequest) Get() *SystemRekeyInitRequest {
	return v.value
}

func (v *NullableSystemRekeyInitRequest) Set(val *SystemRekeyInitRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRekeyInitRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRekeyInitRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRekeyInitRequest(val *SystemRekeyInitRequest) *NullableSystemRekeyInitRequest {
	return &NullableSystemRekeyInitRequest{value: val, isSet: true}
}

func (v NullableSystemRekeyInitRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRekeyInitRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


