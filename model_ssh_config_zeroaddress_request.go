/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// SshConfigZeroaddressRequest struct for SshConfigZeroaddressRequest
type SshConfigZeroaddressRequest struct {
	// [Required] Comma separated list of role names which allows credentials to be requested for any IP address. CIDR blocks previously registered under these roles will be ignored.
	Roles []string `json:"roles,omitempty"`
}

// NewSshConfigZeroaddressRequest instantiates a new SshConfigZeroaddressRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshConfigZeroaddressRequest() *SshConfigZeroaddressRequest {
	this := SshConfigZeroaddressRequest{}
	return &this
}

// NewSshConfigZeroaddressRequestWithDefaults instantiates a new SshConfigZeroaddressRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshConfigZeroaddressRequestWithDefaults() *SshConfigZeroaddressRequest {
	this := SshConfigZeroaddressRequest{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *SshConfigZeroaddressRequest) GetRoles() []string {
	if o == nil || o.Roles == nil {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshConfigZeroaddressRequest) GetRolesOk() ([]string, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *SshConfigZeroaddressRequest) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *SshConfigZeroaddressRequest) SetRoles(v []string) {
	o.Roles = v
}

func (o SshConfigZeroaddressRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableSshConfigZeroaddressRequest struct {
	value *SshConfigZeroaddressRequest
	isSet bool
}

func (v NullableSshConfigZeroaddressRequest) Get() *SshConfigZeroaddressRequest {
	return v.value
}

func (v *NullableSshConfigZeroaddressRequest) Set(val *SshConfigZeroaddressRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshConfigZeroaddressRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshConfigZeroaddressRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshConfigZeroaddressRequest(val *SshConfigZeroaddressRequest) *NullableSshConfigZeroaddressRequest {
	return &NullableSshConfigZeroaddressRequest{value: val, isSet: true}
}

func (v NullableSshConfigZeroaddressRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshConfigZeroaddressRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


