/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// TransitKeysTrimRequest struct for TransitKeysTrimRequest
type TransitKeysTrimRequest struct {
	// The minimum available version for the key ring. All versions before this version will be permanently deleted. This value can at most be equal to the lesser of 'min_decryption_version' and 'min_encryption_version'. This is not allowed to be set when either 'min_encryption_version' or 'min_decryption_version' is set to zero.
	MinAvailableVersion *int32 `json:"min_available_version,omitempty"`
}

// NewTransitKeysTrimRequest instantiates a new TransitKeysTrimRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitKeysTrimRequest() *TransitKeysTrimRequest {
	this := TransitKeysTrimRequest{}
	return &this
}

// NewTransitKeysTrimRequestWithDefaults instantiates a new TransitKeysTrimRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitKeysTrimRequestWithDefaults() *TransitKeysTrimRequest {
	this := TransitKeysTrimRequest{}
	return &this
}

// GetMinAvailableVersion returns the MinAvailableVersion field value if set, zero value otherwise.
func (o *TransitKeysTrimRequest) GetMinAvailableVersion() int32 {
	if o == nil || o.MinAvailableVersion == nil {
		var ret int32
		return ret
	}
	return *o.MinAvailableVersion
}

// GetMinAvailableVersionOk returns a tuple with the MinAvailableVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitKeysTrimRequest) GetMinAvailableVersionOk() (*int32, bool) {
	if o == nil || o.MinAvailableVersion == nil {
		return nil, false
	}
	return o.MinAvailableVersion, true
}

// HasMinAvailableVersion returns a boolean if a field has been set.
func (o *TransitKeysTrimRequest) HasMinAvailableVersion() bool {
	if o != nil && o.MinAvailableVersion != nil {
		return true
	}

	return false
}

// SetMinAvailableVersion gets a reference to the given int32 and assigns it to the MinAvailableVersion field.
func (o *TransitKeysTrimRequest) SetMinAvailableVersion(v int32) {
	o.MinAvailableVersion = &v
}

func (o TransitKeysTrimRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MinAvailableVersion != nil {
		toSerialize["min_available_version"] = o.MinAvailableVersion
	}
	return json.Marshal(toSerialize)
}

type NullableTransitKeysTrimRequest struct {
	value *TransitKeysTrimRequest
	isSet bool
}

func (v NullableTransitKeysTrimRequest) Get() *TransitKeysTrimRequest {
	return v.value
}

func (v *NullableTransitKeysTrimRequest) Set(val *TransitKeysTrimRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitKeysTrimRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitKeysTrimRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitKeysTrimRequest(val *TransitKeysTrimRequest) *NullableTransitKeysTrimRequest {
	return &NullableTransitKeysTrimRequest{value: val, isSet: true}
}

func (v NullableTransitKeysTrimRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitKeysTrimRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


