/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// ApproleRoleSecretIdAccessorLookupRequest struct for ApproleRoleSecretIdAccessorLookupRequest
type ApproleRoleSecretIdAccessorLookupRequest struct {
	// Accessor of the SecretID
	SecretIdAccessor *string `json:"secret_id_accessor,omitempty"`
}

// NewApproleRoleSecretIdAccessorLookupRequest instantiates a new ApproleRoleSecretIdAccessorLookupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleSecretIdAccessorLookupRequest() *ApproleRoleSecretIdAccessorLookupRequest {
	this := ApproleRoleSecretIdAccessorLookupRequest{}
	return &this
}

// NewApproleRoleSecretIdAccessorLookupRequestWithDefaults instantiates a new ApproleRoleSecretIdAccessorLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleSecretIdAccessorLookupRequestWithDefaults() *ApproleRoleSecretIdAccessorLookupRequest {
	this := ApproleRoleSecretIdAccessorLookupRequest{}
	return &this
}

// GetSecretIdAccessor returns the SecretIdAccessor field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdAccessorLookupRequest) GetSecretIdAccessor() string {
	if o == nil || o.SecretIdAccessor == nil {
		var ret string
		return ret
	}
	return *o.SecretIdAccessor
}

// GetSecretIdAccessorOk returns a tuple with the SecretIdAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdAccessorLookupRequest) GetSecretIdAccessorOk() (*string, bool) {
	if o == nil || o.SecretIdAccessor == nil {
		return nil, false
	}
	return o.SecretIdAccessor, true
}

// HasSecretIdAccessor returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdAccessorLookupRequest) HasSecretIdAccessor() bool {
	if o != nil && o.SecretIdAccessor != nil {
		return true
	}

	return false
}

// SetSecretIdAccessor gets a reference to the given string and assigns it to the SecretIdAccessor field.
func (o *ApproleRoleSecretIdAccessorLookupRequest) SetSecretIdAccessor(v string) {
	o.SecretIdAccessor = &v
}

func (o ApproleRoleSecretIdAccessorLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretIdAccessor != nil {
		toSerialize["secret_id_accessor"] = o.SecretIdAccessor
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleSecretIdAccessorLookupRequest struct {
	value *ApproleRoleSecretIdAccessorLookupRequest
	isSet bool
}

func (v NullableApproleRoleSecretIdAccessorLookupRequest) Get() *ApproleRoleSecretIdAccessorLookupRequest {
	return v.value
}

func (v *NullableApproleRoleSecretIdAccessorLookupRequest) Set(val *ApproleRoleSecretIdAccessorLookupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleSecretIdAccessorLookupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleSecretIdAccessorLookupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleSecretIdAccessorLookupRequest(val *ApproleRoleSecretIdAccessorLookupRequest) *NullableApproleRoleSecretIdAccessorLookupRequest {
	return &NullableApproleRoleSecretIdAccessorLookupRequest{value: val, isSet: true}
}

func (v NullableApproleRoleSecretIdAccessorLookupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleSecretIdAccessorLookupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


