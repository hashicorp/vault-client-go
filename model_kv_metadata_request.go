/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// KvMetadataRequest struct for KvMetadataRequest
type KvMetadataRequest struct {
	// If true the key will require the cas parameter to be set on all write requests. If false, the backend’s configuration will be used.
	CasRequired *bool `json:"cas_required,omitempty"`
	// User-provided key-value pairs that are used to describe arbitrary and version-agnostic information about a secret.
	CustomMetadata map[string]interface{} `json:"custom_metadata,omitempty"`
	// The length of time before a version is deleted. If not set, the backend's configured delete_version_after is used. Cannot be greater than the backend's delete_version_after. A zero duration clears the current setting. A negative duration will cause an error.
	DeleteVersionAfter *int32 `json:"delete_version_after,omitempty"`
	// The number of versions to keep. If not set, the backend’s configured max version is used.
	MaxVersions *int32 `json:"max_versions,omitempty"`
}

// NewKvMetadataRequest instantiates a new KvMetadataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKvMetadataRequest() *KvMetadataRequest {
	this := KvMetadataRequest{}
	return &this
}

// NewKvMetadataRequestWithDefaults instantiates a new KvMetadataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKvMetadataRequestWithDefaults() *KvMetadataRequest {
	this := KvMetadataRequest{}
	return &this
}

// GetCasRequired returns the CasRequired field value if set, zero value otherwise.
func (o *KvMetadataRequest) GetCasRequired() bool {
	if o == nil || o.CasRequired == nil {
		var ret bool
		return ret
	}
	return *o.CasRequired
}

// GetCasRequiredOk returns a tuple with the CasRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvMetadataRequest) GetCasRequiredOk() (*bool, bool) {
	if o == nil || o.CasRequired == nil {
		return nil, false
	}
	return o.CasRequired, true
}

// HasCasRequired returns a boolean if a field has been set.
func (o *KvMetadataRequest) HasCasRequired() bool {
	if o != nil && o.CasRequired != nil {
		return true
	}

	return false
}

// SetCasRequired gets a reference to the given bool and assigns it to the CasRequired field.
func (o *KvMetadataRequest) SetCasRequired(v bool) {
	o.CasRequired = &v
}

// GetCustomMetadata returns the CustomMetadata field value if set, zero value otherwise.
func (o *KvMetadataRequest) GetCustomMetadata() map[string]interface{} {
	if o == nil || o.CustomMetadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomMetadata
}

// GetCustomMetadataOk returns a tuple with the CustomMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvMetadataRequest) GetCustomMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomMetadata == nil {
		return nil, false
	}
	return o.CustomMetadata, true
}

// HasCustomMetadata returns a boolean if a field has been set.
func (o *KvMetadataRequest) HasCustomMetadata() bool {
	if o != nil && o.CustomMetadata != nil {
		return true
	}

	return false
}

// SetCustomMetadata gets a reference to the given map[string]interface{} and assigns it to the CustomMetadata field.
func (o *KvMetadataRequest) SetCustomMetadata(v map[string]interface{}) {
	o.CustomMetadata = v
}

// GetDeleteVersionAfter returns the DeleteVersionAfter field value if set, zero value otherwise.
func (o *KvMetadataRequest) GetDeleteVersionAfter() int32 {
	if o == nil || o.DeleteVersionAfter == nil {
		var ret int32
		return ret
	}
	return *o.DeleteVersionAfter
}

// GetDeleteVersionAfterOk returns a tuple with the DeleteVersionAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvMetadataRequest) GetDeleteVersionAfterOk() (*int32, bool) {
	if o == nil || o.DeleteVersionAfter == nil {
		return nil, false
	}
	return o.DeleteVersionAfter, true
}

// HasDeleteVersionAfter returns a boolean if a field has been set.
func (o *KvMetadataRequest) HasDeleteVersionAfter() bool {
	if o != nil && o.DeleteVersionAfter != nil {
		return true
	}

	return false
}

// SetDeleteVersionAfter gets a reference to the given int32 and assigns it to the DeleteVersionAfter field.
func (o *KvMetadataRequest) SetDeleteVersionAfter(v int32) {
	o.DeleteVersionAfter = &v
}

// GetMaxVersions returns the MaxVersions field value if set, zero value otherwise.
func (o *KvMetadataRequest) GetMaxVersions() int32 {
	if o == nil || o.MaxVersions == nil {
		var ret int32
		return ret
	}
	return *o.MaxVersions
}

// GetMaxVersionsOk returns a tuple with the MaxVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvMetadataRequest) GetMaxVersionsOk() (*int32, bool) {
	if o == nil || o.MaxVersions == nil {
		return nil, false
	}
	return o.MaxVersions, true
}

// HasMaxVersions returns a boolean if a field has been set.
func (o *KvMetadataRequest) HasMaxVersions() bool {
	if o != nil && o.MaxVersions != nil {
		return true
	}

	return false
}

// SetMaxVersions gets a reference to the given int32 and assigns it to the MaxVersions field.
func (o *KvMetadataRequest) SetMaxVersions(v int32) {
	o.MaxVersions = &v
}

func (o KvMetadataRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CasRequired != nil {
		toSerialize["cas_required"] = o.CasRequired
	}
	if o.CustomMetadata != nil {
		toSerialize["custom_metadata"] = o.CustomMetadata
	}
	if o.DeleteVersionAfter != nil {
		toSerialize["delete_version_after"] = o.DeleteVersionAfter
	}
	if o.MaxVersions != nil {
		toSerialize["max_versions"] = o.MaxVersions
	}
	return json.Marshal(toSerialize)
}

type NullableKvMetadataRequest struct {
	value *KvMetadataRequest
	isSet bool
}

func (v NullableKvMetadataRequest) Get() *KvMetadataRequest {
	return v.value
}

func (v *NullableKvMetadataRequest) Set(val *KvMetadataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKvMetadataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKvMetadataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKvMetadataRequest(val *KvMetadataRequest) *NullableKvMetadataRequest {
	return &NullableKvMetadataRequest{value: val, isSet: true}
}

func (v NullableKvMetadataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKvMetadataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


