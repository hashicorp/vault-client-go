/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// RabbitmqConfigConnectionRequest struct for RabbitmqConfigConnectionRequest
type RabbitmqConfigConnectionRequest struct {
	// RabbitMQ Management URI
	ConnectionUri *string `json:"connection_uri,omitempty"`
	// Password of the provided RabbitMQ management user
	Password *string `json:"password,omitempty"`
	// Name of the password policy to use to generate passwords for dynamic credentials.
	PasswordPolicy *string `json:"password_policy,omitempty"`
	// Username of a RabbitMQ management administrator
	Username *string `json:"username,omitempty"`
	// Template describing how dynamic usernames are generated.
	UsernameTemplate *string `json:"username_template,omitempty"`
	// If set, connection_uri is verified by actually connecting to the RabbitMQ management API
	VerifyConnection *bool `json:"verify_connection,omitempty"`
}

// NewRabbitmqConfigConnectionRequest instantiates a new RabbitmqConfigConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRabbitmqConfigConnectionRequest() *RabbitmqConfigConnectionRequest {
	this := RabbitmqConfigConnectionRequest{}
	var verifyConnection bool = true
	this.VerifyConnection = &verifyConnection
	return &this
}

// NewRabbitmqConfigConnectionRequestWithDefaults instantiates a new RabbitmqConfigConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRabbitmqConfigConnectionRequestWithDefaults() *RabbitmqConfigConnectionRequest {
	this := RabbitmqConfigConnectionRequest{}
	var verifyConnection bool = true
	this.VerifyConnection = &verifyConnection
	return &this
}

// GetConnectionUri returns the ConnectionUri field value if set, zero value otherwise.
func (o *RabbitmqConfigConnectionRequest) GetConnectionUri() string {
	if o == nil || o.ConnectionUri == nil {
		var ret string
		return ret
	}
	return *o.ConnectionUri
}

// GetConnectionUriOk returns a tuple with the ConnectionUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigConnectionRequest) GetConnectionUriOk() (*string, bool) {
	if o == nil || o.ConnectionUri == nil {
		return nil, false
	}
	return o.ConnectionUri, true
}

// HasConnectionUri returns a boolean if a field has been set.
func (o *RabbitmqConfigConnectionRequest) HasConnectionUri() bool {
	if o != nil && o.ConnectionUri != nil {
		return true
	}

	return false
}

// SetConnectionUri gets a reference to the given string and assigns it to the ConnectionUri field.
func (o *RabbitmqConfigConnectionRequest) SetConnectionUri(v string) {
	o.ConnectionUri = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *RabbitmqConfigConnectionRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigConnectionRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *RabbitmqConfigConnectionRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *RabbitmqConfigConnectionRequest) SetPassword(v string) {
	o.Password = &v
}

// GetPasswordPolicy returns the PasswordPolicy field value if set, zero value otherwise.
func (o *RabbitmqConfigConnectionRequest) GetPasswordPolicy() string {
	if o == nil || o.PasswordPolicy == nil {
		var ret string
		return ret
	}
	return *o.PasswordPolicy
}

// GetPasswordPolicyOk returns a tuple with the PasswordPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigConnectionRequest) GetPasswordPolicyOk() (*string, bool) {
	if o == nil || o.PasswordPolicy == nil {
		return nil, false
	}
	return o.PasswordPolicy, true
}

// HasPasswordPolicy returns a boolean if a field has been set.
func (o *RabbitmqConfigConnectionRequest) HasPasswordPolicy() bool {
	if o != nil && o.PasswordPolicy != nil {
		return true
	}

	return false
}

// SetPasswordPolicy gets a reference to the given string and assigns it to the PasswordPolicy field.
func (o *RabbitmqConfigConnectionRequest) SetPasswordPolicy(v string) {
	o.PasswordPolicy = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *RabbitmqConfigConnectionRequest) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigConnectionRequest) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *RabbitmqConfigConnectionRequest) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *RabbitmqConfigConnectionRequest) SetUsername(v string) {
	o.Username = &v
}

// GetUsernameTemplate returns the UsernameTemplate field value if set, zero value otherwise.
func (o *RabbitmqConfigConnectionRequest) GetUsernameTemplate() string {
	if o == nil || o.UsernameTemplate == nil {
		var ret string
		return ret
	}
	return *o.UsernameTemplate
}

// GetUsernameTemplateOk returns a tuple with the UsernameTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigConnectionRequest) GetUsernameTemplateOk() (*string, bool) {
	if o == nil || o.UsernameTemplate == nil {
		return nil, false
	}
	return o.UsernameTemplate, true
}

// HasUsernameTemplate returns a boolean if a field has been set.
func (o *RabbitmqConfigConnectionRequest) HasUsernameTemplate() bool {
	if o != nil && o.UsernameTemplate != nil {
		return true
	}

	return false
}

// SetUsernameTemplate gets a reference to the given string and assigns it to the UsernameTemplate field.
func (o *RabbitmqConfigConnectionRequest) SetUsernameTemplate(v string) {
	o.UsernameTemplate = &v
}

// GetVerifyConnection returns the VerifyConnection field value if set, zero value otherwise.
func (o *RabbitmqConfigConnectionRequest) GetVerifyConnection() bool {
	if o == nil || o.VerifyConnection == nil {
		var ret bool
		return ret
	}
	return *o.VerifyConnection
}

// GetVerifyConnectionOk returns a tuple with the VerifyConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqConfigConnectionRequest) GetVerifyConnectionOk() (*bool, bool) {
	if o == nil || o.VerifyConnection == nil {
		return nil, false
	}
	return o.VerifyConnection, true
}

// HasVerifyConnection returns a boolean if a field has been set.
func (o *RabbitmqConfigConnectionRequest) HasVerifyConnection() bool {
	if o != nil && o.VerifyConnection != nil {
		return true
	}

	return false
}

// SetVerifyConnection gets a reference to the given bool and assigns it to the VerifyConnection field.
func (o *RabbitmqConfigConnectionRequest) SetVerifyConnection(v bool) {
	o.VerifyConnection = &v
}

func (o RabbitmqConfigConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionUri != nil {
		toSerialize["connection_uri"] = o.ConnectionUri
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.PasswordPolicy != nil {
		toSerialize["password_policy"] = o.PasswordPolicy
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.UsernameTemplate != nil {
		toSerialize["username_template"] = o.UsernameTemplate
	}
	if o.VerifyConnection != nil {
		toSerialize["verify_connection"] = o.VerifyConnection
	}
	return json.Marshal(toSerialize)
}

type NullableRabbitmqConfigConnectionRequest struct {
	value *RabbitmqConfigConnectionRequest
	isSet bool
}

func (v NullableRabbitmqConfigConnectionRequest) Get() *RabbitmqConfigConnectionRequest {
	return v.value
}

func (v *NullableRabbitmqConfigConnectionRequest) Set(val *RabbitmqConfigConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRabbitmqConfigConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRabbitmqConfigConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRabbitmqConfigConnectionRequest(val *RabbitmqConfigConnectionRequest) *NullableRabbitmqConfigConnectionRequest {
	return &NullableRabbitmqConfigConnectionRequest{value: val, isSet: true}
}

func (v NullableRabbitmqConfigConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRabbitmqConfigConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


