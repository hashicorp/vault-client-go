/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// RabbitmqRolesRequest struct for RabbitmqRolesRequest
type RabbitmqRolesRequest struct {
	// Comma-separated list of tags for this role.
	Tags *string `json:"tags,omitempty"`
	// A nested map of virtual hosts and exchanges to topic permissions.
	VhostTopics *string `json:"vhost_topics,omitempty"`
	// A map of virtual hosts to permissions.
	Vhosts *string `json:"vhosts,omitempty"`
}

// NewRabbitmqRolesRequest instantiates a new RabbitmqRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRabbitmqRolesRequest() *RabbitmqRolesRequest {
	this := RabbitmqRolesRequest{}
	return &this
}

// NewRabbitmqRolesRequestWithDefaults instantiates a new RabbitmqRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRabbitmqRolesRequestWithDefaults() *RabbitmqRolesRequest {
	this := RabbitmqRolesRequest{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *RabbitmqRolesRequest) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqRolesRequest) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *RabbitmqRolesRequest) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *RabbitmqRolesRequest) SetTags(v string) {
	o.Tags = &v
}

// GetVhostTopics returns the VhostTopics field value if set, zero value otherwise.
func (o *RabbitmqRolesRequest) GetVhostTopics() string {
	if o == nil || o.VhostTopics == nil {
		var ret string
		return ret
	}
	return *o.VhostTopics
}

// GetVhostTopicsOk returns a tuple with the VhostTopics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqRolesRequest) GetVhostTopicsOk() (*string, bool) {
	if o == nil || o.VhostTopics == nil {
		return nil, false
	}
	return o.VhostTopics, true
}

// HasVhostTopics returns a boolean if a field has been set.
func (o *RabbitmqRolesRequest) HasVhostTopics() bool {
	if o != nil && o.VhostTopics != nil {
		return true
	}

	return false
}

// SetVhostTopics gets a reference to the given string and assigns it to the VhostTopics field.
func (o *RabbitmqRolesRequest) SetVhostTopics(v string) {
	o.VhostTopics = &v
}

// GetVhosts returns the Vhosts field value if set, zero value otherwise.
func (o *RabbitmqRolesRequest) GetVhosts() string {
	if o == nil || o.Vhosts == nil {
		var ret string
		return ret
	}
	return *o.Vhosts
}

// GetVhostsOk returns a tuple with the Vhosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RabbitmqRolesRequest) GetVhostsOk() (*string, bool) {
	if o == nil || o.Vhosts == nil {
		return nil, false
	}
	return o.Vhosts, true
}

// HasVhosts returns a boolean if a field has been set.
func (o *RabbitmqRolesRequest) HasVhosts() bool {
	if o != nil && o.Vhosts != nil {
		return true
	}

	return false
}

// SetVhosts gets a reference to the given string and assigns it to the Vhosts field.
func (o *RabbitmqRolesRequest) SetVhosts(v string) {
	o.Vhosts = &v
}

func (o RabbitmqRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.VhostTopics != nil {
		toSerialize["vhost_topics"] = o.VhostTopics
	}
	if o.Vhosts != nil {
		toSerialize["vhosts"] = o.Vhosts
	}
	return json.Marshal(toSerialize)
}

type NullableRabbitmqRolesRequest struct {
	value *RabbitmqRolesRequest
	isSet bool
}

func (v NullableRabbitmqRolesRequest) Get() *RabbitmqRolesRequest {
	return v.value
}

func (v *NullableRabbitmqRolesRequest) Set(val *RabbitmqRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRabbitmqRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRabbitmqRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRabbitmqRolesRequest(val *RabbitmqRolesRequest) *NullableRabbitmqRolesRequest {
	return &NullableRabbitmqRolesRequest{value: val, isSet: true}
}

func (v NullableRabbitmqRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRabbitmqRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


