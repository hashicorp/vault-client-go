/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// KvDestroyRequest struct for KvDestroyRequest
type KvDestroyRequest struct {
	// The versions to destroy. Their data will be permanently deleted.
	Versions []int32 `json:"versions,omitempty"`
}

// NewKvDestroyRequest instantiates a new KvDestroyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKvDestroyRequest() *KvDestroyRequest {
	this := KvDestroyRequest{}
	return &this
}

// NewKvDestroyRequestWithDefaults instantiates a new KvDestroyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKvDestroyRequestWithDefaults() *KvDestroyRequest {
	this := KvDestroyRequest{}
	return &this
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *KvDestroyRequest) GetVersions() []int32 {
	if o == nil || o.Versions == nil {
		var ret []int32
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KvDestroyRequest) GetVersionsOk() ([]int32, bool) {
	if o == nil || o.Versions == nil {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *KvDestroyRequest) HasVersions() bool {
	if o != nil && o.Versions != nil {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []int32 and assigns it to the Versions field.
func (o *KvDestroyRequest) SetVersions(v []int32) {
	o.Versions = v
}

func (o KvDestroyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Versions != nil {
		toSerialize["versions"] = o.Versions
	}
	return json.Marshal(toSerialize)
}

type NullableKvDestroyRequest struct {
	value *KvDestroyRequest
	isSet bool
}

func (v NullableKvDestroyRequest) Get() *KvDestroyRequest {
	return v.value
}

func (v *NullableKvDestroyRequest) Set(val *KvDestroyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKvDestroyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKvDestroyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKvDestroyRequest(val *KvDestroyRequest) *NullableKvDestroyRequest {
	return &NullableKvDestroyRequest{value: val, isSet: true}
}

func (v NullableKvDestroyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKvDestroyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


