/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// ApproleRoleSecretIdTtlRequest struct for ApproleRoleSecretIdTtlRequest
type ApproleRoleSecretIdTtlRequest struct {
	// Duration in seconds after which the issued SecretID should expire. Defaults to 0, meaning no expiration.
	SecretIdTtl *int32 `json:"secret_id_ttl,omitempty"`
}

// NewApproleRoleSecretIdTtlRequest instantiates a new ApproleRoleSecretIdTtlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleSecretIdTtlRequest() *ApproleRoleSecretIdTtlRequest {
	this := ApproleRoleSecretIdTtlRequest{}
	return &this
}

// NewApproleRoleSecretIdTtlRequestWithDefaults instantiates a new ApproleRoleSecretIdTtlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleSecretIdTtlRequestWithDefaults() *ApproleRoleSecretIdTtlRequest {
	this := ApproleRoleSecretIdTtlRequest{}
	return &this
}

// GetSecretIdTtl returns the SecretIdTtl field value if set, zero value otherwise.
func (o *ApproleRoleSecretIdTtlRequest) GetSecretIdTtl() int32 {
	if o == nil || o.SecretIdTtl == nil {
		var ret int32
		return ret
	}
	return *o.SecretIdTtl
}

// GetSecretIdTtlOk returns a tuple with the SecretIdTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleSecretIdTtlRequest) GetSecretIdTtlOk() (*int32, bool) {
	if o == nil || o.SecretIdTtl == nil {
		return nil, false
	}
	return o.SecretIdTtl, true
}

// HasSecretIdTtl returns a boolean if a field has been set.
func (o *ApproleRoleSecretIdTtlRequest) HasSecretIdTtl() bool {
	if o != nil && o.SecretIdTtl != nil {
		return true
	}

	return false
}

// SetSecretIdTtl gets a reference to the given int32 and assigns it to the SecretIdTtl field.
func (o *ApproleRoleSecretIdTtlRequest) SetSecretIdTtl(v int32) {
	o.SecretIdTtl = &v
}

func (o ApproleRoleSecretIdTtlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretIdTtl != nil {
		toSerialize["secret_id_ttl"] = o.SecretIdTtl
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleSecretIdTtlRequest struct {
	value *ApproleRoleSecretIdTtlRequest
	isSet bool
}

func (v NullableApproleRoleSecretIdTtlRequest) Get() *ApproleRoleSecretIdTtlRequest {
	return v.value
}

func (v *NullableApproleRoleSecretIdTtlRequest) Set(val *ApproleRoleSecretIdTtlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleSecretIdTtlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleSecretIdTtlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleSecretIdTtlRequest(val *ApproleRoleSecretIdTtlRequest) *NullableApproleRoleSecretIdTtlRequest {
	return &NullableApproleRoleSecretIdTtlRequest{value: val, isSet: true}
}

func (v NullableApproleRoleSecretIdTtlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleSecretIdTtlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


