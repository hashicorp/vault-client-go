/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// TransitRestoreRequest struct for TransitRestoreRequest
type TransitRestoreRequest struct {
	// Backed up key data to be restored. This should be the output from the 'backup/' endpoint.
	Backup *string `json:"backup,omitempty"`
	// If set and a key by the given name exists, force the restore operation and override the key.
	Force *bool `json:"force,omitempty"`
	// If set, this will be the name of the restored key.
	Name *string `json:"name,omitempty"`
}

// NewTransitRestoreRequest instantiates a new TransitRestoreRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitRestoreRequest() *TransitRestoreRequest {
	this := TransitRestoreRequest{}
	var force bool = false
	this.Force = &force
	return &this
}

// NewTransitRestoreRequestWithDefaults instantiates a new TransitRestoreRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitRestoreRequestWithDefaults() *TransitRestoreRequest {
	this := TransitRestoreRequest{}
	var force bool = false
	this.Force = &force
	return &this
}

// GetBackup returns the Backup field value if set, zero value otherwise.
func (o *TransitRestoreRequest) GetBackup() string {
	if o == nil || o.Backup == nil {
		var ret string
		return ret
	}
	return *o.Backup
}

// GetBackupOk returns a tuple with the Backup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRestoreRequest) GetBackupOk() (*string, bool) {
	if o == nil || o.Backup == nil {
		return nil, false
	}
	return o.Backup, true
}

// HasBackup returns a boolean if a field has been set.
func (o *TransitRestoreRequest) HasBackup() bool {
	if o != nil && o.Backup != nil {
		return true
	}

	return false
}

// SetBackup gets a reference to the given string and assigns it to the Backup field.
func (o *TransitRestoreRequest) SetBackup(v string) {
	o.Backup = &v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *TransitRestoreRequest) GetForce() bool {
	if o == nil || o.Force == nil {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRestoreRequest) GetForceOk() (*bool, bool) {
	if o == nil || o.Force == nil {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *TransitRestoreRequest) HasForce() bool {
	if o != nil && o.Force != nil {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *TransitRestoreRequest) SetForce(v bool) {
	o.Force = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TransitRestoreRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitRestoreRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TransitRestoreRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TransitRestoreRequest) SetName(v string) {
	o.Name = &v
}

func (o TransitRestoreRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Backup != nil {
		toSerialize["backup"] = o.Backup
	}
	if o.Force != nil {
		toSerialize["force"] = o.Force
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableTransitRestoreRequest struct {
	value *TransitRestoreRequest
	isSet bool
}

func (v NullableTransitRestoreRequest) Get() *TransitRestoreRequest {
	return v.value
}

func (v *NullableTransitRestoreRequest) Set(val *TransitRestoreRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitRestoreRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitRestoreRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitRestoreRequest(val *TransitRestoreRequest) *NullableTransitRestoreRequest {
	return &NullableTransitRestoreRequest{value: val, isSet: true}
}

func (v NullableTransitRestoreRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitRestoreRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


