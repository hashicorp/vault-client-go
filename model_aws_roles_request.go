/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// AwsRolesRequest struct for AwsRolesRequest
type AwsRolesRequest struct {
	// Use role_arns or policy_arns instead.
	// Deprecated
	Arn *string `json:"arn,omitempty"`
	// Type of credential to retrieve. Must be one of assumed_role, iam_user, or federation_token
	CredentialType *string `json:"credential_type,omitempty"`
	// Default TTL for assumed_role and federation_token credential types when no TTL is explicitly requested with the credentials
	DefaultStsTtl *int32 `json:"default_sts_ttl,omitempty"`
	// Names of IAM groups that generated IAM users will be added to. For a credential type of assumed_role or federation_token, the policies sent to the corresponding AWS call (sts:AssumeRole or sts:GetFederation) will be the policies from each group in iam_groups combined with the policy_document and policy_arns parameters.
	IamGroups []string `json:"iam_groups,omitempty"`
	// IAM tags to be set for any users created by this role. These must be presented as Key-Value pairs. This can be represented as a map or a list of equal sign delimited key pairs.
	IamTags map[string]interface{} `json:"iam_tags,omitempty"`
	// Max allowed TTL for assumed_role and federation_token credential types
	MaxStsTtl *int32 `json:"max_sts_ttl,omitempty"`
	// ARN of an IAM policy to attach as a permissions boundary on IAM user credentials; only valid when credential_type isiam_user
	PermissionsBoundaryArn *string `json:"permissions_boundary_arn,omitempty"`
	// Use policy_document instead.
	// Deprecated
	Policy *string `json:"policy,omitempty"`
	// ARNs of AWS policies. Behavior varies by credential_type. When credential_type is iam_user, then it will attach the specified policies to the generated IAM user. When credential_type is assumed_role or federation_token, the policies will be passed as the PolicyArns parameter, acting as a filter on permissions available.
	PolicyArns []string `json:"policy_arns,omitempty"`
	// JSON-encoded IAM policy document. Behavior varies by credential_type. When credential_type is iam_user, then it will attach the contents of the policy_document to the IAM user generated. When credential_type is assumed_role or federation_token, this will be passed in as the Policy parameter to the AssumeRole or GetFederationToken API call, acting as a filter on permissions available.
	PolicyDocument *string `json:"policy_document,omitempty"`
	// ARNs of AWS roles allowed to be assumed. Only valid when credential_type is assumed_role
	RoleArns []string `json:"role_arns,omitempty"`
	// Path for IAM User. Only valid when credential_type is iam_user
	UserPath *string `json:"user_path,omitempty"`
}

// NewAwsRolesRequest instantiates a new AwsRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsRolesRequest() *AwsRolesRequest {
	this := AwsRolesRequest{}
	var userPath string = "/"
	this.UserPath = &userPath
	return &this
}

// NewAwsRolesRequestWithDefaults instantiates a new AwsRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsRolesRequestWithDefaults() *AwsRolesRequest {
	this := AwsRolesRequest{}
	var userPath string = "/"
	this.UserPath = &userPath
	return &this
}

// GetArn returns the Arn field value if set, zero value otherwise.
// Deprecated
func (o *AwsRolesRequest) GetArn() string {
	if o == nil || o.Arn == nil {
		var ret string
		return ret
	}
	return *o.Arn
}

// GetArnOk returns a tuple with the Arn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AwsRolesRequest) GetArnOk() (*string, bool) {
	if o == nil || o.Arn == nil {
		return nil, false
	}
	return o.Arn, true
}

// HasArn returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasArn() bool {
	if o != nil && o.Arn != nil {
		return true
	}

	return false
}

// SetArn gets a reference to the given string and assigns it to the Arn field.
// Deprecated
func (o *AwsRolesRequest) SetArn(v string) {
	o.Arn = &v
}

// GetCredentialType returns the CredentialType field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetCredentialType() string {
	if o == nil || o.CredentialType == nil {
		var ret string
		return ret
	}
	return *o.CredentialType
}

// GetCredentialTypeOk returns a tuple with the CredentialType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetCredentialTypeOk() (*string, bool) {
	if o == nil || o.CredentialType == nil {
		return nil, false
	}
	return o.CredentialType, true
}

// HasCredentialType returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasCredentialType() bool {
	if o != nil && o.CredentialType != nil {
		return true
	}

	return false
}

// SetCredentialType gets a reference to the given string and assigns it to the CredentialType field.
func (o *AwsRolesRequest) SetCredentialType(v string) {
	o.CredentialType = &v
}

// GetDefaultStsTtl returns the DefaultStsTtl field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetDefaultStsTtl() int32 {
	if o == nil || o.DefaultStsTtl == nil {
		var ret int32
		return ret
	}
	return *o.DefaultStsTtl
}

// GetDefaultStsTtlOk returns a tuple with the DefaultStsTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetDefaultStsTtlOk() (*int32, bool) {
	if o == nil || o.DefaultStsTtl == nil {
		return nil, false
	}
	return o.DefaultStsTtl, true
}

// HasDefaultStsTtl returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasDefaultStsTtl() bool {
	if o != nil && o.DefaultStsTtl != nil {
		return true
	}

	return false
}

// SetDefaultStsTtl gets a reference to the given int32 and assigns it to the DefaultStsTtl field.
func (o *AwsRolesRequest) SetDefaultStsTtl(v int32) {
	o.DefaultStsTtl = &v
}

// GetIamGroups returns the IamGroups field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetIamGroups() []string {
	if o == nil || o.IamGroups == nil {
		var ret []string
		return ret
	}
	return o.IamGroups
}

// GetIamGroupsOk returns a tuple with the IamGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetIamGroupsOk() ([]string, bool) {
	if o == nil || o.IamGroups == nil {
		return nil, false
	}
	return o.IamGroups, true
}

// HasIamGroups returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasIamGroups() bool {
	if o != nil && o.IamGroups != nil {
		return true
	}

	return false
}

// SetIamGroups gets a reference to the given []string and assigns it to the IamGroups field.
func (o *AwsRolesRequest) SetIamGroups(v []string) {
	o.IamGroups = v
}

// GetIamTags returns the IamTags field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetIamTags() map[string]interface{} {
	if o == nil || o.IamTags == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.IamTags
}

// GetIamTagsOk returns a tuple with the IamTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetIamTagsOk() (map[string]interface{}, bool) {
	if o == nil || o.IamTags == nil {
		return nil, false
	}
	return o.IamTags, true
}

// HasIamTags returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasIamTags() bool {
	if o != nil && o.IamTags != nil {
		return true
	}

	return false
}

// SetIamTags gets a reference to the given map[string]interface{} and assigns it to the IamTags field.
func (o *AwsRolesRequest) SetIamTags(v map[string]interface{}) {
	o.IamTags = v
}

// GetMaxStsTtl returns the MaxStsTtl field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetMaxStsTtl() int32 {
	if o == nil || o.MaxStsTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxStsTtl
}

// GetMaxStsTtlOk returns a tuple with the MaxStsTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetMaxStsTtlOk() (*int32, bool) {
	if o == nil || o.MaxStsTtl == nil {
		return nil, false
	}
	return o.MaxStsTtl, true
}

// HasMaxStsTtl returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasMaxStsTtl() bool {
	if o != nil && o.MaxStsTtl != nil {
		return true
	}

	return false
}

// SetMaxStsTtl gets a reference to the given int32 and assigns it to the MaxStsTtl field.
func (o *AwsRolesRequest) SetMaxStsTtl(v int32) {
	o.MaxStsTtl = &v
}

// GetPermissionsBoundaryArn returns the PermissionsBoundaryArn field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetPermissionsBoundaryArn() string {
	if o == nil || o.PermissionsBoundaryArn == nil {
		var ret string
		return ret
	}
	return *o.PermissionsBoundaryArn
}

// GetPermissionsBoundaryArnOk returns a tuple with the PermissionsBoundaryArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetPermissionsBoundaryArnOk() (*string, bool) {
	if o == nil || o.PermissionsBoundaryArn == nil {
		return nil, false
	}
	return o.PermissionsBoundaryArn, true
}

// HasPermissionsBoundaryArn returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasPermissionsBoundaryArn() bool {
	if o != nil && o.PermissionsBoundaryArn != nil {
		return true
	}

	return false
}

// SetPermissionsBoundaryArn gets a reference to the given string and assigns it to the PermissionsBoundaryArn field.
func (o *AwsRolesRequest) SetPermissionsBoundaryArn(v string) {
	o.PermissionsBoundaryArn = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
// Deprecated
func (o *AwsRolesRequest) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AwsRolesRequest) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
// Deprecated
func (o *AwsRolesRequest) SetPolicy(v string) {
	o.Policy = &v
}

// GetPolicyArns returns the PolicyArns field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetPolicyArns() []string {
	if o == nil || o.PolicyArns == nil {
		var ret []string
		return ret
	}
	return o.PolicyArns
}

// GetPolicyArnsOk returns a tuple with the PolicyArns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetPolicyArnsOk() ([]string, bool) {
	if o == nil || o.PolicyArns == nil {
		return nil, false
	}
	return o.PolicyArns, true
}

// HasPolicyArns returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasPolicyArns() bool {
	if o != nil && o.PolicyArns != nil {
		return true
	}

	return false
}

// SetPolicyArns gets a reference to the given []string and assigns it to the PolicyArns field.
func (o *AwsRolesRequest) SetPolicyArns(v []string) {
	o.PolicyArns = v
}

// GetPolicyDocument returns the PolicyDocument field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetPolicyDocument() string {
	if o == nil || o.PolicyDocument == nil {
		var ret string
		return ret
	}
	return *o.PolicyDocument
}

// GetPolicyDocumentOk returns a tuple with the PolicyDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetPolicyDocumentOk() (*string, bool) {
	if o == nil || o.PolicyDocument == nil {
		return nil, false
	}
	return o.PolicyDocument, true
}

// HasPolicyDocument returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasPolicyDocument() bool {
	if o != nil && o.PolicyDocument != nil {
		return true
	}

	return false
}

// SetPolicyDocument gets a reference to the given string and assigns it to the PolicyDocument field.
func (o *AwsRolesRequest) SetPolicyDocument(v string) {
	o.PolicyDocument = &v
}

// GetRoleArns returns the RoleArns field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetRoleArns() []string {
	if o == nil || o.RoleArns == nil {
		var ret []string
		return ret
	}
	return o.RoleArns
}

// GetRoleArnsOk returns a tuple with the RoleArns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetRoleArnsOk() ([]string, bool) {
	if o == nil || o.RoleArns == nil {
		return nil, false
	}
	return o.RoleArns, true
}

// HasRoleArns returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasRoleArns() bool {
	if o != nil && o.RoleArns != nil {
		return true
	}

	return false
}

// SetRoleArns gets a reference to the given []string and assigns it to the RoleArns field.
func (o *AwsRolesRequest) SetRoleArns(v []string) {
	o.RoleArns = v
}

// GetUserPath returns the UserPath field value if set, zero value otherwise.
func (o *AwsRolesRequest) GetUserPath() string {
	if o == nil || o.UserPath == nil {
		var ret string
		return ret
	}
	return *o.UserPath
}

// GetUserPathOk returns a tuple with the UserPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRolesRequest) GetUserPathOk() (*string, bool) {
	if o == nil || o.UserPath == nil {
		return nil, false
	}
	return o.UserPath, true
}

// HasUserPath returns a boolean if a field has been set.
func (o *AwsRolesRequest) HasUserPath() bool {
	if o != nil && o.UserPath != nil {
		return true
	}

	return false
}

// SetUserPath gets a reference to the given string and assigns it to the UserPath field.
func (o *AwsRolesRequest) SetUserPath(v string) {
	o.UserPath = &v
}

func (o AwsRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Arn != nil {
		toSerialize["arn"] = o.Arn
	}
	if o.CredentialType != nil {
		toSerialize["credential_type"] = o.CredentialType
	}
	if o.DefaultStsTtl != nil {
		toSerialize["default_sts_ttl"] = o.DefaultStsTtl
	}
	if o.IamGroups != nil {
		toSerialize["iam_groups"] = o.IamGroups
	}
	if o.IamTags != nil {
		toSerialize["iam_tags"] = o.IamTags
	}
	if o.MaxStsTtl != nil {
		toSerialize["max_sts_ttl"] = o.MaxStsTtl
	}
	if o.PermissionsBoundaryArn != nil {
		toSerialize["permissions_boundary_arn"] = o.PermissionsBoundaryArn
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	if o.PolicyArns != nil {
		toSerialize["policy_arns"] = o.PolicyArns
	}
	if o.PolicyDocument != nil {
		toSerialize["policy_document"] = o.PolicyDocument
	}
	if o.RoleArns != nil {
		toSerialize["role_arns"] = o.RoleArns
	}
	if o.UserPath != nil {
		toSerialize["user_path"] = o.UserPath
	}
	return json.Marshal(toSerialize)
}

type NullableAwsRolesRequest struct {
	value *AwsRolesRequest
	isSet bool
}

func (v NullableAwsRolesRequest) Get() *AwsRolesRequest {
	return v.value
}

func (v *NullableAwsRolesRequest) Set(val *AwsRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsRolesRequest(val *AwsRolesRequest) *NullableAwsRolesRequest {
	return &NullableAwsRolesRequest{value: val, isSet: true}
}

func (v NullableAwsRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


