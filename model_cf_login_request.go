/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// CfLoginRequest struct for CfLoginRequest
type CfLoginRequest struct {
	// The full body of the file available at the CF_INSTANCE_CERT path on the CF instance.
	CfInstanceCert string `json:"cf_instance_cert"`
	// The name of the role to authenticate against.
	Role string `json:"role"`
	// The signature generated by the client certificate's private key.
	Signature string `json:"signature"`
	// The date and time used to construct the signature.
	SigningTime string `json:"signing_time"`
}

// NewCfLoginRequest instantiates a new CfLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCfLoginRequest(cfInstanceCert string, role string, signature string, signingTime string) *CfLoginRequest {
	this := CfLoginRequest{}
	this.CfInstanceCert = cfInstanceCert
	this.Role = role
	this.Signature = signature
	this.SigningTime = signingTime
	return &this
}

// NewCfLoginRequestWithDefaults instantiates a new CfLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCfLoginRequestWithDefaults() *CfLoginRequest {
	this := CfLoginRequest{}
	return &this
}

// GetCfInstanceCert returns the CfInstanceCert field value
func (o *CfLoginRequest) GetCfInstanceCert() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CfInstanceCert
}

// GetCfInstanceCertOk returns a tuple with the CfInstanceCert field value
// and a boolean to check if the value has been set.
func (o *CfLoginRequest) GetCfInstanceCertOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CfInstanceCert, true
}

// SetCfInstanceCert sets field value
func (o *CfLoginRequest) SetCfInstanceCert(v string) {
	o.CfInstanceCert = v
}

// GetRole returns the Role field value
func (o *CfLoginRequest) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *CfLoginRequest) GetRoleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *CfLoginRequest) SetRole(v string) {
	o.Role = v
}

// GetSignature returns the Signature field value
func (o *CfLoginRequest) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *CfLoginRequest) GetSignatureOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *CfLoginRequest) SetSignature(v string) {
	o.Signature = v
}

// GetSigningTime returns the SigningTime field value
func (o *CfLoginRequest) GetSigningTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SigningTime
}

// GetSigningTimeOk returns a tuple with the SigningTime field value
// and a boolean to check if the value has been set.
func (o *CfLoginRequest) GetSigningTimeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SigningTime, true
}

// SetSigningTime sets field value
func (o *CfLoginRequest) SetSigningTime(v string) {
	o.SigningTime = v
}

func (o CfLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cf_instance_cert"] = o.CfInstanceCert
	}
	if true {
		toSerialize["role"] = o.Role
	}
	if true {
		toSerialize["signature"] = o.Signature
	}
	if true {
		toSerialize["signing_time"] = o.SigningTime
	}
	return json.Marshal(toSerialize)
}

type NullableCfLoginRequest struct {
	value *CfLoginRequest
	isSet bool
}

func (v NullableCfLoginRequest) Get() *CfLoginRequest {
	return v.value
}

func (v *NullableCfLoginRequest) Set(val *CfLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCfLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCfLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCfLoginRequest(val *CfLoginRequest) *NullableCfLoginRequest {
	return &NullableCfLoginRequest{value: val, isSet: true}
}

func (v NullableCfLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCfLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


