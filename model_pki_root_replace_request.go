/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// PkiRootReplaceRequest struct for PkiRootReplaceRequest
type PkiRootReplaceRequest struct {
	// Reference (name or identifier) to the default issuer.
	Default *string `json:"default,omitempty"`
}

// NewPkiRootReplaceRequest instantiates a new PkiRootReplaceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiRootReplaceRequest() *PkiRootReplaceRequest {
	this := PkiRootReplaceRequest{}
	var default_ string = "next"
	this.Default = &default_
	return &this
}

// NewPkiRootReplaceRequestWithDefaults instantiates a new PkiRootReplaceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiRootReplaceRequestWithDefaults() *PkiRootReplaceRequest {
	this := PkiRootReplaceRequest{}
	var default_ string = "next"
	this.Default = &default_
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *PkiRootReplaceRequest) GetDefault() string {
	if o == nil || o.Default == nil {
		var ret string
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiRootReplaceRequest) GetDefaultOk() (*string, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *PkiRootReplaceRequest) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given string and assigns it to the Default field.
func (o *PkiRootReplaceRequest) SetDefault(v string) {
	o.Default = &v
}

func (o PkiRootReplaceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	return json.Marshal(toSerialize)
}

type NullablePkiRootReplaceRequest struct {
	value *PkiRootReplaceRequest
	isSet bool
}

func (v NullablePkiRootReplaceRequest) Get() *PkiRootReplaceRequest {
	return v.value
}

func (v *NullablePkiRootReplaceRequest) Set(val *PkiRootReplaceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiRootReplaceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiRootReplaceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiRootReplaceRequest(val *PkiRootReplaceRequest) *NullablePkiRootReplaceRequest {
	return &NullablePkiRootReplaceRequest{value: val, isSet: true}
}

func (v NullablePkiRootReplaceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiRootReplaceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


