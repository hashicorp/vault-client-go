/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// AwsConfigStsRequest struct for AwsConfigStsRequest
type AwsConfigStsRequest struct {
	// AWS ARN for STS role to be assumed when interacting with the account specified. The Vault server must have permissions to assume this role.
	StsRole *string `json:"sts_role,omitempty"`
}

// NewAwsConfigStsRequest instantiates a new AwsConfigStsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigStsRequest() *AwsConfigStsRequest {
	this := AwsConfigStsRequest{}
	return &this
}

// NewAwsConfigStsRequestWithDefaults instantiates a new AwsConfigStsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigStsRequestWithDefaults() *AwsConfigStsRequest {
	this := AwsConfigStsRequest{}
	return &this
}

// GetStsRole returns the StsRole field value if set, zero value otherwise.
func (o *AwsConfigStsRequest) GetStsRole() string {
	if o == nil || o.StsRole == nil {
		var ret string
		return ret
	}
	return *o.StsRole
}

// GetStsRoleOk returns a tuple with the StsRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigStsRequest) GetStsRoleOk() (*string, bool) {
	if o == nil || o.StsRole == nil {
		return nil, false
	}
	return o.StsRole, true
}

// HasStsRole returns a boolean if a field has been set.
func (o *AwsConfigStsRequest) HasStsRole() bool {
	if o != nil && o.StsRole != nil {
		return true
	}

	return false
}

// SetStsRole gets a reference to the given string and assigns it to the StsRole field.
func (o *AwsConfigStsRequest) SetStsRole(v string) {
	o.StsRole = &v
}

func (o AwsConfigStsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StsRole != nil {
		toSerialize["sts_role"] = o.StsRole
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigStsRequest struct {
	value *AwsConfigStsRequest
	isSet bool
}

func (v NullableAwsConfigStsRequest) Get() *AwsConfigStsRequest {
	return v.value
}

func (v *NullableAwsConfigStsRequest) Set(val *AwsConfigStsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigStsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigStsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigStsRequest(val *AwsConfigStsRequest) *NullableAwsConfigStsRequest {
	return &NullableAwsConfigStsRequest{value: val, isSet: true}
}

func (v NullableAwsConfigStsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigStsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


