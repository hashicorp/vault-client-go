/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// PkiIntermediateSetSignedRequest struct for PkiIntermediateSetSignedRequest
type PkiIntermediateSetSignedRequest struct {
	// PEM-format certificate. This must be a CA certificate with a public key matching the previously-generated key from the generation endpoint. Additional parent CAs may be optionally appended to the bundle.
	Certificate *string `json:"certificate,omitempty"`
}

// NewPkiIntermediateSetSignedRequest instantiates a new PkiIntermediateSetSignedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiIntermediateSetSignedRequest() *PkiIntermediateSetSignedRequest {
	this := PkiIntermediateSetSignedRequest{}
	return &this
}

// NewPkiIntermediateSetSignedRequestWithDefaults instantiates a new PkiIntermediateSetSignedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiIntermediateSetSignedRequestWithDefaults() *PkiIntermediateSetSignedRequest {
	this := PkiIntermediateSetSignedRequest{}
	return &this
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *PkiIntermediateSetSignedRequest) GetCertificate() string {
	if o == nil || o.Certificate == nil {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiIntermediateSetSignedRequest) GetCertificateOk() (*string, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *PkiIntermediateSetSignedRequest) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *PkiIntermediateSetSignedRequest) SetCertificate(v string) {
	o.Certificate = &v
}

func (o PkiIntermediateSetSignedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	return json.Marshal(toSerialize)
}

type NullablePkiIntermediateSetSignedRequest struct {
	value *PkiIntermediateSetSignedRequest
	isSet bool
}

func (v NullablePkiIntermediateSetSignedRequest) Get() *PkiIntermediateSetSignedRequest {
	return v.value
}

func (v *NullablePkiIntermediateSetSignedRequest) Set(val *PkiIntermediateSetSignedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiIntermediateSetSignedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiIntermediateSetSignedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiIntermediateSetSignedRequest(val *PkiIntermediateSetSignedRequest) *NullablePkiIntermediateSetSignedRequest {
	return &NullablePkiIntermediateSetSignedRequest{value: val, isSet: true}
}

func (v NullablePkiIntermediateSetSignedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiIntermediateSetSignedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


