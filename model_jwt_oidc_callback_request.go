/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// JwtOidcCallbackRequest struct for JwtOidcCallbackRequest
type JwtOidcCallbackRequest struct {
	ClientNonce *string `json:"client_nonce,omitempty"`
	Code *string `json:"code,omitempty"`
	IdToken *string `json:"id_token,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewJwtOidcCallbackRequest instantiates a new JwtOidcCallbackRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJwtOidcCallbackRequest() *JwtOidcCallbackRequest {
	this := JwtOidcCallbackRequest{}
	return &this
}

// NewJwtOidcCallbackRequestWithDefaults instantiates a new JwtOidcCallbackRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJwtOidcCallbackRequestWithDefaults() *JwtOidcCallbackRequest {
	this := JwtOidcCallbackRequest{}
	return &this
}

// GetClientNonce returns the ClientNonce field value if set, zero value otherwise.
func (o *JwtOidcCallbackRequest) GetClientNonce() string {
	if o == nil || o.ClientNonce == nil {
		var ret string
		return ret
	}
	return *o.ClientNonce
}

// GetClientNonceOk returns a tuple with the ClientNonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtOidcCallbackRequest) GetClientNonceOk() (*string, bool) {
	if o == nil || o.ClientNonce == nil {
		return nil, false
	}
	return o.ClientNonce, true
}

// HasClientNonce returns a boolean if a field has been set.
func (o *JwtOidcCallbackRequest) HasClientNonce() bool {
	if o != nil && o.ClientNonce != nil {
		return true
	}

	return false
}

// SetClientNonce gets a reference to the given string and assigns it to the ClientNonce field.
func (o *JwtOidcCallbackRequest) SetClientNonce(v string) {
	o.ClientNonce = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *JwtOidcCallbackRequest) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtOidcCallbackRequest) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *JwtOidcCallbackRequest) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *JwtOidcCallbackRequest) SetCode(v string) {
	o.Code = &v
}

// GetIdToken returns the IdToken field value if set, zero value otherwise.
func (o *JwtOidcCallbackRequest) GetIdToken() string {
	if o == nil || o.IdToken == nil {
		var ret string
		return ret
	}
	return *o.IdToken
}

// GetIdTokenOk returns a tuple with the IdToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtOidcCallbackRequest) GetIdTokenOk() (*string, bool) {
	if o == nil || o.IdToken == nil {
		return nil, false
	}
	return o.IdToken, true
}

// HasIdToken returns a boolean if a field has been set.
func (o *JwtOidcCallbackRequest) HasIdToken() bool {
	if o != nil && o.IdToken != nil {
		return true
	}

	return false
}

// SetIdToken gets a reference to the given string and assigns it to the IdToken field.
func (o *JwtOidcCallbackRequest) SetIdToken(v string) {
	o.IdToken = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *JwtOidcCallbackRequest) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtOidcCallbackRequest) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *JwtOidcCallbackRequest) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *JwtOidcCallbackRequest) SetState(v string) {
	o.State = &v
}

func (o JwtOidcCallbackRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientNonce != nil {
		toSerialize["client_nonce"] = o.ClientNonce
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.IdToken != nil {
		toSerialize["id_token"] = o.IdToken
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableJwtOidcCallbackRequest struct {
	value *JwtOidcCallbackRequest
	isSet bool
}

func (v NullableJwtOidcCallbackRequest) Get() *JwtOidcCallbackRequest {
	return v.value
}

func (v *NullableJwtOidcCallbackRequest) Set(val *JwtOidcCallbackRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJwtOidcCallbackRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJwtOidcCallbackRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJwtOidcCallbackRequest(val *JwtOidcCallbackRequest) *NullableJwtOidcCallbackRequest {
	return &NullableJwtOidcCallbackRequest{value: val, isSet: true}
}

func (v NullableJwtOidcCallbackRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJwtOidcCallbackRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


