/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// AwsConfigTidyRoletagBlacklistRequest struct for AwsConfigTidyRoletagBlacklistRequest
type AwsConfigTidyRoletagBlacklistRequest struct {
	// If set to 'true', disables the periodic tidying of deny listed entries.
	DisablePeriodicTidy *bool `json:"disable_periodic_tidy,omitempty"`
	// The amount of extra time that must have passed beyond the roletag expiration, before it is removed from the backend storage. Defaults to 4320h (180 days).
	SafetyBuffer *int32 `json:"safety_buffer,omitempty"`
}

// NewAwsConfigTidyRoletagBlacklistRequest instantiates a new AwsConfigTidyRoletagBlacklistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsConfigTidyRoletagBlacklistRequest() *AwsConfigTidyRoletagBlacklistRequest {
	this := AwsConfigTidyRoletagBlacklistRequest{}
	var disablePeriodicTidy bool = false
	this.DisablePeriodicTidy = &disablePeriodicTidy
	var safetyBuffer int32 = 15552000
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// NewAwsConfigTidyRoletagBlacklistRequestWithDefaults instantiates a new AwsConfigTidyRoletagBlacklistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsConfigTidyRoletagBlacklistRequestWithDefaults() *AwsConfigTidyRoletagBlacklistRequest {
	this := AwsConfigTidyRoletagBlacklistRequest{}
	var disablePeriodicTidy bool = false
	this.DisablePeriodicTidy = &disablePeriodicTidy
	var safetyBuffer int32 = 15552000
	this.SafetyBuffer = &safetyBuffer
	return &this
}

// GetDisablePeriodicTidy returns the DisablePeriodicTidy field value if set, zero value otherwise.
func (o *AwsConfigTidyRoletagBlacklistRequest) GetDisablePeriodicTidy() bool {
	if o == nil || o.DisablePeriodicTidy == nil {
		var ret bool
		return ret
	}
	return *o.DisablePeriodicTidy
}

// GetDisablePeriodicTidyOk returns a tuple with the DisablePeriodicTidy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigTidyRoletagBlacklistRequest) GetDisablePeriodicTidyOk() (*bool, bool) {
	if o == nil || o.DisablePeriodicTidy == nil {
		return nil, false
	}
	return o.DisablePeriodicTidy, true
}

// HasDisablePeriodicTidy returns a boolean if a field has been set.
func (o *AwsConfigTidyRoletagBlacklistRequest) HasDisablePeriodicTidy() bool {
	if o != nil && o.DisablePeriodicTidy != nil {
		return true
	}

	return false
}

// SetDisablePeriodicTidy gets a reference to the given bool and assigns it to the DisablePeriodicTidy field.
func (o *AwsConfigTidyRoletagBlacklistRequest) SetDisablePeriodicTidy(v bool) {
	o.DisablePeriodicTidy = &v
}

// GetSafetyBuffer returns the SafetyBuffer field value if set, zero value otherwise.
func (o *AwsConfigTidyRoletagBlacklistRequest) GetSafetyBuffer() int32 {
	if o == nil || o.SafetyBuffer == nil {
		var ret int32
		return ret
	}
	return *o.SafetyBuffer
}

// GetSafetyBufferOk returns a tuple with the SafetyBuffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsConfigTidyRoletagBlacklistRequest) GetSafetyBufferOk() (*int32, bool) {
	if o == nil || o.SafetyBuffer == nil {
		return nil, false
	}
	return o.SafetyBuffer, true
}

// HasSafetyBuffer returns a boolean if a field has been set.
func (o *AwsConfigTidyRoletagBlacklistRequest) HasSafetyBuffer() bool {
	if o != nil && o.SafetyBuffer != nil {
		return true
	}

	return false
}

// SetSafetyBuffer gets a reference to the given int32 and assigns it to the SafetyBuffer field.
func (o *AwsConfigTidyRoletagBlacklistRequest) SetSafetyBuffer(v int32) {
	o.SafetyBuffer = &v
}

func (o AwsConfigTidyRoletagBlacklistRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisablePeriodicTidy != nil {
		toSerialize["disable_periodic_tidy"] = o.DisablePeriodicTidy
	}
	if o.SafetyBuffer != nil {
		toSerialize["safety_buffer"] = o.SafetyBuffer
	}
	return json.Marshal(toSerialize)
}

type NullableAwsConfigTidyRoletagBlacklistRequest struct {
	value *AwsConfigTidyRoletagBlacklistRequest
	isSet bool
}

func (v NullableAwsConfigTidyRoletagBlacklistRequest) Get() *AwsConfigTidyRoletagBlacklistRequest {
	return v.value
}

func (v *NullableAwsConfigTidyRoletagBlacklistRequest) Set(val *AwsConfigTidyRoletagBlacklistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsConfigTidyRoletagBlacklistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsConfigTidyRoletagBlacklistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsConfigTidyRoletagBlacklistRequest(val *AwsConfigTidyRoletagBlacklistRequest) *NullableAwsConfigTidyRoletagBlacklistRequest {
	return &NullableAwsConfigTidyRoletagBlacklistRequest{value: val, isSet: true}
}

func (v NullableAwsConfigTidyRoletagBlacklistRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsConfigTidyRoletagBlacklistRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


