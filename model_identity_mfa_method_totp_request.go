/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// IdentityMfaMethodTotpRequest struct for IdentityMfaMethodTotpRequest
type IdentityMfaMethodTotpRequest struct {
	// The hashing algorithm used to generate the TOTP token. Options include SHA1, SHA256 and SHA512.
	Algorithm *string `json:"algorithm,omitempty"`
	// The number of digits in the generated TOTP token. This value can either be 6 or 8.
	Digits *int32 `json:"digits,omitempty"`
	// The name of the key's issuing organization.
	Issuer *string `json:"issuer,omitempty"`
	// Determines the size in bytes of the generated key.
	KeySize *int32 `json:"key_size,omitempty"`
	// Max number of allowed validation attempts.
	MaxValidationAttempts *int32 `json:"max_validation_attempts,omitempty"`
	// The unique identifier for this MFA method.
	MethodId *string `json:"method_id,omitempty"`
	// The length of time used to generate a counter for the TOTP token calculation.
	Period *int32 `json:"period,omitempty"`
	// The pixel size of the generated square QR code.
	QrSize *int32 `json:"qr_size,omitempty"`
	// The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1.
	Skew *int32 `json:"skew,omitempty"`
}

// NewIdentityMfaMethodTotpRequest instantiates a new IdentityMfaMethodTotpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityMfaMethodTotpRequest() *IdentityMfaMethodTotpRequest {
	this := IdentityMfaMethodTotpRequest{}
	var algorithm string = "SHA1"
	this.Algorithm = &algorithm
	var digits int32 = 6
	this.Digits = &digits
	var keySize int32 = 20
	this.KeySize = &keySize
	var period int32 = 30
	this.Period = &period
	var qrSize int32 = 200
	this.QrSize = &qrSize
	var skew int32 = 1
	this.Skew = &skew
	return &this
}

// NewIdentityMfaMethodTotpRequestWithDefaults instantiates a new IdentityMfaMethodTotpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityMfaMethodTotpRequestWithDefaults() *IdentityMfaMethodTotpRequest {
	this := IdentityMfaMethodTotpRequest{}
	var algorithm string = "SHA1"
	this.Algorithm = &algorithm
	var digits int32 = 6
	this.Digits = &digits
	var keySize int32 = 20
	this.KeySize = &keySize
	var period int32 = 30
	this.Period = &period
	var qrSize int32 = 200
	this.QrSize = &qrSize
	var skew int32 = 1
	this.Skew = &skew
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *IdentityMfaMethodTotpRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetDigits returns the Digits field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetDigits() int32 {
	if o == nil || o.Digits == nil {
		var ret int32
		return ret
	}
	return *o.Digits
}

// GetDigitsOk returns a tuple with the Digits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetDigitsOk() (*int32, bool) {
	if o == nil || o.Digits == nil {
		return nil, false
	}
	return o.Digits, true
}

// HasDigits returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasDigits() bool {
	if o != nil && o.Digits != nil {
		return true
	}

	return false
}

// SetDigits gets a reference to the given int32 and assigns it to the Digits field.
func (o *IdentityMfaMethodTotpRequest) SetDigits(v int32) {
	o.Digits = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *IdentityMfaMethodTotpRequest) SetIssuer(v string) {
	o.Issuer = &v
}

// GetKeySize returns the KeySize field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetKeySize() int32 {
	if o == nil || o.KeySize == nil {
		var ret int32
		return ret
	}
	return *o.KeySize
}

// GetKeySizeOk returns a tuple with the KeySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetKeySizeOk() (*int32, bool) {
	if o == nil || o.KeySize == nil {
		return nil, false
	}
	return o.KeySize, true
}

// HasKeySize returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasKeySize() bool {
	if o != nil && o.KeySize != nil {
		return true
	}

	return false
}

// SetKeySize gets a reference to the given int32 and assigns it to the KeySize field.
func (o *IdentityMfaMethodTotpRequest) SetKeySize(v int32) {
	o.KeySize = &v
}

// GetMaxValidationAttempts returns the MaxValidationAttempts field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetMaxValidationAttempts() int32 {
	if o == nil || o.MaxValidationAttempts == nil {
		var ret int32
		return ret
	}
	return *o.MaxValidationAttempts
}

// GetMaxValidationAttemptsOk returns a tuple with the MaxValidationAttempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetMaxValidationAttemptsOk() (*int32, bool) {
	if o == nil || o.MaxValidationAttempts == nil {
		return nil, false
	}
	return o.MaxValidationAttempts, true
}

// HasMaxValidationAttempts returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasMaxValidationAttempts() bool {
	if o != nil && o.MaxValidationAttempts != nil {
		return true
	}

	return false
}

// SetMaxValidationAttempts gets a reference to the given int32 and assigns it to the MaxValidationAttempts field.
func (o *IdentityMfaMethodTotpRequest) SetMaxValidationAttempts(v int32) {
	o.MaxValidationAttempts = &v
}

// GetMethodId returns the MethodId field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetMethodId() string {
	if o == nil || o.MethodId == nil {
		var ret string
		return ret
	}
	return *o.MethodId
}

// GetMethodIdOk returns a tuple with the MethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetMethodIdOk() (*string, bool) {
	if o == nil || o.MethodId == nil {
		return nil, false
	}
	return o.MethodId, true
}

// HasMethodId returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasMethodId() bool {
	if o != nil && o.MethodId != nil {
		return true
	}

	return false
}

// SetMethodId gets a reference to the given string and assigns it to the MethodId field.
func (o *IdentityMfaMethodTotpRequest) SetMethodId(v string) {
	o.MethodId = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
func (o *IdentityMfaMethodTotpRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetQrSize returns the QrSize field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetQrSize() int32 {
	if o == nil || o.QrSize == nil {
		var ret int32
		return ret
	}
	return *o.QrSize
}

// GetQrSizeOk returns a tuple with the QrSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetQrSizeOk() (*int32, bool) {
	if o == nil || o.QrSize == nil {
		return nil, false
	}
	return o.QrSize, true
}

// HasQrSize returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasQrSize() bool {
	if o != nil && o.QrSize != nil {
		return true
	}

	return false
}

// SetQrSize gets a reference to the given int32 and assigns it to the QrSize field.
func (o *IdentityMfaMethodTotpRequest) SetQrSize(v int32) {
	o.QrSize = &v
}

// GetSkew returns the Skew field value if set, zero value otherwise.
func (o *IdentityMfaMethodTotpRequest) GetSkew() int32 {
	if o == nil || o.Skew == nil {
		var ret int32
		return ret
	}
	return *o.Skew
}

// GetSkewOk returns a tuple with the Skew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityMfaMethodTotpRequest) GetSkewOk() (*int32, bool) {
	if o == nil || o.Skew == nil {
		return nil, false
	}
	return o.Skew, true
}

// HasSkew returns a boolean if a field has been set.
func (o *IdentityMfaMethodTotpRequest) HasSkew() bool {
	if o != nil && o.Skew != nil {
		return true
	}

	return false
}

// SetSkew gets a reference to the given int32 and assigns it to the Skew field.
func (o *IdentityMfaMethodTotpRequest) SetSkew(v int32) {
	o.Skew = &v
}

func (o IdentityMfaMethodTotpRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.Digits != nil {
		toSerialize["digits"] = o.Digits
	}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	if o.KeySize != nil {
		toSerialize["key_size"] = o.KeySize
	}
	if o.MaxValidationAttempts != nil {
		toSerialize["max_validation_attempts"] = o.MaxValidationAttempts
	}
	if o.MethodId != nil {
		toSerialize["method_id"] = o.MethodId
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.QrSize != nil {
		toSerialize["qr_size"] = o.QrSize
	}
	if o.Skew != nil {
		toSerialize["skew"] = o.Skew
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityMfaMethodTotpRequest struct {
	value *IdentityMfaMethodTotpRequest
	isSet bool
}

func (v NullableIdentityMfaMethodTotpRequest) Get() *IdentityMfaMethodTotpRequest {
	return v.value
}

func (v *NullableIdentityMfaMethodTotpRequest) Set(val *IdentityMfaMethodTotpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityMfaMethodTotpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityMfaMethodTotpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityMfaMethodTotpRequest(val *IdentityMfaMethodTotpRequest) *NullableIdentityMfaMethodTotpRequest {
	return &NullableIdentityMfaMethodTotpRequest{value: val, isSet: true}
}

func (v NullableIdentityMfaMethodTotpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityMfaMethodTotpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


