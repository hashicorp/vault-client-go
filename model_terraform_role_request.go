/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// TerraformRoleRequest struct for TerraformRoleRequest
type TerraformRoleRequest struct {
	// Maximum time for role. If not set or set to 0, will use system default.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Name of the Terraform Cloud or Enterprise organization
	Organization *string `json:"organization,omitempty"`
	// ID of the Terraform Cloud or Enterprise team under organization (e.g., settings/teams/team-xxxxxxxxxxxxx)
	TeamId *string `json:"team_id,omitempty"`
	// Default lease for generated credentials. If not set or set to 0, will use system default.
	Ttl *int32 `json:"ttl,omitempty"`
	// ID of the Terraform Cloud or Enterprise user (e.g., user-xxxxxxxxxxxxxxxx)
	UserId *string `json:"user_id,omitempty"`
}

// NewTerraformRoleRequest instantiates a new TerraformRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerraformRoleRequest() *TerraformRoleRequest {
	this := TerraformRoleRequest{}
	return &this
}

// NewTerraformRoleRequestWithDefaults instantiates a new TerraformRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerraformRoleRequestWithDefaults() *TerraformRoleRequest {
	this := TerraformRoleRequest{}
	return &this
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *TerraformRoleRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformRoleRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *TerraformRoleRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *TerraformRoleRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *TerraformRoleRequest) GetOrganization() string {
	if o == nil || o.Organization == nil {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformRoleRequest) GetOrganizationOk() (*string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *TerraformRoleRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *TerraformRoleRequest) SetOrganization(v string) {
	o.Organization = &v
}

// GetTeamId returns the TeamId field value if set, zero value otherwise.
func (o *TerraformRoleRequest) GetTeamId() string {
	if o == nil || o.TeamId == nil {
		var ret string
		return ret
	}
	return *o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformRoleRequest) GetTeamIdOk() (*string, bool) {
	if o == nil || o.TeamId == nil {
		return nil, false
	}
	return o.TeamId, true
}

// HasTeamId returns a boolean if a field has been set.
func (o *TerraformRoleRequest) HasTeamId() bool {
	if o != nil && o.TeamId != nil {
		return true
	}

	return false
}

// SetTeamId gets a reference to the given string and assigns it to the TeamId field.
func (o *TerraformRoleRequest) SetTeamId(v string) {
	o.TeamId = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *TerraformRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *TerraformRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *TerraformRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *TerraformRoleRequest) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformRoleRequest) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *TerraformRoleRequest) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *TerraformRoleRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o TerraformRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.TeamId != nil {
		toSerialize["team_id"] = o.TeamId
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableTerraformRoleRequest struct {
	value *TerraformRoleRequest
	isSet bool
}

func (v NullableTerraformRoleRequest) Get() *TerraformRoleRequest {
	return v.value
}

func (v *NullableTerraformRoleRequest) Set(val *TerraformRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTerraformRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTerraformRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerraformRoleRequest(val *TerraformRoleRequest) *NullableTerraformRoleRequest {
	return &NullableTerraformRoleRequest{value: val, isSet: true}
}

func (v NullableTerraformRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerraformRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


