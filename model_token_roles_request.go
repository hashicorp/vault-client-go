/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// TokenRolesRequest struct for TokenRolesRequest
type TokenRolesRequest struct {
	// String or JSON list of allowed entity aliases. If set, specifies the entity aliases which are allowed to be used during token generation. This field supports globbing.
	AllowedEntityAliases []string `json:"allowed_entity_aliases,omitempty"`
	// If set, tokens can be created with any subset of the policies in this list, rather than the normal semantics of tokens being a subset of the calling token's policies. The parameter is a comma-delimited string of policy names.
	AllowedPolicies []string `json:"allowed_policies,omitempty"`
	// If set, tokens can be created with any subset of glob matched policies in this list, rather than the normal semantics of tokens being a subset of the calling token's policies. The parameter is a comma-delimited string of policy name globs.
	AllowedPoliciesGlob []string `json:"allowed_policies_glob,omitempty"`
	// Use 'token_bound_cidrs' instead.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs,omitempty"`
	// If set, successful token creation via this role will require that no policies in the given list are requested. The parameter is a comma-delimited string of policy names.
	DisallowedPolicies []string `json:"disallowed_policies,omitempty"`
	// If set, successful token creation via this role will require that no requested policies glob match any of policies in this list. The parameter is a comma-delimited string of policy name globs.
	DisallowedPoliciesGlob []string `json:"disallowed_policies_glob,omitempty"`
	// Use 'token_explicit_max_ttl' instead.
	// Deprecated
	ExplicitMaxTtl *int32 `json:"explicit_max_ttl,omitempty"`
	// If true, tokens created via this role will be orphan tokens (have no parent)
	Orphan *bool `json:"orphan,omitempty"`
	// If set, tokens created via this role will contain the given suffix as a part of their path. This can be used to assist use of the 'revoke-prefix' endpoint later on. The given suffix must match the regular expression.\\w[\\w-.]+\\w
	PathSuffix *string `json:"path_suffix,omitempty"`
	// Use 'token_period' instead.
	// Deprecated
	Period *int32 `json:"period,omitempty"`
	// Tokens created via this role will be renewable or not according to this value. Defaults to \"true\".
	Renewable *bool `json:"renewable,omitempty"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl *int32 `json:"token_explicit_max_ttl,omitempty"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"token_no_default_policy,omitempty"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *int32 `json:"token_num_uses,omitempty"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod *int32 `json:"token_period,omitempty"`
	// The type of token to generate, service or batch
	TokenType *string `json:"token_type,omitempty"`
}

// NewTokenRolesRequest instantiates a new TokenRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenRolesRequest() *TokenRolesRequest {
	this := TokenRolesRequest{}
	var renewable bool = true
	this.Renewable = &renewable
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// NewTokenRolesRequestWithDefaults instantiates a new TokenRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRolesRequestWithDefaults() *TokenRolesRequest {
	this := TokenRolesRequest{}
	var renewable bool = true
	this.Renewable = &renewable
	var tokenType string = "default-service"
	this.TokenType = &tokenType
	return &this
}

// GetAllowedEntityAliases returns the AllowedEntityAliases field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetAllowedEntityAliases() []string {
	if o == nil || o.AllowedEntityAliases == nil {
		var ret []string
		return ret
	}
	return o.AllowedEntityAliases
}

// GetAllowedEntityAliasesOk returns a tuple with the AllowedEntityAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetAllowedEntityAliasesOk() ([]string, bool) {
	if o == nil || o.AllowedEntityAliases == nil {
		return nil, false
	}
	return o.AllowedEntityAliases, true
}

// HasAllowedEntityAliases returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasAllowedEntityAliases() bool {
	if o != nil && o.AllowedEntityAliases != nil {
		return true
	}

	return false
}

// SetAllowedEntityAliases gets a reference to the given []string and assigns it to the AllowedEntityAliases field.
func (o *TokenRolesRequest) SetAllowedEntityAliases(v []string) {
	o.AllowedEntityAliases = v
}

// GetAllowedPolicies returns the AllowedPolicies field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetAllowedPolicies() []string {
	if o == nil || o.AllowedPolicies == nil {
		var ret []string
		return ret
	}
	return o.AllowedPolicies
}

// GetAllowedPoliciesOk returns a tuple with the AllowedPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetAllowedPoliciesOk() ([]string, bool) {
	if o == nil || o.AllowedPolicies == nil {
		return nil, false
	}
	return o.AllowedPolicies, true
}

// HasAllowedPolicies returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasAllowedPolicies() bool {
	if o != nil && o.AllowedPolicies != nil {
		return true
	}

	return false
}

// SetAllowedPolicies gets a reference to the given []string and assigns it to the AllowedPolicies field.
func (o *TokenRolesRequest) SetAllowedPolicies(v []string) {
	o.AllowedPolicies = v
}

// GetAllowedPoliciesGlob returns the AllowedPoliciesGlob field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetAllowedPoliciesGlob() []string {
	if o == nil || o.AllowedPoliciesGlob == nil {
		var ret []string
		return ret
	}
	return o.AllowedPoliciesGlob
}

// GetAllowedPoliciesGlobOk returns a tuple with the AllowedPoliciesGlob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetAllowedPoliciesGlobOk() ([]string, bool) {
	if o == nil || o.AllowedPoliciesGlob == nil {
		return nil, false
	}
	return o.AllowedPoliciesGlob, true
}

// HasAllowedPoliciesGlob returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasAllowedPoliciesGlob() bool {
	if o != nil && o.AllowedPoliciesGlob != nil {
		return true
	}

	return false
}

// SetAllowedPoliciesGlob gets a reference to the given []string and assigns it to the AllowedPoliciesGlob field.
func (o *TokenRolesRequest) SetAllowedPoliciesGlob(v []string) {
	o.AllowedPoliciesGlob = v
}

// GetBoundCidrs returns the BoundCidrs field value if set, zero value otherwise.
// Deprecated
func (o *TokenRolesRequest) GetBoundCidrs() []string {
	if o == nil || o.BoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrs
}

// GetBoundCidrsOk returns a tuple with the BoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *TokenRolesRequest) GetBoundCidrsOk() ([]string, bool) {
	if o == nil || o.BoundCidrs == nil {
		return nil, false
	}
	return o.BoundCidrs, true
}

// HasBoundCidrs returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasBoundCidrs() bool {
	if o != nil && o.BoundCidrs != nil {
		return true
	}

	return false
}

// SetBoundCidrs gets a reference to the given []string and assigns it to the BoundCidrs field.
// Deprecated
func (o *TokenRolesRequest) SetBoundCidrs(v []string) {
	o.BoundCidrs = v
}

// GetDisallowedPolicies returns the DisallowedPolicies field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetDisallowedPolicies() []string {
	if o == nil || o.DisallowedPolicies == nil {
		var ret []string
		return ret
	}
	return o.DisallowedPolicies
}

// GetDisallowedPoliciesOk returns a tuple with the DisallowedPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetDisallowedPoliciesOk() ([]string, bool) {
	if o == nil || o.DisallowedPolicies == nil {
		return nil, false
	}
	return o.DisallowedPolicies, true
}

// HasDisallowedPolicies returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasDisallowedPolicies() bool {
	if o != nil && o.DisallowedPolicies != nil {
		return true
	}

	return false
}

// SetDisallowedPolicies gets a reference to the given []string and assigns it to the DisallowedPolicies field.
func (o *TokenRolesRequest) SetDisallowedPolicies(v []string) {
	o.DisallowedPolicies = v
}

// GetDisallowedPoliciesGlob returns the DisallowedPoliciesGlob field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetDisallowedPoliciesGlob() []string {
	if o == nil || o.DisallowedPoliciesGlob == nil {
		var ret []string
		return ret
	}
	return o.DisallowedPoliciesGlob
}

// GetDisallowedPoliciesGlobOk returns a tuple with the DisallowedPoliciesGlob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetDisallowedPoliciesGlobOk() ([]string, bool) {
	if o == nil || o.DisallowedPoliciesGlob == nil {
		return nil, false
	}
	return o.DisallowedPoliciesGlob, true
}

// HasDisallowedPoliciesGlob returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasDisallowedPoliciesGlob() bool {
	if o != nil && o.DisallowedPoliciesGlob != nil {
		return true
	}

	return false
}

// SetDisallowedPoliciesGlob gets a reference to the given []string and assigns it to the DisallowedPoliciesGlob field.
func (o *TokenRolesRequest) SetDisallowedPoliciesGlob(v []string) {
	o.DisallowedPoliciesGlob = v
}

// GetExplicitMaxTtl returns the ExplicitMaxTtl field value if set, zero value otherwise.
// Deprecated
func (o *TokenRolesRequest) GetExplicitMaxTtl() int32 {
	if o == nil || o.ExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.ExplicitMaxTtl
}

// GetExplicitMaxTtlOk returns a tuple with the ExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *TokenRolesRequest) GetExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.ExplicitMaxTtl == nil {
		return nil, false
	}
	return o.ExplicitMaxTtl, true
}

// HasExplicitMaxTtl returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasExplicitMaxTtl() bool {
	if o != nil && o.ExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetExplicitMaxTtl gets a reference to the given int32 and assigns it to the ExplicitMaxTtl field.
// Deprecated
func (o *TokenRolesRequest) SetExplicitMaxTtl(v int32) {
	o.ExplicitMaxTtl = &v
}

// GetOrphan returns the Orphan field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetOrphan() bool {
	if o == nil || o.Orphan == nil {
		var ret bool
		return ret
	}
	return *o.Orphan
}

// GetOrphanOk returns a tuple with the Orphan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetOrphanOk() (*bool, bool) {
	if o == nil || o.Orphan == nil {
		return nil, false
	}
	return o.Orphan, true
}

// HasOrphan returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasOrphan() bool {
	if o != nil && o.Orphan != nil {
		return true
	}

	return false
}

// SetOrphan gets a reference to the given bool and assigns it to the Orphan field.
func (o *TokenRolesRequest) SetOrphan(v bool) {
	o.Orphan = &v
}

// GetPathSuffix returns the PathSuffix field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetPathSuffix() string {
	if o == nil || o.PathSuffix == nil {
		var ret string
		return ret
	}
	return *o.PathSuffix
}

// GetPathSuffixOk returns a tuple with the PathSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetPathSuffixOk() (*string, bool) {
	if o == nil || o.PathSuffix == nil {
		return nil, false
	}
	return o.PathSuffix, true
}

// HasPathSuffix returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasPathSuffix() bool {
	if o != nil && o.PathSuffix != nil {
		return true
	}

	return false
}

// SetPathSuffix gets a reference to the given string and assigns it to the PathSuffix field.
func (o *TokenRolesRequest) SetPathSuffix(v string) {
	o.PathSuffix = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
// Deprecated
func (o *TokenRolesRequest) GetPeriod() int32 {
	if o == nil || o.Period == nil {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *TokenRolesRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
// Deprecated
func (o *TokenRolesRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetRenewable returns the Renewable field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetRenewable() bool {
	if o == nil || o.Renewable == nil {
		var ret bool
		return ret
	}
	return *o.Renewable
}

// GetRenewableOk returns a tuple with the Renewable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetRenewableOk() (*bool, bool) {
	if o == nil || o.Renewable == nil {
		return nil, false
	}
	return o.Renewable, true
}

// HasRenewable returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasRenewable() bool {
	if o != nil && o.Renewable != nil {
		return true
	}

	return false
}

// SetRenewable gets a reference to the given bool and assigns it to the Renewable field.
func (o *TokenRolesRequest) SetRenewable(v bool) {
	o.Renewable = &v
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *TokenRolesRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

// GetTokenExplicitMaxTtl returns the TokenExplicitMaxTtl field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetTokenExplicitMaxTtl() int32 {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.TokenExplicitMaxTtl
}

// GetTokenExplicitMaxTtlOk returns a tuple with the TokenExplicitMaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetTokenExplicitMaxTtlOk() (*int32, bool) {
	if o == nil || o.TokenExplicitMaxTtl == nil {
		return nil, false
	}
	return o.TokenExplicitMaxTtl, true
}

// HasTokenExplicitMaxTtl returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasTokenExplicitMaxTtl() bool {
	if o != nil && o.TokenExplicitMaxTtl != nil {
		return true
	}

	return false
}

// SetTokenExplicitMaxTtl gets a reference to the given int32 and assigns it to the TokenExplicitMaxTtl field.
func (o *TokenRolesRequest) SetTokenExplicitMaxTtl(v int32) {
	o.TokenExplicitMaxTtl = &v
}

// GetTokenNoDefaultPolicy returns the TokenNoDefaultPolicy field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetTokenNoDefaultPolicy() bool {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		var ret bool
		return ret
	}
	return *o.TokenNoDefaultPolicy
}

// GetTokenNoDefaultPolicyOk returns a tuple with the TokenNoDefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetTokenNoDefaultPolicyOk() (*bool, bool) {
	if o == nil || o.TokenNoDefaultPolicy == nil {
		return nil, false
	}
	return o.TokenNoDefaultPolicy, true
}

// HasTokenNoDefaultPolicy returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasTokenNoDefaultPolicy() bool {
	if o != nil && o.TokenNoDefaultPolicy != nil {
		return true
	}

	return false
}

// SetTokenNoDefaultPolicy gets a reference to the given bool and assigns it to the TokenNoDefaultPolicy field.
func (o *TokenRolesRequest) SetTokenNoDefaultPolicy(v bool) {
	o.TokenNoDefaultPolicy = &v
}

// GetTokenNumUses returns the TokenNumUses field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetTokenNumUses() int32 {
	if o == nil || o.TokenNumUses == nil {
		var ret int32
		return ret
	}
	return *o.TokenNumUses
}

// GetTokenNumUsesOk returns a tuple with the TokenNumUses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetTokenNumUsesOk() (*int32, bool) {
	if o == nil || o.TokenNumUses == nil {
		return nil, false
	}
	return o.TokenNumUses, true
}

// HasTokenNumUses returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasTokenNumUses() bool {
	if o != nil && o.TokenNumUses != nil {
		return true
	}

	return false
}

// SetTokenNumUses gets a reference to the given int32 and assigns it to the TokenNumUses field.
func (o *TokenRolesRequest) SetTokenNumUses(v int32) {
	o.TokenNumUses = &v
}

// GetTokenPeriod returns the TokenPeriod field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetTokenPeriod() int32 {
	if o == nil || o.TokenPeriod == nil {
		var ret int32
		return ret
	}
	return *o.TokenPeriod
}

// GetTokenPeriodOk returns a tuple with the TokenPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetTokenPeriodOk() (*int32, bool) {
	if o == nil || o.TokenPeriod == nil {
		return nil, false
	}
	return o.TokenPeriod, true
}

// HasTokenPeriod returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasTokenPeriod() bool {
	if o != nil && o.TokenPeriod != nil {
		return true
	}

	return false
}

// SetTokenPeriod gets a reference to the given int32 and assigns it to the TokenPeriod field.
func (o *TokenRolesRequest) SetTokenPeriod(v int32) {
	o.TokenPeriod = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *TokenRolesRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenRolesRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *TokenRolesRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *TokenRolesRequest) SetTokenType(v string) {
	o.TokenType = &v
}

func (o TokenRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedEntityAliases != nil {
		toSerialize["allowed_entity_aliases"] = o.AllowedEntityAliases
	}
	if o.AllowedPolicies != nil {
		toSerialize["allowed_policies"] = o.AllowedPolicies
	}
	if o.AllowedPoliciesGlob != nil {
		toSerialize["allowed_policies_glob"] = o.AllowedPoliciesGlob
	}
	if o.BoundCidrs != nil {
		toSerialize["bound_cidrs"] = o.BoundCidrs
	}
	if o.DisallowedPolicies != nil {
		toSerialize["disallowed_policies"] = o.DisallowedPolicies
	}
	if o.DisallowedPoliciesGlob != nil {
		toSerialize["disallowed_policies_glob"] = o.DisallowedPoliciesGlob
	}
	if o.ExplicitMaxTtl != nil {
		toSerialize["explicit_max_ttl"] = o.ExplicitMaxTtl
	}
	if o.Orphan != nil {
		toSerialize["orphan"] = o.Orphan
	}
	if o.PathSuffix != nil {
		toSerialize["path_suffix"] = o.PathSuffix
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Renewable != nil {
		toSerialize["renewable"] = o.Renewable
	}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	if o.TokenExplicitMaxTtl != nil {
		toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	}
	if o.TokenNoDefaultPolicy != nil {
		toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	}
	if o.TokenNumUses != nil {
		toSerialize["token_num_uses"] = o.TokenNumUses
	}
	if o.TokenPeriod != nil {
		toSerialize["token_period"] = o.TokenPeriod
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	return json.Marshal(toSerialize)
}

type NullableTokenRolesRequest struct {
	value *TokenRolesRequest
	isSet bool
}

func (v NullableTokenRolesRequest) Get() *TokenRolesRequest {
	return v.value
}

func (v *NullableTokenRolesRequest) Set(val *TokenRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenRolesRequest(val *TokenRolesRequest) *NullableTokenRolesRequest {
	return &NullableTokenRolesRequest{value: val, isSet: true}
}

func (v NullableTokenRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


