/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// TransitSignRequest struct for TransitSignRequest
type TransitSignRequest struct {
	// Deprecated: use \"hash_algorithm\" instead.
	Algorithm *string `json:"algorithm,omitempty"`
	// Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys.
	Context *string `json:"context,omitempty"`
	// Hash algorithm to use (POST body parameter). Valid values are: * sha1 * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 Defaults to \"sha2-256\". Not valid for all key types, including ed25519.
	HashAlgorithm *string `json:"hash_algorithm,omitempty"`
	// The base64-encoded input data
	Input *string `json:"input,omitempty"`
	// The version of the key to use for signing. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion *int32 `json:"key_version,omitempty"`
	// The method by which to marshal the signature. The default is 'asn1' which is used by openssl and X.509. It can also be set to 'jws' which is used for JWT signatures; setting it to this will also cause the encoding of the signature to be url-safe base64 instead of using standard base64 encoding. Currently only valid for ECDSA P-256 key types\".
	MarshalingAlgorithm *string `json:"marshaling_algorithm,omitempty"`
	// Set to 'true' when the input is already hashed. If the key type is 'rsa-2048', 'rsa-3072' or 'rsa-4096', then the algorithm used to hash the input should be indicated by the 'algorithm' parameter.
	Prehashed *bool `json:"prehashed,omitempty"`
	// The signature algorithm to use for signing. Currently only applies to RSA key types. Options are 'pss' or 'pkcs1v15'. Defaults to 'pss'
	SignatureAlgorithm *string `json:"signature_algorithm,omitempty"`
	// Hash algorithm to use (POST URL parameter)
	Urlalgorithm *string `json:"urlalgorithm,omitempty"`
}

// NewTransitSignRequest instantiates a new TransitSignRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitSignRequest() *TransitSignRequest {
	this := TransitSignRequest{}
	var algorithm string = "sha2-256"
	this.Algorithm = &algorithm
	var hashAlgorithm string = "sha2-256"
	this.HashAlgorithm = &hashAlgorithm
	var marshalingAlgorithm string = "asn1"
	this.MarshalingAlgorithm = &marshalingAlgorithm
	return &this
}

// NewTransitSignRequestWithDefaults instantiates a new TransitSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitSignRequestWithDefaults() *TransitSignRequest {
	this := TransitSignRequest{}
	var algorithm string = "sha2-256"
	this.Algorithm = &algorithm
	var hashAlgorithm string = "sha2-256"
	this.HashAlgorithm = &hashAlgorithm
	var marshalingAlgorithm string = "asn1"
	this.MarshalingAlgorithm = &marshalingAlgorithm
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *TransitSignRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *TransitSignRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *TransitSignRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *TransitSignRequest) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *TransitSignRequest) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *TransitSignRequest) SetContext(v string) {
	o.Context = &v
}

// GetHashAlgorithm returns the HashAlgorithm field value if set, zero value otherwise.
func (o *TransitSignRequest) GetHashAlgorithm() string {
	if o == nil || o.HashAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.HashAlgorithm
}

// GetHashAlgorithmOk returns a tuple with the HashAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetHashAlgorithmOk() (*string, bool) {
	if o == nil || o.HashAlgorithm == nil {
		return nil, false
	}
	return o.HashAlgorithm, true
}

// HasHashAlgorithm returns a boolean if a field has been set.
func (o *TransitSignRequest) HasHashAlgorithm() bool {
	if o != nil && o.HashAlgorithm != nil {
		return true
	}

	return false
}

// SetHashAlgorithm gets a reference to the given string and assigns it to the HashAlgorithm field.
func (o *TransitSignRequest) SetHashAlgorithm(v string) {
	o.HashAlgorithm = &v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *TransitSignRequest) GetInput() string {
	if o == nil || o.Input == nil {
		var ret string
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetInputOk() (*string, bool) {
	if o == nil || o.Input == nil {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *TransitSignRequest) HasInput() bool {
	if o != nil && o.Input != nil {
		return true
	}

	return false
}

// SetInput gets a reference to the given string and assigns it to the Input field.
func (o *TransitSignRequest) SetInput(v string) {
	o.Input = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *TransitSignRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *TransitSignRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *TransitSignRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

// GetMarshalingAlgorithm returns the MarshalingAlgorithm field value if set, zero value otherwise.
func (o *TransitSignRequest) GetMarshalingAlgorithm() string {
	if o == nil || o.MarshalingAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.MarshalingAlgorithm
}

// GetMarshalingAlgorithmOk returns a tuple with the MarshalingAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetMarshalingAlgorithmOk() (*string, bool) {
	if o == nil || o.MarshalingAlgorithm == nil {
		return nil, false
	}
	return o.MarshalingAlgorithm, true
}

// HasMarshalingAlgorithm returns a boolean if a field has been set.
func (o *TransitSignRequest) HasMarshalingAlgorithm() bool {
	if o != nil && o.MarshalingAlgorithm != nil {
		return true
	}

	return false
}

// SetMarshalingAlgorithm gets a reference to the given string and assigns it to the MarshalingAlgorithm field.
func (o *TransitSignRequest) SetMarshalingAlgorithm(v string) {
	o.MarshalingAlgorithm = &v
}

// GetPrehashed returns the Prehashed field value if set, zero value otherwise.
func (o *TransitSignRequest) GetPrehashed() bool {
	if o == nil || o.Prehashed == nil {
		var ret bool
		return ret
	}
	return *o.Prehashed
}

// GetPrehashedOk returns a tuple with the Prehashed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetPrehashedOk() (*bool, bool) {
	if o == nil || o.Prehashed == nil {
		return nil, false
	}
	return o.Prehashed, true
}

// HasPrehashed returns a boolean if a field has been set.
func (o *TransitSignRequest) HasPrehashed() bool {
	if o != nil && o.Prehashed != nil {
		return true
	}

	return false
}

// SetPrehashed gets a reference to the given bool and assigns it to the Prehashed field.
func (o *TransitSignRequest) SetPrehashed(v bool) {
	o.Prehashed = &v
}

// GetSignatureAlgorithm returns the SignatureAlgorithm field value if set, zero value otherwise.
func (o *TransitSignRequest) GetSignatureAlgorithm() string {
	if o == nil || o.SignatureAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.SignatureAlgorithm
}

// GetSignatureAlgorithmOk returns a tuple with the SignatureAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetSignatureAlgorithmOk() (*string, bool) {
	if o == nil || o.SignatureAlgorithm == nil {
		return nil, false
	}
	return o.SignatureAlgorithm, true
}

// HasSignatureAlgorithm returns a boolean if a field has been set.
func (o *TransitSignRequest) HasSignatureAlgorithm() bool {
	if o != nil && o.SignatureAlgorithm != nil {
		return true
	}

	return false
}

// SetSignatureAlgorithm gets a reference to the given string and assigns it to the SignatureAlgorithm field.
func (o *TransitSignRequest) SetSignatureAlgorithm(v string) {
	o.SignatureAlgorithm = &v
}

// GetUrlalgorithm returns the Urlalgorithm field value if set, zero value otherwise.
func (o *TransitSignRequest) GetUrlalgorithm() string {
	if o == nil || o.Urlalgorithm == nil {
		var ret string
		return ret
	}
	return *o.Urlalgorithm
}

// GetUrlalgorithmOk returns a tuple with the Urlalgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitSignRequest) GetUrlalgorithmOk() (*string, bool) {
	if o == nil || o.Urlalgorithm == nil {
		return nil, false
	}
	return o.Urlalgorithm, true
}

// HasUrlalgorithm returns a boolean if a field has been set.
func (o *TransitSignRequest) HasUrlalgorithm() bool {
	if o != nil && o.Urlalgorithm != nil {
		return true
	}

	return false
}

// SetUrlalgorithm gets a reference to the given string and assigns it to the Urlalgorithm field.
func (o *TransitSignRequest) SetUrlalgorithm(v string) {
	o.Urlalgorithm = &v
}

func (o TransitSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.HashAlgorithm != nil {
		toSerialize["hash_algorithm"] = o.HashAlgorithm
	}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	if o.MarshalingAlgorithm != nil {
		toSerialize["marshaling_algorithm"] = o.MarshalingAlgorithm
	}
	if o.Prehashed != nil {
		toSerialize["prehashed"] = o.Prehashed
	}
	if o.SignatureAlgorithm != nil {
		toSerialize["signature_algorithm"] = o.SignatureAlgorithm
	}
	if o.Urlalgorithm != nil {
		toSerialize["urlalgorithm"] = o.Urlalgorithm
	}
	return json.Marshal(toSerialize)
}

type NullableTransitSignRequest struct {
	value *TransitSignRequest
	isSet bool
}

func (v NullableTransitSignRequest) Get() *TransitSignRequest {
	return v.value
}

func (v *NullableTransitSignRequest) Set(val *TransitSignRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitSignRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitSignRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitSignRequest(val *TransitSignRequest) *NullableTransitSignRequest {
	return &NullableTransitSignRequest{value: val, isSet: true}
}

func (v NullableTransitSignRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitSignRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


