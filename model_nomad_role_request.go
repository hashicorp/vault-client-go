/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// NomadRoleRequest struct for NomadRoleRequest
type NomadRoleRequest struct {
	// Boolean value describing if the token should be global or not. Defaults to false.
	Global *bool `json:"global,omitempty"`
	// Comma-separated string or list of policies as previously created in Nomad. Required for 'client' token.
	Policies []string `json:"policies,omitempty"`
	// Which type of token to create: 'client' or 'management'. If a 'management' token, the \"policies\" parameter is not required. Defaults to 'client'.
	Type *string `json:"type,omitempty"`
}

// NewNomadRoleRequest instantiates a new NomadRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNomadRoleRequest() *NomadRoleRequest {
	this := NomadRoleRequest{}
	var type_ string = "client"
	this.Type = &type_
	return &this
}

// NewNomadRoleRequestWithDefaults instantiates a new NomadRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNomadRoleRequestWithDefaults() *NomadRoleRequest {
	this := NomadRoleRequest{}
	var type_ string = "client"
	this.Type = &type_
	return &this
}

// GetGlobal returns the Global field value if set, zero value otherwise.
func (o *NomadRoleRequest) GetGlobal() bool {
	if o == nil || o.Global == nil {
		var ret bool
		return ret
	}
	return *o.Global
}

// GetGlobalOk returns a tuple with the Global field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadRoleRequest) GetGlobalOk() (*bool, bool) {
	if o == nil || o.Global == nil {
		return nil, false
	}
	return o.Global, true
}

// HasGlobal returns a boolean if a field has been set.
func (o *NomadRoleRequest) HasGlobal() bool {
	if o != nil && o.Global != nil {
		return true
	}

	return false
}

// SetGlobal gets a reference to the given bool and assigns it to the Global field.
func (o *NomadRoleRequest) SetGlobal(v bool) {
	o.Global = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *NomadRoleRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadRoleRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *NomadRoleRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *NomadRoleRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NomadRoleRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadRoleRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *NomadRoleRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *NomadRoleRequest) SetType(v string) {
	o.Type = &v
}

func (o NomadRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Global != nil {
		toSerialize["global"] = o.Global
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableNomadRoleRequest struct {
	value *NomadRoleRequest
	isSet bool
}

func (v NullableNomadRoleRequest) Get() *NomadRoleRequest {
	return v.value
}

func (v *NullableNomadRoleRequest) Set(val *NomadRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNomadRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNomadRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNomadRoleRequest(val *NomadRoleRequest) *NullableNomadRoleRequest {
	return &NullableNomadRoleRequest{value: val, isSet: true}
}

func (v NullableNomadRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNomadRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


