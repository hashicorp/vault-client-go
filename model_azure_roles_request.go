/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// AzureRolesRequest struct for AzureRolesRequest
type AzureRolesRequest struct {
	// Application Object ID to use for static service principal credentials.
	ApplicationObjectId *string `json:"application_object_id,omitempty"`
	// JSON list of Azure groups to add the service principal to.
	AzureGroups *string `json:"azure_groups,omitempty"`
	// JSON list of Azure roles to assign.
	AzureRoles *string `json:"azure_roles,omitempty"`
	// Maximum time a service principal. If not set or set to 0, will use system default.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Default lease for generated credentials. If not set or set to 0, will use system default.
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewAzureRolesRequest instantiates a new AzureRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureRolesRequest() *AzureRolesRequest {
	this := AzureRolesRequest{}
	return &this
}

// NewAzureRolesRequestWithDefaults instantiates a new AzureRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureRolesRequestWithDefaults() *AzureRolesRequest {
	this := AzureRolesRequest{}
	return &this
}

// GetApplicationObjectId returns the ApplicationObjectId field value if set, zero value otherwise.
func (o *AzureRolesRequest) GetApplicationObjectId() string {
	if o == nil || o.ApplicationObjectId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationObjectId
}

// GetApplicationObjectIdOk returns a tuple with the ApplicationObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRolesRequest) GetApplicationObjectIdOk() (*string, bool) {
	if o == nil || o.ApplicationObjectId == nil {
		return nil, false
	}
	return o.ApplicationObjectId, true
}

// HasApplicationObjectId returns a boolean if a field has been set.
func (o *AzureRolesRequest) HasApplicationObjectId() bool {
	if o != nil && o.ApplicationObjectId != nil {
		return true
	}

	return false
}

// SetApplicationObjectId gets a reference to the given string and assigns it to the ApplicationObjectId field.
func (o *AzureRolesRequest) SetApplicationObjectId(v string) {
	o.ApplicationObjectId = &v
}

// GetAzureGroups returns the AzureGroups field value if set, zero value otherwise.
func (o *AzureRolesRequest) GetAzureGroups() string {
	if o == nil || o.AzureGroups == nil {
		var ret string
		return ret
	}
	return *o.AzureGroups
}

// GetAzureGroupsOk returns a tuple with the AzureGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRolesRequest) GetAzureGroupsOk() (*string, bool) {
	if o == nil || o.AzureGroups == nil {
		return nil, false
	}
	return o.AzureGroups, true
}

// HasAzureGroups returns a boolean if a field has been set.
func (o *AzureRolesRequest) HasAzureGroups() bool {
	if o != nil && o.AzureGroups != nil {
		return true
	}

	return false
}

// SetAzureGroups gets a reference to the given string and assigns it to the AzureGroups field.
func (o *AzureRolesRequest) SetAzureGroups(v string) {
	o.AzureGroups = &v
}

// GetAzureRoles returns the AzureRoles field value if set, zero value otherwise.
func (o *AzureRolesRequest) GetAzureRoles() string {
	if o == nil || o.AzureRoles == nil {
		var ret string
		return ret
	}
	return *o.AzureRoles
}

// GetAzureRolesOk returns a tuple with the AzureRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRolesRequest) GetAzureRolesOk() (*string, bool) {
	if o == nil || o.AzureRoles == nil {
		return nil, false
	}
	return o.AzureRoles, true
}

// HasAzureRoles returns a boolean if a field has been set.
func (o *AzureRolesRequest) HasAzureRoles() bool {
	if o != nil && o.AzureRoles != nil {
		return true
	}

	return false
}

// SetAzureRoles gets a reference to the given string and assigns it to the AzureRoles field.
func (o *AzureRolesRequest) SetAzureRoles(v string) {
	o.AzureRoles = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *AzureRolesRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRolesRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *AzureRolesRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *AzureRolesRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *AzureRolesRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRolesRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *AzureRolesRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *AzureRolesRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o AzureRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationObjectId != nil {
		toSerialize["application_object_id"] = o.ApplicationObjectId
	}
	if o.AzureGroups != nil {
		toSerialize["azure_groups"] = o.AzureGroups
	}
	if o.AzureRoles != nil {
		toSerialize["azure_roles"] = o.AzureRoles
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableAzureRolesRequest struct {
	value *AzureRolesRequest
	isSet bool
}

func (v NullableAzureRolesRequest) Get() *AzureRolesRequest {
	return v.value
}

func (v *NullableAzureRolesRequest) Set(val *AzureRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureRolesRequest(val *AzureRolesRequest) *NullableAzureRolesRequest {
	return &NullableAzureRolesRequest{value: val, isSet: true}
}

func (v NullableAzureRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


