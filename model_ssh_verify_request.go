/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// SshVerifyRequest struct for SshVerifyRequest
type SshVerifyRequest struct {
	// [Required] One-Time-Key that needs to be validated
	Otp *string `json:"otp,omitempty"`
}

// NewSshVerifyRequest instantiates a new SshVerifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshVerifyRequest() *SshVerifyRequest {
	this := SshVerifyRequest{}
	return &this
}

// NewSshVerifyRequestWithDefaults instantiates a new SshVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshVerifyRequestWithDefaults() *SshVerifyRequest {
	this := SshVerifyRequest{}
	return &this
}

// GetOtp returns the Otp field value if set, zero value otherwise.
func (o *SshVerifyRequest) GetOtp() string {
	if o == nil || o.Otp == nil {
		var ret string
		return ret
	}
	return *o.Otp
}

// GetOtpOk returns a tuple with the Otp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshVerifyRequest) GetOtpOk() (*string, bool) {
	if o == nil || o.Otp == nil {
		return nil, false
	}
	return o.Otp, true
}

// HasOtp returns a boolean if a field has been set.
func (o *SshVerifyRequest) HasOtp() bool {
	if o != nil && o.Otp != nil {
		return true
	}

	return false
}

// SetOtp gets a reference to the given string and assigns it to the Otp field.
func (o *SshVerifyRequest) SetOtp(v string) {
	o.Otp = &v
}

func (o SshVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Otp != nil {
		toSerialize["otp"] = o.Otp
	}
	return json.Marshal(toSerialize)
}

type NullableSshVerifyRequest struct {
	value *SshVerifyRequest
	isSet bool
}

func (v NullableSshVerifyRequest) Get() *SshVerifyRequest {
	return v.value
}

func (v *NullableSshVerifyRequest) Set(val *SshVerifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshVerifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshVerifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshVerifyRequest(val *SshVerifyRequest) *NullableSshVerifyRequest {
	return &NullableSshVerifyRequest{value: val, isSet: true}
}

func (v NullableSshVerifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshVerifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


