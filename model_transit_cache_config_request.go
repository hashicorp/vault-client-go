/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// TransitCacheConfigRequest struct for TransitCacheConfigRequest
type TransitCacheConfigRequest struct {
	// Size of cache, use 0 for an unlimited cache size, defaults to 0
	Size *int32 `json:"size,omitempty"`
}

// NewTransitCacheConfigRequest instantiates a new TransitCacheConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransitCacheConfigRequest() *TransitCacheConfigRequest {
	this := TransitCacheConfigRequest{}
	var size int32 = 0
	this.Size = &size
	return &this
}

// NewTransitCacheConfigRequestWithDefaults instantiates a new TransitCacheConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitCacheConfigRequestWithDefaults() *TransitCacheConfigRequest {
	this := TransitCacheConfigRequest{}
	var size int32 = 0
	this.Size = &size
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *TransitCacheConfigRequest) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransitCacheConfigRequest) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *TransitCacheConfigRequest) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *TransitCacheConfigRequest) SetSize(v int32) {
	o.Size = &v
}

func (o TransitCacheConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	return json.Marshal(toSerialize)
}

type NullableTransitCacheConfigRequest struct {
	value *TransitCacheConfigRequest
	isSet bool
}

func (v NullableTransitCacheConfigRequest) Get() *TransitCacheConfigRequest {
	return v.value
}

func (v *NullableTransitCacheConfigRequest) Set(val *TransitCacheConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitCacheConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitCacheConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitCacheConfigRequest(val *TransitCacheConfigRequest) *NullableTransitCacheConfigRequest {
	return &NullableTransitCacheConfigRequest{value: val, isSet: true}
}

func (v NullableTransitCacheConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitCacheConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


