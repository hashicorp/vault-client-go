/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// SystemInitRequest struct for SystemInitRequest
type SystemInitRequest struct {
	// Specifies an array of PGP public keys used to encrypt the output unseal keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as `secret_shares`.
	PgpKeys []string `json:"pgp_keys,omitempty"`
	// Specifies an array of PGP public keys used to encrypt the output recovery keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as `recovery_shares`.
	RecoveryPgpKeys []string `json:"recovery_pgp_keys,omitempty"`
	// Specifies the number of shares to split the recovery key into.
	RecoveryShares *int32 `json:"recovery_shares,omitempty"`
	// Specifies the number of shares required to reconstruct the recovery key. This must be less than or equal to `recovery_shares`.
	RecoveryThreshold *int32 `json:"recovery_threshold,omitempty"`
	// Specifies a PGP public key used to encrypt the initial root token. The key must be base64-encoded from its original binary representation.
	RootTokenPgpKey *string `json:"root_token_pgp_key,omitempty"`
	// Specifies the number of shares to split the unseal key into.
	SecretShares *int32 `json:"secret_shares,omitempty"`
	// Specifies the number of shares required to reconstruct the unseal key. This must be less than or equal secret_shares. If using Vault HSM with auto-unsealing, this value must be the same as `secret_shares`.
	SecretThreshold *int32 `json:"secret_threshold,omitempty"`
	// Specifies the number of shares that should be encrypted by the HSM and stored for auto-unsealing. Currently must be the same as `secret_shares`.
	StoredShares *int32 `json:"stored_shares,omitempty"`
}

// NewSystemInitRequest instantiates a new SystemInitRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemInitRequest() *SystemInitRequest {
	this := SystemInitRequest{}
	return &this
}

// NewSystemInitRequestWithDefaults instantiates a new SystemInitRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemInitRequestWithDefaults() *SystemInitRequest {
	this := SystemInitRequest{}
	return &this
}

// GetPgpKeys returns the PgpKeys field value if set, zero value otherwise.
func (o *SystemInitRequest) GetPgpKeys() []string {
	if o == nil || o.PgpKeys == nil {
		var ret []string
		return ret
	}
	return o.PgpKeys
}

// GetPgpKeysOk returns a tuple with the PgpKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetPgpKeysOk() ([]string, bool) {
	if o == nil || o.PgpKeys == nil {
		return nil, false
	}
	return o.PgpKeys, true
}

// HasPgpKeys returns a boolean if a field has been set.
func (o *SystemInitRequest) HasPgpKeys() bool {
	if o != nil && o.PgpKeys != nil {
		return true
	}

	return false
}

// SetPgpKeys gets a reference to the given []string and assigns it to the PgpKeys field.
func (o *SystemInitRequest) SetPgpKeys(v []string) {
	o.PgpKeys = v
}

// GetRecoveryPgpKeys returns the RecoveryPgpKeys field value if set, zero value otherwise.
func (o *SystemInitRequest) GetRecoveryPgpKeys() []string {
	if o == nil || o.RecoveryPgpKeys == nil {
		var ret []string
		return ret
	}
	return o.RecoveryPgpKeys
}

// GetRecoveryPgpKeysOk returns a tuple with the RecoveryPgpKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetRecoveryPgpKeysOk() ([]string, bool) {
	if o == nil || o.RecoveryPgpKeys == nil {
		return nil, false
	}
	return o.RecoveryPgpKeys, true
}

// HasRecoveryPgpKeys returns a boolean if a field has been set.
func (o *SystemInitRequest) HasRecoveryPgpKeys() bool {
	if o != nil && o.RecoveryPgpKeys != nil {
		return true
	}

	return false
}

// SetRecoveryPgpKeys gets a reference to the given []string and assigns it to the RecoveryPgpKeys field.
func (o *SystemInitRequest) SetRecoveryPgpKeys(v []string) {
	o.RecoveryPgpKeys = v
}

// GetRecoveryShares returns the RecoveryShares field value if set, zero value otherwise.
func (o *SystemInitRequest) GetRecoveryShares() int32 {
	if o == nil || o.RecoveryShares == nil {
		var ret int32
		return ret
	}
	return *o.RecoveryShares
}

// GetRecoverySharesOk returns a tuple with the RecoveryShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetRecoverySharesOk() (*int32, bool) {
	if o == nil || o.RecoveryShares == nil {
		return nil, false
	}
	return o.RecoveryShares, true
}

// HasRecoveryShares returns a boolean if a field has been set.
func (o *SystemInitRequest) HasRecoveryShares() bool {
	if o != nil && o.RecoveryShares != nil {
		return true
	}

	return false
}

// SetRecoveryShares gets a reference to the given int32 and assigns it to the RecoveryShares field.
func (o *SystemInitRequest) SetRecoveryShares(v int32) {
	o.RecoveryShares = &v
}

// GetRecoveryThreshold returns the RecoveryThreshold field value if set, zero value otherwise.
func (o *SystemInitRequest) GetRecoveryThreshold() int32 {
	if o == nil || o.RecoveryThreshold == nil {
		var ret int32
		return ret
	}
	return *o.RecoveryThreshold
}

// GetRecoveryThresholdOk returns a tuple with the RecoveryThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetRecoveryThresholdOk() (*int32, bool) {
	if o == nil || o.RecoveryThreshold == nil {
		return nil, false
	}
	return o.RecoveryThreshold, true
}

// HasRecoveryThreshold returns a boolean if a field has been set.
func (o *SystemInitRequest) HasRecoveryThreshold() bool {
	if o != nil && o.RecoveryThreshold != nil {
		return true
	}

	return false
}

// SetRecoveryThreshold gets a reference to the given int32 and assigns it to the RecoveryThreshold field.
func (o *SystemInitRequest) SetRecoveryThreshold(v int32) {
	o.RecoveryThreshold = &v
}

// GetRootTokenPgpKey returns the RootTokenPgpKey field value if set, zero value otherwise.
func (o *SystemInitRequest) GetRootTokenPgpKey() string {
	if o == nil || o.RootTokenPgpKey == nil {
		var ret string
		return ret
	}
	return *o.RootTokenPgpKey
}

// GetRootTokenPgpKeyOk returns a tuple with the RootTokenPgpKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetRootTokenPgpKeyOk() (*string, bool) {
	if o == nil || o.RootTokenPgpKey == nil {
		return nil, false
	}
	return o.RootTokenPgpKey, true
}

// HasRootTokenPgpKey returns a boolean if a field has been set.
func (o *SystemInitRequest) HasRootTokenPgpKey() bool {
	if o != nil && o.RootTokenPgpKey != nil {
		return true
	}

	return false
}

// SetRootTokenPgpKey gets a reference to the given string and assigns it to the RootTokenPgpKey field.
func (o *SystemInitRequest) SetRootTokenPgpKey(v string) {
	o.RootTokenPgpKey = &v
}

// GetSecretShares returns the SecretShares field value if set, zero value otherwise.
func (o *SystemInitRequest) GetSecretShares() int32 {
	if o == nil || o.SecretShares == nil {
		var ret int32
		return ret
	}
	return *o.SecretShares
}

// GetSecretSharesOk returns a tuple with the SecretShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetSecretSharesOk() (*int32, bool) {
	if o == nil || o.SecretShares == nil {
		return nil, false
	}
	return o.SecretShares, true
}

// HasSecretShares returns a boolean if a field has been set.
func (o *SystemInitRequest) HasSecretShares() bool {
	if o != nil && o.SecretShares != nil {
		return true
	}

	return false
}

// SetSecretShares gets a reference to the given int32 and assigns it to the SecretShares field.
func (o *SystemInitRequest) SetSecretShares(v int32) {
	o.SecretShares = &v
}

// GetSecretThreshold returns the SecretThreshold field value if set, zero value otherwise.
func (o *SystemInitRequest) GetSecretThreshold() int32 {
	if o == nil || o.SecretThreshold == nil {
		var ret int32
		return ret
	}
	return *o.SecretThreshold
}

// GetSecretThresholdOk returns a tuple with the SecretThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetSecretThresholdOk() (*int32, bool) {
	if o == nil || o.SecretThreshold == nil {
		return nil, false
	}
	return o.SecretThreshold, true
}

// HasSecretThreshold returns a boolean if a field has been set.
func (o *SystemInitRequest) HasSecretThreshold() bool {
	if o != nil && o.SecretThreshold != nil {
		return true
	}

	return false
}

// SetSecretThreshold gets a reference to the given int32 and assigns it to the SecretThreshold field.
func (o *SystemInitRequest) SetSecretThreshold(v int32) {
	o.SecretThreshold = &v
}

// GetStoredShares returns the StoredShares field value if set, zero value otherwise.
func (o *SystemInitRequest) GetStoredShares() int32 {
	if o == nil || o.StoredShares == nil {
		var ret int32
		return ret
	}
	return *o.StoredShares
}

// GetStoredSharesOk returns a tuple with the StoredShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInitRequest) GetStoredSharesOk() (*int32, bool) {
	if o == nil || o.StoredShares == nil {
		return nil, false
	}
	return o.StoredShares, true
}

// HasStoredShares returns a boolean if a field has been set.
func (o *SystemInitRequest) HasStoredShares() bool {
	if o != nil && o.StoredShares != nil {
		return true
	}

	return false
}

// SetStoredShares gets a reference to the given int32 and assigns it to the StoredShares field.
func (o *SystemInitRequest) SetStoredShares(v int32) {
	o.StoredShares = &v
}

func (o SystemInitRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PgpKeys != nil {
		toSerialize["pgp_keys"] = o.PgpKeys
	}
	if o.RecoveryPgpKeys != nil {
		toSerialize["recovery_pgp_keys"] = o.RecoveryPgpKeys
	}
	if o.RecoveryShares != nil {
		toSerialize["recovery_shares"] = o.RecoveryShares
	}
	if o.RecoveryThreshold != nil {
		toSerialize["recovery_threshold"] = o.RecoveryThreshold
	}
	if o.RootTokenPgpKey != nil {
		toSerialize["root_token_pgp_key"] = o.RootTokenPgpKey
	}
	if o.SecretShares != nil {
		toSerialize["secret_shares"] = o.SecretShares
	}
	if o.SecretThreshold != nil {
		toSerialize["secret_threshold"] = o.SecretThreshold
	}
	if o.StoredShares != nil {
		toSerialize["stored_shares"] = o.StoredShares
	}
	return json.Marshal(toSerialize)
}

type NullableSystemInitRequest struct {
	value *SystemInitRequest
	isSet bool
}

func (v NullableSystemInitRequest) Get() *SystemInitRequest {
	return v.value
}

func (v *NullableSystemInitRequest) Set(val *SystemInitRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemInitRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemInitRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemInitRequest(val *SystemInitRequest) *NullableSystemInitRequest {
	return &NullableSystemInitRequest{value: val, isSet: true}
}

func (v NullableSystemInitRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemInitRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


