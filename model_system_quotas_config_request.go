/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// SystemQuotasConfigRequest struct for SystemQuotasConfigRequest
type SystemQuotasConfigRequest struct {
	// If set, starts audit logging of requests that get rejected due to rate limit quota rule violations.
	EnableRateLimitAuditLogging *bool `json:"enable_rate_limit_audit_logging,omitempty"`
	// If set, additional rate limit quota HTTP headers will be added to responses.
	EnableRateLimitResponseHeaders *bool `json:"enable_rate_limit_response_headers,omitempty"`
	// Specifies the list of exempt paths from all rate limit quotas. If empty no paths will be exempt.
	RateLimitExemptPaths []string `json:"rate_limit_exempt_paths,omitempty"`
}

// NewSystemQuotasConfigRequest instantiates a new SystemQuotasConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemQuotasConfigRequest() *SystemQuotasConfigRequest {
	this := SystemQuotasConfigRequest{}
	return &this
}

// NewSystemQuotasConfigRequestWithDefaults instantiates a new SystemQuotasConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemQuotasConfigRequestWithDefaults() *SystemQuotasConfigRequest {
	this := SystemQuotasConfigRequest{}
	return &this
}

// GetEnableRateLimitAuditLogging returns the EnableRateLimitAuditLogging field value if set, zero value otherwise.
func (o *SystemQuotasConfigRequest) GetEnableRateLimitAuditLogging() bool {
	if o == nil || o.EnableRateLimitAuditLogging == nil {
		var ret bool
		return ret
	}
	return *o.EnableRateLimitAuditLogging
}

// GetEnableRateLimitAuditLoggingOk returns a tuple with the EnableRateLimitAuditLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemQuotasConfigRequest) GetEnableRateLimitAuditLoggingOk() (*bool, bool) {
	if o == nil || o.EnableRateLimitAuditLogging == nil {
		return nil, false
	}
	return o.EnableRateLimitAuditLogging, true
}

// HasEnableRateLimitAuditLogging returns a boolean if a field has been set.
func (o *SystemQuotasConfigRequest) HasEnableRateLimitAuditLogging() bool {
	if o != nil && o.EnableRateLimitAuditLogging != nil {
		return true
	}

	return false
}

// SetEnableRateLimitAuditLogging gets a reference to the given bool and assigns it to the EnableRateLimitAuditLogging field.
func (o *SystemQuotasConfigRequest) SetEnableRateLimitAuditLogging(v bool) {
	o.EnableRateLimitAuditLogging = &v
}

// GetEnableRateLimitResponseHeaders returns the EnableRateLimitResponseHeaders field value if set, zero value otherwise.
func (o *SystemQuotasConfigRequest) GetEnableRateLimitResponseHeaders() bool {
	if o == nil || o.EnableRateLimitResponseHeaders == nil {
		var ret bool
		return ret
	}
	return *o.EnableRateLimitResponseHeaders
}

// GetEnableRateLimitResponseHeadersOk returns a tuple with the EnableRateLimitResponseHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemQuotasConfigRequest) GetEnableRateLimitResponseHeadersOk() (*bool, bool) {
	if o == nil || o.EnableRateLimitResponseHeaders == nil {
		return nil, false
	}
	return o.EnableRateLimitResponseHeaders, true
}

// HasEnableRateLimitResponseHeaders returns a boolean if a field has been set.
func (o *SystemQuotasConfigRequest) HasEnableRateLimitResponseHeaders() bool {
	if o != nil && o.EnableRateLimitResponseHeaders != nil {
		return true
	}

	return false
}

// SetEnableRateLimitResponseHeaders gets a reference to the given bool and assigns it to the EnableRateLimitResponseHeaders field.
func (o *SystemQuotasConfigRequest) SetEnableRateLimitResponseHeaders(v bool) {
	o.EnableRateLimitResponseHeaders = &v
}

// GetRateLimitExemptPaths returns the RateLimitExemptPaths field value if set, zero value otherwise.
func (o *SystemQuotasConfigRequest) GetRateLimitExemptPaths() []string {
	if o == nil || o.RateLimitExemptPaths == nil {
		var ret []string
		return ret
	}
	return o.RateLimitExemptPaths
}

// GetRateLimitExemptPathsOk returns a tuple with the RateLimitExemptPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemQuotasConfigRequest) GetRateLimitExemptPathsOk() ([]string, bool) {
	if o == nil || o.RateLimitExemptPaths == nil {
		return nil, false
	}
	return o.RateLimitExemptPaths, true
}

// HasRateLimitExemptPaths returns a boolean if a field has been set.
func (o *SystemQuotasConfigRequest) HasRateLimitExemptPaths() bool {
	if o != nil && o.RateLimitExemptPaths != nil {
		return true
	}

	return false
}

// SetRateLimitExemptPaths gets a reference to the given []string and assigns it to the RateLimitExemptPaths field.
func (o *SystemQuotasConfigRequest) SetRateLimitExemptPaths(v []string) {
	o.RateLimitExemptPaths = v
}

func (o SystemQuotasConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EnableRateLimitAuditLogging != nil {
		toSerialize["enable_rate_limit_audit_logging"] = o.EnableRateLimitAuditLogging
	}
	if o.EnableRateLimitResponseHeaders != nil {
		toSerialize["enable_rate_limit_response_headers"] = o.EnableRateLimitResponseHeaders
	}
	if o.RateLimitExemptPaths != nil {
		toSerialize["rate_limit_exempt_paths"] = o.RateLimitExemptPaths
	}
	return json.Marshal(toSerialize)
}

type NullableSystemQuotasConfigRequest struct {
	value *SystemQuotasConfigRequest
	isSet bool
}

func (v NullableSystemQuotasConfigRequest) Get() *SystemQuotasConfigRequest {
	return v.value
}

func (v *NullableSystemQuotasConfigRequest) Set(val *SystemQuotasConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemQuotasConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemQuotasConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemQuotasConfigRequest(val *SystemQuotasConfigRequest) *NullableSystemQuotasConfigRequest {
	return &NullableSystemQuotasConfigRequest{value: val, isSet: true}
}

func (v NullableSystemQuotasConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemQuotasConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


