/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
	"time"
)

// ActiveDirectoryCheckInLibraryRequest struct for ActiveDirectoryCheckInLibraryRequest
type ActiveDirectoryCheckInLibraryRequest struct {
	// The username/logon name for the service accounts to check in.
	ServiceAccountNames []string `json:"service_account_names"`
}

// NewActiveDirectoryCheckInLibraryRequestWithDefaults instantiates a new ActiveDirectoryCheckInLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveDirectoryCheckInLibraryRequestWithDefaults() *ActiveDirectoryCheckInLibraryRequest {
	var this ActiveDirectoryCheckInLibraryRequest

	return &this
}

func (o ActiveDirectoryCheckInLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["service_account_names"] = o.ServiceAccountNames

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ActiveDirectoryCheckInManageLibraryRequest struct for ActiveDirectoryCheckInManageLibraryRequest
type ActiveDirectoryCheckInManageLibraryRequest struct {
	// The username/logon name for the service accounts to check in.
	ServiceAccountNames []string `json:"service_account_names"`
}

// NewActiveDirectoryCheckInManageLibraryRequestWithDefaults instantiates a new ActiveDirectoryCheckInManageLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveDirectoryCheckInManageLibraryRequestWithDefaults() *ActiveDirectoryCheckInManageLibraryRequest {
	var this ActiveDirectoryCheckInManageLibraryRequest

	return &this
}

func (o ActiveDirectoryCheckInManageLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["service_account_names"] = o.ServiceAccountNames

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ActiveDirectoryCheckOutLibraryRequest struct for ActiveDirectoryCheckOutLibraryRequest
type ActiveDirectoryCheckOutLibraryRequest struct {
	// The length of time before the check-out will expire, in seconds.
	Ttl int32 `json:"ttl"`
}

// NewActiveDirectoryCheckOutLibraryRequestWithDefaults instantiates a new ActiveDirectoryCheckOutLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveDirectoryCheckOutLibraryRequestWithDefaults() *ActiveDirectoryCheckOutLibraryRequest {
	var this ActiveDirectoryCheckOutLibraryRequest

	return &this
}

func (o ActiveDirectoryCheckOutLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ActiveDirectoryWriteConfigRequest struct for ActiveDirectoryWriteConfigRequest
type ActiveDirectoryWriteConfigRequest struct {
	// Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).
	AnonymousGroupSearch bool `json:"anonymous_group_search"`
	// LDAP DN for searching for the user DN (optional)
	Binddn string `json:"binddn"`
	// LDAP password for searching for the user DN (optional)
	Bindpass string `json:"bindpass"`
	// If true, case sensitivity will be used when comparing usernames and groups for matching policies.
	CaseSensitiveNames bool `json:"case_sensitive_names"`
	// CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded (optional)
	Certificate string `json:"certificate"`
	// Client certificate to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsCert string `json:"client_tls_cert"`
	// Client certificate key to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsKey string `json:"client_tls_key"`
	// Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true
	DenyNullBind bool `json:"deny_null_bind"`
	// Use anonymous bind to discover the bind DN of a user (optional)
	Discoverdn bool `json:"discoverdn"`
	// Text to insert the password into, ex. \"customPrefix{{PASSWORD}}customSuffix\".
	// Deprecated
	Formatter string `json:"formatter"`
	// LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: \"cn\" or \"memberOf\", etc. Default: cn
	Groupattr string `json:"groupattr"`
	// LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)
	Groupdn string `json:"groupdn"`
	// Go template for querying group membership of user (optional) The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
	Groupfilter string `json:"groupfilter"`
	// Skip LDAP server SSL Certificate verification - VERY insecure (optional)
	InsecureTls bool `json:"insecure_tls"`
	// The number of seconds after a Vault rotation where, if Active Directory shows a later rotation, it should be considered out-of-band.
	LastRotationTolerance int32 `json:"last_rotation_tolerance"`
	// The desired length of passwords that Vault generates.
	// Deprecated
	Length int32 `json:"length"`
	// In seconds, the maximum password time-to-live.
	MaxTtl int32 `json:"max_ttl"`
	// Name of the password policy to use to generate passwords.
	PasswordPolicy string `json:"password_policy"`
	// Timeout, in seconds, for the connection when making requests against the server before returning back an error.
	RequestTimeout int32 `json:"request_timeout"`
	// Issue a StartTLS command after establishing unencrypted connection (optional)
	Starttls bool `json:"starttls"`
	// Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMaxVersion string `json:"tls_max_version"`
	// Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMinVersion string `json:"tls_min_version"`
	// In seconds, the default password time-to-live.
	Ttl int32 `json:"ttl"`
	// Enables userPrincipalDomain login with [username]@UPNDomain (optional)
	Upndomain string `json:"upndomain"`
	// LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.
	Url string `json:"url"`
	// In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.
	UsePre111GroupCnBehavior bool `json:"use_pre111_group_cn_behavior"`
	// If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.
	UseTokenGroups bool `json:"use_token_groups"`
	// Attribute used for users (default: cn)
	Userattr string `json:"userattr"`
	// LDAP domain to use for users (eg: ou=People,dc=example,dc=org)
	Userdn string `json:"userdn"`
	// Go template for LDAP user search filer (optional) The template can access the following context variables: UserAttr, Username Default: ({{.UserAttr}}={{.Username}})
	Userfilter string `json:"userfilter"`
	// If true, sets the alias name to the username
	UsernameAsAlias bool `json:"username_as_alias"`
}

// NewActiveDirectoryWriteConfigRequestWithDefaults instantiates a new ActiveDirectoryWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveDirectoryWriteConfigRequestWithDefaults() *ActiveDirectoryWriteConfigRequest {
	var this ActiveDirectoryWriteConfigRequest

	this.AnonymousGroupSearch = false
	this.DenyNullBind = true
	this.Groupattr = "cn"
	this.Groupfilter = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.LastRotationTolerance = 5
	this.Length = 64
	this.TlsMaxVersion = "tls12"
	this.TlsMinVersion = "tls12"
	this.Url = "ldap://127.0.0.1"
	this.UseTokenGroups = false
	this.Userattr = "cn"
	this.Userfilter = "({{.UserAttr}}={{.Username}})"
	this.UsernameAsAlias = false

	return &this
}

func (o ActiveDirectoryWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["anonymous_group_search"] = o.AnonymousGroupSearch
	toSerialize["binddn"] = o.Binddn
	toSerialize["bindpass"] = o.Bindpass
	toSerialize["case_sensitive_names"] = o.CaseSensitiveNames
	toSerialize["certificate"] = o.Certificate
	toSerialize["client_tls_cert"] = o.ClientTlsCert
	toSerialize["client_tls_key"] = o.ClientTlsKey
	toSerialize["deny_null_bind"] = o.DenyNullBind
	toSerialize["discoverdn"] = o.Discoverdn
	toSerialize["formatter"] = o.Formatter
	toSerialize["groupattr"] = o.Groupattr
	toSerialize["groupdn"] = o.Groupdn
	toSerialize["groupfilter"] = o.Groupfilter
	toSerialize["insecure_tls"] = o.InsecureTls
	toSerialize["last_rotation_tolerance"] = o.LastRotationTolerance
	toSerialize["length"] = o.Length
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["password_policy"] = o.PasswordPolicy
	toSerialize["request_timeout"] = o.RequestTimeout
	toSerialize["starttls"] = o.Starttls
	toSerialize["tls_max_version"] = o.TlsMaxVersion
	toSerialize["tls_min_version"] = o.TlsMinVersion
	toSerialize["ttl"] = o.Ttl
	toSerialize["upndomain"] = o.Upndomain
	toSerialize["url"] = o.Url
	toSerialize["use_pre111_group_cn_behavior"] = o.UsePre111GroupCnBehavior
	toSerialize["use_token_groups"] = o.UseTokenGroups
	toSerialize["userattr"] = o.Userattr
	toSerialize["userdn"] = o.Userdn
	toSerialize["userfilter"] = o.Userfilter
	toSerialize["username_as_alias"] = o.UsernameAsAlias

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ActiveDirectoryWriteLibraryRequest struct for ActiveDirectoryWriteLibraryRequest
type ActiveDirectoryWriteLibraryRequest struct {
	// Disable the default behavior of requiring that check-ins are performed by the entity that checked them out.
	DisableCheckInEnforcement bool `json:"disable_check_in_enforcement"`
	// In seconds, the max amount of time a check-out's renewals should last. Defaults to 24 hours.
	MaxTtl int32 `json:"max_ttl"`
	// The username/logon name for the service accounts with which this set will be associated.
	ServiceAccountNames []string `json:"service_account_names"`
	// In seconds, the amount of time a check-out should last. Defaults to 24 hours.
	Ttl int32 `json:"ttl"`
}

// NewActiveDirectoryWriteLibraryRequestWithDefaults instantiates a new ActiveDirectoryWriteLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveDirectoryWriteLibraryRequestWithDefaults() *ActiveDirectoryWriteLibraryRequest {
	var this ActiveDirectoryWriteLibraryRequest

	this.DisableCheckInEnforcement = false
	this.MaxTtl = 86400
	this.Ttl = 86400

	return &this
}

func (o ActiveDirectoryWriteLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disable_check_in_enforcement"] = o.DisableCheckInEnforcement
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["service_account_names"] = o.ServiceAccountNames
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ActiveDirectoryWriteRoleRequest struct for ActiveDirectoryWriteRoleRequest
type ActiveDirectoryWriteRoleRequest struct {
	// The username/logon name for the service account with which this role will be associated.
	ServiceAccountName string `json:"service_account_name"`
	// In seconds, the default password time-to-live.
	Ttl int32 `json:"ttl"`
}

// NewActiveDirectoryWriteRoleRequestWithDefaults instantiates a new ActiveDirectoryWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveDirectoryWriteRoleRequestWithDefaults() *ActiveDirectoryWriteRoleRequest {
	var this ActiveDirectoryWriteRoleRequest

	return &this
}

func (o ActiveDirectoryWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["service_account_name"] = o.ServiceAccountName
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AliCloudLoginRequest struct for AliCloudLoginRequest
type AliCloudLoginRequest struct {
	// The request headers. This must include the headers over which AliCloud has included a signature.
	IdentityRequestHeaders string `json:"identity_request_headers"`
	// Base64-encoded full URL against which to make the AliCloud request.
	IdentityRequestUrl string `json:"identity_request_url"`
	// Name of the role against which the login is being attempted. If 'role' is not specified, then the login endpoint looks for a role name in the ARN returned by the GetCallerIdentity request. If a matching role is not found, login fails.
	Role string `json:"role"`
}

// NewAliCloudLoginRequestWithDefaults instantiates a new AliCloudLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAliCloudLoginRequestWithDefaults() *AliCloudLoginRequest {
	var this AliCloudLoginRequest

	return &this
}

func (o AliCloudLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["identity_request_headers"] = o.IdentityRequestHeaders
	toSerialize["identity_request_url"] = o.IdentityRequestUrl
	toSerialize["role"] = o.Role

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AliCloudWriteAuthRoleRequest struct for AliCloudWriteAuthRoleRequest
type AliCloudWriteAuthRoleRequest struct {
	// ARN of the RAM to bind to this role.
	Arn string `json:"arn"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl int32 `json:"max_ttl"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl int32 `json:"ttl"`
}

// NewAliCloudWriteAuthRoleRequestWithDefaults instantiates a new AliCloudWriteAuthRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAliCloudWriteAuthRoleRequestWithDefaults() *AliCloudWriteAuthRoleRequest {
	var this AliCloudWriteAuthRoleRequest

	this.TokenType = "default-service"

	return &this
}

func (o AliCloudWriteAuthRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["arn"] = o.Arn
	toSerialize["bound_cidrs"] = o.BoundCidrs
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AliCloudWriteConfigRequest struct for AliCloudWriteConfigRequest
type AliCloudWriteConfigRequest struct {
	// Access key with appropriate permissions.
	AccessKey string `json:"access_key"`
	// Secret key with appropriate permissions.
	SecretKey string `json:"secret_key"`
}

// NewAliCloudWriteConfigRequestWithDefaults instantiates a new AliCloudWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAliCloudWriteConfigRequestWithDefaults() *AliCloudWriteConfigRequest {
	var this AliCloudWriteConfigRequest

	return &this
}

func (o AliCloudWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["access_key"] = o.AccessKey
	toSerialize["secret_key"] = o.SecretKey

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AliCloudWriteRoleRequest struct for AliCloudWriteRoleRequest
type AliCloudWriteRoleRequest struct {
	// JSON of policies to be dynamically applied to users of this role.
	InlinePolicies string `json:"inline_policies"`
	// The maximum allowed lifetime of tokens issued using this role.
	MaxTtl int32 `json:"max_ttl"`
	// The name and type of each remote policy to be applied. Example: \"name:AliyunRDSReadOnlyAccess,type:System\".
	RemotePolicies []string `json:"remote_policies"`
	// ARN of the role to be assumed. If provided, inline_policies and remote_policies should be blank. At creation time, this role must have configured trusted actors, and the access key and secret that will be used to assume the role (in /config) must qualify as a trusted actor.
	RoleArn string `json:"role_arn"`
	// Duration in seconds after which the issued token should expire. Defaults to 0, in which case the value will fallback to the system/mount defaults.
	Ttl int32 `json:"ttl"`
}

// NewAliCloudWriteRoleRequestWithDefaults instantiates a new AliCloudWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAliCloudWriteRoleRequestWithDefaults() *AliCloudWriteRoleRequest {
	var this AliCloudWriteRoleRequest

	return &this
}

func (o AliCloudWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["inline_policies"] = o.InlinePolicies
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["remote_policies"] = o.RemotePolicies
	toSerialize["role_arn"] = o.RoleArn
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AliasWriteByIDRequest struct for AliasWriteByIDRequest
type AliasWriteByIDRequest struct {
	// Entity ID to which this alias should be tied to
	CanonicalId string `json:"canonical_id"`
	// Entity ID to which this alias should be tied to. This field is deprecated in favor of 'canonical_id'.
	EntityId string `json:"entity_id"`
	// Mount accessor to which this alias belongs to
	MountAccessor string `json:"mount_accessor"`
	// Name of the alias
	Name string `json:"name"`
}

// NewAliasWriteByIDRequestWithDefaults instantiates a new AliasWriteByIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAliasWriteByIDRequestWithDefaults() *AliasWriteByIDRequest {
	var this AliasWriteByIDRequest

	return &this
}

func (o AliasWriteByIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["canonical_id"] = o.CanonicalId
	toSerialize["entity_id"] = o.EntityId
	toSerialize["mount_accessor"] = o.MountAccessor
	toSerialize["name"] = o.Name

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AliasWriteRequest struct for AliasWriteRequest
type AliasWriteRequest struct {
	// Entity ID to which this alias belongs to
	CanonicalId string `json:"canonical_id"`
	// Entity ID to which this alias belongs to. This field is deprecated in favor of 'canonical_id'.
	EntityId string `json:"entity_id"`
	// ID of the alias
	Id string `json:"id"`
	// Mount accessor to which this alias belongs to
	MountAccessor string `json:"mount_accessor"`
	// Name of the alias
	Name string `json:"name"`
}

// NewAliasWriteRequestWithDefaults instantiates a new AliasWriteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAliasWriteRequestWithDefaults() *AliasWriteRequest {
	var this AliasWriteRequest

	return &this
}

func (o AliasWriteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["canonical_id"] = o.CanonicalId
	toSerialize["entity_id"] = o.EntityId
	toSerialize["id"] = o.Id
	toSerialize["mount_accessor"] = o.MountAccessor
	toSerialize["name"] = o.Name

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleListRolesResponse struct for AppRoleListRolesResponse
type AppRoleListRolesResponse struct {
	Keys []string `json:"keys"`
}

// NewAppRoleListRolesResponseWithDefaults instantiates a new AppRoleListRolesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleListRolesResponseWithDefaults() *AppRoleListRolesResponse {
	var this AppRoleListRolesResponse

	return &this
}

func (o AppRoleListRolesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["keys"] = o.Keys

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleListSecretIDResponse struct for AppRoleListSecretIDResponse
type AppRoleListSecretIDResponse struct {
	Keys []string `json:"keys"`
}

// NewAppRoleListSecretIDResponseWithDefaults instantiates a new AppRoleListSecretIDResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleListSecretIDResponseWithDefaults() *AppRoleListSecretIDResponse {
	var this AppRoleListSecretIDResponse

	return &this
}

func (o AppRoleListSecretIDResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["keys"] = o.Keys

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleLoginRequest struct for AppRoleLoginRequest
type AppRoleLoginRequest struct {
	// Unique identifier of the Role. Required to be supplied when the 'bind_secret_id' constraint is set.
	RoleId string `json:"role_id"`
	// SecretID belong to the App role
	SecretId string `json:"secret_id"`
}

// NewAppRoleLoginRequestWithDefaults instantiates a new AppRoleLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleLoginRequestWithDefaults() *AppRoleLoginRequest {
	var this AppRoleLoginRequest

	this.SecretId = ""

	return &this
}

func (o AppRoleLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["role_id"] = o.RoleId
	toSerialize["secret_id"] = o.SecretId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadBindSecretIDResponse struct for AppRoleReadBindSecretIDResponse
type AppRoleReadBindSecretIDResponse struct {
	// Impose secret_id to be presented when logging in using this role. Defaults to 'true'.
	BindSecretId bool `json:"bind_secret_id"`
}

// NewAppRoleReadBindSecretIDResponseWithDefaults instantiates a new AppRoleReadBindSecretIDResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadBindSecretIDResponseWithDefaults() *AppRoleReadBindSecretIDResponse {
	var this AppRoleReadBindSecretIDResponse

	return &this
}

func (o AppRoleReadBindSecretIDResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bind_secret_id"] = o.BindSecretId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadBoundCIDRListResponse struct for AppRoleReadBoundCIDRListResponse
type AppRoleReadBoundCIDRListResponse struct {
	// Deprecated: Please use \"secret_id_bound_cidrs\" instead. Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.
	// Deprecated
	BoundCidrList []string `json:"bound_cidr_list"`
}

// NewAppRoleReadBoundCIDRListResponseWithDefaults instantiates a new AppRoleReadBoundCIDRListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadBoundCIDRListResponseWithDefaults() *AppRoleReadBoundCIDRListResponse {
	var this AppRoleReadBoundCIDRListResponse

	return &this
}

func (o AppRoleReadBoundCIDRListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bound_cidr_list"] = o.BoundCidrList

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadLocalSecretIDsResponse struct for AppRoleReadLocalSecretIDsResponse
type AppRoleReadLocalSecretIDsResponse struct {
	// If true, the secret identifiers generated using this role will be cluster local. This can only be set during role creation and once set, it can't be reset later
	LocalSecretIds bool `json:"local_secret_ids"`
}

// NewAppRoleReadLocalSecretIDsResponseWithDefaults instantiates a new AppRoleReadLocalSecretIDsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadLocalSecretIDsResponseWithDefaults() *AppRoleReadLocalSecretIDsResponse {
	var this AppRoleReadLocalSecretIDsResponse

	return &this
}

func (o AppRoleReadLocalSecretIDsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["local_secret_ids"] = o.LocalSecretIds

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadPeriodResponse struct for AppRoleReadPeriodResponse
type AppRoleReadPeriodResponse struct {
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
}

// NewAppRoleReadPeriodResponseWithDefaults instantiates a new AppRoleReadPeriodResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadPeriodResponseWithDefaults() *AppRoleReadPeriodResponse {
	var this AppRoleReadPeriodResponse

	return &this
}

func (o AppRoleReadPeriodResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["period"] = o.Period
	toSerialize["token_period"] = o.TokenPeriod

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadPoliciesResponse struct for AppRoleReadPoliciesResponse
type AppRoleReadPoliciesResponse struct {
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
}

// NewAppRoleReadPoliciesResponseWithDefaults instantiates a new AppRoleReadPoliciesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadPoliciesResponseWithDefaults() *AppRoleReadPoliciesResponse {
	var this AppRoleReadPoliciesResponse

	return &this
}

func (o AppRoleReadPoliciesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["policies"] = o.Policies
	toSerialize["token_policies"] = o.TokenPolicies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadRoleIDResponse struct for AppRoleReadRoleIDResponse
type AppRoleReadRoleIDResponse struct {
	// Identifier of the role. Defaults to a UUID.
	RoleId string `json:"role_id"`
}

// NewAppRoleReadRoleIDResponseWithDefaults instantiates a new AppRoleReadRoleIDResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadRoleIDResponseWithDefaults() *AppRoleReadRoleIDResponse {
	var this AppRoleReadRoleIDResponse

	return &this
}

func (o AppRoleReadRoleIDResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["role_id"] = o.RoleId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadRoleResponse struct for AppRoleReadRoleResponse
type AppRoleReadRoleResponse struct {
	// Impose secret ID to be presented when logging in using this role.
	BindSecretId bool `json:"bind_secret_id"`
	// If true, the secret identifiers generated using this role will be cluster local. This can only be set during role creation and once set, it can't be reset later
	LocalSecretIds bool `json:"local_secret_ids"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.
	SecretIdBoundCidrs []string `json:"secret_id_bound_cidrs"`
	// Number of times a secret ID can access the role, after which the secret ID will expire.
	SecretIdNumUses int32 `json:"secret_id_num_uses"`
	// Duration in seconds after which the issued secret ID expires.
	SecretIdTtl int32 `json:"secret_id_ttl"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value.
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
}

// NewAppRoleReadRoleResponseWithDefaults instantiates a new AppRoleReadRoleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadRoleResponseWithDefaults() *AppRoleReadRoleResponse {
	var this AppRoleReadRoleResponse

	this.TokenType = "default-service"

	return &this
}

func (o AppRoleReadRoleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bind_secret_id"] = o.BindSecretId
	toSerialize["local_secret_ids"] = o.LocalSecretIds
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["secret_id_bound_cidrs"] = o.SecretIdBoundCidrs
	toSerialize["secret_id_num_uses"] = o.SecretIdNumUses
	toSerialize["secret_id_ttl"] = o.SecretIdTtl
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadSecretIDBoundCIDRsResponse struct for AppRoleReadSecretIDBoundCIDRsResponse
type AppRoleReadSecretIDBoundCIDRsResponse struct {
	// Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.
	SecretIdBoundCidrs []string `json:"secret_id_bound_cidrs"`
}

// NewAppRoleReadSecretIDBoundCIDRsResponseWithDefaults instantiates a new AppRoleReadSecretIDBoundCIDRsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadSecretIDBoundCIDRsResponseWithDefaults() *AppRoleReadSecretIDBoundCIDRsResponse {
	var this AppRoleReadSecretIDBoundCIDRsResponse

	return &this
}

func (o AppRoleReadSecretIDBoundCIDRsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["secret_id_bound_cidrs"] = o.SecretIdBoundCidrs

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadSecretIDNumUsesResponse struct for AppRoleReadSecretIDNumUsesResponse
type AppRoleReadSecretIDNumUsesResponse struct {
	// Number of times a secret ID can access the role, after which the SecretID will expire. Defaults to 0 meaning that the secret ID is of unlimited use.
	SecretIdNumUses int32 `json:"secret_id_num_uses"`
}

// NewAppRoleReadSecretIDNumUsesResponseWithDefaults instantiates a new AppRoleReadSecretIDNumUsesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadSecretIDNumUsesResponseWithDefaults() *AppRoleReadSecretIDNumUsesResponse {
	var this AppRoleReadSecretIDNumUsesResponse

	return &this
}

func (o AppRoleReadSecretIDNumUsesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["secret_id_num_uses"] = o.SecretIdNumUses

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadSecretIDTTLResponse struct for AppRoleReadSecretIDTTLResponse
type AppRoleReadSecretIDTTLResponse struct {
	// Duration in seconds after which the issued secret ID should expire. Defaults to 0, meaning no expiration.
	SecretIdTtl int32 `json:"secret_id_ttl"`
}

// NewAppRoleReadSecretIDTTLResponseWithDefaults instantiates a new AppRoleReadSecretIDTTLResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadSecretIDTTLResponseWithDefaults() *AppRoleReadSecretIDTTLResponse {
	var this AppRoleReadSecretIDTTLResponse

	return &this
}

func (o AppRoleReadSecretIDTTLResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["secret_id_ttl"] = o.SecretIdTtl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadTokenBoundCIDRsResponse struct for AppRoleReadTokenBoundCIDRsResponse
type AppRoleReadTokenBoundCIDRsResponse struct {
	// Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can use the returned token. Should be a subset of the token CIDR blocks listed on the role, if any.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
}

// NewAppRoleReadTokenBoundCIDRsResponseWithDefaults instantiates a new AppRoleReadTokenBoundCIDRsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadTokenBoundCIDRsResponseWithDefaults() *AppRoleReadTokenBoundCIDRsResponse {
	var this AppRoleReadTokenBoundCIDRsResponse

	return &this
}

func (o AppRoleReadTokenBoundCIDRsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadTokenMaxTTLResponse struct for AppRoleReadTokenMaxTTLResponse
type AppRoleReadTokenMaxTTLResponse struct {
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
}

// NewAppRoleReadTokenMaxTTLResponseWithDefaults instantiates a new AppRoleReadTokenMaxTTLResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadTokenMaxTTLResponseWithDefaults() *AppRoleReadTokenMaxTTLResponse {
	var this AppRoleReadTokenMaxTTLResponse

	return &this
}

func (o AppRoleReadTokenMaxTTLResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token_max_ttl"] = o.TokenMaxTtl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadTokenNumUsesResponse struct for AppRoleReadTokenNumUsesResponse
type AppRoleReadTokenNumUsesResponse struct {
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
}

// NewAppRoleReadTokenNumUsesResponseWithDefaults instantiates a new AppRoleReadTokenNumUsesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadTokenNumUsesResponseWithDefaults() *AppRoleReadTokenNumUsesResponse {
	var this AppRoleReadTokenNumUsesResponse

	return &this
}

func (o AppRoleReadTokenNumUsesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token_num_uses"] = o.TokenNumUses

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleReadTokenTTLResponse struct for AppRoleReadTokenTTLResponse
type AppRoleReadTokenTTLResponse struct {
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
}

// NewAppRoleReadTokenTTLResponseWithDefaults instantiates a new AppRoleReadTokenTTLResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleReadTokenTTLResponseWithDefaults() *AppRoleReadTokenTTLResponse {
	var this AppRoleReadTokenTTLResponse

	return &this
}

func (o AppRoleReadTokenTTLResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token_ttl"] = o.TokenTtl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteBindSecretIDRequest struct for AppRoleWriteBindSecretIDRequest
type AppRoleWriteBindSecretIDRequest struct {
	// Impose secret_id to be presented when logging in using this role.
	BindSecretId bool `json:"bind_secret_id"`
}

// NewAppRoleWriteBindSecretIDRequestWithDefaults instantiates a new AppRoleWriteBindSecretIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteBindSecretIDRequestWithDefaults() *AppRoleWriteBindSecretIDRequest {
	var this AppRoleWriteBindSecretIDRequest

	this.BindSecretId = true

	return &this
}

func (o AppRoleWriteBindSecretIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bind_secret_id"] = o.BindSecretId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteBoundCIDRListRequest struct for AppRoleWriteBoundCIDRListRequest
type AppRoleWriteBoundCIDRListRequest struct {
	// Deprecated: Please use \"secret_id_bound_cidrs\" instead. Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.
	BoundCidrList []string `json:"bound_cidr_list"`
}

// NewAppRoleWriteBoundCIDRListRequestWithDefaults instantiates a new AppRoleWriteBoundCIDRListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteBoundCIDRListRequestWithDefaults() *AppRoleWriteBoundCIDRListRequest {
	var this AppRoleWriteBoundCIDRListRequest

	return &this
}

func (o AppRoleWriteBoundCIDRListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bound_cidr_list"] = o.BoundCidrList

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteCustomSecretIDRequest struct for AppRoleWriteCustomSecretIDRequest
type AppRoleWriteCustomSecretIDRequest struct {
	// Comma separated string or list of CIDR blocks enforcing secret IDs to be used from specific set of IP addresses. If 'bound_cidr_list' is set on the role, then the list of CIDR blocks listed here should be a subset of the CIDR blocks listed on the role.
	CidrList []string `json:"cidr_list"`
	// Metadata to be tied to the SecretID. This should be a JSON formatted string containing metadata in key value pairs.
	Metadata string `json:"metadata"`
	// Number of times this SecretID can be used, after which the SecretID expires. Overrides secret_id_num_uses role option when supplied. May not be higher than role's secret_id_num_uses.
	NumUses int32 `json:"num_uses"`
	// SecretID to be attached to the role.
	SecretId string `json:"secret_id"`
	// Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can use the returned token. Should be a subset of the token CIDR blocks listed on the role, if any.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// Duration in seconds after which this SecretID expires. Overrides secret_id_ttl role option when supplied. May not be longer than role's secret_id_ttl.
	Ttl int32 `json:"ttl"`
}

// NewAppRoleWriteCustomSecretIDRequestWithDefaults instantiates a new AppRoleWriteCustomSecretIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteCustomSecretIDRequestWithDefaults() *AppRoleWriteCustomSecretIDRequest {
	var this AppRoleWriteCustomSecretIDRequest

	return &this
}

func (o AppRoleWriteCustomSecretIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["cidr_list"] = o.CidrList
	toSerialize["metadata"] = o.Metadata
	toSerialize["num_uses"] = o.NumUses
	toSerialize["secret_id"] = o.SecretId
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteCustomSecretIDResponse struct for AppRoleWriteCustomSecretIDResponse
type AppRoleWriteCustomSecretIDResponse struct {
	// Secret ID attached to the role.
	SecretId string `json:"secret_id"`
	// Accessor of the secret ID
	SecretIdAccessor string `json:"secret_id_accessor"`
	// Number of times a secret ID can access the role, after which the secret ID will expire.
	SecretIdNumUses int32 `json:"secret_id_num_uses"`
	// Duration in seconds after which the issued secret ID expires.
	SecretIdTtl int32 `json:"secret_id_ttl"`
}

// NewAppRoleWriteCustomSecretIDResponseWithDefaults instantiates a new AppRoleWriteCustomSecretIDResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteCustomSecretIDResponseWithDefaults() *AppRoleWriteCustomSecretIDResponse {
	var this AppRoleWriteCustomSecretIDResponse

	return &this
}

func (o AppRoleWriteCustomSecretIDResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["secret_id"] = o.SecretId
	toSerialize["secret_id_accessor"] = o.SecretIdAccessor
	toSerialize["secret_id_num_uses"] = o.SecretIdNumUses
	toSerialize["secret_id_ttl"] = o.SecretIdTtl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWritePeriodRequest struct for AppRoleWritePeriodRequest
type AppRoleWritePeriodRequest struct {
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
}

// NewAppRoleWritePeriodRequestWithDefaults instantiates a new AppRoleWritePeriodRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWritePeriodRequestWithDefaults() *AppRoleWritePeriodRequest {
	var this AppRoleWritePeriodRequest

	return &this
}

func (o AppRoleWritePeriodRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["period"] = o.Period
	toSerialize["token_period"] = o.TokenPeriod

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWritePoliciesRequest struct for AppRoleWritePoliciesRequest
type AppRoleWritePoliciesRequest struct {
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
}

// NewAppRoleWritePoliciesRequestWithDefaults instantiates a new AppRoleWritePoliciesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWritePoliciesRequestWithDefaults() *AppRoleWritePoliciesRequest {
	var this AppRoleWritePoliciesRequest

	return &this
}

func (o AppRoleWritePoliciesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["policies"] = o.Policies
	toSerialize["token_policies"] = o.TokenPolicies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteRoleIDRequest struct for AppRoleWriteRoleIDRequest
type AppRoleWriteRoleIDRequest struct {
	// Identifier of the role. Defaults to a UUID.
	RoleId string `json:"role_id"`
}

// NewAppRoleWriteRoleIDRequestWithDefaults instantiates a new AppRoleWriteRoleIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteRoleIDRequestWithDefaults() *AppRoleWriteRoleIDRequest {
	var this AppRoleWriteRoleIDRequest

	return &this
}

func (o AppRoleWriteRoleIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["role_id"] = o.RoleId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteRoleRequest struct for AppRoleWriteRoleRequest
type AppRoleWriteRoleRequest struct {
	// Impose secret_id to be presented when logging in using this role. Defaults to 'true'.
	BindSecretId bool `json:"bind_secret_id"`
	// Use \"secret_id_bound_cidrs\" instead.
	// Deprecated
	BoundCidrList []string `json:"bound_cidr_list"`
	// If set, the secret IDs generated using this role will be cluster local. This can only be set during role creation and once set, it can't be reset later.
	LocalSecretIds bool `json:"local_secret_ids"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Identifier of the role. Defaults to a UUID.
	RoleId string `json:"role_id"`
	// Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.
	SecretIdBoundCidrs []string `json:"secret_id_bound_cidrs"`
	// Number of times a SecretID can access the role, after which the SecretID will expire. Defaults to 0 meaning that the the secret_id is of unlimited use.
	SecretIdNumUses int32 `json:"secret_id_num_uses"`
	// Duration in seconds after which the issued SecretID should expire. Defaults to 0, meaning no expiration.
	SecretIdTtl int32 `json:"secret_id_ttl"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
}

// NewAppRoleWriteRoleRequestWithDefaults instantiates a new AppRoleWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteRoleRequestWithDefaults() *AppRoleWriteRoleRequest {
	var this AppRoleWriteRoleRequest

	this.BindSecretId = true
	this.TokenType = "default-service"

	return &this
}

func (o AppRoleWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bind_secret_id"] = o.BindSecretId
	toSerialize["bound_cidr_list"] = o.BoundCidrList
	toSerialize["local_secret_ids"] = o.LocalSecretIds
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["role_id"] = o.RoleId
	toSerialize["secret_id_bound_cidrs"] = o.SecretIdBoundCidrs
	toSerialize["secret_id_num_uses"] = o.SecretIdNumUses
	toSerialize["secret_id_ttl"] = o.SecretIdTtl
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteSecretIDAccessorDestroyRequest struct for AppRoleWriteSecretIDAccessorDestroyRequest
type AppRoleWriteSecretIDAccessorDestroyRequest struct {
	// Accessor of the SecretID
	SecretIdAccessor string `json:"secret_id_accessor"`
}

// NewAppRoleWriteSecretIDAccessorDestroyRequestWithDefaults instantiates a new AppRoleWriteSecretIDAccessorDestroyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteSecretIDAccessorDestroyRequestWithDefaults() *AppRoleWriteSecretIDAccessorDestroyRequest {
	var this AppRoleWriteSecretIDAccessorDestroyRequest

	return &this
}

func (o AppRoleWriteSecretIDAccessorDestroyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["secret_id_accessor"] = o.SecretIdAccessor

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteSecretIDAccessorLookupRequest struct for AppRoleWriteSecretIDAccessorLookupRequest
type AppRoleWriteSecretIDAccessorLookupRequest struct {
	// Accessor of the SecretID
	SecretIdAccessor string `json:"secret_id_accessor"`
}

// NewAppRoleWriteSecretIDAccessorLookupRequestWithDefaults instantiates a new AppRoleWriteSecretIDAccessorLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteSecretIDAccessorLookupRequestWithDefaults() *AppRoleWriteSecretIDAccessorLookupRequest {
	var this AppRoleWriteSecretIDAccessorLookupRequest

	return &this
}

func (o AppRoleWriteSecretIDAccessorLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["secret_id_accessor"] = o.SecretIdAccessor

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteSecretIDAccessorLookupResponse struct for AppRoleWriteSecretIDAccessorLookupResponse
type AppRoleWriteSecretIDAccessorLookupResponse struct {
	// List of CIDR blocks enforcing secret IDs to be used from specific set of IP addresses. If 'bound_cidr_list' is set on the role, then the list of CIDR blocks listed here should be a subset of the CIDR blocks listed on the role.
	CidrList        []string               `json:"cidr_list"`
	CreationTime    time.Time              `json:"creation_time"`
	ExpirationTime  time.Time              `json:"expiration_time"`
	LastUpdatedTime time.Time              `json:"last_updated_time"`
	Metadata        map[string]interface{} `json:"metadata"`
	// Accessor of the secret ID
	SecretIdAccessor string `json:"secret_id_accessor"`
	// Number of times a secret ID can access the role, after which the secret ID will expire.
	SecretIdNumUses int32 `json:"secret_id_num_uses"`
	// Duration in seconds after which the issued secret ID expires.
	SecretIdTtl int32 `json:"secret_id_ttl"`
	// List of CIDR blocks. If set, specifies the blocks of IP addresses which can use the returned token. Should be a subset of the token CIDR blocks listed on the role, if any.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
}

// NewAppRoleWriteSecretIDAccessorLookupResponseWithDefaults instantiates a new AppRoleWriteSecretIDAccessorLookupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteSecretIDAccessorLookupResponseWithDefaults() *AppRoleWriteSecretIDAccessorLookupResponse {
	var this AppRoleWriteSecretIDAccessorLookupResponse

	return &this
}

func (o AppRoleWriteSecretIDAccessorLookupResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["cidr_list"] = o.CidrList
	toSerialize["creation_time"] = o.CreationTime
	toSerialize["expiration_time"] = o.ExpirationTime
	toSerialize["last_updated_time"] = o.LastUpdatedTime
	toSerialize["metadata"] = o.Metadata
	toSerialize["secret_id_accessor"] = o.SecretIdAccessor
	toSerialize["secret_id_num_uses"] = o.SecretIdNumUses
	toSerialize["secret_id_ttl"] = o.SecretIdTtl
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteSecretIDBoundCIDRsRequest struct for AppRoleWriteSecretIDBoundCIDRsRequest
type AppRoleWriteSecretIDBoundCIDRsRequest struct {
	// Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.
	SecretIdBoundCidrs []string `json:"secret_id_bound_cidrs"`
}

// NewAppRoleWriteSecretIDBoundCIDRsRequestWithDefaults instantiates a new AppRoleWriteSecretIDBoundCIDRsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteSecretIDBoundCIDRsRequestWithDefaults() *AppRoleWriteSecretIDBoundCIDRsRequest {
	var this AppRoleWriteSecretIDBoundCIDRsRequest

	return &this
}

func (o AppRoleWriteSecretIDBoundCIDRsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["secret_id_bound_cidrs"] = o.SecretIdBoundCidrs

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteSecretIDDestroyRequest struct for AppRoleWriteSecretIDDestroyRequest
type AppRoleWriteSecretIDDestroyRequest struct {
	// SecretID attached to the role.
	SecretId string `json:"secret_id"`
}

// NewAppRoleWriteSecretIDDestroyRequestWithDefaults instantiates a new AppRoleWriteSecretIDDestroyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteSecretIDDestroyRequestWithDefaults() *AppRoleWriteSecretIDDestroyRequest {
	var this AppRoleWriteSecretIDDestroyRequest

	return &this
}

func (o AppRoleWriteSecretIDDestroyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["secret_id"] = o.SecretId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteSecretIDLookupRequest struct for AppRoleWriteSecretIDLookupRequest
type AppRoleWriteSecretIDLookupRequest struct {
	// SecretID attached to the role.
	SecretId string `json:"secret_id"`
}

// NewAppRoleWriteSecretIDLookupRequestWithDefaults instantiates a new AppRoleWriteSecretIDLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteSecretIDLookupRequestWithDefaults() *AppRoleWriteSecretIDLookupRequest {
	var this AppRoleWriteSecretIDLookupRequest

	return &this
}

func (o AppRoleWriteSecretIDLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["secret_id"] = o.SecretId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteSecretIDLookupResponse struct for AppRoleWriteSecretIDLookupResponse
type AppRoleWriteSecretIDLookupResponse struct {
	// List of CIDR blocks enforcing secret IDs to be used from specific set of IP addresses. If 'bound_cidr_list' is set on the role, then the list of CIDR blocks listed here should be a subset of the CIDR blocks listed on the role.
	CidrList        []string               `json:"cidr_list"`
	CreationTime    time.Time              `json:"creation_time"`
	ExpirationTime  time.Time              `json:"expiration_time"`
	LastUpdatedTime time.Time              `json:"last_updated_time"`
	Metadata        map[string]interface{} `json:"metadata"`
	// Accessor of the secret ID
	SecretIdAccessor string `json:"secret_id_accessor"`
	// Number of times a secret ID can access the role, after which the secret ID will expire.
	SecretIdNumUses int32 `json:"secret_id_num_uses"`
	// Duration in seconds after which the issued secret ID expires.
	SecretIdTtl int32 `json:"secret_id_ttl"`
	// List of CIDR blocks. If set, specifies the blocks of IP addresses which can use the returned token. Should be a subset of the token CIDR blocks listed on the role, if any.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
}

// NewAppRoleWriteSecretIDLookupResponseWithDefaults instantiates a new AppRoleWriteSecretIDLookupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteSecretIDLookupResponseWithDefaults() *AppRoleWriteSecretIDLookupResponse {
	var this AppRoleWriteSecretIDLookupResponse

	return &this
}

func (o AppRoleWriteSecretIDLookupResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["cidr_list"] = o.CidrList
	toSerialize["creation_time"] = o.CreationTime
	toSerialize["expiration_time"] = o.ExpirationTime
	toSerialize["last_updated_time"] = o.LastUpdatedTime
	toSerialize["metadata"] = o.Metadata
	toSerialize["secret_id_accessor"] = o.SecretIdAccessor
	toSerialize["secret_id_num_uses"] = o.SecretIdNumUses
	toSerialize["secret_id_ttl"] = o.SecretIdTtl
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteSecretIDNumUsesRequest struct for AppRoleWriteSecretIDNumUsesRequest
type AppRoleWriteSecretIDNumUsesRequest struct {
	// Number of times a SecretID can access the role, after which the SecretID will expire.
	SecretIdNumUses int32 `json:"secret_id_num_uses"`
}

// NewAppRoleWriteSecretIDNumUsesRequestWithDefaults instantiates a new AppRoleWriteSecretIDNumUsesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteSecretIDNumUsesRequestWithDefaults() *AppRoleWriteSecretIDNumUsesRequest {
	var this AppRoleWriteSecretIDNumUsesRequest

	return &this
}

func (o AppRoleWriteSecretIDNumUsesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["secret_id_num_uses"] = o.SecretIdNumUses

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteSecretIDRequest struct for AppRoleWriteSecretIDRequest
type AppRoleWriteSecretIDRequest struct {
	// Comma separated string or list of CIDR blocks enforcing secret IDs to be used from specific set of IP addresses. If 'bound_cidr_list' is set on the role, then the list of CIDR blocks listed here should be a subset of the CIDR blocks listed on the role.
	CidrList []string `json:"cidr_list"`
	// Metadata to be tied to the SecretID. This should be a JSON formatted string containing the metadata in key value pairs.
	Metadata string `json:"metadata"`
	// Number of times this SecretID can be used, after which the SecretID expires. Overrides secret_id_num_uses role option when supplied. May not be higher than role's secret_id_num_uses.
	NumUses int32 `json:"num_uses"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// Duration in seconds after which this SecretID expires. Overrides secret_id_ttl role option when supplied. May not be longer than role's secret_id_ttl.
	Ttl int32 `json:"ttl"`
}

// NewAppRoleWriteSecretIDRequestWithDefaults instantiates a new AppRoleWriteSecretIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteSecretIDRequestWithDefaults() *AppRoleWriteSecretIDRequest {
	var this AppRoleWriteSecretIDRequest

	return &this
}

func (o AppRoleWriteSecretIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["cidr_list"] = o.CidrList
	toSerialize["metadata"] = o.Metadata
	toSerialize["num_uses"] = o.NumUses
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteSecretIDResponse struct for AppRoleWriteSecretIDResponse
type AppRoleWriteSecretIDResponse struct {
	// Secret ID attached to the role.
	SecretId string `json:"secret_id"`
	// Accessor of the secret ID
	SecretIdAccessor string `json:"secret_id_accessor"`
	// Number of times a secret ID can access the role, after which the secret ID will expire.
	SecretIdNumUses int32 `json:"secret_id_num_uses"`
	// Duration in seconds after which the issued secret ID expires.
	SecretIdTtl int32 `json:"secret_id_ttl"`
}

// NewAppRoleWriteSecretIDResponseWithDefaults instantiates a new AppRoleWriteSecretIDResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteSecretIDResponseWithDefaults() *AppRoleWriteSecretIDResponse {
	var this AppRoleWriteSecretIDResponse

	return &this
}

func (o AppRoleWriteSecretIDResponse) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["secret_id"] = o.SecretId
	toSerialize["secret_id_accessor"] = o.SecretIdAccessor
	toSerialize["secret_id_num_uses"] = o.SecretIdNumUses
	toSerialize["secret_id_ttl"] = o.SecretIdTtl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteSecretIDTTLRequest struct for AppRoleWriteSecretIDTTLRequest
type AppRoleWriteSecretIDTTLRequest struct {
	// Duration in seconds after which the issued SecretID should expire. Defaults to 0, meaning no expiration.
	SecretIdTtl int32 `json:"secret_id_ttl"`
}

// NewAppRoleWriteSecretIDTTLRequestWithDefaults instantiates a new AppRoleWriteSecretIDTTLRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteSecretIDTTLRequestWithDefaults() *AppRoleWriteSecretIDTTLRequest {
	var this AppRoleWriteSecretIDTTLRequest

	return &this
}

func (o AppRoleWriteSecretIDTTLRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["secret_id_ttl"] = o.SecretIdTtl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteTokenBoundCIDRsRequest struct for AppRoleWriteTokenBoundCIDRsRequest
type AppRoleWriteTokenBoundCIDRsRequest struct {
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
}

// NewAppRoleWriteTokenBoundCIDRsRequestWithDefaults instantiates a new AppRoleWriteTokenBoundCIDRsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteTokenBoundCIDRsRequestWithDefaults() *AppRoleWriteTokenBoundCIDRsRequest {
	var this AppRoleWriteTokenBoundCIDRsRequest

	return &this
}

func (o AppRoleWriteTokenBoundCIDRsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteTokenMaxTTLRequest struct for AppRoleWriteTokenMaxTTLRequest
type AppRoleWriteTokenMaxTTLRequest struct {
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
}

// NewAppRoleWriteTokenMaxTTLRequestWithDefaults instantiates a new AppRoleWriteTokenMaxTTLRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteTokenMaxTTLRequestWithDefaults() *AppRoleWriteTokenMaxTTLRequest {
	var this AppRoleWriteTokenMaxTTLRequest

	return &this
}

func (o AppRoleWriteTokenMaxTTLRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token_max_ttl"] = o.TokenMaxTtl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteTokenNumUsesRequest struct for AppRoleWriteTokenNumUsesRequest
type AppRoleWriteTokenNumUsesRequest struct {
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
}

// NewAppRoleWriteTokenNumUsesRequestWithDefaults instantiates a new AppRoleWriteTokenNumUsesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteTokenNumUsesRequestWithDefaults() *AppRoleWriteTokenNumUsesRequest {
	var this AppRoleWriteTokenNumUsesRequest

	return &this
}

func (o AppRoleWriteTokenNumUsesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token_num_uses"] = o.TokenNumUses

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AppRoleWriteTokenTTLRequest struct for AppRoleWriteTokenTTLRequest
type AppRoleWriteTokenTTLRequest struct {
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
}

// NewAppRoleWriteTokenTTLRequestWithDefaults instantiates a new AppRoleWriteTokenTTLRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleWriteTokenTTLRequestWithDefaults() *AppRoleWriteTokenTTLRequest {
	var this AppRoleWriteTokenTTLRequest

	return &this
}

func (o AppRoleWriteTokenTTLRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token_ttl"] = o.TokenTtl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSConfigWriteCertificateRequest struct for AWSConfigWriteCertificateRequest
type AWSConfigWriteCertificateRequest struct {
	// Base64 encoded AWS Public cert required to verify PKCS7 signature of the EC2 instance metadata.
	AwsPublicCert string `json:"aws_public_cert"`
	// Takes the value of either \"pkcs7\" or \"identity\", indicating the type of document which can be verified using the given certificate. The reason is that the PKCS#7 document will have a DSA digest and the identity signature will have an RSA signature, and accordingly the public certificates to verify those also vary. Defaults to \"pkcs7\".
	Type string `json:"type"`
}

// NewAWSConfigWriteCertificateRequestWithDefaults instantiates a new AWSConfigWriteCertificateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSConfigWriteCertificateRequestWithDefaults() *AWSConfigWriteCertificateRequest {
	var this AWSConfigWriteCertificateRequest

	this.Type = "pkcs7"

	return &this
}

func (o AWSConfigWriteCertificateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["aws_public_cert"] = o.AwsPublicCert
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSConfigWriteClientRequest struct for AWSConfigWriteClientRequest
type AWSConfigWriteClientRequest struct {
	// AWS Access Key ID for the account used to make AWS API requests.
	AccessKey string `json:"access_key"`
	// List of additional headers that are allowed to be in AWS STS request headers
	AllowedStsHeaderValues []string `json:"allowed_sts_header_values"`
	// URL to override the default generated endpoint for making AWS EC2 API calls.
	Endpoint string `json:"endpoint"`
	// URL to override the default generated endpoint for making AWS IAM API calls.
	IamEndpoint string `json:"iam_endpoint"`
	// Value to require in the X-Vault-AWS-IAM-Server-ID request header
	IamServerIdHeaderValue string `json:"iam_server_id_header_value"`
	// Maximum number of retries for recoverable exceptions of AWS APIs
	MaxRetries int32 `json:"max_retries"`
	// AWS Secret Access Key for the account used to make AWS API requests.
	SecretKey string `json:"secret_key"`
	// URL to override the default generated endpoint for making AWS STS API calls.
	StsEndpoint string `json:"sts_endpoint"`
	// The region ID for the sts_endpoint, if set.
	StsRegion string `json:"sts_region"`
}

// NewAWSConfigWriteClientRequestWithDefaults instantiates a new AWSConfigWriteClientRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSConfigWriteClientRequestWithDefaults() *AWSConfigWriteClientRequest {
	var this AWSConfigWriteClientRequest

	this.AccessKey = ""
	this.Endpoint = ""
	this.IamEndpoint = ""
	this.IamServerIdHeaderValue = ""
	this.MaxRetries = -1
	this.SecretKey = ""
	this.StsEndpoint = ""
	this.StsRegion = ""

	return &this
}

func (o AWSConfigWriteClientRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["access_key"] = o.AccessKey
	toSerialize["allowed_sts_header_values"] = o.AllowedStsHeaderValues
	toSerialize["endpoint"] = o.Endpoint
	toSerialize["iam_endpoint"] = o.IamEndpoint
	toSerialize["iam_server_id_header_value"] = o.IamServerIdHeaderValue
	toSerialize["max_retries"] = o.MaxRetries
	toSerialize["secret_key"] = o.SecretKey
	toSerialize["sts_endpoint"] = o.StsEndpoint
	toSerialize["sts_region"] = o.StsRegion

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSConfigWriteIdentityAccessListRequest struct for AWSConfigWriteIdentityAccessListRequest
type AWSConfigWriteIdentityAccessListRequest struct {
	// If set to 'true', disables the periodic tidying of the 'identity-accesslist/<instance_id>' entries.
	DisablePeriodicTidy bool `json:"disable_periodic_tidy"`
	// The amount of extra time that must have passed beyond the identity's expiration, before it is removed from the backend storage.
	SafetyBuffer int32 `json:"safety_buffer"`
}

// NewAWSConfigWriteIdentityAccessListRequestWithDefaults instantiates a new AWSConfigWriteIdentityAccessListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSConfigWriteIdentityAccessListRequestWithDefaults() *AWSConfigWriteIdentityAccessListRequest {
	var this AWSConfigWriteIdentityAccessListRequest

	this.DisablePeriodicTidy = false
	this.SafetyBuffer = 259200

	return &this
}

func (o AWSConfigWriteIdentityAccessListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disable_periodic_tidy"] = o.DisablePeriodicTidy
	toSerialize["safety_buffer"] = o.SafetyBuffer

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSConfigWriteIdentityRequest struct for AWSConfigWriteIdentityRequest
type AWSConfigWriteIdentityRequest struct {
	// Configure how the AWS auth method generates entity alias when using EC2 auth. Valid values are \"role_id\", \"instance_id\", and \"image_id\". Defaults to \"role_id\".
	Ec2Alias string `json:"ec2_alias"`
	// The metadata to include on the aliases and audit logs generated by this plugin. When set to 'default', includes: account_id, auth_type. These fields are available to add: ami_id, instance_id, region. Not editing this field means the 'default' fields are included. Explicitly setting this field to empty overrides the 'default' and means no metadata will be included. If not using 'default', explicit fields must be sent like: 'field1,field2'.
	Ec2Metadata []string `json:"ec2_metadata"`
	// Configure how the AWS auth method generates entity aliases when using IAM auth. Valid values are \"role_id\", \"unique_id\", and \"full_arn\". Defaults to \"role_id\".
	IamAlias string `json:"iam_alias"`
	// The metadata to include on the aliases and audit logs generated by this plugin. When set to 'default', includes: account_id, auth_type. These fields are available to add: canonical_arn, client_arn, client_user_id, inferred_aws_region, inferred_entity_id, inferred_entity_type. Not editing this field means the 'default' fields are included. Explicitly setting this field to empty overrides the 'default' and means no metadata will be included. If not using 'default', explicit fields must be sent like: 'field1,field2'.
	IamMetadata []string `json:"iam_metadata"`
}

// NewAWSConfigWriteIdentityRequestWithDefaults instantiates a new AWSConfigWriteIdentityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSConfigWriteIdentityRequestWithDefaults() *AWSConfigWriteIdentityRequest {
	var this AWSConfigWriteIdentityRequest

	this.Ec2Alias = "instance_id"
	this.IamAlias = "unique_id"

	return &this
}

func (o AWSConfigWriteIdentityRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["ec2_alias"] = o.Ec2Alias
	toSerialize["ec2_metadata"] = o.Ec2Metadata
	toSerialize["iam_alias"] = o.IamAlias
	toSerialize["iam_metadata"] = o.IamMetadata

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSConfigWriteIdentityWhiteListRequest struct for AWSConfigWriteIdentityWhiteListRequest
type AWSConfigWriteIdentityWhiteListRequest struct {
	// If set to 'true', disables the periodic tidying of the 'identity-accesslist/<instance_id>' entries.
	DisablePeriodicTidy bool `json:"disable_periodic_tidy"`
	// The amount of extra time that must have passed beyond the identity's expiration, before it is removed from the backend storage.
	SafetyBuffer int32 `json:"safety_buffer"`
}

// NewAWSConfigWriteIdentityWhiteListRequestWithDefaults instantiates a new AWSConfigWriteIdentityWhiteListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSConfigWriteIdentityWhiteListRequestWithDefaults() *AWSConfigWriteIdentityWhiteListRequest {
	var this AWSConfigWriteIdentityWhiteListRequest

	this.DisablePeriodicTidy = false
	this.SafetyBuffer = 259200

	return &this
}

func (o AWSConfigWriteIdentityWhiteListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disable_periodic_tidy"] = o.DisablePeriodicTidy
	toSerialize["safety_buffer"] = o.SafetyBuffer

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSConfigWriteLeaseRequest struct for AWSConfigWriteLeaseRequest
type AWSConfigWriteLeaseRequest struct {
	// Default lease for roles.
	Lease string `json:"lease"`
	// Maximum time a credential is valid for.
	LeaseMax string `json:"lease_max"`
}

// NewAWSConfigWriteLeaseRequestWithDefaults instantiates a new AWSConfigWriteLeaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSConfigWriteLeaseRequestWithDefaults() *AWSConfigWriteLeaseRequest {
	var this AWSConfigWriteLeaseRequest

	return &this
}

func (o AWSConfigWriteLeaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["lease"] = o.Lease
	toSerialize["lease_max"] = o.LeaseMax

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSConfigWriteRoleTagBlackListRequest struct for AWSConfigWriteRoleTagBlackListRequest
type AWSConfigWriteRoleTagBlackListRequest struct {
	// If set to 'true', disables the periodic tidying of deny listed entries.
	DisablePeriodicTidy bool `json:"disable_periodic_tidy"`
	// The amount of extra time that must have passed beyond the roletag expiration, before it is removed from the backend storage. Defaults to 4320h (180 days).
	SafetyBuffer int32 `json:"safety_buffer"`
}

// NewAWSConfigWriteRoleTagBlackListRequestWithDefaults instantiates a new AWSConfigWriteRoleTagBlackListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSConfigWriteRoleTagBlackListRequestWithDefaults() *AWSConfigWriteRoleTagBlackListRequest {
	var this AWSConfigWriteRoleTagBlackListRequest

	this.DisablePeriodicTidy = false
	this.SafetyBuffer = 15552000

	return &this
}

func (o AWSConfigWriteRoleTagBlackListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disable_periodic_tidy"] = o.DisablePeriodicTidy
	toSerialize["safety_buffer"] = o.SafetyBuffer

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSConfigWriteRoleTagDenyListRequest struct for AWSConfigWriteRoleTagDenyListRequest
type AWSConfigWriteRoleTagDenyListRequest struct {
	// If set to 'true', disables the periodic tidying of deny listed entries.
	DisablePeriodicTidy bool `json:"disable_periodic_tidy"`
	// The amount of extra time that must have passed beyond the roletag expiration, before it is removed from the backend storage. Defaults to 4320h (180 days).
	SafetyBuffer int32 `json:"safety_buffer"`
}

// NewAWSConfigWriteRoleTagDenyListRequestWithDefaults instantiates a new AWSConfigWriteRoleTagDenyListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSConfigWriteRoleTagDenyListRequestWithDefaults() *AWSConfigWriteRoleTagDenyListRequest {
	var this AWSConfigWriteRoleTagDenyListRequest

	this.DisablePeriodicTidy = false
	this.SafetyBuffer = 15552000

	return &this
}

func (o AWSConfigWriteRoleTagDenyListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disable_periodic_tidy"] = o.DisablePeriodicTidy
	toSerialize["safety_buffer"] = o.SafetyBuffer

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSConfigWriteRootIAMCredentialsRequest struct for AWSConfigWriteRootIAMCredentialsRequest
type AWSConfigWriteRootIAMCredentialsRequest struct {
	// Access key with permission to create new keys.
	AccessKey string `json:"access_key"`
	// Endpoint to custom IAM server URL
	IamEndpoint string `json:"iam_endpoint"`
	// Maximum number of retries for recoverable exceptions of AWS APIs
	MaxRetries int32 `json:"max_retries"`
	// Region for API calls.
	Region string `json:"region"`
	// Secret key with permission to create new keys.
	SecretKey string `json:"secret_key"`
	// Endpoint to custom STS server URL
	StsEndpoint string `json:"sts_endpoint"`
	// Template to generate custom IAM usernames
	UsernameTemplate string `json:"username_template"`
}

// NewAWSConfigWriteRootIAMCredentialsRequestWithDefaults instantiates a new AWSConfigWriteRootIAMCredentialsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSConfigWriteRootIAMCredentialsRequestWithDefaults() *AWSConfigWriteRootIAMCredentialsRequest {
	var this AWSConfigWriteRootIAMCredentialsRequest

	this.MaxRetries = -1

	return &this
}

func (o AWSConfigWriteRootIAMCredentialsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["access_key"] = o.AccessKey
	toSerialize["iam_endpoint"] = o.IamEndpoint
	toSerialize["max_retries"] = o.MaxRetries
	toSerialize["region"] = o.Region
	toSerialize["secret_key"] = o.SecretKey
	toSerialize["sts_endpoint"] = o.StsEndpoint
	toSerialize["username_template"] = o.UsernameTemplate

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSConfigWriteSecurityTokenServiceAccountRequest struct for AWSConfigWriteSecurityTokenServiceAccountRequest
type AWSConfigWriteSecurityTokenServiceAccountRequest struct {
	// AWS ARN for STS role to be assumed when interacting with the account specified. The Vault server must have permissions to assume this role.
	StsRole string `json:"sts_role"`
}

// NewAWSConfigWriteSecurityTokenServiceAccountRequestWithDefaults instantiates a new AWSConfigWriteSecurityTokenServiceAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSConfigWriteSecurityTokenServiceAccountRequestWithDefaults() *AWSConfigWriteSecurityTokenServiceAccountRequest {
	var this AWSConfigWriteSecurityTokenServiceAccountRequest

	return &this
}

func (o AWSConfigWriteSecurityTokenServiceAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["sts_role"] = o.StsRole

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSLoginRequest struct for AWSLoginRequest
type AWSLoginRequest struct {
	// HTTP method to use for the AWS request when auth_type is iam. This must match what has been signed in the presigned request. Currently, POST is the only supported value
	IamHttpRequestMethod string `json:"iam_http_request_method"`
	// Base64-encoded request body when auth_type is iam. This must match the request body included in the signature.
	IamRequestBody string `json:"iam_request_body"`
	// Key/value pairs of headers for use in the sts:GetCallerIdentity HTTP requests headers when auth_type is iam. Can be either a Base64-encoded, JSON-serialized string, or a JSON object of key/value pairs. This must at a minimum include the headers over which AWS has included a signature.
	IamRequestHeaders string `json:"iam_request_headers"`
	// Base64-encoded full URL against which to make the AWS request when using iam auth_type.
	IamRequestUrl string `json:"iam_request_url"`
	// Base64 encoded EC2 instance identity document. This needs to be supplied along with the 'signature' parameter. If using 'curl' for fetching the identity document, consider using the option '-w 0' while piping the output to 'base64' binary.
	Identity string `json:"identity"`
	// The nonce to be used for subsequent login requests when auth_type is ec2. If this parameter is not specified at all and if reauthentication is allowed, then the backend will generate a random nonce, attaches it to the instance's identity access list entry and returns the nonce back as part of auth metadata. This value should be used with further login requests, to establish client authenticity. Clients can choose to set a custom nonce if preferred, in which case, it is recommended that clients provide a strong nonce. If a nonce is provided but with an empty value, it indicates intent to disable reauthentication. Note that, when 'disallow_reauthentication' option is enabled on either the role or the role tag, the 'nonce' holds no significance.
	Nonce string `json:"nonce"`
	// PKCS7 signature of the identity document when using an auth_type of ec2.
	Pkcs7 string `json:"pkcs7"`
	// Name of the role against which the login is being attempted. If 'role' is not specified, then the login endpoint looks for a role bearing the name of the AMI ID of the EC2 instance that is trying to login. If a matching role is not found, login fails.
	Role string `json:"role"`
	// Base64 encoded SHA256 RSA signature of the instance identity document. This needs to be supplied along with 'identity' parameter.
	Signature string `json:"signature"`
}

// NewAWSLoginRequestWithDefaults instantiates a new AWSLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSLoginRequestWithDefaults() *AWSLoginRequest {
	var this AWSLoginRequest

	return &this
}

func (o AWSLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["iam_http_request_method"] = o.IamHttpRequestMethod
	toSerialize["iam_request_body"] = o.IamRequestBody
	toSerialize["iam_request_headers"] = o.IamRequestHeaders
	toSerialize["iam_request_url"] = o.IamRequestUrl
	toSerialize["identity"] = o.Identity
	toSerialize["nonce"] = o.Nonce
	toSerialize["pkcs7"] = o.Pkcs7
	toSerialize["role"] = o.Role
	toSerialize["signature"] = o.Signature

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSWriteAuthRoleRequest struct for AWSWriteAuthRoleRequest
type AWSWriteAuthRoleRequest struct {
	// If set, allows migration of the underlying instance where the client resides. This keys off of pendingTime in the metadata document, so essentially, this disables the client nonce check whenever the instance is migrated to a new host and pendingTime is newer than the previously-remembered time. Use with caution. This is only checked when auth_type is ec2.
	AllowInstanceMigration bool `json:"allow_instance_migration"`
	// The auth_type permitted to authenticate to this role. Must be one of iam or ec2 and cannot be changed after role creation.
	AuthType string `json:"auth_type"`
	// If set, defines a constraint on the EC2 instances that the account ID in its identity document to match one of the IDs specified by this parameter. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundAccountId []string `json:"bound_account_id"`
	// If set, defines a constraint on the EC2 instances that they should be using one of the AMI IDs specified by this parameter. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundAmiId []string `json:"bound_ami_id"`
	// If set, defines a constraint on the EC2 instances to have one of the given instance IDs. Can be a list or comma-separated string of EC2 instance IDs. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundEc2InstanceId []string `json:"bound_ec2_instance_id"`
	// If set, defines a constraint on the EC2 instances to be associated with an IAM instance profile ARN which has a prefix that matches one of the values specified by this parameter. The value is prefix-matched (as though it were a glob ending in '*'). This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundIamInstanceProfileArn []string `json:"bound_iam_instance_profile_arn"`
	// ARN of the IAM principals to bind to this role. Only applicable when auth_type is iam.
	BoundIamPrincipalArn []string `json:"bound_iam_principal_arn"`
	// If set, defines a constraint on the authenticating EC2 instance that it must match one of the IAM role ARNs specified by this parameter. The value is prefix-matched (as though it were a glob ending in '*'). The configured IAM user or EC2 instance role must be allowed to execute the 'iam:GetInstanceProfile' action if this is specified. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundIamRoleArn []string `json:"bound_iam_role_arn"`
	// If set, defines a constraint on the EC2 instances that the region in its identity document match one of the regions specified by this parameter. This is only applicable when auth_type is ec2.
	BoundRegion []string `json:"bound_region"`
	// If set, defines a constraint on the EC2 instance to be associated with the subnet ID that matches one of the values specified by this parameter. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundSubnetId []string `json:"bound_subnet_id"`
	// If set, defines a constraint on the EC2 instance to be associated with a VPC ID that matches one of the value specified by this parameter. This is only applicable when auth_type is ec2 or inferred_entity_type is ec2_instance.
	BoundVpcId []string `json:"bound_vpc_id"`
	// If set, only allows a single token to be granted per instance ID. In order to perform a fresh login, the entry in the access list for the instance ID needs to be cleared using 'auth/aws-ec2/identity-accesslist/<instance_id>' endpoint. This is only applicable when auth_type is ec2.
	DisallowReauthentication bool `json:"disallow_reauthentication"`
	// When auth_type is iam and inferred_entity_type is set, the region to assume the inferred entity exists in.
	InferredAwsRegion string `json:"inferred_aws_region"`
	// When auth_type is iam, the AWS entity type to infer from the authenticated principal. The only supported value is ec2_instance, which will extract the EC2 instance ID from the authenticated role and apply the following restrictions specific to EC2 instances: bound_ami_id, bound_account_id, bound_iam_role_arn, bound_iam_instance_profile_arn, bound_vpc_id, bound_subnet_id. The configured EC2 client must be able to find the inferred instance ID in the results, and the instance must be running. If unable to determine the EC2 instance ID or unable to find the EC2 instance ID among running instances, then authentication will fail.
	InferredEntityType string `json:"inferred_entity_type"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl int32 `json:"max_ttl"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// If set, resolve all AWS IAM ARNs into AWS's internal unique IDs. When an IAM entity (e.g., user, role, or instance profile) is deleted, then all references to it within the role will be invalidated, which prevents a new IAM entity from being created with the same name and matching the role's IAM binds. Once set, this cannot be unset.
	ResolveAwsUniqueIds bool `json:"resolve_aws_unique_ids"`
	// If set, enables the role tags for this role. The value set for this field should be the 'key' of the tag on the EC2 instance. The 'value' of the tag should be generated using 'role/<role>/tag' endpoint. Defaults to an empty string, meaning that role tags are disabled. This is only allowed if auth_type is ec2.
	RoleTag string `json:"role_tag"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl int32 `json:"ttl"`
}

// NewAWSWriteAuthRoleRequestWithDefaults instantiates a new AWSWriteAuthRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSWriteAuthRoleRequestWithDefaults() *AWSWriteAuthRoleRequest {
	var this AWSWriteAuthRoleRequest

	this.AllowInstanceMigration = false
	this.DisallowReauthentication = false
	this.ResolveAwsUniqueIds = true
	this.RoleTag = ""
	this.TokenType = "default-service"

	return &this
}

func (o AWSWriteAuthRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allow_instance_migration"] = o.AllowInstanceMigration
	toSerialize["auth_type"] = o.AuthType
	toSerialize["bound_account_id"] = o.BoundAccountId
	toSerialize["bound_ami_id"] = o.BoundAmiId
	toSerialize["bound_ec2_instance_id"] = o.BoundEc2InstanceId
	toSerialize["bound_iam_instance_profile_arn"] = o.BoundIamInstanceProfileArn
	toSerialize["bound_iam_principal_arn"] = o.BoundIamPrincipalArn
	toSerialize["bound_iam_role_arn"] = o.BoundIamRoleArn
	toSerialize["bound_region"] = o.BoundRegion
	toSerialize["bound_subnet_id"] = o.BoundSubnetId
	toSerialize["bound_vpc_id"] = o.BoundVpcId
	toSerialize["disallow_reauthentication"] = o.DisallowReauthentication
	toSerialize["inferred_aws_region"] = o.InferredAwsRegion
	toSerialize["inferred_entity_type"] = o.InferredEntityType
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["resolve_aws_unique_ids"] = o.ResolveAwsUniqueIds
	toSerialize["role_tag"] = o.RoleTag
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSWriteAuthRoleTagRequest struct for AWSWriteAuthRoleTagRequest
type AWSWriteAuthRoleTagRequest struct {
	// If set, allows migration of the underlying instance where the client resides. This keys off of pendingTime in the metadata document, so essentially, this disables the client nonce check whenever the instance is migrated to a new host and pendingTime is newer than the previously-remembered time. Use with caution.
	AllowInstanceMigration bool `json:"allow_instance_migration"`
	// If set, only allows a single token to be granted per instance ID. In order to perform a fresh login, the entry in access list for the instance ID needs to be cleared using the 'auth/aws-ec2/identity-accesslist/<instance_id>' endpoint.
	DisallowReauthentication bool `json:"disallow_reauthentication"`
	// Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID.
	InstanceId string `json:"instance_id"`
	// If set, specifies the maximum allowed token lifetime.
	MaxTtl int32 `json:"max_ttl"`
	// Policies to be associated with the tag. If set, must be a subset of the role's policies. If set, but set to an empty value, only the 'default' policy will be given to issued tokens.
	Policies []string `json:"policies"`
}

// NewAWSWriteAuthRoleTagRequestWithDefaults instantiates a new AWSWriteAuthRoleTagRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSWriteAuthRoleTagRequestWithDefaults() *AWSWriteAuthRoleTagRequest {
	var this AWSWriteAuthRoleTagRequest

	this.AllowInstanceMigration = false
	this.DisallowReauthentication = false
	this.MaxTtl = 0

	return &this
}

func (o AWSWriteAuthRoleTagRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allow_instance_migration"] = o.AllowInstanceMigration
	toSerialize["disallow_reauthentication"] = o.DisallowReauthentication
	toSerialize["instance_id"] = o.InstanceId
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["policies"] = o.Policies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSWriteCredentialsRequest struct for AWSWriteCredentialsRequest
type AWSWriteCredentialsRequest struct {
	// Name of the role
	Name string `json:"name"`
	// ARN of role to assume when credential_type is assumed_role
	RoleArn string `json:"role_arn"`
	// Session name to use when assuming role. Max chars: 64
	RoleSessionName string `json:"role_session_name"`
	// Lifetime of the returned credentials in seconds
	Ttl int32 `json:"ttl"`
}

// NewAWSWriteCredentialsRequestWithDefaults instantiates a new AWSWriteCredentialsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSWriteCredentialsRequestWithDefaults() *AWSWriteCredentialsRequest {
	var this AWSWriteCredentialsRequest

	this.Ttl = 3600

	return &this
}

func (o AWSWriteCredentialsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["name"] = o.Name
	toSerialize["role_arn"] = o.RoleArn
	toSerialize["role_session_name"] = o.RoleSessionName
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSWriteIdentityAccessListTidySettingsRequest struct for AWSWriteIdentityAccessListTidySettingsRequest
type AWSWriteIdentityAccessListTidySettingsRequest struct {
	// The amount of extra time that must have passed beyond the identity's expiration, before it is removed from the backend storage.
	SafetyBuffer int32 `json:"safety_buffer"`
}

// NewAWSWriteIdentityAccessListTidySettingsRequestWithDefaults instantiates a new AWSWriteIdentityAccessListTidySettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSWriteIdentityAccessListTidySettingsRequestWithDefaults() *AWSWriteIdentityAccessListTidySettingsRequest {
	var this AWSWriteIdentityAccessListTidySettingsRequest

	this.SafetyBuffer = 259200

	return &this
}

func (o AWSWriteIdentityAccessListTidySettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["safety_buffer"] = o.SafetyBuffer

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSWriteIdentityWhiteListTidySettingsRequest struct for AWSWriteIdentityWhiteListTidySettingsRequest
type AWSWriteIdentityWhiteListTidySettingsRequest struct {
	// The amount of extra time that must have passed beyond the identity's expiration, before it is removed from the backend storage.
	SafetyBuffer int32 `json:"safety_buffer"`
}

// NewAWSWriteIdentityWhiteListTidySettingsRequestWithDefaults instantiates a new AWSWriteIdentityWhiteListTidySettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSWriteIdentityWhiteListTidySettingsRequestWithDefaults() *AWSWriteIdentityWhiteListTidySettingsRequest {
	var this AWSWriteIdentityWhiteListTidySettingsRequest

	this.SafetyBuffer = 259200

	return &this
}

func (o AWSWriteIdentityWhiteListTidySettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["safety_buffer"] = o.SafetyBuffer

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSWriteRoleRequest struct for AWSWriteRoleRequest
type AWSWriteRoleRequest struct {
	// Use role_arns or policy_arns instead.
	// Deprecated
	Arn string `json:"arn"`
	// Type of credential to retrieve. Must be one of assumed_role, iam_user, or federation_token
	CredentialType string `json:"credential_type"`
	// Default TTL for assumed_role and federation_token credential types when no TTL is explicitly requested with the credentials
	DefaultStsTtl int32 `json:"default_sts_ttl"`
	// Names of IAM groups that generated IAM users will be added to. For a credential type of assumed_role or federation_token, the policies sent to the corresponding AWS call (sts:AssumeRole or sts:GetFederation) will be the policies from each group in iam_groups combined with the policy_document and policy_arns parameters.
	IamGroups []string `json:"iam_groups"`
	// IAM tags to be set for any users created by this role. These must be presented as Key-Value pairs. This can be represented as a map or a list of equal sign delimited key pairs.
	IamTags map[string]interface{} `json:"iam_tags"`
	// Max allowed TTL for assumed_role and federation_token credential types
	MaxStsTtl int32 `json:"max_sts_ttl"`
	// ARN of an IAM policy to attach as a permissions boundary on IAM user credentials; only valid when credential_type isiam_user
	PermissionsBoundaryArn string `json:"permissions_boundary_arn"`
	// Use policy_document instead.
	// Deprecated
	Policy string `json:"policy"`
	// ARNs of AWS policies. Behavior varies by credential_type. When credential_type is iam_user, then it will attach the specified policies to the generated IAM user. When credential_type is assumed_role or federation_token, the policies will be passed as the PolicyArns parameter, acting as a filter on permissions available.
	PolicyArns []string `json:"policy_arns"`
	// JSON-encoded IAM policy document. Behavior varies by credential_type. When credential_type is iam_user, then it will attach the contents of the policy_document to the IAM user generated. When credential_type is assumed_role or federation_token, this will be passed in as the Policy parameter to the AssumeRole or GetFederationToken API call, acting as a filter on permissions available.
	PolicyDocument string `json:"policy_document"`
	// ARNs of AWS roles allowed to be assumed. Only valid when credential_type is assumed_role
	RoleArns []string `json:"role_arns"`
	// Path for IAM User. Only valid when credential_type is iam_user
	UserPath string `json:"user_path"`
}

// NewAWSWriteRoleRequestWithDefaults instantiates a new AWSWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSWriteRoleRequestWithDefaults() *AWSWriteRoleRequest {
	var this AWSWriteRoleRequest

	this.UserPath = "/"

	return &this
}

func (o AWSWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["arn"] = o.Arn
	toSerialize["credential_type"] = o.CredentialType
	toSerialize["default_sts_ttl"] = o.DefaultStsTtl
	toSerialize["iam_groups"] = o.IamGroups
	toSerialize["iam_tags"] = o.IamTags
	toSerialize["max_sts_ttl"] = o.MaxStsTtl
	toSerialize["permissions_boundary_arn"] = o.PermissionsBoundaryArn
	toSerialize["policy"] = o.Policy
	toSerialize["policy_arns"] = o.PolicyArns
	toSerialize["policy_document"] = o.PolicyDocument
	toSerialize["role_arns"] = o.RoleArns
	toSerialize["user_path"] = o.UserPath

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSWriteRoleTagBlackListTidySettingsRequest struct for AWSWriteRoleTagBlackListTidySettingsRequest
type AWSWriteRoleTagBlackListTidySettingsRequest struct {
	// The amount of extra time that must have passed beyond the roletag expiration, before it is removed from the backend storage.
	SafetyBuffer int32 `json:"safety_buffer"`
}

// NewAWSWriteRoleTagBlackListTidySettingsRequestWithDefaults instantiates a new AWSWriteRoleTagBlackListTidySettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSWriteRoleTagBlackListTidySettingsRequestWithDefaults() *AWSWriteRoleTagBlackListTidySettingsRequest {
	var this AWSWriteRoleTagBlackListTidySettingsRequest

	this.SafetyBuffer = 259200

	return &this
}

func (o AWSWriteRoleTagBlackListTidySettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["safety_buffer"] = o.SafetyBuffer

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSWriteRoleTagDenyListTidySettingsRequest struct for AWSWriteRoleTagDenyListTidySettingsRequest
type AWSWriteRoleTagDenyListTidySettingsRequest struct {
	// The amount of extra time that must have passed beyond the roletag expiration, before it is removed from the backend storage.
	SafetyBuffer int32 `json:"safety_buffer"`
}

// NewAWSWriteRoleTagDenyListTidySettingsRequestWithDefaults instantiates a new AWSWriteRoleTagDenyListTidySettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSWriteRoleTagDenyListTidySettingsRequestWithDefaults() *AWSWriteRoleTagDenyListTidySettingsRequest {
	var this AWSWriteRoleTagDenyListTidySettingsRequest

	this.SafetyBuffer = 259200

	return &this
}

func (o AWSWriteRoleTagDenyListTidySettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["safety_buffer"] = o.SafetyBuffer

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AWSWriteSecurityTokenServiceRequest struct for AWSWriteSecurityTokenServiceRequest
type AWSWriteSecurityTokenServiceRequest struct {
	// ARN of role to assume when credential_type is assumed_role
	RoleArn string `json:"role_arn"`
	// Session name to use when assuming role. Max chars: 64
	RoleSessionName string `json:"role_session_name"`
	// Lifetime of the returned credentials in seconds
	Ttl int32 `json:"ttl"`
}

// NewAWSWriteSecurityTokenServiceRequestWithDefaults instantiates a new AWSWriteSecurityTokenServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSWriteSecurityTokenServiceRequestWithDefaults() *AWSWriteSecurityTokenServiceRequest {
	var this AWSWriteSecurityTokenServiceRequest

	this.Ttl = 3600

	return &this
}

func (o AWSWriteSecurityTokenServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["role_arn"] = o.RoleArn
	toSerialize["role_session_name"] = o.RoleSessionName
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AzureLoginRequest struct for AzureLoginRequest
type AzureLoginRequest struct {
	// A signed JWT
	Jwt string `json:"jwt"`
	// The resource group from the instance.
	ResourceGroupName string `json:"resource_group_name"`
	// The token role.
	Role string `json:"role"`
	// The subscription id for the instance.
	SubscriptionId string `json:"subscription_id"`
	// The name of the virtual machine. This value is ignored if vmss_name is specified.
	VmName string `json:"vm_name"`
	// The name of the virtual machine scale set the instance is in.
	VmssName string `json:"vmss_name"`
}

// NewAzureLoginRequestWithDefaults instantiates a new AzureLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureLoginRequestWithDefaults() *AzureLoginRequest {
	var this AzureLoginRequest

	return &this
}

func (o AzureLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["jwt"] = o.Jwt
	toSerialize["resource_group_name"] = o.ResourceGroupName
	toSerialize["role"] = o.Role
	toSerialize["subscription_id"] = o.SubscriptionId
	toSerialize["vm_name"] = o.VmName
	toSerialize["vmss_name"] = o.VmssName

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AzureWriteAuthConfigRequest struct for AzureWriteAuthConfigRequest
type AzureWriteAuthConfigRequest struct {
	// The OAuth2 client id to connection to Azure. This value can also be provided with the AZURE_CLIENT_ID environment variable.
	ClientId string `json:"client_id"`
	// The OAuth2 client secret to connection to Azure. This value can also be provided with the AZURE_CLIENT_SECRET environment variable.
	ClientSecret string `json:"client_secret"`
	// The Azure environment name. If not provided, AzurePublicCloud is used. This value can also be provided with the AZURE_ENVIRONMENT environment variable.
	Environment string `json:"environment"`
	// The resource URL for the vault application in Azure Active Directory. This value can also be provided with the AZURE_AD_RESOURCE environment variable.
	Resource string `json:"resource"`
	// The tenant id for the Azure Active Directory. This is sometimes referred to as Directory ID in AD. This value can also be provided with the AZURE_TENANT_ID environment variable.
	TenantId string `json:"tenant_id"`
}

// NewAzureWriteAuthConfigRequestWithDefaults instantiates a new AzureWriteAuthConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureWriteAuthConfigRequestWithDefaults() *AzureWriteAuthConfigRequest {
	var this AzureWriteAuthConfigRequest

	return &this
}

func (o AzureWriteAuthConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["client_id"] = o.ClientId
	toSerialize["client_secret"] = o.ClientSecret
	toSerialize["environment"] = o.Environment
	toSerialize["resource"] = o.Resource
	toSerialize["tenant_id"] = o.TenantId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AzureWriteAuthRoleRequest struct for AzureWriteAuthRoleRequest
type AzureWriteAuthRoleRequest struct {
	// Comma-separated list of group ids that login is restricted to.
	BoundGroupIds []string `json:"bound_group_ids"`
	// Comma-separated list of locations that login is restricted to.
	BoundLocations []string `json:"bound_locations"`
	// Comma-separated list of resource groups that login is restricted to.
	BoundResourceGroups []string `json:"bound_resource_groups"`
	// Comma-separated list of scale sets that login is restricted to.
	BoundScaleSets []string `json:"bound_scale_sets"`
	// Comma-separated list of service principal ids that login is restricted to.
	BoundServicePrincipalIds []string `json:"bound_service_principal_ids"`
	// Comma-separated list of subscription ids that login is restricted to.
	BoundSubscriptionIds []string `json:"bound_subscription_ids"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl int32 `json:"max_ttl"`
	// Use \"token_num_uses\" instead. If this and \"token_num_uses\" are both specified, only \"token_num_uses\" will be used.
	// Deprecated
	NumUses int32 `json:"num_uses"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl int32 `json:"ttl"`
}

// NewAzureWriteAuthRoleRequestWithDefaults instantiates a new AzureWriteAuthRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureWriteAuthRoleRequestWithDefaults() *AzureWriteAuthRoleRequest {
	var this AzureWriteAuthRoleRequest

	this.TokenType = "default-service"

	return &this
}

func (o AzureWriteAuthRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bound_group_ids"] = o.BoundGroupIds
	toSerialize["bound_locations"] = o.BoundLocations
	toSerialize["bound_resource_groups"] = o.BoundResourceGroups
	toSerialize["bound_scale_sets"] = o.BoundScaleSets
	toSerialize["bound_service_principal_ids"] = o.BoundServicePrincipalIds
	toSerialize["bound_subscription_ids"] = o.BoundSubscriptionIds
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["num_uses"] = o.NumUses
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AzureWriteConfigRequest struct for AzureWriteConfigRequest
type AzureWriteConfigRequest struct {
	// The OAuth2 client id to connect to Azure. This value can also be provided with the AZURE_CLIENT_ID environment variable.
	ClientId string `json:"client_id"`
	// The OAuth2 client secret to connect to Azure. This value can also be provided with the AZURE_CLIENT_SECRET environment variable.
	ClientSecret string `json:"client_secret"`
	// The Azure environment name. If not provided, AzurePublicCloud is used. This value can also be provided with the AZURE_ENVIRONMENT environment variable.
	Environment string `json:"environment"`
	// Name of the password policy to use to generate passwords for dynamic credentials.
	PasswordPolicy string `json:"password_policy"`
	// The TTL of the root password in Azure. This can be either a number of seconds or a time formatted duration (ex: 24h, 48ds)
	RootPasswordTtl int32 `json:"root_password_ttl"`
	// The subscription id for the Azure Active Directory. This value can also be provided with the AZURE_SUBSCRIPTION_ID environment variable.
	SubscriptionId string `json:"subscription_id"`
	// The tenant id for the Azure Active Directory. This value can also be provided with the AZURE_TENANT_ID environment variable.
	TenantId string `json:"tenant_id"`
}

// NewAzureWriteConfigRequestWithDefaults instantiates a new AzureWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureWriteConfigRequestWithDefaults() *AzureWriteConfigRequest {
	var this AzureWriteConfigRequest

	return &this
}

func (o AzureWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["client_id"] = o.ClientId
	toSerialize["client_secret"] = o.ClientSecret
	toSerialize["environment"] = o.Environment
	toSerialize["password_policy"] = o.PasswordPolicy
	toSerialize["root_password_ttl"] = o.RootPasswordTtl
	toSerialize["subscription_id"] = o.SubscriptionId
	toSerialize["tenant_id"] = o.TenantId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// AzureWriteRoleRequest struct for AzureWriteRoleRequest
type AzureWriteRoleRequest struct {
	// Application Object ID to use for static service principal credentials.
	ApplicationObjectId string `json:"application_object_id"`
	// JSON list of Azure groups to add the service principal to.
	AzureGroups string `json:"azure_groups"`
	// JSON list of Azure roles to assign.
	AzureRoles string `json:"azure_roles"`
	// Maximum time a service principal. If not set or set to 0, will use system default.
	MaxTtl int32 `json:"max_ttl"`
	// Indicates whether new application objects should be permanently deleted. If not set, objects will not be permanently deleted.
	PermanentlyDelete bool `json:"permanently_delete"`
	// Default lease for generated credentials. If not set or set to 0, will use system default.
	Ttl int32 `json:"ttl"`
}

// NewAzureWriteRoleRequestWithDefaults instantiates a new AzureWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureWriteRoleRequestWithDefaults() *AzureWriteRoleRequest {
	var this AzureWriteRoleRequest

	this.PermanentlyDelete = false

	return &this
}

func (o AzureWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["application_object_id"] = o.ApplicationObjectId
	toSerialize["azure_groups"] = o.AzureGroups
	toSerialize["azure_roles"] = o.AzureRoles
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["permanently_delete"] = o.PermanentlyDelete
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CalculateAuditHashRequest struct for CalculateAuditHashRequest
type CalculateAuditHashRequest struct {
	Input string `json:"input"`
}

// NewCalculateAuditHashRequestWithDefaults instantiates a new CalculateAuditHashRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCalculateAuditHashRequestWithDefaults() *CalculateAuditHashRequest {
	var this CalculateAuditHashRequest

	return &this
}

func (o CalculateAuditHashRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["input"] = o.Input

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CentrifyLoginRequest struct for CentrifyLoginRequest
type CentrifyLoginRequest struct {
	// Auth mode ('ro' for resource owner, 'cc' for credential client).
	Mode string `json:"mode"`
	// Password for this user.
	Password string `json:"password"`
	// Username of the user.
	Username string `json:"username"`
}

// NewCentrifyLoginRequestWithDefaults instantiates a new CentrifyLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentrifyLoginRequestWithDefaults() *CentrifyLoginRequest {
	var this CentrifyLoginRequest

	this.Mode = "ro"

	return &this
}

func (o CentrifyLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["mode"] = o.Mode
	toSerialize["password"] = o.Password
	toSerialize["username"] = o.Username

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CentrifyWriteConfigRequest struct for CentrifyWriteConfigRequest
type CentrifyWriteConfigRequest struct {
	// OAuth2 App ID
	AppId string `json:"app_id"`
	// OAuth2 Client ID
	ClientId string `json:"client_id"`
	// OAuth2 Client Secret
	ClientSecret string `json:"client_secret"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// OAuth2 App Scope
	Scope string `json:"scope"`
	// Service URL (https://<tenant>.my.centrify.com)
	ServiceUrl string `json:"service_url"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
}

// NewCentrifyWriteConfigRequestWithDefaults instantiates a new CentrifyWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentrifyWriteConfigRequestWithDefaults() *CentrifyWriteConfigRequest {
	var this CentrifyWriteConfigRequest

	this.AppId = "vault_io_integration"
	this.Scope = "vault_io_integration"
	this.TokenType = "default-service"

	return &this
}

func (o CentrifyWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["app_id"] = o.AppId
	toSerialize["client_id"] = o.ClientId
	toSerialize["client_secret"] = o.ClientSecret
	toSerialize["policies"] = o.Policies
	toSerialize["scope"] = o.Scope
	toSerialize["service_url"] = o.ServiceUrl
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CertificatesLoginRequest struct for CertificatesLoginRequest
type CertificatesLoginRequest struct {
	// The name of the certificate role to authenticate against.
	Name string `json:"name"`
}

// NewCertificatesLoginRequestWithDefaults instantiates a new CertificatesLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificatesLoginRequestWithDefaults() *CertificatesLoginRequest {
	var this CertificatesLoginRequest

	return &this
}

func (o CertificatesLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["name"] = o.Name

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CertificatesWriteConfigRequest struct for CertificatesWriteConfigRequest
type CertificatesWriteConfigRequest struct {
	// If set, during renewal, skips the matching of presented client identity with the client identity used during login. Defaults to false.
	DisableBinding bool `json:"disable_binding"`
	// If set, metadata of the certificate including the metadata corresponding to allowed_metadata_extensions will be stored in the alias. Defaults to false.
	EnableIdentityAliasMetadata bool `json:"enable_identity_alias_metadata"`
	// The size of the in memory OCSP response cache, shared by all configured certs
	OcspCacheSize int32 `json:"ocsp_cache_size"`
}

// NewCertificatesWriteConfigRequestWithDefaults instantiates a new CertificatesWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificatesWriteConfigRequestWithDefaults() *CertificatesWriteConfigRequest {
	var this CertificatesWriteConfigRequest

	this.DisableBinding = false
	this.EnableIdentityAliasMetadata = false
	this.OcspCacheSize = 100

	return &this
}

func (o CertificatesWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disable_binding"] = o.DisableBinding
	toSerialize["enable_identity_alias_metadata"] = o.EnableIdentityAliasMetadata
	toSerialize["ocsp_cache_size"] = o.OcspCacheSize

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CertificatesWriteCRLRequest struct for CertificatesWriteCRLRequest
type CertificatesWriteCRLRequest struct {
	// The public CRL that should be trusted to attest to certificates' validity statuses. May be DER or PEM encoded. Note: the expiration time is ignored; if the CRL is no longer valid, delete it using the same name as specified here.
	Crl string `json:"crl"`
	// The URL of a CRL distribution point. Only one of 'crl' or 'url' parameters should be specified.
	Url string `json:"url"`
}

// NewCertificatesWriteCRLRequestWithDefaults instantiates a new CertificatesWriteCRLRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificatesWriteCRLRequestWithDefaults() *CertificatesWriteCRLRequest {
	var this CertificatesWriteCRLRequest

	return &this
}

func (o CertificatesWriteCRLRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["crl"] = o.Crl
	toSerialize["url"] = o.Url

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CertificatesWriteRequest struct for CertificatesWriteRequest
type CertificatesWriteRequest struct {
	// A comma-separated list of names. At least one must exist in the Common Name. Supports globbing.
	AllowedCommonNames []string `json:"allowed_common_names"`
	// A comma-separated list of DNS names. At least one must exist in the SANs. Supports globbing.
	AllowedDnsSans []string `json:"allowed_dns_sans"`
	// A comma-separated list of Email Addresses. At least one must exist in the SANs. Supports globbing.
	AllowedEmailSans []string `json:"allowed_email_sans"`
	// A comma-separated string or array of oid extensions. Upon successful authentication, these extensions will be added as metadata if they are present in the certificate. The metadata key will be the string consisting of the oid numbers separated by a dash (-) instead of a dot (.) to allow usage in ACL templates.
	AllowedMetadataExtensions []string `json:"allowed_metadata_extensions"`
	// A comma-separated list of names. At least one must exist in either the Common Name or SANs. Supports globbing. This parameter is deprecated, please use allowed_common_names, allowed_dns_sans, allowed_email_sans, allowed_uri_sans.
	AllowedNames []string `json:"allowed_names"`
	// A comma-separated list of Organizational Units names. At least one must exist in the OU field.
	AllowedOrganizationalUnits []string `json:"allowed_organizational_units"`
	// A comma-separated list of URIs. At least one must exist in the SANs. Supports globbing.
	AllowedUriSans []string `json:"allowed_uri_sans"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs"`
	// The public certificate that should be trusted. Must be x509 PEM encoded.
	Certificate string `json:"certificate"`
	// The display name to use for clients using this certificate.
	DisplayName string `json:"display_name"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Lease int32 `json:"lease"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl int32 `json:"max_ttl"`
	// Any additional CA certificates needed to communicate with OCSP servers
	OcspCaCertificates string `json:"ocsp_ca_certificates"`
	// Whether to attempt OCSP verification of certificates at login
	OcspEnabled bool `json:"ocsp_enabled"`
	// If set to true, if an OCSP revocation cannot be made successfully, login will proceed rather than failing. If false, failing to get an OCSP status fails the request.
	OcspFailOpen bool `json:"ocsp_fail_open"`
	// If set to true, rather than accepting the first successful OCSP response, query all servers and consider the certificate valid only if all servers agree.
	OcspQueryAllServers bool `json:"ocsp_query_all_servers"`
	// A comma-separated list of OCSP server addresses. If unset, the OCSP server is determined from the AuthorityInformationAccess extension on the certificate being inspected.
	OcspServersOverride []string `json:"ocsp_servers_override"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// A comma-separated string or array of extensions formatted as \"oid:value\". Expects the extension value to be some type of ASN1 encoded string. All values much match. Supports globbing on \"value\".
	RequiredExtensions []string `json:"required_extensions"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl int32 `json:"ttl"`
}

// NewCertificatesWriteRequestWithDefaults instantiates a new CertificatesWriteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificatesWriteRequestWithDefaults() *CertificatesWriteRequest {
	var this CertificatesWriteRequest

	this.OcspFailOpen = false
	this.OcspQueryAllServers = false
	this.TokenType = "default-service"

	return &this
}

func (o CertificatesWriteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allowed_common_names"] = o.AllowedCommonNames
	toSerialize["allowed_dns_sans"] = o.AllowedDnsSans
	toSerialize["allowed_email_sans"] = o.AllowedEmailSans
	toSerialize["allowed_metadata_extensions"] = o.AllowedMetadataExtensions
	toSerialize["allowed_names"] = o.AllowedNames
	toSerialize["allowed_organizational_units"] = o.AllowedOrganizationalUnits
	toSerialize["allowed_uri_sans"] = o.AllowedUriSans
	toSerialize["bound_cidrs"] = o.BoundCidrs
	toSerialize["certificate"] = o.Certificate
	toSerialize["display_name"] = o.DisplayName
	toSerialize["lease"] = o.Lease
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["ocsp_ca_certificates"] = o.OcspCaCertificates
	toSerialize["ocsp_enabled"] = o.OcspEnabled
	toSerialize["ocsp_fail_open"] = o.OcspFailOpen
	toSerialize["ocsp_query_all_servers"] = o.OcspQueryAllServers
	toSerialize["ocsp_servers_override"] = o.OcspServersOverride
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["required_extensions"] = o.RequiredExtensions
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CloudFoundryLoginRequest struct for CloudFoundryLoginRequest
type CloudFoundryLoginRequest struct {
	// The full body of the file available at the CF_INSTANCE_CERT path on the CF instance.
	CfInstanceCert string `json:"cf_instance_cert"`
	// The name of the role to authenticate against.
	Role string `json:"role"`
	// The signature generated by the client certificate's private key.
	Signature string `json:"signature"`
	// The date and time used to construct the signature.
	SigningTime string `json:"signing_time"`
}

// NewCloudFoundryLoginRequestWithDefaults instantiates a new CloudFoundryLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudFoundryLoginRequestWithDefaults() *CloudFoundryLoginRequest {
	var this CloudFoundryLoginRequest

	return &this
}

func (o CloudFoundryLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["cf_instance_cert"] = o.CfInstanceCert
	toSerialize["role"] = o.Role
	toSerialize["signature"] = o.Signature
	toSerialize["signing_time"] = o.SigningTime

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CloudFoundryWriteConfigRequest struct for CloudFoundryWriteConfigRequest
type CloudFoundryWriteConfigRequest struct {
	// CF’s API address.
	CfApiAddr string `json:"cf_api_addr"`
	// The PEM-format certificates that are presented for mutual TLS with the CloudFoundry API. If not set, mutual TLS is not used
	CfApiMutualTlsCertificate string `json:"cf_api_mutual_tls_certificate"`
	// The PEM-format private key that are used for mutual TLS with the CloudFoundry API. If not set, mutual TLS is not used
	CfApiMutualTlsKey string `json:"cf_api_mutual_tls_key"`
	// The PEM-format CA certificates that are acceptable for the CF API to present.
	CfApiTrustedCertificates []string `json:"cf_api_trusted_certificates"`
	// The client id for CF’s API.
	CfClientId string `json:"cf_client_id"`
	// The client secret for CF’s API.
	CfClientSecret string `json:"cf_client_secret"`
	// The password for CF’s API.
	CfPassword string `json:"cf_password"`
	// The username for CF’s API.
	CfUsername string `json:"cf_username"`
	// The PEM-format CA certificates that are required to have issued the instance certificates presented for logging in.
	IdentityCaCertificates []string `json:"identity_ca_certificates"`
	// Duration in seconds for the maximum acceptable length in the future a \"signing_time\" can be. Useful for clock drift. Set low to reduce the opportunity for replay attacks.
	LoginMaxSecondsNotAfter int32 `json:"login_max_seconds_not_after"`
	// Duration in seconds for the maximum acceptable age of a \"signing_time\". Useful for clock drift. Set low to reduce the opportunity for replay attacks.
	LoginMaxSecondsNotBefore int32 `json:"login_max_seconds_not_before"`
	// Deprecated. Please use \"cf_api_addr\".
	// Deprecated
	PcfApiAddr string `json:"pcf_api_addr"`
	// Deprecated. Please use \"cf_api_trusted_certificates\".
	// Deprecated
	PcfApiTrustedCertificates []string `json:"pcf_api_trusted_certificates"`
	// Deprecated. Please use \"cf_password\".
	// Deprecated
	PcfPassword string `json:"pcf_password"`
	// Deprecated. Please use \"cf_username\".
	// Deprecated
	PcfUsername string `json:"pcf_username"`
}

// NewCloudFoundryWriteConfigRequestWithDefaults instantiates a new CloudFoundryWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudFoundryWriteConfigRequestWithDefaults() *CloudFoundryWriteConfigRequest {
	var this CloudFoundryWriteConfigRequest

	this.LoginMaxSecondsNotAfter = 60
	this.LoginMaxSecondsNotBefore = 300

	return &this
}

func (o CloudFoundryWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["cf_api_addr"] = o.CfApiAddr
	toSerialize["cf_api_mutual_tls_certificate"] = o.CfApiMutualTlsCertificate
	toSerialize["cf_api_mutual_tls_key"] = o.CfApiMutualTlsKey
	toSerialize["cf_api_trusted_certificates"] = o.CfApiTrustedCertificates
	toSerialize["cf_client_id"] = o.CfClientId
	toSerialize["cf_client_secret"] = o.CfClientSecret
	toSerialize["cf_password"] = o.CfPassword
	toSerialize["cf_username"] = o.CfUsername
	toSerialize["identity_ca_certificates"] = o.IdentityCaCertificates
	toSerialize["login_max_seconds_not_after"] = o.LoginMaxSecondsNotAfter
	toSerialize["login_max_seconds_not_before"] = o.LoginMaxSecondsNotBefore
	toSerialize["pcf_api_addr"] = o.PcfApiAddr
	toSerialize["pcf_api_trusted_certificates"] = o.PcfApiTrustedCertificates
	toSerialize["pcf_password"] = o.PcfPassword
	toSerialize["pcf_username"] = o.PcfUsername

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// CloudFoundryWriteRoleRequest struct for CloudFoundryWriteRoleRequest
type CloudFoundryWriteRoleRequest struct {
	// Require that the client certificate presented has at least one of these app IDs.
	BoundApplicationIds []string `json:"bound_application_ids"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs"`
	// Require that the client certificate presented has at least one of these instance IDs.
	BoundInstanceIds []string `json:"bound_instance_ids"`
	// Require that the client certificate presented has at least one of these org IDs.
	BoundOrganizationIds []string `json:"bound_organization_ids"`
	// Require that the client certificate presented has at least one of these space IDs.
	BoundSpaceIds []string `json:"bound_space_ids"`
	// If set to true, disables the default behavior that logging in must be performed from an acceptable IP address described by the certificate presented.
	DisableIpMatching bool `json:"disable_ip_matching"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl int32 `json:"max_ttl"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl int32 `json:"ttl"`
}

// NewCloudFoundryWriteRoleRequestWithDefaults instantiates a new CloudFoundryWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudFoundryWriteRoleRequestWithDefaults() *CloudFoundryWriteRoleRequest {
	var this CloudFoundryWriteRoleRequest

	this.DisableIpMatching = false
	this.TokenType = "default-service"

	return &this
}

func (o CloudFoundryWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bound_application_ids"] = o.BoundApplicationIds
	toSerialize["bound_cidrs"] = o.BoundCidrs
	toSerialize["bound_instance_ids"] = o.BoundInstanceIds
	toSerialize["bound_organization_ids"] = o.BoundOrganizationIds
	toSerialize["bound_space_ids"] = o.BoundSpaceIds
	toSerialize["disable_ip_matching"] = o.DisableIpMatching
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ConsulWriteAccessConfigRequest struct for ConsulWriteAccessConfigRequest
type ConsulWriteAccessConfigRequest struct {
	// Consul server address
	Address string `json:"address"`
	// CA certificate to use when verifying Consul server certificate, must be x509 PEM encoded.
	CaCert string `json:"ca_cert"`
	// Client certificate used for Consul's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_key.
	ClientCert string `json:"client_cert"`
	// Client key used for Consul's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_cert.
	ClientKey string `json:"client_key"`
	// URI scheme for the Consul address
	Scheme string `json:"scheme"`
	// Token for API calls
	Token string `json:"token"`
}

// NewConsulWriteAccessConfigRequestWithDefaults instantiates a new ConsulWriteAccessConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsulWriteAccessConfigRequestWithDefaults() *ConsulWriteAccessConfigRequest {
	var this ConsulWriteAccessConfigRequest

	this.Scheme = "http"

	return &this
}

func (o ConsulWriteAccessConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["address"] = o.Address
	toSerialize["ca_cert"] = o.CaCert
	toSerialize["client_cert"] = o.ClientCert
	toSerialize["client_key"] = o.ClientKey
	toSerialize["scheme"] = o.Scheme
	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ConsulWriteRoleRequest struct for ConsulWriteRoleRequest
type ConsulWriteRoleRequest struct {
	// Indicates which namespace that the token will be created within. Defaults to 'default'. Available in Consul 1.7 and above.
	ConsulNamespace string `json:"consul_namespace"`
	// List of policies to attach to the token. Either \"consul_policies\" or \"consul_roles\" are required for Consul 1.5 and above, or just \"consul_policies\" if using Consul 1.4.
	ConsulPolicies []string `json:"consul_policies"`
	// List of Consul roles to attach to the token. Either \"policies\" or \"consul_roles\" are required for Consul 1.5 and above.
	ConsulRoles []string `json:"consul_roles"`
	// Use \"ttl\" instead.
	// Deprecated
	Lease int32 `json:"lease"`
	// Indicates that the token should not be replicated globally and instead be local to the current datacenter. Available in Consul 1.4 and above.
	Local bool `json:"local"`
	// Max TTL for the Consul token created from the role.
	MaxTtl int32 `json:"max_ttl"`
	// List of Node Identities to attach to the token. Available in Consul 1.8.1 or above.
	NodeIdentities []string `json:"node_identities"`
	// Indicates which admin partition that the token will be created within. Defaults to 'default'. Available in Consul 1.11 and above.
	Partition string `json:"partition"`
	// Use \"consul_policies\" instead.
	// Deprecated
	Policies []string `json:"policies"`
	// Policy document, base64 encoded. Required for 'client' tokens. Required for Consul pre-1.4.
	// Deprecated
	Policy string `json:"policy"`
	// List of Service Identities to attach to the token, separated by semicolons. Available in Consul 1.5 or above.
	ServiceIdentities []string `json:"service_identities"`
	// Which type of token to create: 'client' or 'management'. If a 'management' token, the \"policy\", \"policies\", and \"consul_roles\" parameters are not required. Defaults to 'client'.
	// Deprecated
	TokenType string `json:"token_type"`
	// TTL for the Consul token created from the role.
	Ttl int32 `json:"ttl"`
}

// NewConsulWriteRoleRequestWithDefaults instantiates a new ConsulWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsulWriteRoleRequestWithDefaults() *ConsulWriteRoleRequest {
	var this ConsulWriteRoleRequest

	this.TokenType = "client"

	return &this
}

func (o ConsulWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["consul_namespace"] = o.ConsulNamespace
	toSerialize["consul_policies"] = o.ConsulPolicies
	toSerialize["consul_roles"] = o.ConsulRoles
	toSerialize["lease"] = o.Lease
	toSerialize["local"] = o.Local
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["node_identities"] = o.NodeIdentities
	toSerialize["partition"] = o.Partition
	toSerialize["policies"] = o.Policies
	toSerialize["policy"] = o.Policy
	toSerialize["service_identities"] = o.ServiceIdentities
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// EntityBatchDeleteRequest struct for EntityBatchDeleteRequest
type EntityBatchDeleteRequest struct {
	// Entity IDs to delete
	EntityIds []string `json:"entity_ids"`
}

// NewEntityBatchDeleteRequestWithDefaults instantiates a new EntityBatchDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityBatchDeleteRequestWithDefaults() *EntityBatchDeleteRequest {
	var this EntityBatchDeleteRequest

	return &this
}

func (o EntityBatchDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["entity_ids"] = o.EntityIds

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// EntityLookupRequest struct for EntityLookupRequest
type EntityLookupRequest struct {
	// ID of the alias.
	AliasId string `json:"alias_id"`
	// Accessor of the mount to which the alias belongs to. This should be supplied in conjunction with 'alias_name'.
	AliasMountAccessor string `json:"alias_mount_accessor"`
	// Name of the alias. This should be supplied in conjunction with 'alias_mount_accessor'.
	AliasName string `json:"alias_name"`
	// ID of the entity.
	Id string `json:"id"`
	// Name of the entity.
	Name string `json:"name"`
}

// NewEntityLookupRequestWithDefaults instantiates a new EntityLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityLookupRequestWithDefaults() *EntityLookupRequest {
	var this EntityLookupRequest

	return &this
}

func (o EntityLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alias_id"] = o.AliasId
	toSerialize["alias_mount_accessor"] = o.AliasMountAccessor
	toSerialize["alias_name"] = o.AliasName
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// EntityMergeRequest struct for EntityMergeRequest
type EntityMergeRequest struct {
	// Alias IDs to keep in case of conflicting aliases. Ignored if no conflicting aliases found
	ConflictingAliasIdsToKeep []string `json:"conflicting_alias_ids_to_keep"`
	// Setting this will follow the 'mine' strategy for merging MFA secrets. If there are secrets of the same type both in entities that are merged from and in entity into which all others are getting merged, secrets in the destination will be unaltered. If not set, this API will throw an error containing all the conflicts.
	Force bool `json:"force"`
	// Entity IDs which need to get merged
	FromEntityIds []string `json:"from_entity_ids"`
	// Entity ID into which all the other entities need to get merged
	ToEntityId string `json:"to_entity_id"`
}

// NewEntityMergeRequestWithDefaults instantiates a new EntityMergeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityMergeRequestWithDefaults() *EntityMergeRequest {
	var this EntityMergeRequest

	return &this
}

func (o EntityMergeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["conflicting_alias_ids_to_keep"] = o.ConflictingAliasIdsToKeep
	toSerialize["force"] = o.Force
	toSerialize["from_entity_ids"] = o.FromEntityIds
	toSerialize["to_entity_id"] = o.ToEntityId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// EntityWriteAliasByIDRequest struct for EntityWriteAliasByIDRequest
type EntityWriteAliasByIDRequest struct {
	// Entity ID to which this alias should be tied to
	CanonicalId string `json:"canonical_id"`
	// User provided key-value pairs
	CustomMetadata map[string]interface{} `json:"custom_metadata"`
	// Entity ID to which this alias belongs to. This field is deprecated, use canonical_id.
	EntityId string `json:"entity_id"`
	// (Unused)
	MountAccessor string `json:"mount_accessor"`
	// (Unused)
	Name string `json:"name"`
}

// NewEntityWriteAliasByIDRequestWithDefaults instantiates a new EntityWriteAliasByIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityWriteAliasByIDRequestWithDefaults() *EntityWriteAliasByIDRequest {
	var this EntityWriteAliasByIDRequest

	return &this
}

func (o EntityWriteAliasByIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["canonical_id"] = o.CanonicalId
	toSerialize["custom_metadata"] = o.CustomMetadata
	toSerialize["entity_id"] = o.EntityId
	toSerialize["mount_accessor"] = o.MountAccessor
	toSerialize["name"] = o.Name

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// EntityWriteAliasRequest struct for EntityWriteAliasRequest
type EntityWriteAliasRequest struct {
	// Entity ID to which this alias belongs
	CanonicalId string `json:"canonical_id"`
	// User provided key-value pairs
	CustomMetadata map[string]interface{} `json:"custom_metadata"`
	// Entity ID to which this alias belongs. This field is deprecated, use canonical_id.
	EntityId string `json:"entity_id"`
	// ID of the entity alias. If set, updates the corresponding entity alias.
	Id string `json:"id"`
	// Mount accessor to which this alias belongs to; unused for a modify
	MountAccessor string `json:"mount_accessor"`
	// Name of the alias; unused for a modify
	Name string `json:"name"`
}

// NewEntityWriteAliasRequestWithDefaults instantiates a new EntityWriteAliasRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityWriteAliasRequestWithDefaults() *EntityWriteAliasRequest {
	var this EntityWriteAliasRequest

	return &this
}

func (o EntityWriteAliasRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["canonical_id"] = o.CanonicalId
	toSerialize["custom_metadata"] = o.CustomMetadata
	toSerialize["entity_id"] = o.EntityId
	toSerialize["id"] = o.Id
	toSerialize["mount_accessor"] = o.MountAccessor
	toSerialize["name"] = o.Name

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// EntityWriteByIDRequest struct for EntityWriteByIDRequest
type EntityWriteByIDRequest struct {
	// If set true, tokens tied to this identity will not be able to be used (but will not be revoked).
	Disabled bool `json:"disabled"`
	// Metadata to be associated with the entity. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata"`
	// Name of the entity
	Name string `json:"name"`
	// Policies to be tied to the entity.
	Policies []string `json:"policies"`
}

// NewEntityWriteByIDRequestWithDefaults instantiates a new EntityWriteByIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityWriteByIDRequestWithDefaults() *EntityWriteByIDRequest {
	var this EntityWriteByIDRequest

	return &this
}

func (o EntityWriteByIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disabled"] = o.Disabled
	toSerialize["metadata"] = o.Metadata
	toSerialize["name"] = o.Name
	toSerialize["policies"] = o.Policies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// EntityWriteByNameRequest struct for EntityWriteByNameRequest
type EntityWriteByNameRequest struct {
	// If set true, tokens tied to this identity will not be able to be used (but will not be revoked).
	Disabled bool `json:"disabled"`
	// ID of the entity. If set, updates the corresponding existing entity.
	Id string `json:"id"`
	// Metadata to be associated with the entity. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata"`
	// Policies to be tied to the entity.
	Policies []string `json:"policies"`
}

// NewEntityWriteByNameRequestWithDefaults instantiates a new EntityWriteByNameRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityWriteByNameRequestWithDefaults() *EntityWriteByNameRequest {
	var this EntityWriteByNameRequest

	return &this
}

func (o EntityWriteByNameRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disabled"] = o.Disabled
	toSerialize["id"] = o.Id
	toSerialize["metadata"] = o.Metadata
	toSerialize["policies"] = o.Policies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// EntityWriteRequest struct for EntityWriteRequest
type EntityWriteRequest struct {
	// If set true, tokens tied to this identity will not be able to be used (but will not be revoked).
	Disabled bool `json:"disabled"`
	// ID of the entity. If set, updates the corresponding existing entity.
	Id string `json:"id"`
	// Metadata to be associated with the entity. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata"`
	// Name of the entity
	Name string `json:"name"`
	// Policies to be tied to the entity.
	Policies []string `json:"policies"`
}

// NewEntityWriteRequestWithDefaults instantiates a new EntityWriteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityWriteRequestWithDefaults() *EntityWriteRequest {
	var this EntityWriteRequest

	return &this
}

func (o EntityWriteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disabled"] = o.Disabled
	toSerialize["id"] = o.Id
	toSerialize["metadata"] = o.Metadata
	toSerialize["name"] = o.Name
	toSerialize["policies"] = o.Policies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GitHubLoginRequest struct for GitHubLoginRequest
type GitHubLoginRequest struct {
	// GitHub personal API token
	Token string `json:"token"`
}

// NewGitHubLoginRequestWithDefaults instantiates a new GitHubLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitHubLoginRequestWithDefaults() *GitHubLoginRequest {
	var this GitHubLoginRequest

	return &this
}

func (o GitHubLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GitHubWriteConfigRequest struct for GitHubWriteConfigRequest
type GitHubWriteConfigRequest struct {
	// The API endpoint to use. Useful if you are running GitHub Enterprise or an API-compatible authentication server.
	BaseUrl string `json:"base_url"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl int32 `json:"max_ttl"`
	// The organization users must be part of
	Organization string `json:"organization"`
	// The ID of the organization users must be part of
	OrganizationId int64 `json:"organization_id"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies. This will apply to all tokens generated by this auth method, in addition to any policies configured for specific users/groups.
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl int32 `json:"ttl"`
}

// NewGitHubWriteConfigRequestWithDefaults instantiates a new GitHubWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitHubWriteConfigRequestWithDefaults() *GitHubWriteConfigRequest {
	var this GitHubWriteConfigRequest

	this.TokenType = "default-service"

	return &this
}

func (o GitHubWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["base_url"] = o.BaseUrl
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["organization"] = o.Organization
	toSerialize["organization_id"] = o.OrganizationId
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GitHubWriteMapTeamRequest struct for GitHubWriteMapTeamRequest
type GitHubWriteMapTeamRequest struct {
	// Value for teams mapping
	Value string `json:"value"`
}

// NewGitHubWriteMapTeamRequestWithDefaults instantiates a new GitHubWriteMapTeamRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitHubWriteMapTeamRequestWithDefaults() *GitHubWriteMapTeamRequest {
	var this GitHubWriteMapTeamRequest

	return &this
}

func (o GitHubWriteMapTeamRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["value"] = o.Value

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GitHubWriteMapUserRequest struct for GitHubWriteMapUserRequest
type GitHubWriteMapUserRequest struct {
	// Value for users mapping
	Value string `json:"value"`
}

// NewGitHubWriteMapUserRequestWithDefaults instantiates a new GitHubWriteMapUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitHubWriteMapUserRequestWithDefaults() *GitHubWriteMapUserRequest {
	var this GitHubWriteMapUserRequest

	return &this
}

func (o GitHubWriteMapUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["value"] = o.Value

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudKMSDecryptRequest struct for GoogleCloudKMSDecryptRequest
type GoogleCloudKMSDecryptRequest struct {
	// Optional data that was specified during encryption of this payload.
	AdditionalAuthenticatedData string `json:"additional_authenticated_data"`
	// Ciphertext to decrypt as previously returned from an encrypt operation. This must be base64-encoded ciphertext as previously returned from an encrypt operation.
	Ciphertext string `json:"ciphertext"`
	// Integer version of the crypto key version to use for decryption. This is required for asymmetric keys. For symmetric keys, Cloud KMS will choose the correct version automatically.
	KeyVersion int32 `json:"key_version"`
}

// NewGoogleCloudKMSDecryptRequestWithDefaults instantiates a new GoogleCloudKMSDecryptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudKMSDecryptRequestWithDefaults() *GoogleCloudKMSDecryptRequest {
	var this GoogleCloudKMSDecryptRequest

	return &this
}

func (o GoogleCloudKMSDecryptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["additional_authenticated_data"] = o.AdditionalAuthenticatedData
	toSerialize["ciphertext"] = o.Ciphertext
	toSerialize["key_version"] = o.KeyVersion

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudKMSEncryptRequest struct for GoogleCloudKMSEncryptRequest
type GoogleCloudKMSEncryptRequest struct {
	// Optional base64-encoded data that, if specified, must also be provided to decrypt this payload.
	AdditionalAuthenticatedData string `json:"additional_authenticated_data"`
	// Integer version of the crypto key version to use for encryption. If unspecified, this defaults to the latest active crypto key version.
	KeyVersion int32 `json:"key_version"`
	// Plaintext value to be encrypted. This can be a string or binary, but the size is limited. See the Google Cloud KMS documentation for information on size limitations by key types.
	Plaintext string `json:"plaintext"`
}

// NewGoogleCloudKMSEncryptRequestWithDefaults instantiates a new GoogleCloudKMSEncryptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudKMSEncryptRequestWithDefaults() *GoogleCloudKMSEncryptRequest {
	var this GoogleCloudKMSEncryptRequest

	return &this
}

func (o GoogleCloudKMSEncryptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["additional_authenticated_data"] = o.AdditionalAuthenticatedData
	toSerialize["key_version"] = o.KeyVersion
	toSerialize["plaintext"] = o.Plaintext

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudKMSReencryptRequest struct for GoogleCloudKMSReencryptRequest
type GoogleCloudKMSReencryptRequest struct {
	// Optional data that, if specified, must also be provided during decryption.
	AdditionalAuthenticatedData string `json:"additional_authenticated_data"`
	// Ciphertext to be re-encrypted to the latest key version. This must be ciphertext that Vault previously generated for this named key.
	Ciphertext string `json:"ciphertext"`
	// Integer version of the crypto key version to use for the new encryption. If unspecified, this defaults to the latest active crypto key version.
	KeyVersion int32 `json:"key_version"`
}

// NewGoogleCloudKMSReencryptRequestWithDefaults instantiates a new GoogleCloudKMSReencryptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudKMSReencryptRequestWithDefaults() *GoogleCloudKMSReencryptRequest {
	var this GoogleCloudKMSReencryptRequest

	return &this
}

func (o GoogleCloudKMSReencryptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["additional_authenticated_data"] = o.AdditionalAuthenticatedData
	toSerialize["ciphertext"] = o.Ciphertext
	toSerialize["key_version"] = o.KeyVersion

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudKMSRegisterKeyRequest struct for GoogleCloudKMSRegisterKeyRequest
type GoogleCloudKMSRegisterKeyRequest struct {
	// Full resource ID of the crypto key including the project, location, key ring, and crypto key like \"projects/%s/locations/%s/keyRings/%s/cryptoKeys/%s\". This crypto key must already exist in Google Cloud KMS unless verify is set to \"false\".
	CryptoKey string `json:"crypto_key"`
	// Verify that the given Google Cloud KMS crypto key exists and is accessible before creating the storage entry in Vault. Set this to \"false\" if the key will not exist at creation time.
	Verify bool `json:"verify"`
}

// NewGoogleCloudKMSRegisterKeyRequestWithDefaults instantiates a new GoogleCloudKMSRegisterKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudKMSRegisterKeyRequestWithDefaults() *GoogleCloudKMSRegisterKeyRequest {
	var this GoogleCloudKMSRegisterKeyRequest

	this.Verify = true

	return &this
}

func (o GoogleCloudKMSRegisterKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["crypto_key"] = o.CryptoKey
	toSerialize["verify"] = o.Verify

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudKMSSignRequest struct for GoogleCloudKMSSignRequest
type GoogleCloudKMSSignRequest struct {
	// Digest to sign. This digest must use the same SHA algorithm as the underlying Cloud KMS key. The digest must be the base64-encoded binary value. This field is required.
	Digest string `json:"digest"`
	// Integer version of the crypto key version to use for signing. This field is required.
	KeyVersion int32 `json:"key_version"`
}

// NewGoogleCloudKMSSignRequestWithDefaults instantiates a new GoogleCloudKMSSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudKMSSignRequestWithDefaults() *GoogleCloudKMSSignRequest {
	var this GoogleCloudKMSSignRequest

	return &this
}

func (o GoogleCloudKMSSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["digest"] = o.Digest
	toSerialize["key_version"] = o.KeyVersion

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudKMSVerifyRequest struct for GoogleCloudKMSVerifyRequest
type GoogleCloudKMSVerifyRequest struct {
	// Digest to verify. This digest must use the same SHA algorithm as the underlying Cloud KMS key. The digest must be the base64-encoded binary value. This field is required.
	Digest string `json:"digest"`
	// Integer version of the crypto key version to use for verification. This field is required.
	KeyVersion int32 `json:"key_version"`
	// Base64-encoded signature to use for verification. This field is required.
	Signature string `json:"signature"`
}

// NewGoogleCloudKMSVerifyRequestWithDefaults instantiates a new GoogleCloudKMSVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudKMSVerifyRequestWithDefaults() *GoogleCloudKMSVerifyRequest {
	var this GoogleCloudKMSVerifyRequest

	return &this
}

func (o GoogleCloudKMSVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["digest"] = o.Digest
	toSerialize["key_version"] = o.KeyVersion
	toSerialize["signature"] = o.Signature

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudKMSWriteConfigRequest struct for GoogleCloudKMSWriteConfigRequest
type GoogleCloudKMSWriteConfigRequest struct {
	// The credentials to use for authenticating to Google Cloud. Leave this blank to use the Default Application Credentials or instance metadata authentication.
	Credentials string `json:"credentials"`
	// The list of full-URL scopes to request when authenticating. By default, this requests https://www.googleapis.com/auth/cloudkms.
	Scopes []string `json:"scopes"`
}

// NewGoogleCloudKMSWriteConfigRequestWithDefaults instantiates a new GoogleCloudKMSWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudKMSWriteConfigRequestWithDefaults() *GoogleCloudKMSWriteConfigRequest {
	var this GoogleCloudKMSWriteConfigRequest

	return &this
}

func (o GoogleCloudKMSWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["credentials"] = o.Credentials
	toSerialize["scopes"] = o.Scopes

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudKMSWriteKeyConfigRequest struct for GoogleCloudKMSWriteKeyConfigRequest
type GoogleCloudKMSWriteKeyConfigRequest struct {
	// Maximum allowed crypto key version. If set to a positive value, key versions greater than the given value are not permitted to be used. If set to 0 or a negative value, there is no maximum key version.
	MaxVersion int32 `json:"max_version"`
	// Minimum allowed crypto key version. If set to a positive value, key versions less than the given value are not permitted to be used. If set to 0 or a negative value, there is no minimum key version. This value only affects encryption/re-encryption, not decryption. To restrict old values from being decrypted, increase this value and then perform a trim operation.
	MinVersion int32 `json:"min_version"`
}

// NewGoogleCloudKMSWriteKeyConfigRequestWithDefaults instantiates a new GoogleCloudKMSWriteKeyConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudKMSWriteKeyConfigRequestWithDefaults() *GoogleCloudKMSWriteKeyConfigRequest {
	var this GoogleCloudKMSWriteKeyConfigRequest

	return &this
}

func (o GoogleCloudKMSWriteKeyConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["max_version"] = o.MaxVersion
	toSerialize["min_version"] = o.MinVersion

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudKMSWriteKeyRequest struct for GoogleCloudKMSWriteKeyRequest
type GoogleCloudKMSWriteKeyRequest struct {
	// Algorithm to use for encryption, decryption, or signing. The value depends on the key purpose. The value cannot be changed after creation. For a key purpose of \"encrypt_decrypt\", the valid values are: - symmetric_encryption (default) For a key purpose of \"asymmetric_sign\", valid values are: - rsa_sign_pss_2048_sha256 - rsa_sign_pss_3072_sha256 - rsa_sign_pss_4096_sha256 - rsa_sign_pkcs1_2048_sha256 - rsa_sign_pkcs1_3072_sha256 - rsa_sign_pkcs1_4096_sha256 - ec_sign_p256_sha256 - ec_sign_p384_sha384 For a key purpose of \"asymmetric_decrypt\", valid values are: - rsa_decrypt_oaep_2048_sha256 - rsa_decrypt_oaep_3072_sha256 - rsa_decrypt_oaep_4096_sha256
	Algorithm string `json:"algorithm"`
	// Name of the crypto key to use. If the given crypto key does not exist, Vault will try to create it. This defaults to the name of the key given to Vault as the parameter if unspecified.
	CryptoKey string `json:"crypto_key"`
	// Full Google Cloud resource ID of the key ring with the project and location (e.g. projects/my-project/locations/global/keyRings/my-keyring). If the given key ring does not exist, Vault will try to create it during a create operation.
	KeyRing string `json:"key_ring"`
	// Arbitrary key=value label to apply to the crypto key. To specify multiple labels, specify this argument multiple times (e.g. labels=\"a=b\" labels=\"c=d\").
	Labels map[string]interface{} `json:"labels"`
	// Level of protection to use for the key management. Valid values are \"software\" and \"hsm\". The default value is \"software\". The value cannot be changed after creation.
	ProtectionLevel string `json:"protection_level"`
	// Purpose of the key. Valid options are \"asymmetric_decrypt\", \"asymmetric_sign\", and \"encrypt_decrypt\". The default value is \"encrypt_decrypt\". The value cannot be changed after creation.
	Purpose string `json:"purpose"`
	// Amount of time between crypto key version rotations. This is specified as a time duration value like 72h (72 hours). The smallest possible value is 24h. This value only applies to keys with a purpose of \"encrypt_decrypt\".
	RotationPeriod int32 `json:"rotation_period"`
}

// NewGoogleCloudKMSWriteKeyRequestWithDefaults instantiates a new GoogleCloudKMSWriteKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudKMSWriteKeyRequestWithDefaults() *GoogleCloudKMSWriteKeyRequest {
	var this GoogleCloudKMSWriteKeyRequest

	return &this
}

func (o GoogleCloudKMSWriteKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["crypto_key"] = o.CryptoKey
	toSerialize["key_ring"] = o.KeyRing
	toSerialize["labels"] = o.Labels
	toSerialize["protection_level"] = o.ProtectionLevel
	toSerialize["purpose"] = o.Purpose
	toSerialize["rotation_period"] = o.RotationPeriod

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudLoginRequest struct for GoogleCloudLoginRequest
type GoogleCloudLoginRequest struct {
	// A signed JWT. This is either a self-signed service account JWT ('iam' roles only) or a GCE identity metadata token ('iam', 'gce' roles).
	Jwt string `json:"jwt"`
	// Name of the role against which the login is being attempted. Required.
	Role string `json:"role"`
}

// NewGoogleCloudLoginRequestWithDefaults instantiates a new GoogleCloudLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudLoginRequestWithDefaults() *GoogleCloudLoginRequest {
	var this GoogleCloudLoginRequest

	return &this
}

func (o GoogleCloudLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["jwt"] = o.Jwt
	toSerialize["role"] = o.Role

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudWriteAuthConfigRequest struct for GoogleCloudWriteAuthConfigRequest
type GoogleCloudWriteAuthConfigRequest struct {
	// Google credentials JSON that Vault will use to verify users against GCP APIs. If not specified, will use application default credentials
	Credentials string `json:"credentials"`
	// Specifies overrides for various Google API Service Endpoints used in requests.
	CustomEndpoint map[string]interface{} `json:"custom_endpoint"`
	// Indicates what value to use when generating an alias for GCE authentications.
	GceAlias string `json:"gce_alias"`
	// The metadata to include on the aliases and audit logs generated by this plugin. When set to 'default', includes: instance_creation_timestamp, instance_id, instance_name, project_id, project_number, role, service_account_id, service_account_email, zone. Not editing this field means the 'default' fields are included. Explicitly setting this field to empty overrides the 'default' and means no metadata will be included. If not using 'default', explicit fields must be sent like: 'field1,field2'.
	GceMetadata []string `json:"gce_metadata"`
	// Deprecated. This field does nothing and be removed in a future release
	// Deprecated
	GoogleCertsEndpoint string `json:"google_certs_endpoint"`
	// Indicates what value to use when generating an alias for IAM authentications.
	IamAlias string `json:"iam_alias"`
	// The metadata to include on the aliases and audit logs generated by this plugin. When set to 'default', includes: project_id, role, service_account_id, service_account_email. Not editing this field means the 'default' fields are included. Explicitly setting this field to empty overrides the 'default' and means no metadata will be included. If not using 'default', explicit fields must be sent like: 'field1,field2'.
	IamMetadata []string `json:"iam_metadata"`
}

// NewGoogleCloudWriteAuthConfigRequestWithDefaults instantiates a new GoogleCloudWriteAuthConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudWriteAuthConfigRequestWithDefaults() *GoogleCloudWriteAuthConfigRequest {
	var this GoogleCloudWriteAuthConfigRequest

	this.GceAlias = "role_id"
	this.IamAlias = "role_id"

	return &this
}

func (o GoogleCloudWriteAuthConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["credentials"] = o.Credentials
	toSerialize["custom_endpoint"] = o.CustomEndpoint
	toSerialize["gce_alias"] = o.GceAlias
	toSerialize["gce_metadata"] = o.GceMetadata
	toSerialize["google_certs_endpoint"] = o.GoogleCertsEndpoint
	toSerialize["iam_alias"] = o.IamAlias
	toSerialize["iam_metadata"] = o.IamMetadata

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudWriteConfigRequest struct for GoogleCloudWriteConfigRequest
type GoogleCloudWriteConfigRequest struct {
	// GCP IAM service account credentials JSON with permissions to create new service accounts and set IAM policies
	Credentials string `json:"credentials"`
	// Maximum time a service account key is valid for. If <= 0, will use system default.
	MaxTtl int32 `json:"max_ttl"`
	// Default lease for generated keys. If <= 0, will use system default.
	Ttl int32 `json:"ttl"`
}

// NewGoogleCloudWriteConfigRequestWithDefaults instantiates a new GoogleCloudWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudWriteConfigRequestWithDefaults() *GoogleCloudWriteConfigRequest {
	var this GoogleCloudWriteConfigRequest

	return &this
}

func (o GoogleCloudWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["credentials"] = o.Credentials
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudWriteKeyRequest struct for GoogleCloudWriteKeyRequest
type GoogleCloudWriteKeyRequest struct {
	// Private key algorithm for service account key - defaults to KEY_ALG_RSA_2048\"
	KeyAlgorithm string `json:"key_algorithm"`
	// Private key type for service account key - defaults to TYPE_GOOGLE_CREDENTIALS_FILE\"
	KeyType string `json:"key_type"`
	// Lifetime of the service account key
	Ttl int32 `json:"ttl"`
}

// NewGoogleCloudWriteKeyRequestWithDefaults instantiates a new GoogleCloudWriteKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudWriteKeyRequestWithDefaults() *GoogleCloudWriteKeyRequest {
	var this GoogleCloudWriteKeyRequest

	this.KeyAlgorithm = "KEY_ALG_RSA_2048"
	this.KeyType = "TYPE_GOOGLE_CREDENTIALS_FILE"

	return &this
}

func (o GoogleCloudWriteKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["key_algorithm"] = o.KeyAlgorithm
	toSerialize["key_type"] = o.KeyType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudWriteRoleLabelsRequest struct for GoogleCloudWriteRoleLabelsRequest
type GoogleCloudWriteRoleLabelsRequest struct {
	// BoundLabels to add (in $key:$value)
	Add []string `json:"add"`
	// Label key values to remove
	Remove []string `json:"remove"`
}

// NewGoogleCloudWriteRoleLabelsRequestWithDefaults instantiates a new GoogleCloudWriteRoleLabelsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudWriteRoleLabelsRequestWithDefaults() *GoogleCloudWriteRoleLabelsRequest {
	var this GoogleCloudWriteRoleLabelsRequest

	return &this
}

func (o GoogleCloudWriteRoleLabelsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["add"] = o.Add
	toSerialize["remove"] = o.Remove

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudWriteRoleRequest struct for GoogleCloudWriteRoleRequest
type GoogleCloudWriteRoleRequest struct {
	// If true, will add group aliases to auth tokens generated under this role. This will add the full list of ancestors (projects, folders, organizations) for the given entity's project. Requires IAM permission `resourcemanager.projects.get` on this project.
	AddGroupAliases bool `json:"add_group_aliases"`
	// 'iam' roles only. If false, Vault will not not allow GCE instances to login in against this role
	AllowGceInference bool `json:"allow_gce_inference"`
	// Deprecated: use \"bound_instance_groups\" instead.
	BoundInstanceGroup string `json:"bound_instance_group"`
	// Comma-separated list of permitted instance groups to which the GCE instance must belong. This option only applies to \"gce\" roles.
	BoundInstanceGroups []string `json:"bound_instance_groups"`
	// Comma-separated list of GCP labels formatted as\"key:value\" strings that must be present on the GCE instance in order to authenticate. This option only applies to \"gce\" roles.
	BoundLabels []string `json:"bound_labels"`
	// GCP Projects that authenticating entities must belong to.
	BoundProjects []string `json:"bound_projects"`
	// Deprecated: use \"bound_regions\" instead.
	BoundRegion string `json:"bound_region"`
	// Comma-separated list of permitted regions to which the GCE instance must belong. If a group is provided, it is assumed to be a regional group. If \"zone\" is provided, this option is ignored. This can be a self-link or region name. This option only applies to \"gce\" roles.
	BoundRegions []string `json:"bound_regions"`
	// Can be set for both 'iam' and 'gce' roles (required for 'iam'). A comma-seperated list of authorized service accounts. If the single value \"*\" is given, this is assumed to be all service accounts under the role's project. If this is set on a GCE role, the inferred service account from the instance metadata token will be used.
	BoundServiceAccounts []string `json:"bound_service_accounts"`
	// Deprecated: use \"bound_zones\" instead.
	BoundZone string `json:"bound_zone"`
	// Comma-separated list of permitted zones to which the GCE instance must belong. If a group is provided, it is assumed to be a zonal group. This can be a self-link or zone name. This option only applies to \"gce\" roles.
	BoundZones []string `json:"bound_zones"`
	// Currently enabled for 'iam' only. Duration in seconds from time of validation that a JWT must expire within.
	MaxJwtExp int32 `json:"max_jwt_exp"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl int32 `json:"max_ttl"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Deprecated: use \"bound_projects\" instead
	ProjectId string `json:"project_id"`
	// Deprecated: use \"bound_service_accounts\" instead.
	ServiceAccounts []string `json:"service_accounts"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl int32 `json:"ttl"`
	// Type of the role. Currently supported: iam, gce
	Type string `json:"type"`
}

// NewGoogleCloudWriteRoleRequestWithDefaults instantiates a new GoogleCloudWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudWriteRoleRequestWithDefaults() *GoogleCloudWriteRoleRequest {
	var this GoogleCloudWriteRoleRequest

	this.AddGroupAliases = false
	this.AllowGceInference = true
	this.MaxJwtExp = 900
	this.TokenType = "default-service"

	return &this
}

func (o GoogleCloudWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["add_group_aliases"] = o.AddGroupAliases
	toSerialize["allow_gce_inference"] = o.AllowGceInference
	toSerialize["bound_instance_group"] = o.BoundInstanceGroup
	toSerialize["bound_instance_groups"] = o.BoundInstanceGroups
	toSerialize["bound_labels"] = o.BoundLabels
	toSerialize["bound_projects"] = o.BoundProjects
	toSerialize["bound_region"] = o.BoundRegion
	toSerialize["bound_regions"] = o.BoundRegions
	toSerialize["bound_service_accounts"] = o.BoundServiceAccounts
	toSerialize["bound_zone"] = o.BoundZone
	toSerialize["bound_zones"] = o.BoundZones
	toSerialize["max_jwt_exp"] = o.MaxJwtExp
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["project_id"] = o.ProjectId
	toSerialize["service_accounts"] = o.ServiceAccounts
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudWriteRoleServiceAccountsRequest struct for GoogleCloudWriteRoleServiceAccountsRequest
type GoogleCloudWriteRoleServiceAccountsRequest struct {
	// Service-account emails or IDs to add.
	Add []string `json:"add"`
	// Service-account emails or IDs to remove.
	Remove []string `json:"remove"`
}

// NewGoogleCloudWriteRoleServiceAccountsRequestWithDefaults instantiates a new GoogleCloudWriteRoleServiceAccountsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudWriteRoleServiceAccountsRequestWithDefaults() *GoogleCloudWriteRoleServiceAccountsRequest {
	var this GoogleCloudWriteRoleServiceAccountsRequest

	return &this
}

func (o GoogleCloudWriteRoleServiceAccountsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["add"] = o.Add
	toSerialize["remove"] = o.Remove

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudWriteRolesetKeyRequest struct for GoogleCloudWriteRolesetKeyRequest
type GoogleCloudWriteRolesetKeyRequest struct {
	// Private key algorithm for service account key - defaults to KEY_ALG_RSA_2048\"
	KeyAlgorithm string `json:"key_algorithm"`
	// Private key type for service account key - defaults to TYPE_GOOGLE_CREDENTIALS_FILE\"
	KeyType string `json:"key_type"`
	// Lifetime of the service account key
	Ttl int32 `json:"ttl"`
}

// NewGoogleCloudWriteRolesetKeyRequestWithDefaults instantiates a new GoogleCloudWriteRolesetKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudWriteRolesetKeyRequestWithDefaults() *GoogleCloudWriteRolesetKeyRequest {
	var this GoogleCloudWriteRolesetKeyRequest

	this.KeyAlgorithm = "KEY_ALG_RSA_2048"
	this.KeyType = "TYPE_GOOGLE_CREDENTIALS_FILE"

	return &this
}

func (o GoogleCloudWriteRolesetKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["key_algorithm"] = o.KeyAlgorithm
	toSerialize["key_type"] = o.KeyType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudWriteRolesetRequest struct for GoogleCloudWriteRolesetRequest
type GoogleCloudWriteRolesetRequest struct {
	// Bindings configuration string.
	Bindings string `json:"bindings"`
	// Name of the GCP project that this roleset's service account will belong to.
	Project string `json:"project"`
	// Type of secret generated for this role set. Defaults to 'access_token'
	SecretType string `json:"secret_type"`
	// List of OAuth scopes to assign to credentials generated under this role set
	TokenScopes []string `json:"token_scopes"`
}

// NewGoogleCloudWriteRolesetRequestWithDefaults instantiates a new GoogleCloudWriteRolesetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudWriteRolesetRequestWithDefaults() *GoogleCloudWriteRolesetRequest {
	var this GoogleCloudWriteRolesetRequest

	this.SecretType = "access_token"

	return &this
}

func (o GoogleCloudWriteRolesetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bindings"] = o.Bindings
	toSerialize["project"] = o.Project
	toSerialize["secret_type"] = o.SecretType
	toSerialize["token_scopes"] = o.TokenScopes

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudWriteStaticAccountKeyRequest struct for GoogleCloudWriteStaticAccountKeyRequest
type GoogleCloudWriteStaticAccountKeyRequest struct {
	// Private key algorithm for service account key. Defaults to KEY_ALG_RSA_2048.\"
	KeyAlgorithm string `json:"key_algorithm"`
	// Private key type for service account key. Defaults to TYPE_GOOGLE_CREDENTIALS_FILE.\"
	KeyType string `json:"key_type"`
	// Lifetime of the service account key
	Ttl int32 `json:"ttl"`
}

// NewGoogleCloudWriteStaticAccountKeyRequestWithDefaults instantiates a new GoogleCloudWriteStaticAccountKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudWriteStaticAccountKeyRequestWithDefaults() *GoogleCloudWriteStaticAccountKeyRequest {
	var this GoogleCloudWriteStaticAccountKeyRequest

	this.KeyAlgorithm = "KEY_ALG_RSA_2048"
	this.KeyType = "TYPE_GOOGLE_CREDENTIALS_FILE"

	return &this
}

func (o GoogleCloudWriteStaticAccountKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["key_algorithm"] = o.KeyAlgorithm
	toSerialize["key_type"] = o.KeyType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GoogleCloudWriteStaticAccountRequest struct for GoogleCloudWriteStaticAccountRequest
type GoogleCloudWriteStaticAccountRequest struct {
	// Bindings configuration string.
	Bindings string `json:"bindings"`
	// Type of secret generated for this account. Cannot be updated. Defaults to \"access_token\"
	SecretType string `json:"secret_type"`
	// Required. Email of the GCP service account to manage. Cannot be updated.
	ServiceAccountEmail string `json:"service_account_email"`
	// List of OAuth scopes to assign to access tokens generated under this account. Ignored if \"secret_type\" is not \"\"access_token\"\"
	TokenScopes []string `json:"token_scopes"`
}

// NewGoogleCloudWriteStaticAccountRequestWithDefaults instantiates a new GoogleCloudWriteStaticAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudWriteStaticAccountRequestWithDefaults() *GoogleCloudWriteStaticAccountRequest {
	var this GoogleCloudWriteStaticAccountRequest

	this.SecretType = "access_token"

	return &this
}

func (o GoogleCloudWriteStaticAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bindings"] = o.Bindings
	toSerialize["secret_type"] = o.SecretType
	toSerialize["service_account_email"] = o.ServiceAccountEmail
	toSerialize["token_scopes"] = o.TokenScopes

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GroupLookupRequest struct for GroupLookupRequest
type GroupLookupRequest struct {
	// ID of the alias.
	AliasId string `json:"alias_id"`
	// Accessor of the mount to which the alias belongs to. This should be supplied in conjunction with 'alias_name'.
	AliasMountAccessor string `json:"alias_mount_accessor"`
	// Name of the alias. This should be supplied in conjunction with 'alias_mount_accessor'.
	AliasName string `json:"alias_name"`
	// ID of the group.
	Id string `json:"id"`
	// Name of the group.
	Name string `json:"name"`
}

// NewGroupLookupRequestWithDefaults instantiates a new GroupLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupLookupRequestWithDefaults() *GroupLookupRequest {
	var this GroupLookupRequest

	return &this
}

func (o GroupLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alias_id"] = o.AliasId
	toSerialize["alias_mount_accessor"] = o.AliasMountAccessor
	toSerialize["alias_name"] = o.AliasName
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GroupWriteAliasByIDRequest struct for GroupWriteAliasByIDRequest
type GroupWriteAliasByIDRequest struct {
	// ID of the group to which this is an alias.
	CanonicalId string `json:"canonical_id"`
	// Mount accessor to which this alias belongs to.
	MountAccessor string `json:"mount_accessor"`
	// Alias of the group.
	Name string `json:"name"`
}

// NewGroupWriteAliasByIDRequestWithDefaults instantiates a new GroupWriteAliasByIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupWriteAliasByIDRequestWithDefaults() *GroupWriteAliasByIDRequest {
	var this GroupWriteAliasByIDRequest

	return &this
}

func (o GroupWriteAliasByIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["canonical_id"] = o.CanonicalId
	toSerialize["mount_accessor"] = o.MountAccessor
	toSerialize["name"] = o.Name

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GroupWriteAliasRequest struct for GroupWriteAliasRequest
type GroupWriteAliasRequest struct {
	// ID of the group to which this is an alias.
	CanonicalId string `json:"canonical_id"`
	// ID of the group alias.
	Id string `json:"id"`
	// Mount accessor to which this alias belongs to.
	MountAccessor string `json:"mount_accessor"`
	// Alias of the group.
	Name string `json:"name"`
}

// NewGroupWriteAliasRequestWithDefaults instantiates a new GroupWriteAliasRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupWriteAliasRequestWithDefaults() *GroupWriteAliasRequest {
	var this GroupWriteAliasRequest

	return &this
}

func (o GroupWriteAliasRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["canonical_id"] = o.CanonicalId
	toSerialize["id"] = o.Id
	toSerialize["mount_accessor"] = o.MountAccessor
	toSerialize["name"] = o.Name

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GroupWriteByIDRequest struct for GroupWriteByIDRequest
type GroupWriteByIDRequest struct {
	// Entity IDs to be assigned as group members.
	MemberEntityIds []string `json:"member_entity_ids"`
	// Group IDs to be assigned as group members.
	MemberGroupIds []string `json:"member_group_ids"`
	// Metadata to be associated with the group. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata"`
	// Name of the group.
	Name string `json:"name"`
	// Policies to be tied to the group.
	Policies []string `json:"policies"`
	// Type of the group, 'internal' or 'external'. Defaults to 'internal'
	Type string `json:"type"`
}

// NewGroupWriteByIDRequestWithDefaults instantiates a new GroupWriteByIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupWriteByIDRequestWithDefaults() *GroupWriteByIDRequest {
	var this GroupWriteByIDRequest

	return &this
}

func (o GroupWriteByIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["member_entity_ids"] = o.MemberEntityIds
	toSerialize["member_group_ids"] = o.MemberGroupIds
	toSerialize["metadata"] = o.Metadata
	toSerialize["name"] = o.Name
	toSerialize["policies"] = o.Policies
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GroupWriteByNameRequest struct for GroupWriteByNameRequest
type GroupWriteByNameRequest struct {
	// ID of the group. If set, updates the corresponding existing group.
	Id string `json:"id"`
	// Entity IDs to be assigned as group members.
	MemberEntityIds []string `json:"member_entity_ids"`
	// Group IDs to be assigned as group members.
	MemberGroupIds []string `json:"member_group_ids"`
	// Metadata to be associated with the group. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata"`
	// Policies to be tied to the group.
	Policies []string `json:"policies"`
	// Type of the group, 'internal' or 'external'. Defaults to 'internal'
	Type string `json:"type"`
}

// NewGroupWriteByNameRequestWithDefaults instantiates a new GroupWriteByNameRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupWriteByNameRequestWithDefaults() *GroupWriteByNameRequest {
	var this GroupWriteByNameRequest

	return &this
}

func (o GroupWriteByNameRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["id"] = o.Id
	toSerialize["member_entity_ids"] = o.MemberEntityIds
	toSerialize["member_group_ids"] = o.MemberGroupIds
	toSerialize["metadata"] = o.Metadata
	toSerialize["policies"] = o.Policies
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// GroupWriteRequest struct for GroupWriteRequest
type GroupWriteRequest struct {
	// ID of the group. If set, updates the corresponding existing group.
	Id string `json:"id"`
	// Entity IDs to be assigned as group members.
	MemberEntityIds []string `json:"member_entity_ids"`
	// Group IDs to be assigned as group members.
	MemberGroupIds []string `json:"member_group_ids"`
	// Metadata to be associated with the group. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata"`
	// Name of the group.
	Name string `json:"name"`
	// Policies to be tied to the group.
	Policies []string `json:"policies"`
	// Type of the group, 'internal' or 'external'. Defaults to 'internal'
	Type string `json:"type"`
}

// NewGroupWriteRequestWithDefaults instantiates a new GroupWriteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupWriteRequestWithDefaults() *GroupWriteRequest {
	var this GroupWriteRequest

	return &this
}

func (o GroupWriteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["id"] = o.Id
	toSerialize["member_entity_ids"] = o.MemberEntityIds
	toSerialize["member_group_ids"] = o.MemberGroupIds
	toSerialize["metadata"] = o.Metadata
	toSerialize["name"] = o.Name
	toSerialize["policies"] = o.Policies
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// JWTLoginRequest struct for JWTLoginRequest
type JWTLoginRequest struct {
	// The signed JWT to validate.
	Jwt string `json:"jwt"`
	// The role to log in against.
	Role string `json:"role"`
}

// NewJWTLoginRequestWithDefaults instantiates a new JWTLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJWTLoginRequestWithDefaults() *JWTLoginRequest {
	var this JWTLoginRequest

	return &this
}

func (o JWTLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["jwt"] = o.Jwt
	toSerialize["role"] = o.Role

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// JWTWriteConfigRequest struct for JWTWriteConfigRequest
type JWTWriteConfigRequest struct {
	// The value against which to match the 'iss' claim in a JWT. Optional.
	BoundIssuer string `json:"bound_issuer"`
	// The default role to use if none is provided during login. If not set, a role is required during login.
	DefaultRole string `json:"default_role"`
	// The CA certificate or chain of certificates, in PEM format, to use to validate connections to the JWKS URL. If not set, system certificates are used.
	JwksCaPem string `json:"jwks_ca_pem"`
	// JWKS URL to use to authenticate signatures. Cannot be used with \"oidc_discovery_url\" or \"jwt_validation_pubkeys\".
	JwksUrl string `json:"jwks_url"`
	// A list of supported signing algorithms. Defaults to RS256.
	JwtSupportedAlgs []string `json:"jwt_supported_algs"`
	// A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used with \"jwks_url\" or \"oidc_discovery_url\".
	JwtValidationPubkeys []string `json:"jwt_validation_pubkeys"`
	// Pass namespace in the OIDC state parameter instead of as a separate query parameter. With this setting, the allowed redirect URL(s) in Vault and on the provider side should not contain a namespace query parameter. This means only one redirect URL entry needs to be maintained on the provider side for all vault namespaces that will be authenticating against it. Defaults to true for new configs.
	NamespaceInState bool `json:"namespace_in_state"`
	// The OAuth Client ID configured with your OIDC provider.
	OidcClientId string `json:"oidc_client_id"`
	// The OAuth Client Secret configured with your OIDC provider.
	OidcClientSecret string `json:"oidc_client_secret"`
	// The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used.
	OidcDiscoveryCaPem string `json:"oidc_discovery_ca_pem"`
	// OIDC Discovery URL, without any .well-known component (base path). Cannot be used with \"jwks_url\" or \"jwt_validation_pubkeys\".
	OidcDiscoveryUrl string `json:"oidc_discovery_url"`
	// The response mode to be used in the OAuth2 request. Allowed values are 'query' and 'form_post'.
	OidcResponseMode string `json:"oidc_response_mode"`
	// The response types to request. Allowed values are 'code' and 'id_token'. Defaults to 'code'.
	OidcResponseTypes []string `json:"oidc_response_types"`
	// Provider-specific configuration. Optional.
	ProviderConfig map[string]interface{} `json:"provider_config"`
}

// NewJWTWriteConfigRequestWithDefaults instantiates a new JWTWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJWTWriteConfigRequestWithDefaults() *JWTWriteConfigRequest {
	var this JWTWriteConfigRequest

	return &this
}

func (o JWTWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bound_issuer"] = o.BoundIssuer
	toSerialize["default_role"] = o.DefaultRole
	toSerialize["jwks_ca_pem"] = o.JwksCaPem
	toSerialize["jwks_url"] = o.JwksUrl
	toSerialize["jwt_supported_algs"] = o.JwtSupportedAlgs
	toSerialize["jwt_validation_pubkeys"] = o.JwtValidationPubkeys
	toSerialize["namespace_in_state"] = o.NamespaceInState
	toSerialize["oidc_client_id"] = o.OidcClientId
	toSerialize["oidc_client_secret"] = o.OidcClientSecret
	toSerialize["oidc_discovery_ca_pem"] = o.OidcDiscoveryCaPem
	toSerialize["oidc_discovery_url"] = o.OidcDiscoveryUrl
	toSerialize["oidc_response_mode"] = o.OidcResponseMode
	toSerialize["oidc_response_types"] = o.OidcResponseTypes
	toSerialize["provider_config"] = o.ProviderConfig

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// JWTWriteOIDCAuthURLRequest struct for JWTWriteOIDCAuthURLRequest
type JWTWriteOIDCAuthURLRequest struct {
	// Optional client-provided nonce that must match during callback, if present.
	ClientNonce string `json:"client_nonce"`
	// The OAuth redirect_uri to use in the authorization URL.
	RedirectUri string `json:"redirect_uri"`
	// The role to issue an OIDC authorization URL against.
	Role string `json:"role"`
}

// NewJWTWriteOIDCAuthURLRequestWithDefaults instantiates a new JWTWriteOIDCAuthURLRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJWTWriteOIDCAuthURLRequestWithDefaults() *JWTWriteOIDCAuthURLRequest {
	var this JWTWriteOIDCAuthURLRequest

	return &this
}

func (o JWTWriteOIDCAuthURLRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["client_nonce"] = o.ClientNonce
	toSerialize["redirect_uri"] = o.RedirectUri
	toSerialize["role"] = o.Role

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// JWTWriteOIDCCallbackRequest struct for JWTWriteOIDCCallbackRequest
type JWTWriteOIDCCallbackRequest struct {
	ClientNonce string `json:"client_nonce"`
	Code        string `json:"code"`
	IdToken     string `json:"id_token"`
	State       string `json:"state"`
}

// NewJWTWriteOIDCCallbackRequestWithDefaults instantiates a new JWTWriteOIDCCallbackRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJWTWriteOIDCCallbackRequestWithDefaults() *JWTWriteOIDCCallbackRequest {
	var this JWTWriteOIDCCallbackRequest

	return &this
}

func (o JWTWriteOIDCCallbackRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["client_nonce"] = o.ClientNonce
	toSerialize["code"] = o.Code
	toSerialize["id_token"] = o.IdToken
	toSerialize["state"] = o.State

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// JWTWriteRoleRequest struct for JWTWriteRoleRequest
type JWTWriteRoleRequest struct {
	// Comma-separated list of allowed values for redirect_uri
	AllowedRedirectUris []string `json:"allowed_redirect_uris"`
	// Comma-separated list of 'aud' claims that are valid for login; any match is sufficient
	BoundAudiences []string `json:"bound_audiences"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs"`
	// Map of claims/values which must match for login
	BoundClaims map[string]interface{} `json:"bound_claims"`
	// How to interpret values in the map of claims/values (which must match for login): allowed values are 'string' or 'glob'
	BoundClaimsType string `json:"bound_claims_type"`
	// The 'sub' claim that is valid for login. Optional.
	BoundSubject string `json:"bound_subject"`
	// Mappings of claims (key) that will be copied to a metadata field (value)
	ClaimMappings map[string]interface{} `json:"claim_mappings"`
	// Duration in seconds of leeway when validating all claims to account for clock skew. Defaults to 60 (1 minute) if set to 0 and can be disabled if set to -1.
	ClockSkewLeeway int32 `json:"clock_skew_leeway"`
	// Duration in seconds of leeway when validating expiration of a token to account for clock skew. Defaults to 150 (2.5 minutes) if set to 0 and can be disabled if set to -1.
	ExpirationLeeway int32 `json:"expiration_leeway"`
	// The claim to use for the Identity group alias names
	GroupsClaim string `json:"groups_claim"`
	// Specifies the allowable elapsed time in seconds since the last time the user was actively authenticated.
	MaxAge int32 `json:"max_age"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl int32 `json:"max_ttl"`
	// Duration in seconds of leeway when validating not before values of a token to account for clock skew. Defaults to 150 (2.5 minutes) if set to 0 and can be disabled if set to -1.
	NotBeforeLeeway int32 `json:"not_before_leeway"`
	// Use \"token_num_uses\" instead. If this and \"token_num_uses\" are both specified, only \"token_num_uses\" will be used.
	// Deprecated
	NumUses int32 `json:"num_uses"`
	// Comma-separated list of OIDC scopes
	OidcScopes []string `json:"oidc_scopes"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Type of the role, either 'jwt' or 'oidc'.
	RoleType string `json:"role_type"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl int32 `json:"ttl"`
	// The claim to use for the Identity entity alias name
	UserClaim string `json:"user_claim"`
	// If true, the user_claim value will use JSON pointer syntax for referencing claims.
	UserClaimJsonPointer bool `json:"user_claim_json_pointer"`
	// Log received OIDC tokens and claims when debug-level logging is active. Not recommended in production since sensitive information may be present in OIDC responses.
	VerboseOidcLogging bool `json:"verbose_oidc_logging"`
}

// NewJWTWriteRoleRequestWithDefaults instantiates a new JWTWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJWTWriteRoleRequestWithDefaults() *JWTWriteRoleRequest {
	var this JWTWriteRoleRequest

	this.BoundClaimsType = "string"
	this.ExpirationLeeway = 150
	this.NotBeforeLeeway = 150
	this.TokenType = "default-service"

	return &this
}

func (o JWTWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allowed_redirect_uris"] = o.AllowedRedirectUris
	toSerialize["bound_audiences"] = o.BoundAudiences
	toSerialize["bound_cidrs"] = o.BoundCidrs
	toSerialize["bound_claims"] = o.BoundClaims
	toSerialize["bound_claims_type"] = o.BoundClaimsType
	toSerialize["bound_subject"] = o.BoundSubject
	toSerialize["claim_mappings"] = o.ClaimMappings
	toSerialize["clock_skew_leeway"] = o.ClockSkewLeeway
	toSerialize["expiration_leeway"] = o.ExpirationLeeway
	toSerialize["groups_claim"] = o.GroupsClaim
	toSerialize["max_age"] = o.MaxAge
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["not_before_leeway"] = o.NotBeforeLeeway
	toSerialize["num_uses"] = o.NumUses
	toSerialize["oidc_scopes"] = o.OidcScopes
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["role_type"] = o.RoleType
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl
	toSerialize["user_claim"] = o.UserClaim
	toSerialize["user_claim_json_pointer"] = o.UserClaimJsonPointer
	toSerialize["verbose_oidc_logging"] = o.VerboseOidcLogging

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KerberosLoginRequest struct for KerberosLoginRequest
type KerberosLoginRequest struct {
	// SPNEGO Authorization header. Required.
	Authorization string `json:"authorization"`
}

// NewKerberosLoginRequestWithDefaults instantiates a new KerberosLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKerberosLoginRequestWithDefaults() *KerberosLoginRequest {
	var this KerberosLoginRequest

	return &this
}

func (o KerberosLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["authorization"] = o.Authorization

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KerberosWriteConfigRequest struct for KerberosWriteConfigRequest
type KerberosWriteConfigRequest struct {
	// If set to true, returns any groups found in LDAP as a group alias.
	AddGroupAliases bool `json:"add_group_aliases"`
	// Base64 encoded keytab
	Keytab string `json:"keytab"`
	// Remove instance/FQDN from keytab principal names.
	RemoveInstanceName bool `json:"remove_instance_name"`
	// Service Account
	ServiceAccount string `json:"service_account"`
}

// NewKerberosWriteConfigRequestWithDefaults instantiates a new KerberosWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKerberosWriteConfigRequestWithDefaults() *KerberosWriteConfigRequest {
	var this KerberosWriteConfigRequest

	return &this
}

func (o KerberosWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["add_group_aliases"] = o.AddGroupAliases
	toSerialize["keytab"] = o.Keytab
	toSerialize["remove_instance_name"] = o.RemoveInstanceName
	toSerialize["service_account"] = o.ServiceAccount

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KerberosWriteGroupRequest struct for KerberosWriteGroupRequest
type KerberosWriteGroupRequest struct {
	// Comma-separated list of policies associated to the group.
	Policies []string `json:"policies"`
}

// NewKerberosWriteGroupRequestWithDefaults instantiates a new KerberosWriteGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKerberosWriteGroupRequestWithDefaults() *KerberosWriteGroupRequest {
	var this KerberosWriteGroupRequest

	return &this
}

func (o KerberosWriteGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["policies"] = o.Policies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KerberosWriteLDAPConfigRequest struct for KerberosWriteLDAPConfigRequest
type KerberosWriteLDAPConfigRequest struct {
	// Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).
	AnonymousGroupSearch bool `json:"anonymous_group_search"`
	// LDAP DN for searching for the user DN (optional)
	Binddn string `json:"binddn"`
	// LDAP password for searching for the user DN (optional)
	Bindpass string `json:"bindpass"`
	// If true, case sensitivity will be used when comparing usernames and groups for matching policies.
	CaseSensitiveNames bool `json:"case_sensitive_names"`
	// CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded (optional)
	Certificate string `json:"certificate"`
	// Client certificate to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsCert string `json:"client_tls_cert"`
	// Client certificate key to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsKey string `json:"client_tls_key"`
	// Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true
	DenyNullBind bool `json:"deny_null_bind"`
	// Use anonymous bind to discover the bind DN of a user (optional)
	Discoverdn bool `json:"discoverdn"`
	// LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: \"cn\" or \"memberOf\", etc. Default: cn
	Groupattr string `json:"groupattr"`
	// LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)
	Groupdn string `json:"groupdn"`
	// Go template for querying group membership of user (optional) The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
	Groupfilter string `json:"groupfilter"`
	// Skip LDAP server SSL Certificate verification - VERY insecure (optional)
	InsecureTls bool `json:"insecure_tls"`
	// Timeout, in seconds, for the connection when making requests against the server before returning back an error.
	RequestTimeout int32 `json:"request_timeout"`
	// Issue a StartTLS command after establishing unencrypted connection (optional)
	Starttls bool `json:"starttls"`
	// Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMaxVersion string `json:"tls_max_version"`
	// Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMinVersion string `json:"tls_min_version"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies. This will apply to all tokens generated by this auth method, in addition to any configured for specific users/groups.
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Enables userPrincipalDomain login with [username]@UPNDomain (optional)
	Upndomain string `json:"upndomain"`
	// LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.
	Url string `json:"url"`
	// In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.
	UsePre111GroupCnBehavior bool `json:"use_pre111_group_cn_behavior"`
	// If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.
	UseTokenGroups bool `json:"use_token_groups"`
	// Attribute used for users (default: cn)
	Userattr string `json:"userattr"`
	// LDAP domain to use for users (eg: ou=People,dc=example,dc=org)
	Userdn string `json:"userdn"`
	// Go template for LDAP user search filer (optional) The template can access the following context variables: UserAttr, Username Default: ({{.UserAttr}}={{.Username}})
	Userfilter string `json:"userfilter"`
	// If true, sets the alias name to the username
	UsernameAsAlias bool `json:"username_as_alias"`
}

// NewKerberosWriteLDAPConfigRequestWithDefaults instantiates a new KerberosWriteLDAPConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKerberosWriteLDAPConfigRequestWithDefaults() *KerberosWriteLDAPConfigRequest {
	var this KerberosWriteLDAPConfigRequest

	this.AnonymousGroupSearch = false
	this.DenyNullBind = true
	this.Groupattr = "cn"
	this.Groupfilter = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.TlsMaxVersion = "tls12"
	this.TlsMinVersion = "tls12"
	this.TokenType = "default-service"
	this.Url = "ldap://127.0.0.1"
	this.UseTokenGroups = false
	this.Userattr = "cn"
	this.Userfilter = "({{.UserAttr}}={{.Username}})"
	this.UsernameAsAlias = false

	return &this
}

func (o KerberosWriteLDAPConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["anonymous_group_search"] = o.AnonymousGroupSearch
	toSerialize["binddn"] = o.Binddn
	toSerialize["bindpass"] = o.Bindpass
	toSerialize["case_sensitive_names"] = o.CaseSensitiveNames
	toSerialize["certificate"] = o.Certificate
	toSerialize["client_tls_cert"] = o.ClientTlsCert
	toSerialize["client_tls_key"] = o.ClientTlsKey
	toSerialize["deny_null_bind"] = o.DenyNullBind
	toSerialize["discoverdn"] = o.Discoverdn
	toSerialize["groupattr"] = o.Groupattr
	toSerialize["groupdn"] = o.Groupdn
	toSerialize["groupfilter"] = o.Groupfilter
	toSerialize["insecure_tls"] = o.InsecureTls
	toSerialize["request_timeout"] = o.RequestTimeout
	toSerialize["starttls"] = o.Starttls
	toSerialize["tls_max_version"] = o.TlsMaxVersion
	toSerialize["tls_min_version"] = o.TlsMinVersion
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["upndomain"] = o.Upndomain
	toSerialize["url"] = o.Url
	toSerialize["use_pre111_group_cn_behavior"] = o.UsePre111GroupCnBehavior
	toSerialize["use_token_groups"] = o.UseTokenGroups
	toSerialize["userattr"] = o.Userattr
	toSerialize["userdn"] = o.Userdn
	toSerialize["userfilter"] = o.Userfilter
	toSerialize["username_as_alias"] = o.UsernameAsAlias

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KubernetesLoginRequest struct for KubernetesLoginRequest
type KubernetesLoginRequest struct {
	// A signed JWT for authenticating a service account. This field is required.
	Jwt string `json:"jwt"`
	// Name of the role against which the login is being attempted. This field is required
	Role string `json:"role"`
}

// NewKubernetesLoginRequestWithDefaults instantiates a new KubernetesLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesLoginRequestWithDefaults() *KubernetesLoginRequest {
	var this KubernetesLoginRequest

	return &this
}

func (o KubernetesLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["jwt"] = o.Jwt
	toSerialize["role"] = o.Role

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KubernetesWriteAuthConfigRequest struct for KubernetesWriteAuthConfigRequest
type KubernetesWriteAuthConfigRequest struct {
	// Disable JWT issuer validation (Deprecated, will be removed in a future release)
	// Deprecated
	DisableIssValidation bool `json:"disable_iss_validation"`
	// Disable defaulting to the local CA cert and service account JWT when running in a Kubernetes pod
	DisableLocalCaJwt bool `json:"disable_local_ca_jwt"`
	// Optional JWT issuer. If no issuer is specified, then this plugin will use kubernetes.io/serviceaccount as the default issuer. (Deprecated, will be removed in a future release)
	// Deprecated
	Issuer string `json:"issuer"`
	// PEM encoded CA cert for use by the TLS client used to talk with the API.
	KubernetesCaCert string `json:"kubernetes_ca_cert"`
	// Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server.
	KubernetesHost string `json:"kubernetes_host"`
	// Optional list of PEM-formated public keys or certificates used to verify the signatures of kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys.
	PemKeys []string `json:"pem_keys"`
	// A service account JWT used to access the TokenReview API to validate other JWTs during login. If not set the JWT used for login will be used to access the API.
	TokenReviewerJwt string `json:"token_reviewer_jwt"`
}

// NewKubernetesWriteAuthConfigRequestWithDefaults instantiates a new KubernetesWriteAuthConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesWriteAuthConfigRequestWithDefaults() *KubernetesWriteAuthConfigRequest {
	var this KubernetesWriteAuthConfigRequest

	this.DisableIssValidation = true
	this.DisableLocalCaJwt = false

	return &this
}

func (o KubernetesWriteAuthConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disable_iss_validation"] = o.DisableIssValidation
	toSerialize["disable_local_ca_jwt"] = o.DisableLocalCaJwt
	toSerialize["issuer"] = o.Issuer
	toSerialize["kubernetes_ca_cert"] = o.KubernetesCaCert
	toSerialize["kubernetes_host"] = o.KubernetesHost
	toSerialize["pem_keys"] = o.PemKeys
	toSerialize["token_reviewer_jwt"] = o.TokenReviewerJwt

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KubernetesWriteAuthRoleRequest struct for KubernetesWriteAuthRoleRequest
type KubernetesWriteAuthRoleRequest struct {
	// Source to use when deriving the Alias name. valid choices: \"serviceaccount_uid\" : <token.uid> e.g. 474b11b5-0f20-4f9d-8ca5-65715ab325e0 (most secure choice) \"serviceaccount_name\" : <namespace>/<serviceaccount> e.g. vault/vault-agent default: \"serviceaccount_uid\"
	AliasNameSource string `json:"alias_name_source"`
	// Optional Audience claim to verify in the jwt.
	Audience string `json:"audience"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs"`
	// List of service account names able to access this role. If set to \"*\" all names are allowed.
	BoundServiceAccountNames []string `json:"bound_service_account_names"`
	// List of namespaces allowed to access this role. If set to \"*\" all namespaces are allowed.
	BoundServiceAccountNamespaces []string `json:"bound_service_account_namespaces"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl int32 `json:"max_ttl"`
	// Use \"token_num_uses\" instead. If this and \"token_num_uses\" are both specified, only \"token_num_uses\" will be used.
	// Deprecated
	NumUses int32 `json:"num_uses"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl int32 `json:"ttl"`
}

// NewKubernetesWriteAuthRoleRequestWithDefaults instantiates a new KubernetesWriteAuthRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesWriteAuthRoleRequestWithDefaults() *KubernetesWriteAuthRoleRequest {
	var this KubernetesWriteAuthRoleRequest

	this.AliasNameSource = "serviceaccount_uid"
	this.TokenType = "default-service"

	return &this
}

func (o KubernetesWriteAuthRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alias_name_source"] = o.AliasNameSource
	toSerialize["audience"] = o.Audience
	toSerialize["bound_cidrs"] = o.BoundCidrs
	toSerialize["bound_service_account_names"] = o.BoundServiceAccountNames
	toSerialize["bound_service_account_namespaces"] = o.BoundServiceAccountNamespaces
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["num_uses"] = o.NumUses
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KubernetesWriteConfigRequest struct for KubernetesWriteConfigRequest
type KubernetesWriteConfigRequest struct {
	// Disable defaulting to the local CA certificate and service account JWT when running in a Kubernetes pod.
	DisableLocalCaJwt bool `json:"disable_local_ca_jwt"`
	// PEM encoded CA certificate to use to verify the Kubernetes API server certificate. Defaults to the local pod's CA if found.
	KubernetesCaCert string `json:"kubernetes_ca_cert"`
	// Kubernetes API URL to connect to. Defaults to https://$KUBERNETES_SERVICE_HOST:KUBERNETES_SERVICE_PORT if those environment variables are set.
	KubernetesHost string `json:"kubernetes_host"`
	// The JSON web token of the service account used by the secret engine to manage Kubernetes credentials. Defaults to the local pod's JWT if found.
	ServiceAccountJwt string `json:"service_account_jwt"`
}

// NewKubernetesWriteConfigRequestWithDefaults instantiates a new KubernetesWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesWriteConfigRequestWithDefaults() *KubernetesWriteConfigRequest {
	var this KubernetesWriteConfigRequest

	this.DisableLocalCaJwt = false

	return &this
}

func (o KubernetesWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disable_local_ca_jwt"] = o.DisableLocalCaJwt
	toSerialize["kubernetes_ca_cert"] = o.KubernetesCaCert
	toSerialize["kubernetes_host"] = o.KubernetesHost
	toSerialize["service_account_jwt"] = o.ServiceAccountJwt

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KubernetesWriteCredentialsRequest struct for KubernetesWriteCredentialsRequest
type KubernetesWriteCredentialsRequest struct {
	// If true, generate a ClusterRoleBinding to grant permissions across the whole cluster instead of within a namespace. Requires the Vault role to have kubernetes_role_type set to ClusterRole.
	ClusterRoleBinding bool `json:"cluster_role_binding"`
	// The name of the Kubernetes namespace in which to generate the credentials
	KubernetesNamespace string `json:"kubernetes_namespace"`
	// The TTL of the generated credentials
	Ttl int32 `json:"ttl"`
}

// NewKubernetesWriteCredentialsRequestWithDefaults instantiates a new KubernetesWriteCredentialsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesWriteCredentialsRequestWithDefaults() *KubernetesWriteCredentialsRequest {
	var this KubernetesWriteCredentialsRequest

	return &this
}

func (o KubernetesWriteCredentialsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["cluster_role_binding"] = o.ClusterRoleBinding
	toSerialize["kubernetes_namespace"] = o.KubernetesNamespace
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KubernetesWriteRoleRequest struct for KubernetesWriteRoleRequest
type KubernetesWriteRoleRequest struct {
	// A label selector for Kubernetes namespaces in which credentials can be generated. Accepts either a JSON or YAML object. If set with allowed_kubernetes_namespaces, the conditions are conjuncted.
	AllowedKubernetesNamespaceSelector string `json:"allowed_kubernetes_namespace_selector"`
	// A list of the Kubernetes namespaces in which credentials can be generated. If set to \"*\" all namespaces are allowed.
	AllowedKubernetesNamespaces []string `json:"allowed_kubernetes_namespaces"`
	// Additional annotations to apply to all generated Kubernetes objects.
	ExtraAnnotations map[string]interface{} `json:"extra_annotations"`
	// Additional labels to apply to all generated Kubernetes objects.
	ExtraLabels map[string]interface{} `json:"extra_labels"`
	// The Role or ClusterRole rules to use when generating a role. Accepts either a JSON or YAML object. If set, the entire chain of Kubernetes objects will be generated.
	GeneratedRoleRules string `json:"generated_role_rules"`
	// The pre-existing Role or ClusterRole to bind a generated service account to. If set, Kubernetes token, service account, and role binding objects will be created.
	KubernetesRoleName string `json:"kubernetes_role_name"`
	// Specifies whether the Kubernetes role is a Role or ClusterRole.
	KubernetesRoleType string `json:"kubernetes_role_type"`
	// The name template to use when generating service accounts, roles and role bindings. If unset, a default template is used.
	NameTemplate string `json:"name_template"`
	// The pre-existing service account to generate tokens for. Mutually exclusive with all role parameters. If set, only a Kubernetes service account token will be created.
	ServiceAccountName string `json:"service_account_name"`
	// The default ttl for generated Kubernetes service account tokens. If not set or set to 0, will use system default.
	TokenDefaultTtl int32 `json:"token_default_ttl"`
	// The maximum ttl for generated Kubernetes service account tokens. If not set or set to 0, will use system default.
	TokenMaxTtl int32 `json:"token_max_ttl"`
}

// NewKubernetesWriteRoleRequestWithDefaults instantiates a new KubernetesWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesWriteRoleRequestWithDefaults() *KubernetesWriteRoleRequest {
	var this KubernetesWriteRoleRequest

	this.KubernetesRoleType = "Role"

	return &this
}

func (o KubernetesWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allowed_kubernetes_namespace_selector"] = o.AllowedKubernetesNamespaceSelector
	toSerialize["allowed_kubernetes_namespaces"] = o.AllowedKubernetesNamespaces
	toSerialize["extra_annotations"] = o.ExtraAnnotations
	toSerialize["extra_labels"] = o.ExtraLabels
	toSerialize["generated_role_rules"] = o.GeneratedRoleRules
	toSerialize["kubernetes_role_name"] = o.KubernetesRoleName
	toSerialize["kubernetes_role_type"] = o.KubernetesRoleType
	toSerialize["name_template"] = o.NameTemplate
	toSerialize["service_account_name"] = o.ServiceAccountName
	toSerialize["token_default_ttl"] = o.TokenDefaultTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KVv2DeleteVersionsRequest struct for KVv2DeleteVersionsRequest
type KVv2DeleteVersionsRequest struct {
	// The versions to be archived. The versioned data will not be deleted, but it will no longer be returned in normal get requests.
	Versions []int32 `json:"versions"`
}

// NewKVv2DeleteVersionsRequestWithDefaults instantiates a new KVv2DeleteVersionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKVv2DeleteVersionsRequestWithDefaults() *KVv2DeleteVersionsRequest {
	var this KVv2DeleteVersionsRequest

	return &this
}

func (o KVv2DeleteVersionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["versions"] = o.Versions

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KVv2DestroyVersionsRequest struct for KVv2DestroyVersionsRequest
type KVv2DestroyVersionsRequest struct {
	// The versions to destroy. Their data will be permanently deleted.
	Versions []int32 `json:"versions"`
}

// NewKVv2DestroyVersionsRequestWithDefaults instantiates a new KVv2DestroyVersionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKVv2DestroyVersionsRequestWithDefaults() *KVv2DestroyVersionsRequest {
	var this KVv2DestroyVersionsRequest

	return &this
}

func (o KVv2DestroyVersionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["versions"] = o.Versions

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KVv2UndeleteVersionsRequest struct for KVv2UndeleteVersionsRequest
type KVv2UndeleteVersionsRequest struct {
	// The versions to unarchive. The versions will be restored and their data will be returned on normal get requests.
	Versions []int32 `json:"versions"`
}

// NewKVv2UndeleteVersionsRequestWithDefaults instantiates a new KVv2UndeleteVersionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKVv2UndeleteVersionsRequestWithDefaults() *KVv2UndeleteVersionsRequest {
	var this KVv2UndeleteVersionsRequest

	return &this
}

func (o KVv2UndeleteVersionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["versions"] = o.Versions

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KVv2WriteConfigRequest struct for KVv2WriteConfigRequest
type KVv2WriteConfigRequest struct {
	// If true, the backend will require the cas parameter to be set for each write
	CasRequired bool `json:"cas_required"`
	// If set, the length of time before a version is deleted. A negative duration disables the use of delete_version_after on all keys. A zero duration clears the current setting. Accepts a Go duration format string.
	DeleteVersionAfter int32 `json:"delete_version_after"`
	// The number of versions to keep for each key. Defaults to 10
	MaxVersions int32 `json:"max_versions"`
}

// NewKVv2WriteConfigRequestWithDefaults instantiates a new KVv2WriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKVv2WriteConfigRequestWithDefaults() *KVv2WriteConfigRequest {
	var this KVv2WriteConfigRequest

	return &this
}

func (o KVv2WriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["cas_required"] = o.CasRequired
	toSerialize["delete_version_after"] = o.DeleteVersionAfter
	toSerialize["max_versions"] = o.MaxVersions

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KVv2WriteMetadataRequest struct for KVv2WriteMetadataRequest
type KVv2WriteMetadataRequest struct {
	// If true the key will require the cas parameter to be set on all write requests. If false, the backend’s configuration will be used.
	CasRequired bool `json:"cas_required"`
	// User-provided key-value pairs that are used to describe arbitrary and version-agnostic information about a secret.
	CustomMetadata map[string]interface{} `json:"custom_metadata"`
	// The length of time before a version is deleted. If not set, the backend's configured delete_version_after is used. Cannot be greater than the backend's delete_version_after. A zero duration clears the current setting. A negative duration will cause an error.
	DeleteVersionAfter int32 `json:"delete_version_after"`
	// The number of versions to keep. If not set, the backend’s configured max version is used.
	MaxVersions int32 `json:"max_versions"`
}

// NewKVv2WriteMetadataRequestWithDefaults instantiates a new KVv2WriteMetadataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKVv2WriteMetadataRequestWithDefaults() *KVv2WriteMetadataRequest {
	var this KVv2WriteMetadataRequest

	return &this
}

func (o KVv2WriteMetadataRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["cas_required"] = o.CasRequired
	toSerialize["custom_metadata"] = o.CustomMetadata
	toSerialize["delete_version_after"] = o.DeleteVersionAfter
	toSerialize["max_versions"] = o.MaxVersions

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// KVv2WriteRequest struct for KVv2WriteRequest
type KVv2WriteRequest struct {
	// The contents of the data map will be stored and returned on read.
	Data map[string]interface{} `json:"data"`
	// Options for writing a KV entry. Set the \"cas\" value to use a Check-And-Set operation. If not set the write will be allowed. If set to 0 a write will only be allowed if the key doesn’t exist. If the index is non-zero the write will only be allowed if the key’s current version matches the version specified in the cas parameter.
	Options map[string]interface{} `json:"options"`
	// If provided during a read, the value at the version number will be returned
	Version int32 `json:"version"`
}

// NewKVv2WriteRequestWithDefaults instantiates a new KVv2WriteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKVv2WriteRequestWithDefaults() *KVv2WriteRequest {
	var this KVv2WriteRequest

	return &this
}

func (o KVv2WriteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["data"] = o.Data
	toSerialize["options"] = o.Options
	toSerialize["version"] = o.Version

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LDAPCheckInLibraryRequest struct for LDAPCheckInLibraryRequest
type LDAPCheckInLibraryRequest struct {
	// The username/logon name for the service accounts to check in.
	ServiceAccountNames []string `json:"service_account_names"`
}

// NewLDAPCheckInLibraryRequestWithDefaults instantiates a new LDAPCheckInLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLDAPCheckInLibraryRequestWithDefaults() *LDAPCheckInLibraryRequest {
	var this LDAPCheckInLibraryRequest

	return &this
}

func (o LDAPCheckInLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["service_account_names"] = o.ServiceAccountNames

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LDAPCheckInManageLibraryRequest struct for LDAPCheckInManageLibraryRequest
type LDAPCheckInManageLibraryRequest struct {
	// The username/logon name for the service accounts to check in.
	ServiceAccountNames []string `json:"service_account_names"`
}

// NewLDAPCheckInManageLibraryRequestWithDefaults instantiates a new LDAPCheckInManageLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLDAPCheckInManageLibraryRequestWithDefaults() *LDAPCheckInManageLibraryRequest {
	var this LDAPCheckInManageLibraryRequest

	return &this
}

func (o LDAPCheckInManageLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["service_account_names"] = o.ServiceAccountNames

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LDAPCheckOutLibraryRequest struct for LDAPCheckOutLibraryRequest
type LDAPCheckOutLibraryRequest struct {
	// The length of time before the check-out will expire, in seconds.
	Ttl int32 `json:"ttl"`
}

// NewLDAPCheckOutLibraryRequestWithDefaults instantiates a new LDAPCheckOutLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLDAPCheckOutLibraryRequestWithDefaults() *LDAPCheckOutLibraryRequest {
	var this LDAPCheckOutLibraryRequest

	return &this
}

func (o LDAPCheckOutLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LDAPLoginRequest struct for LDAPLoginRequest
type LDAPLoginRequest struct {
	// Password for this user.
	Password string `json:"password"`
}

// NewLDAPLoginRequestWithDefaults instantiates a new LDAPLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLDAPLoginRequestWithDefaults() *LDAPLoginRequest {
	var this LDAPLoginRequest

	return &this
}

func (o LDAPLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["password"] = o.Password

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LDAPWriteAuthConfigRequest struct for LDAPWriteAuthConfigRequest
type LDAPWriteAuthConfigRequest struct {
	// Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).
	AnonymousGroupSearch bool `json:"anonymous_group_search"`
	// LDAP DN for searching for the user DN (optional)
	Binddn string `json:"binddn"`
	// LDAP password for searching for the user DN (optional)
	Bindpass string `json:"bindpass"`
	// If true, case sensitivity will be used when comparing usernames and groups for matching policies.
	CaseSensitiveNames bool `json:"case_sensitive_names"`
	// CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded (optional)
	Certificate string `json:"certificate"`
	// Client certificate to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsCert string `json:"client_tls_cert"`
	// Client certificate key to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsKey string `json:"client_tls_key"`
	// Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true
	DenyNullBind bool `json:"deny_null_bind"`
	// Use anonymous bind to discover the bind DN of a user (optional)
	Discoverdn bool `json:"discoverdn"`
	// LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: \"cn\" or \"memberOf\", etc. Default: cn
	Groupattr string `json:"groupattr"`
	// LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)
	Groupdn string `json:"groupdn"`
	// Go template for querying group membership of user (optional) The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
	Groupfilter string `json:"groupfilter"`
	// Skip LDAP server SSL Certificate verification - VERY insecure (optional)
	InsecureTls bool `json:"insecure_tls"`
	// Timeout, in seconds, for the connection when making requests against the server before returning back an error.
	RequestTimeout int32 `json:"request_timeout"`
	// Issue a StartTLS command after establishing unencrypted connection (optional)
	Starttls bool `json:"starttls"`
	// Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMaxVersion string `json:"tls_max_version"`
	// Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMinVersion string `json:"tls_min_version"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies. This will apply to all tokens generated by this auth method, in addition to any configured for specific users/groups.
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Enables userPrincipalDomain login with [username]@UPNDomain (optional)
	Upndomain string `json:"upndomain"`
	// LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.
	Url string `json:"url"`
	// In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.
	UsePre111GroupCnBehavior bool `json:"use_pre111_group_cn_behavior"`
	// If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.
	UseTokenGroups bool `json:"use_token_groups"`
	// Attribute used for users (default: cn)
	Userattr string `json:"userattr"`
	// LDAP domain to use for users (eg: ou=People,dc=example,dc=org)
	Userdn string `json:"userdn"`
	// Go template for LDAP user search filer (optional) The template can access the following context variables: UserAttr, Username Default: ({{.UserAttr}}={{.Username}})
	Userfilter string `json:"userfilter"`
	// If true, sets the alias name to the username
	UsernameAsAlias bool `json:"username_as_alias"`
}

// NewLDAPWriteAuthConfigRequestWithDefaults instantiates a new LDAPWriteAuthConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLDAPWriteAuthConfigRequestWithDefaults() *LDAPWriteAuthConfigRequest {
	var this LDAPWriteAuthConfigRequest

	this.AnonymousGroupSearch = false
	this.DenyNullBind = true
	this.Groupattr = "cn"
	this.Groupfilter = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.TlsMaxVersion = "tls12"
	this.TlsMinVersion = "tls12"
	this.TokenType = "default-service"
	this.Url = "ldap://127.0.0.1"
	this.UseTokenGroups = false
	this.Userattr = "cn"
	this.Userfilter = "({{.UserAttr}}={{.Username}})"
	this.UsernameAsAlias = false

	return &this
}

func (o LDAPWriteAuthConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["anonymous_group_search"] = o.AnonymousGroupSearch
	toSerialize["binddn"] = o.Binddn
	toSerialize["bindpass"] = o.Bindpass
	toSerialize["case_sensitive_names"] = o.CaseSensitiveNames
	toSerialize["certificate"] = o.Certificate
	toSerialize["client_tls_cert"] = o.ClientTlsCert
	toSerialize["client_tls_key"] = o.ClientTlsKey
	toSerialize["deny_null_bind"] = o.DenyNullBind
	toSerialize["discoverdn"] = o.Discoverdn
	toSerialize["groupattr"] = o.Groupattr
	toSerialize["groupdn"] = o.Groupdn
	toSerialize["groupfilter"] = o.Groupfilter
	toSerialize["insecure_tls"] = o.InsecureTls
	toSerialize["request_timeout"] = o.RequestTimeout
	toSerialize["starttls"] = o.Starttls
	toSerialize["tls_max_version"] = o.TlsMaxVersion
	toSerialize["tls_min_version"] = o.TlsMinVersion
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["upndomain"] = o.Upndomain
	toSerialize["url"] = o.Url
	toSerialize["use_pre111_group_cn_behavior"] = o.UsePre111GroupCnBehavior
	toSerialize["use_token_groups"] = o.UseTokenGroups
	toSerialize["userattr"] = o.Userattr
	toSerialize["userdn"] = o.Userdn
	toSerialize["userfilter"] = o.Userfilter
	toSerialize["username_as_alias"] = o.UsernameAsAlias

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LDAPWriteConfigRequest struct for LDAPWriteConfigRequest
type LDAPWriteConfigRequest struct {
	// Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).
	AnonymousGroupSearch bool `json:"anonymous_group_search"`
	// LDAP DN for searching for the user DN (optional)
	Binddn string `json:"binddn"`
	// LDAP password for searching for the user DN (optional)
	Bindpass string `json:"bindpass"`
	// If true, case sensitivity will be used when comparing usernames and groups for matching policies.
	CaseSensitiveNames bool `json:"case_sensitive_names"`
	// CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded (optional)
	Certificate string `json:"certificate"`
	// Client certificate to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsCert string `json:"client_tls_cert"`
	// Client certificate key to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsKey string `json:"client_tls_key"`
	// Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true
	DenyNullBind bool `json:"deny_null_bind"`
	// Use anonymous bind to discover the bind DN of a user (optional)
	Discoverdn bool `json:"discoverdn"`
	// LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: \"cn\" or \"memberOf\", etc. Default: cn
	Groupattr string `json:"groupattr"`
	// LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)
	Groupdn string `json:"groupdn"`
	// Go template for querying group membership of user (optional) The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
	Groupfilter string `json:"groupfilter"`
	// Skip LDAP server SSL Certificate verification - VERY insecure (optional)
	InsecureTls bool `json:"insecure_tls"`
	// The desired length of passwords that Vault generates.
	// Deprecated
	Length int32 `json:"length"`
	// The maximum password time-to-live.
	MaxTtl int32 `json:"max_ttl"`
	// Password policy to use to generate passwords
	PasswordPolicy string `json:"password_policy"`
	// Timeout, in seconds, for the connection when making requests against the server before returning back an error.
	RequestTimeout int32 `json:"request_timeout"`
	// The desired LDAP schema used when modifying user account passwords.
	Schema string `json:"schema"`
	// Issue a StartTLS command after establishing unencrypted connection (optional)
	Starttls bool `json:"starttls"`
	// Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMaxVersion string `json:"tls_max_version"`
	// Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMinVersion string `json:"tls_min_version"`
	// The default password time-to-live.
	Ttl int32 `json:"ttl"`
	// Enables userPrincipalDomain login with [username]@UPNDomain (optional)
	Upndomain string `json:"upndomain"`
	// LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.
	Url string `json:"url"`
	// In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.
	UsePre111GroupCnBehavior bool `json:"use_pre111_group_cn_behavior"`
	// If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.
	UseTokenGroups bool `json:"use_token_groups"`
	// Attribute used for users (default: cn)
	Userattr string `json:"userattr"`
	// LDAP domain to use for users (eg: ou=People,dc=example,dc=org)
	Userdn string `json:"userdn"`
	// Go template for LDAP user search filer (optional) The template can access the following context variables: UserAttr, Username Default: ({{.UserAttr}}={{.Username}})
	Userfilter string `json:"userfilter"`
	// If true, sets the alias name to the username
	UsernameAsAlias bool `json:"username_as_alias"`
}

// NewLDAPWriteConfigRequestWithDefaults instantiates a new LDAPWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLDAPWriteConfigRequestWithDefaults() *LDAPWriteConfigRequest {
	var this LDAPWriteConfigRequest

	this.AnonymousGroupSearch = false
	this.DenyNullBind = true
	this.Groupattr = "cn"
	this.Groupfilter = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.Schema = "openldap"
	this.TlsMaxVersion = "tls12"
	this.TlsMinVersion = "tls12"
	this.Url = "ldap://127.0.0.1"
	this.UseTokenGroups = false
	this.Userattr = "cn"
	this.Userfilter = "({{.UserAttr}}={{.Username}})"
	this.UsernameAsAlias = false

	return &this
}

func (o LDAPWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["anonymous_group_search"] = o.AnonymousGroupSearch
	toSerialize["binddn"] = o.Binddn
	toSerialize["bindpass"] = o.Bindpass
	toSerialize["case_sensitive_names"] = o.CaseSensitiveNames
	toSerialize["certificate"] = o.Certificate
	toSerialize["client_tls_cert"] = o.ClientTlsCert
	toSerialize["client_tls_key"] = o.ClientTlsKey
	toSerialize["deny_null_bind"] = o.DenyNullBind
	toSerialize["discoverdn"] = o.Discoverdn
	toSerialize["groupattr"] = o.Groupattr
	toSerialize["groupdn"] = o.Groupdn
	toSerialize["groupfilter"] = o.Groupfilter
	toSerialize["insecure_tls"] = o.InsecureTls
	toSerialize["length"] = o.Length
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["password_policy"] = o.PasswordPolicy
	toSerialize["request_timeout"] = o.RequestTimeout
	toSerialize["schema"] = o.Schema
	toSerialize["starttls"] = o.Starttls
	toSerialize["tls_max_version"] = o.TlsMaxVersion
	toSerialize["tls_min_version"] = o.TlsMinVersion
	toSerialize["ttl"] = o.Ttl
	toSerialize["upndomain"] = o.Upndomain
	toSerialize["url"] = o.Url
	toSerialize["use_pre111_group_cn_behavior"] = o.UsePre111GroupCnBehavior
	toSerialize["use_token_groups"] = o.UseTokenGroups
	toSerialize["userattr"] = o.Userattr
	toSerialize["userdn"] = o.Userdn
	toSerialize["userfilter"] = o.Userfilter
	toSerialize["username_as_alias"] = o.UsernameAsAlias

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LDAPWriteGroupRequest struct for LDAPWriteGroupRequest
type LDAPWriteGroupRequest struct {
	// Comma-separated list of policies associated to the group.
	Policies []string `json:"policies"`
}

// NewLDAPWriteGroupRequestWithDefaults instantiates a new LDAPWriteGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLDAPWriteGroupRequestWithDefaults() *LDAPWriteGroupRequest {
	var this LDAPWriteGroupRequest

	return &this
}

func (o LDAPWriteGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["policies"] = o.Policies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LDAPWriteLibraryRequest struct for LDAPWriteLibraryRequest
type LDAPWriteLibraryRequest struct {
	// Disable the default behavior of requiring that check-ins are performed by the entity that checked them out.
	DisableCheckInEnforcement bool `json:"disable_check_in_enforcement"`
	// In seconds, the max amount of time a check-out's renewals should last. Defaults to 24 hours.
	MaxTtl int32 `json:"max_ttl"`
	// The username/logon name for the service accounts with which this set will be associated.
	ServiceAccountNames []string `json:"service_account_names"`
	// In seconds, the amount of time a check-out should last. Defaults to 24 hours.
	Ttl int32 `json:"ttl"`
}

// NewLDAPWriteLibraryRequestWithDefaults instantiates a new LDAPWriteLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLDAPWriteLibraryRequestWithDefaults() *LDAPWriteLibraryRequest {
	var this LDAPWriteLibraryRequest

	this.DisableCheckInEnforcement = false
	this.MaxTtl = 86400
	this.Ttl = 86400

	return &this
}

func (o LDAPWriteLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disable_check_in_enforcement"] = o.DisableCheckInEnforcement
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["service_account_names"] = o.ServiceAccountNames
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LDAPWriteRoleRequest struct for LDAPWriteRoleRequest
type LDAPWriteRoleRequest struct {
	// LDIF string used to create new entities within the LDAP system. This LDIF can be templated.
	CreationLdif string `json:"creation_ldif"`
	// Default TTL for dynamic credentials
	DefaultTtl int32 `json:"default_ttl"`
	// LDIF string used to delete entities created within the LDAP system. This LDIF can be templated.
	DeletionLdif string `json:"deletion_ldif"`
	// Max TTL a dynamic credential can be extended to
	MaxTtl int32 `json:"max_ttl"`
	// LDIF string used to rollback changes in the event of a failure to create credentials. This LDIF can be templated.
	RollbackLdif string `json:"rollback_ldif"`
	// The template used to create a username
	UsernameTemplate string `json:"username_template"`
}

// NewLDAPWriteRoleRequestWithDefaults instantiates a new LDAPWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLDAPWriteRoleRequestWithDefaults() *LDAPWriteRoleRequest {
	var this LDAPWriteRoleRequest

	return &this
}

func (o LDAPWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["creation_ldif"] = o.CreationLdif
	toSerialize["default_ttl"] = o.DefaultTtl
	toSerialize["deletion_ldif"] = o.DeletionLdif
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["rollback_ldif"] = o.RollbackLdif
	toSerialize["username_template"] = o.UsernameTemplate

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LDAPWriteStaticRoleRequest struct for LDAPWriteStaticRoleRequest
type LDAPWriteStaticRoleRequest struct {
	// The distinguished name of the entry to manage.
	Dn string `json:"dn"`
	// Period for automatic credential rotation of the given entry.
	RotationPeriod int32 `json:"rotation_period"`
	// The username/logon name for the entry with which this role will be associated.
	Username string `json:"username"`
}

// NewLDAPWriteStaticRoleRequestWithDefaults instantiates a new LDAPWriteStaticRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLDAPWriteStaticRoleRequestWithDefaults() *LDAPWriteStaticRoleRequest {
	var this LDAPWriteStaticRoleRequest

	return &this
}

func (o LDAPWriteStaticRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["dn"] = o.Dn
	toSerialize["rotation_period"] = o.RotationPeriod
	toSerialize["username"] = o.Username

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// LDAPWriteUserRequest struct for LDAPWriteUserRequest
type LDAPWriteUserRequest struct {
	// Comma-separated list of additional groups associated with the user.
	Groups []string `json:"groups"`
	// Comma-separated list of policies associated with the user.
	Policies []string `json:"policies"`
}

// NewLDAPWriteUserRequestWithDefaults instantiates a new LDAPWriteUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLDAPWriteUserRequestWithDefaults() *LDAPWriteUserRequest {
	var this LDAPWriteUserRequest

	return &this
}

func (o LDAPWriteUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["groups"] = o.Groups
	toSerialize["policies"] = o.Policies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MFAMethodAdminDestroyTOTPRequest struct for MFAMethodAdminDestroyTOTPRequest
type MFAMethodAdminDestroyTOTPRequest struct {
	// Identifier of the entity from which the MFA method secret needs to be removed.
	EntityId string `json:"entity_id"`
	// The unique identifier for this MFA method.
	MethodId string `json:"method_id"`
}

// NewMFAMethodAdminDestroyTOTPRequestWithDefaults instantiates a new MFAMethodAdminDestroyTOTPRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMFAMethodAdminDestroyTOTPRequestWithDefaults() *MFAMethodAdminDestroyTOTPRequest {
	var this MFAMethodAdminDestroyTOTPRequest

	return &this
}

func (o MFAMethodAdminDestroyTOTPRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["entity_id"] = o.EntityId
	toSerialize["method_id"] = o.MethodId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MFAMethodAdminGenerateTOTPRequest struct for MFAMethodAdminGenerateTOTPRequest
type MFAMethodAdminGenerateTOTPRequest struct {
	// Entity ID on which the generated secret needs to get stored.
	EntityId string `json:"entity_id"`
	// The unique identifier for this MFA method.
	MethodId string `json:"method_id"`
}

// NewMFAMethodAdminGenerateTOTPRequestWithDefaults instantiates a new MFAMethodAdminGenerateTOTPRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMFAMethodAdminGenerateTOTPRequestWithDefaults() *MFAMethodAdminGenerateTOTPRequest {
	var this MFAMethodAdminGenerateTOTPRequest

	return &this
}

func (o MFAMethodAdminGenerateTOTPRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["entity_id"] = o.EntityId
	toSerialize["method_id"] = o.MethodId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MFAMethodGenerateTOTPRequest struct for MFAMethodGenerateTOTPRequest
type MFAMethodGenerateTOTPRequest struct {
	// The unique identifier for this MFA method.
	MethodId string `json:"method_id"`
}

// NewMFAMethodGenerateTOTPRequestWithDefaults instantiates a new MFAMethodGenerateTOTPRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMFAMethodGenerateTOTPRequestWithDefaults() *MFAMethodGenerateTOTPRequest {
	var this MFAMethodGenerateTOTPRequest

	return &this
}

func (o MFAMethodGenerateTOTPRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["method_id"] = o.MethodId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MFAMethodWriteDuoRequest struct for MFAMethodWriteDuoRequest
type MFAMethodWriteDuoRequest struct {
	// API host name for Duo.
	ApiHostname string `json:"api_hostname"`
	// Integration key for Duo.
	IntegrationKey string `json:"integration_key"`
	// The unique identifier for this MFA method.
	MethodId string `json:"method_id"`
	// Push information for Duo.
	PushInfo string `json:"push_info"`
	// Secret key for Duo.
	SecretKey string `json:"secret_key"`
	// If true, the user is reminded to use the passcode upon MFA validation. This option does not enforce using the passcode. Defaults to false.
	UsePasscode bool `json:"use_passcode"`
	// A template string for mapping Identity names to MFA method names. Values to subtitute should be placed in {{}}. For example, \"{{alias.name}}@example.com\". Currently-supported mappings: alias.name: The name returned by the mount configured via the mount_accessor parameter If blank, the Alias's name field will be used as-is.
	UsernameFormat string `json:"username_format"`
}

// NewMFAMethodWriteDuoRequestWithDefaults instantiates a new MFAMethodWriteDuoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMFAMethodWriteDuoRequestWithDefaults() *MFAMethodWriteDuoRequest {
	var this MFAMethodWriteDuoRequest

	return &this
}

func (o MFAMethodWriteDuoRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["api_hostname"] = o.ApiHostname
	toSerialize["integration_key"] = o.IntegrationKey
	toSerialize["method_id"] = o.MethodId
	toSerialize["push_info"] = o.PushInfo
	toSerialize["secret_key"] = o.SecretKey
	toSerialize["use_passcode"] = o.UsePasscode
	toSerialize["username_format"] = o.UsernameFormat

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MFAMethodWriteOktaRequest struct for MFAMethodWriteOktaRequest
type MFAMethodWriteOktaRequest struct {
	// Okta API key.
	ApiToken string `json:"api_token"`
	// The base domain to use for the Okta API. When not specified in the configuration, \"okta.com\" is used.
	BaseUrl string `json:"base_url"`
	// The unique identifier for this MFA method.
	MethodId string `json:"method_id"`
	// Name of the organization to be used in the Okta API.
	OrgName string `json:"org_name"`
	// If true, the username will only match the primary email for the account. Defaults to false.
	PrimaryEmail bool `json:"primary_email"`
	// (DEPRECATED) Use base_url instead.
	Production bool `json:"production"`
	// A template string for mapping Identity names to MFA method names. Values to substitute should be placed in {{}}. For example, \"{{entity.name}}@example.com\". If blank, the Entity's name field will be used as-is.
	UsernameFormat string `json:"username_format"`
}

// NewMFAMethodWriteOktaRequestWithDefaults instantiates a new MFAMethodWriteOktaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMFAMethodWriteOktaRequestWithDefaults() *MFAMethodWriteOktaRequest {
	var this MFAMethodWriteOktaRequest

	return &this
}

func (o MFAMethodWriteOktaRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["api_token"] = o.ApiToken
	toSerialize["base_url"] = o.BaseUrl
	toSerialize["method_id"] = o.MethodId
	toSerialize["org_name"] = o.OrgName
	toSerialize["primary_email"] = o.PrimaryEmail
	toSerialize["production"] = o.Production
	toSerialize["username_format"] = o.UsernameFormat

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MFAMethodWritePingIDRequest struct for MFAMethodWritePingIDRequest
type MFAMethodWritePingIDRequest struct {
	// The unique identifier for this MFA method.
	MethodId string `json:"method_id"`
	// The settings file provided by Ping, Base64-encoded. This must be a settings file suitable for third-party clients, not the PingID SDK or PingFederate.
	SettingsFileBase64 string `json:"settings_file_base64"`
	// A template string for mapping Identity names to MFA method names. Values to subtitute should be placed in {{}}. For example, \"{{alias.name}}@example.com\". Currently-supported mappings: alias.name: The name returned by the mount configured via the mount_accessor parameter If blank, the Alias's name field will be used as-is.
	UsernameFormat string `json:"username_format"`
}

// NewMFAMethodWritePingIDRequestWithDefaults instantiates a new MFAMethodWritePingIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMFAMethodWritePingIDRequestWithDefaults() *MFAMethodWritePingIDRequest {
	var this MFAMethodWritePingIDRequest

	return &this
}

func (o MFAMethodWritePingIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["method_id"] = o.MethodId
	toSerialize["settings_file_base64"] = o.SettingsFileBase64
	toSerialize["username_format"] = o.UsernameFormat

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MFAMethodWriteTOTPRequest struct for MFAMethodWriteTOTPRequest
type MFAMethodWriteTOTPRequest struct {
	// The hashing algorithm used to generate the TOTP token. Options include SHA1, SHA256 and SHA512.
	Algorithm string `json:"algorithm"`
	// The number of digits in the generated TOTP token. This value can either be 6 or 8.
	Digits int32 `json:"digits"`
	// The name of the key's issuing organization.
	Issuer string `json:"issuer"`
	// Determines the size in bytes of the generated key.
	KeySize int32 `json:"key_size"`
	// Max number of allowed validation attempts.
	MaxValidationAttempts int32 `json:"max_validation_attempts"`
	// The unique identifier for this MFA method.
	MethodId string `json:"method_id"`
	// The length of time used to generate a counter for the TOTP token calculation.
	Period int32 `json:"period"`
	// The pixel size of the generated square QR code.
	QrSize int32 `json:"qr_size"`
	// The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1.
	Skew int32 `json:"skew"`
}

// NewMFAMethodWriteTOTPRequestWithDefaults instantiates a new MFAMethodWriteTOTPRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMFAMethodWriteTOTPRequestWithDefaults() *MFAMethodWriteTOTPRequest {
	var this MFAMethodWriteTOTPRequest

	this.Algorithm = "SHA1"
	this.Digits = 6
	this.KeySize = 20
	this.Period = 30
	this.QrSize = 200
	this.Skew = 1

	return &this
}

func (o MFAMethodWriteTOTPRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["digits"] = o.Digits
	toSerialize["issuer"] = o.Issuer
	toSerialize["key_size"] = o.KeySize
	toSerialize["max_validation_attempts"] = o.MaxValidationAttempts
	toSerialize["method_id"] = o.MethodId
	toSerialize["period"] = o.Period
	toSerialize["qr_size"] = o.QrSize
	toSerialize["skew"] = o.Skew

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MFAValidateRequest struct for MFAValidateRequest
type MFAValidateRequest struct {
	// A map from MFA method ID to a slice of passcodes or an empty slice if the method does not use passcodes
	MfaPayload map[string]interface{} `json:"mfa_payload"`
	// ID for this MFA request
	MfaRequestId string `json:"mfa_request_id"`
}

// NewMFAValidateRequestWithDefaults instantiates a new MFAValidateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMFAValidateRequestWithDefaults() *MFAValidateRequest {
	var this MFAValidateRequest

	return &this
}

func (o MFAValidateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["mfa_payload"] = o.MfaPayload
	toSerialize["mfa_request_id"] = o.MfaRequestId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MFAWriteLoginEnforcementRequest struct for MFAWriteLoginEnforcementRequest
type MFAWriteLoginEnforcementRequest struct {
	// Array of auth mount accessor IDs
	AuthMethodAccessors []string `json:"auth_method_accessors"`
	// Array of auth mount types
	AuthMethodTypes []string `json:"auth_method_types"`
	// Array of identity entity IDs
	IdentityEntityIds []string `json:"identity_entity_ids"`
	// Array of identity group IDs
	IdentityGroupIds []string `json:"identity_group_ids"`
	// Array of Method IDs that determine what methods will be enforced
	MfaMethodIds []string `json:"mfa_method_ids"`
}

// NewMFAWriteLoginEnforcementRequestWithDefaults instantiates a new MFAWriteLoginEnforcementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMFAWriteLoginEnforcementRequestWithDefaults() *MFAWriteLoginEnforcementRequest {
	var this MFAWriteLoginEnforcementRequest

	return &this
}

func (o MFAWriteLoginEnforcementRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["auth_method_accessors"] = o.AuthMethodAccessors
	toSerialize["auth_method_types"] = o.AuthMethodTypes
	toSerialize["identity_entity_ids"] = o.IdentityEntityIds
	toSerialize["identity_group_ids"] = o.IdentityGroupIds
	toSerialize["mfa_method_ids"] = o.MfaMethodIds

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MongoDBAtlasWriteConfigRequest struct for MongoDBAtlasWriteConfigRequest
type MongoDBAtlasWriteConfigRequest struct {
	// MongoDB Atlas Programmatic Private Key
	PrivateKey string `json:"private_key"`
	// MongoDB Atlas Programmatic Public Key
	PublicKey string `json:"public_key"`
}

// NewMongoDBAtlasWriteConfigRequestWithDefaults instantiates a new MongoDBAtlasWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMongoDBAtlasWriteConfigRequestWithDefaults() *MongoDBAtlasWriteConfigRequest {
	var this MongoDBAtlasWriteConfigRequest

	return &this
}

func (o MongoDBAtlasWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["private_key"] = o.PrivateKey
	toSerialize["public_key"] = o.PublicKey

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// MongoDBAtlasWriteRoleRequest struct for MongoDBAtlasWriteRoleRequest
type MongoDBAtlasWriteRoleRequest struct {
	// Access list entry in CIDR notation to be added for the API key. Optional for organization and project keys.
	CidrBlocks []string `json:"cidr_blocks"`
	// IP address to be added to the access list for the API key. Optional for organization and project keys.
	IpAddresses []string `json:"ip_addresses"`
	// The maximum allowed lifetime of credentials issued using this role.
	MaxTtl int32 `json:"max_ttl"`
	// Organization ID required for an organization API key
	OrganizationId string `json:"organization_id"`
	// Project ID the project API key belongs to.
	ProjectId string `json:"project_id"`
	// Roles assigned when an organization API Key is assigned to a project API key
	ProjectRoles []string `json:"project_roles"`
	// List of roles that the API Key should be granted. A minimum of one role must be provided. Any roles provided must be valid for the assigned Project, required for organization and project keys.
	Roles []string `json:"roles"`
	// Duration in seconds after which the issued credential should expire. Defaults to 0, in which case the value will fallback to the system/mount defaults.
	Ttl int32 `json:"ttl"`
}

// NewMongoDBAtlasWriteRoleRequestWithDefaults instantiates a new MongoDBAtlasWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMongoDBAtlasWriteRoleRequestWithDefaults() *MongoDBAtlasWriteRoleRequest {
	var this MongoDBAtlasWriteRoleRequest

	return &this
}

func (o MongoDBAtlasWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["cidr_blocks"] = o.CidrBlocks
	toSerialize["ip_addresses"] = o.IpAddresses
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["organization_id"] = o.OrganizationId
	toSerialize["project_id"] = o.ProjectId
	toSerialize["project_roles"] = o.ProjectRoles
	toSerialize["roles"] = o.Roles
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// NomadWriteAccessConfigRequest struct for NomadWriteAccessConfigRequest
type NomadWriteAccessConfigRequest struct {
	// Nomad server address
	Address string `json:"address"`
	// CA certificate to use when verifying Nomad server certificate, must be x509 PEM encoded.
	CaCert string `json:"ca_cert"`
	// Client certificate used for Nomad's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_key.
	ClientCert string `json:"client_cert"`
	// Client key used for Nomad's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_cert.
	ClientKey string `json:"client_key"`
	// Max length for name of generated Nomad tokens
	MaxTokenNameLength int32 `json:"max_token_name_length"`
	// Token for API calls
	Token string `json:"token"`
}

// NewNomadWriteAccessConfigRequestWithDefaults instantiates a new NomadWriteAccessConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNomadWriteAccessConfigRequestWithDefaults() *NomadWriteAccessConfigRequest {
	var this NomadWriteAccessConfigRequest

	return &this
}

func (o NomadWriteAccessConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["address"] = o.Address
	toSerialize["ca_cert"] = o.CaCert
	toSerialize["client_cert"] = o.ClientCert
	toSerialize["client_key"] = o.ClientKey
	toSerialize["max_token_name_length"] = o.MaxTokenNameLength
	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// NomadWriteLeaseConfigRequest struct for NomadWriteLeaseConfigRequest
type NomadWriteLeaseConfigRequest struct {
	// Duration after which the issued token should not be allowed to be renewed
	MaxTtl int32 `json:"max_ttl"`
	// Duration before which the issued token needs renewal
	Ttl int32 `json:"ttl"`
}

// NewNomadWriteLeaseConfigRequestWithDefaults instantiates a new NomadWriteLeaseConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNomadWriteLeaseConfigRequestWithDefaults() *NomadWriteLeaseConfigRequest {
	var this NomadWriteLeaseConfigRequest

	return &this
}

func (o NomadWriteLeaseConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// NomadWriteRoleRequest struct for NomadWriteRoleRequest
type NomadWriteRoleRequest struct {
	// Boolean value describing if the token should be global or not. Defaults to false.
	Global bool `json:"global"`
	// Comma-separated string or list of policies as previously created in Nomad. Required for 'client' token.
	Policies []string `json:"policies"`
	// Which type of token to create: 'client' or 'management'. If a 'management' token, the \"policies\" parameter is not required. Defaults to 'client'.
	Type string `json:"type"`
}

// NewNomadWriteRoleRequestWithDefaults instantiates a new NomadWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNomadWriteRoleRequestWithDefaults() *NomadWriteRoleRequest {
	var this NomadWriteRoleRequest

	this.Type = "client"

	return &this
}

func (o NomadWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["global"] = o.Global
	toSerialize["policies"] = o.Policies
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OCILoginWithRoleRequest struct for OCILoginWithRoleRequest
type OCILoginWithRoleRequest struct {
	// The signed headers of the client
	RequestHeaders string `json:"request_headers"`
}

// NewOCILoginWithRoleRequestWithDefaults instantiates a new OCILoginWithRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOCILoginWithRoleRequestWithDefaults() *OCILoginWithRoleRequest {
	var this OCILoginWithRoleRequest

	return &this
}

func (o OCILoginWithRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["request_headers"] = o.RequestHeaders

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OCIWriteConfigRequest struct for OCIWriteConfigRequest
type OCIWriteConfigRequest struct {
	// The tenancy id of the account.
	HomeTenancyId string `json:"home_tenancy_id"`
}

// NewOCIWriteConfigRequestWithDefaults instantiates a new OCIWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOCIWriteConfigRequestWithDefaults() *OCIWriteConfigRequest {
	var this OCIWriteConfigRequest

	return &this
}

func (o OCIWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["home_tenancy_id"] = o.HomeTenancyId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OCIWriteRoleRequest struct for OCIWriteRoleRequest
type OCIWriteRoleRequest struct {
	// A comma separated list of Group or Dynamic Group OCIDs that are allowed to take this role.
	OcidList []string `json:"ocid_list"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
}

// NewOCIWriteRoleRequestWithDefaults instantiates a new OCIWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOCIWriteRoleRequestWithDefaults() *OCIWriteRoleRequest {
	var this OCIWriteRoleRequest

	this.TokenType = "default-service"

	return &this
}

func (o OCIWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["ocid_list"] = o.OcidList
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCIntrospectRequest struct for OIDCIntrospectRequest
type OIDCIntrospectRequest struct {
	// Optional client_id to verify
	ClientId string `json:"client_id"`
	// Token to verify
	Token string `json:"token"`
}

// NewOIDCIntrospectRequestWithDefaults instantiates a new OIDCIntrospectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCIntrospectRequestWithDefaults() *OIDCIntrospectRequest {
	var this OIDCIntrospectRequest

	return &this
}

func (o OIDCIntrospectRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["client_id"] = o.ClientId
	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCLoginRequest struct for OIDCLoginRequest
type OIDCLoginRequest struct {
	// The signed JWT to validate.
	Jwt string `json:"jwt"`
	// The role to log in against.
	Role string `json:"role"`
}

// NewOIDCLoginRequestWithDefaults instantiates a new OIDCLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCLoginRequestWithDefaults() *OIDCLoginRequest {
	var this OIDCLoginRequest

	return &this
}

func (o OIDCLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["jwt"] = o.Jwt
	toSerialize["role"] = o.Role

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCRotateKeyRequest struct for OIDCRotateKeyRequest
type OIDCRotateKeyRequest struct {
	// Controls how long the public portion of a key will be available for verification after being rotated. Setting verification_ttl here will override the verification_ttl set on the key.
	VerificationTtl int32 `json:"verification_ttl"`
}

// NewOIDCRotateKeyRequestWithDefaults instantiates a new OIDCRotateKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCRotateKeyRequestWithDefaults() *OIDCRotateKeyRequest {
	var this OIDCRotateKeyRequest

	return &this
}

func (o OIDCRotateKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["verification_ttl"] = o.VerificationTtl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteAssignmentRequest struct for OIDCWriteAssignmentRequest
type OIDCWriteAssignmentRequest struct {
	// Comma separated string or array of identity entity IDs
	EntityIds []string `json:"entity_ids"`
	// Comma separated string or array of identity group IDs
	GroupIds []string `json:"group_ids"`
}

// NewOIDCWriteAssignmentRequestWithDefaults instantiates a new OIDCWriteAssignmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteAssignmentRequestWithDefaults() *OIDCWriteAssignmentRequest {
	var this OIDCWriteAssignmentRequest

	return &this
}

func (o OIDCWriteAssignmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["entity_ids"] = o.EntityIds
	toSerialize["group_ids"] = o.GroupIds

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteAuthConfigRequest struct for OIDCWriteAuthConfigRequest
type OIDCWriteAuthConfigRequest struct {
	// The value against which to match the 'iss' claim in a JWT. Optional.
	BoundIssuer string `json:"bound_issuer"`
	// The default role to use if none is provided during login. If not set, a role is required during login.
	DefaultRole string `json:"default_role"`
	// The CA certificate or chain of certificates, in PEM format, to use to validate connections to the JWKS URL. If not set, system certificates are used.
	JwksCaPem string `json:"jwks_ca_pem"`
	// JWKS URL to use to authenticate signatures. Cannot be used with \"oidc_discovery_url\" or \"jwt_validation_pubkeys\".
	JwksUrl string `json:"jwks_url"`
	// A list of supported signing algorithms. Defaults to RS256.
	JwtSupportedAlgs []string `json:"jwt_supported_algs"`
	// A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used with \"jwks_url\" or \"oidc_discovery_url\".
	JwtValidationPubkeys []string `json:"jwt_validation_pubkeys"`
	// Pass namespace in the OIDC state parameter instead of as a separate query parameter. With this setting, the allowed redirect URL(s) in Vault and on the provider side should not contain a namespace query parameter. This means only one redirect URL entry needs to be maintained on the provider side for all vault namespaces that will be authenticating against it. Defaults to true for new configs.
	NamespaceInState bool `json:"namespace_in_state"`
	// The OAuth Client ID configured with your OIDC provider.
	OidcClientId string `json:"oidc_client_id"`
	// The OAuth Client Secret configured with your OIDC provider.
	OidcClientSecret string `json:"oidc_client_secret"`
	// The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used.
	OidcDiscoveryCaPem string `json:"oidc_discovery_ca_pem"`
	// OIDC Discovery URL, without any .well-known component (base path). Cannot be used with \"jwks_url\" or \"jwt_validation_pubkeys\".
	OidcDiscoveryUrl string `json:"oidc_discovery_url"`
	// The response mode to be used in the OAuth2 request. Allowed values are 'query' and 'form_post'.
	OidcResponseMode string `json:"oidc_response_mode"`
	// The response types to request. Allowed values are 'code' and 'id_token'. Defaults to 'code'.
	OidcResponseTypes []string `json:"oidc_response_types"`
	// Provider-specific configuration. Optional.
	ProviderConfig map[string]interface{} `json:"provider_config"`
}

// NewOIDCWriteAuthConfigRequestWithDefaults instantiates a new OIDCWriteAuthConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteAuthConfigRequestWithDefaults() *OIDCWriteAuthConfigRequest {
	var this OIDCWriteAuthConfigRequest

	return &this
}

func (o OIDCWriteAuthConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bound_issuer"] = o.BoundIssuer
	toSerialize["default_role"] = o.DefaultRole
	toSerialize["jwks_ca_pem"] = o.JwksCaPem
	toSerialize["jwks_url"] = o.JwksUrl
	toSerialize["jwt_supported_algs"] = o.JwtSupportedAlgs
	toSerialize["jwt_validation_pubkeys"] = o.JwtValidationPubkeys
	toSerialize["namespace_in_state"] = o.NamespaceInState
	toSerialize["oidc_client_id"] = o.OidcClientId
	toSerialize["oidc_client_secret"] = o.OidcClientSecret
	toSerialize["oidc_discovery_ca_pem"] = o.OidcDiscoveryCaPem
	toSerialize["oidc_discovery_url"] = o.OidcDiscoveryUrl
	toSerialize["oidc_response_mode"] = o.OidcResponseMode
	toSerialize["oidc_response_types"] = o.OidcResponseTypes
	toSerialize["provider_config"] = o.ProviderConfig

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteAuthRoleRequest struct for OIDCWriteAuthRoleRequest
type OIDCWriteAuthRoleRequest struct {
	// Comma-separated list of allowed values for redirect_uri
	AllowedRedirectUris []string `json:"allowed_redirect_uris"`
	// Comma-separated list of 'aud' claims that are valid for login; any match is sufficient
	BoundAudiences []string `json:"bound_audiences"`
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs"`
	// Map of claims/values which must match for login
	BoundClaims map[string]interface{} `json:"bound_claims"`
	// How to interpret values in the map of claims/values (which must match for login): allowed values are 'string' or 'glob'
	BoundClaimsType string `json:"bound_claims_type"`
	// The 'sub' claim that is valid for login. Optional.
	BoundSubject string `json:"bound_subject"`
	// Mappings of claims (key) that will be copied to a metadata field (value)
	ClaimMappings map[string]interface{} `json:"claim_mappings"`
	// Duration in seconds of leeway when validating all claims to account for clock skew. Defaults to 60 (1 minute) if set to 0 and can be disabled if set to -1.
	ClockSkewLeeway int32 `json:"clock_skew_leeway"`
	// Duration in seconds of leeway when validating expiration of a token to account for clock skew. Defaults to 150 (2.5 minutes) if set to 0 and can be disabled if set to -1.
	ExpirationLeeway int32 `json:"expiration_leeway"`
	// The claim to use for the Identity group alias names
	GroupsClaim string `json:"groups_claim"`
	// Specifies the allowable elapsed time in seconds since the last time the user was actively authenticated.
	MaxAge int32 `json:"max_age"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl int32 `json:"max_ttl"`
	// Duration in seconds of leeway when validating not before values of a token to account for clock skew. Defaults to 150 (2.5 minutes) if set to 0 and can be disabled if set to -1.
	NotBeforeLeeway int32 `json:"not_before_leeway"`
	// Use \"token_num_uses\" instead. If this and \"token_num_uses\" are both specified, only \"token_num_uses\" will be used.
	// Deprecated
	NumUses int32 `json:"num_uses"`
	// Comma-separated list of OIDC scopes
	OidcScopes []string `json:"oidc_scopes"`
	// Use \"token_period\" instead. If this and \"token_period\" are both specified, only \"token_period\" will be used.
	// Deprecated
	Period int32 `json:"period"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Type of the role, either 'jwt' or 'oidc'.
	RoleType string `json:"role_type"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl int32 `json:"ttl"`
	// The claim to use for the Identity entity alias name
	UserClaim string `json:"user_claim"`
	// If true, the user_claim value will use JSON pointer syntax for referencing claims.
	UserClaimJsonPointer bool `json:"user_claim_json_pointer"`
	// Log received OIDC tokens and claims when debug-level logging is active. Not recommended in production since sensitive information may be present in OIDC responses.
	VerboseOidcLogging bool `json:"verbose_oidc_logging"`
}

// NewOIDCWriteAuthRoleRequestWithDefaults instantiates a new OIDCWriteAuthRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteAuthRoleRequestWithDefaults() *OIDCWriteAuthRoleRequest {
	var this OIDCWriteAuthRoleRequest

	this.BoundClaimsType = "string"
	this.ExpirationLeeway = 150
	this.NotBeforeLeeway = 150
	this.TokenType = "default-service"

	return &this
}

func (o OIDCWriteAuthRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allowed_redirect_uris"] = o.AllowedRedirectUris
	toSerialize["bound_audiences"] = o.BoundAudiences
	toSerialize["bound_cidrs"] = o.BoundCidrs
	toSerialize["bound_claims"] = o.BoundClaims
	toSerialize["bound_claims_type"] = o.BoundClaimsType
	toSerialize["bound_subject"] = o.BoundSubject
	toSerialize["claim_mappings"] = o.ClaimMappings
	toSerialize["clock_skew_leeway"] = o.ClockSkewLeeway
	toSerialize["expiration_leeway"] = o.ExpirationLeeway
	toSerialize["groups_claim"] = o.GroupsClaim
	toSerialize["max_age"] = o.MaxAge
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["not_before_leeway"] = o.NotBeforeLeeway
	toSerialize["num_uses"] = o.NumUses
	toSerialize["oidc_scopes"] = o.OidcScopes
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["role_type"] = o.RoleType
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl
	toSerialize["user_claim"] = o.UserClaim
	toSerialize["user_claim_json_pointer"] = o.UserClaimJsonPointer
	toSerialize["verbose_oidc_logging"] = o.VerboseOidcLogging

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteAuthURLRequest struct for OIDCWriteAuthURLRequest
type OIDCWriteAuthURLRequest struct {
	// Optional client-provided nonce that must match during callback, if present.
	ClientNonce string `json:"client_nonce"`
	// The OAuth redirect_uri to use in the authorization URL.
	RedirectUri string `json:"redirect_uri"`
	// The role to issue an OIDC authorization URL against.
	Role string `json:"role"`
}

// NewOIDCWriteAuthURLRequestWithDefaults instantiates a new OIDCWriteAuthURLRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteAuthURLRequestWithDefaults() *OIDCWriteAuthURLRequest {
	var this OIDCWriteAuthURLRequest

	return &this
}

func (o OIDCWriteAuthURLRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["client_nonce"] = o.ClientNonce
	toSerialize["redirect_uri"] = o.RedirectUri
	toSerialize["role"] = o.Role

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteCallbackRequest struct for OIDCWriteCallbackRequest
type OIDCWriteCallbackRequest struct {
	ClientNonce string `json:"client_nonce"`
	Code        string `json:"code"`
	IdToken     string `json:"id_token"`
	State       string `json:"state"`
}

// NewOIDCWriteCallbackRequestWithDefaults instantiates a new OIDCWriteCallbackRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteCallbackRequestWithDefaults() *OIDCWriteCallbackRequest {
	var this OIDCWriteCallbackRequest

	return &this
}

func (o OIDCWriteCallbackRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["client_nonce"] = o.ClientNonce
	toSerialize["code"] = o.Code
	toSerialize["id_token"] = o.IdToken
	toSerialize["state"] = o.State

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteClientRequest struct for OIDCWriteClientRequest
type OIDCWriteClientRequest struct {
	// The time-to-live for access tokens obtained by the client.
	AccessTokenTtl int32 `json:"access_token_ttl"`
	// Comma separated string or array of assignment resources.
	Assignments []string `json:"assignments"`
	// The client type based on its ability to maintain confidentiality of credentials. The following client types are supported: 'confidential', 'public'. Defaults to 'confidential'.
	ClientType string `json:"client_type"`
	// The time-to-live for ID tokens obtained by the client.
	IdTokenTtl int32 `json:"id_token_ttl"`
	// A reference to a named key resource. Cannot be modified after creation. Defaults to the 'default' key.
	Key string `json:"key"`
	// Comma separated string or array of redirect URIs used by the client. One of these values must exactly match the redirect_uri parameter value used in each authentication request.
	RedirectUris []string `json:"redirect_uris"`
}

// NewOIDCWriteClientRequestWithDefaults instantiates a new OIDCWriteClientRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteClientRequestWithDefaults() *OIDCWriteClientRequest {
	var this OIDCWriteClientRequest

	this.ClientType = "confidential"
	this.Key = "default"

	return &this
}

func (o OIDCWriteClientRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["access_token_ttl"] = o.AccessTokenTtl
	toSerialize["assignments"] = o.Assignments
	toSerialize["client_type"] = o.ClientType
	toSerialize["id_token_ttl"] = o.IdTokenTtl
	toSerialize["key"] = o.Key
	toSerialize["redirect_uris"] = o.RedirectUris

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteConfigRequest struct for OIDCWriteConfigRequest
type OIDCWriteConfigRequest struct {
	// Issuer URL to be used in the iss claim of the token. If not set, Vault's app_addr will be used.
	Issuer string `json:"issuer"`
}

// NewOIDCWriteConfigRequestWithDefaults instantiates a new OIDCWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteConfigRequestWithDefaults() *OIDCWriteConfigRequest {
	var this OIDCWriteConfigRequest

	return &this
}

func (o OIDCWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["issuer"] = o.Issuer

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteKeyRequest struct for OIDCWriteKeyRequest
type OIDCWriteKeyRequest struct {
	// Signing algorithm to use. This will default to RS256.
	Algorithm string `json:"algorithm"`
	// Comma separated string or array of role client ids allowed to use this key for signing. If empty no roles are allowed. If \"*\" all roles are allowed.
	AllowedClientIds []string `json:"allowed_client_ids"`
	// How often to generate a new keypair.
	RotationPeriod int32 `json:"rotation_period"`
	// Controls how long the public portion of a key will be available for verification after being rotated.
	VerificationTtl int32 `json:"verification_ttl"`
}

// NewOIDCWriteKeyRequestWithDefaults instantiates a new OIDCWriteKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteKeyRequestWithDefaults() *OIDCWriteKeyRequest {
	var this OIDCWriteKeyRequest

	this.Algorithm = "RS256"

	return &this
}

func (o OIDCWriteKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["allowed_client_ids"] = o.AllowedClientIds
	toSerialize["rotation_period"] = o.RotationPeriod
	toSerialize["verification_ttl"] = o.VerificationTtl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteProviderAuthorizeRequest struct for OIDCWriteProviderAuthorizeRequest
type OIDCWriteProviderAuthorizeRequest struct {
	// The ID of the requesting client.
	ClientId string `json:"client_id"`
	// The code challenge derived from the code verifier.
	CodeChallenge string `json:"code_challenge"`
	// The method that was used to derive the code challenge. The following methods are supported: 'S256', 'plain'. Defaults to 'plain'.
	CodeChallengeMethod string `json:"code_challenge_method"`
	// The allowable elapsed time in seconds since the last time the end-user was actively authenticated.
	MaxAge int32 `json:"max_age"`
	// The value that will be returned in the ID token nonce claim after a token exchange.
	Nonce string `json:"nonce"`
	// The redirection URI to which the response will be sent.
	RedirectUri string `json:"redirect_uri"`
	// The OIDC authentication flow to be used. The following response types are supported: 'code'
	ResponseType string `json:"response_type"`
	// A space-delimited, case-sensitive list of scopes to be requested. The 'openid' scope is required.
	Scope string `json:"scope"`
	// The value used to maintain state between the authentication request and client.
	State string `json:"state"`
}

// NewOIDCWriteProviderAuthorizeRequestWithDefaults instantiates a new OIDCWriteProviderAuthorizeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteProviderAuthorizeRequestWithDefaults() *OIDCWriteProviderAuthorizeRequest {
	var this OIDCWriteProviderAuthorizeRequest

	this.CodeChallengeMethod = "plain"

	return &this
}

func (o OIDCWriteProviderAuthorizeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["client_id"] = o.ClientId
	toSerialize["code_challenge"] = o.CodeChallenge
	toSerialize["code_challenge_method"] = o.CodeChallengeMethod
	toSerialize["max_age"] = o.MaxAge
	toSerialize["nonce"] = o.Nonce
	toSerialize["redirect_uri"] = o.RedirectUri
	toSerialize["response_type"] = o.ResponseType
	toSerialize["scope"] = o.Scope
	toSerialize["state"] = o.State

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteProviderRequest struct for OIDCWriteProviderRequest
type OIDCWriteProviderRequest struct {
	// The client IDs that are permitted to use the provider
	AllowedClientIds []string `json:"allowed_client_ids"`
	// Specifies what will be used for the iss claim of ID tokens.
	Issuer string `json:"issuer"`
	// The scopes supported for requesting on the provider
	ScopesSupported []string `json:"scopes_supported"`
}

// NewOIDCWriteProviderRequestWithDefaults instantiates a new OIDCWriteProviderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteProviderRequestWithDefaults() *OIDCWriteProviderRequest {
	var this OIDCWriteProviderRequest

	return &this
}

func (o OIDCWriteProviderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allowed_client_ids"] = o.AllowedClientIds
	toSerialize["issuer"] = o.Issuer
	toSerialize["scopes_supported"] = o.ScopesSupported

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteProviderTokenRequest struct for OIDCWriteProviderTokenRequest
type OIDCWriteProviderTokenRequest struct {
	// The ID of the requesting client.
	ClientId string `json:"client_id"`
	// The secret of the requesting client.
	ClientSecret string `json:"client_secret"`
	// The authorization code received from the provider's authorization endpoint.
	Code string `json:"code"`
	// The code verifier associated with the authorization code.
	CodeVerifier string `json:"code_verifier"`
	// The authorization grant type. The following grant types are supported: 'authorization_code'.
	GrantType string `json:"grant_type"`
	// The callback location where the authentication response was sent.
	RedirectUri string `json:"redirect_uri"`
}

// NewOIDCWriteProviderTokenRequestWithDefaults instantiates a new OIDCWriteProviderTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteProviderTokenRequestWithDefaults() *OIDCWriteProviderTokenRequest {
	var this OIDCWriteProviderTokenRequest

	return &this
}

func (o OIDCWriteProviderTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["client_id"] = o.ClientId
	toSerialize["client_secret"] = o.ClientSecret
	toSerialize["code"] = o.Code
	toSerialize["code_verifier"] = o.CodeVerifier
	toSerialize["grant_type"] = o.GrantType
	toSerialize["redirect_uri"] = o.RedirectUri

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteRoleRequest struct for OIDCWriteRoleRequest
type OIDCWriteRoleRequest struct {
	// Optional client_id
	ClientId string `json:"client_id"`
	// The OIDC key to use for generating tokens. The specified key must already exist.
	Key string `json:"key"`
	// The template string to use for generating tokens. This may be in string-ified JSON or base64 format.
	Template string `json:"template"`
	// TTL of the tokens generated against the role.
	Ttl int32 `json:"ttl"`
}

// NewOIDCWriteRoleRequestWithDefaults instantiates a new OIDCWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteRoleRequestWithDefaults() *OIDCWriteRoleRequest {
	var this OIDCWriteRoleRequest

	return &this
}

func (o OIDCWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["client_id"] = o.ClientId
	toSerialize["key"] = o.Key
	toSerialize["template"] = o.Template
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OIDCWriteScopeRequest struct for OIDCWriteScopeRequest
type OIDCWriteScopeRequest struct {
	// The description of the scope
	Description string `json:"description"`
	// The template string to use for the scope. This may be in string-ified JSON or base64 format.
	Template string `json:"template"`
}

// NewOIDCWriteScopeRequestWithDefaults instantiates a new OIDCWriteScopeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCWriteScopeRequestWithDefaults() *OIDCWriteScopeRequest {
	var this OIDCWriteScopeRequest

	return &this
}

func (o OIDCWriteScopeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["description"] = o.Description
	toSerialize["template"] = o.Template

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OktaLoginRequest struct for OktaLoginRequest
type OktaLoginRequest struct {
	// Nonce provided if performing login that requires number verification challenge. Logins through the vault login CLI command will automatically generate a nonce.
	Nonce string `json:"nonce"`
	// Password for this user.
	Password string `json:"password"`
	// Preferred factor provider.
	Provider string `json:"provider"`
	// TOTP passcode.
	Totp string `json:"totp"`
}

// NewOktaLoginRequestWithDefaults instantiates a new OktaLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOktaLoginRequestWithDefaults() *OktaLoginRequest {
	var this OktaLoginRequest

	return &this
}

func (o OktaLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["nonce"] = o.Nonce
	toSerialize["password"] = o.Password
	toSerialize["provider"] = o.Provider
	toSerialize["totp"] = o.Totp

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OktaWriteConfigRequest struct for OktaWriteConfigRequest
type OktaWriteConfigRequest struct {
	// Okta API key.
	ApiToken string `json:"api_token"`
	// The base domain to use for the Okta API. When not specified in the configuration, \"okta.com\" is used.
	BaseUrl string `json:"base_url"`
	// When set true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired.
	BypassOktaMfa bool `json:"bypass_okta_mfa"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl int32 `json:"max_ttl"`
	// Name of the organization to be used in the Okta API.
	OrgName string `json:"org_name"`
	// Use org_name instead.
	// Deprecated
	Organization string `json:"organization"`
	// Use base_url instead.
	// Deprecated
	Production bool `json:"production"`
	// Use api_token instead.
	// Deprecated
	Token string `json:"token"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies. This will apply to all tokens generated by this auth method, in addition to any configured for specific users/groups.
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl int32 `json:"ttl"`
}

// NewOktaWriteConfigRequestWithDefaults instantiates a new OktaWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOktaWriteConfigRequestWithDefaults() *OktaWriteConfigRequest {
	var this OktaWriteConfigRequest

	this.TokenType = "default-service"

	return &this
}

func (o OktaWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["api_token"] = o.ApiToken
	toSerialize["base_url"] = o.BaseUrl
	toSerialize["bypass_okta_mfa"] = o.BypassOktaMfa
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["org_name"] = o.OrgName
	toSerialize["organization"] = o.Organization
	toSerialize["production"] = o.Production
	toSerialize["token"] = o.Token
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OktaWriteGroupRequest struct for OktaWriteGroupRequest
type OktaWriteGroupRequest struct {
	// Comma-separated list of policies associated to the group.
	Policies []string `json:"policies"`
}

// NewOktaWriteGroupRequestWithDefaults instantiates a new OktaWriteGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOktaWriteGroupRequestWithDefaults() *OktaWriteGroupRequest {
	var this OktaWriteGroupRequest

	return &this
}

func (o OktaWriteGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["policies"] = o.Policies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OktaWriteUserRequest struct for OktaWriteUserRequest
type OktaWriteUserRequest struct {
	// List of groups associated with the user.
	Groups []string `json:"groups"`
	// List of policies associated with the user.
	Policies []string `json:"policies"`
}

// NewOktaWriteUserRequestWithDefaults instantiates a new OktaWriteUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOktaWriteUserRequestWithDefaults() *OktaWriteUserRequest {
	var this OktaWriteUserRequest

	return &this
}

func (o OktaWriteUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["groups"] = o.Groups
	toSerialize["policies"] = o.Policies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OpenLDAPCheckInLibraryRequest struct for OpenLDAPCheckInLibraryRequest
type OpenLDAPCheckInLibraryRequest struct {
	// The username/logon name for the service accounts to check in.
	ServiceAccountNames []string `json:"service_account_names"`
}

// NewOpenLDAPCheckInLibraryRequestWithDefaults instantiates a new OpenLDAPCheckInLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenLDAPCheckInLibraryRequestWithDefaults() *OpenLDAPCheckInLibraryRequest {
	var this OpenLDAPCheckInLibraryRequest

	return &this
}

func (o OpenLDAPCheckInLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["service_account_names"] = o.ServiceAccountNames

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OpenLDAPCheckInManageLibraryRequest struct for OpenLDAPCheckInManageLibraryRequest
type OpenLDAPCheckInManageLibraryRequest struct {
	// The username/logon name for the service accounts to check in.
	ServiceAccountNames []string `json:"service_account_names"`
}

// NewOpenLDAPCheckInManageLibraryRequestWithDefaults instantiates a new OpenLDAPCheckInManageLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenLDAPCheckInManageLibraryRequestWithDefaults() *OpenLDAPCheckInManageLibraryRequest {
	var this OpenLDAPCheckInManageLibraryRequest

	return &this
}

func (o OpenLDAPCheckInManageLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["service_account_names"] = o.ServiceAccountNames

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OpenLDAPCheckOutLibraryRequest struct for OpenLDAPCheckOutLibraryRequest
type OpenLDAPCheckOutLibraryRequest struct {
	// The length of time before the check-out will expire, in seconds.
	Ttl int32 `json:"ttl"`
}

// NewOpenLDAPCheckOutLibraryRequestWithDefaults instantiates a new OpenLDAPCheckOutLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenLDAPCheckOutLibraryRequestWithDefaults() *OpenLDAPCheckOutLibraryRequest {
	var this OpenLDAPCheckOutLibraryRequest

	return &this
}

func (o OpenLDAPCheckOutLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OpenLDAPWriteConfigRequest struct for OpenLDAPWriteConfigRequest
type OpenLDAPWriteConfigRequest struct {
	// Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).
	AnonymousGroupSearch bool `json:"anonymous_group_search"`
	// LDAP DN for searching for the user DN (optional)
	Binddn string `json:"binddn"`
	// LDAP password for searching for the user DN (optional)
	Bindpass string `json:"bindpass"`
	// If true, case sensitivity will be used when comparing usernames and groups for matching policies.
	CaseSensitiveNames bool `json:"case_sensitive_names"`
	// CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded (optional)
	Certificate string `json:"certificate"`
	// Client certificate to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsCert string `json:"client_tls_cert"`
	// Client certificate key to provide to the LDAP server, must be x509 PEM encoded (optional)
	ClientTlsKey string `json:"client_tls_key"`
	// Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true
	DenyNullBind bool `json:"deny_null_bind"`
	// Use anonymous bind to discover the bind DN of a user (optional)
	Discoverdn bool `json:"discoverdn"`
	// LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: \"cn\" or \"memberOf\", etc. Default: cn
	Groupattr string `json:"groupattr"`
	// LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)
	Groupdn string `json:"groupdn"`
	// Go template for querying group membership of user (optional) The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
	Groupfilter string `json:"groupfilter"`
	// Skip LDAP server SSL Certificate verification - VERY insecure (optional)
	InsecureTls bool `json:"insecure_tls"`
	// The desired length of passwords that Vault generates.
	// Deprecated
	Length int32 `json:"length"`
	// The maximum password time-to-live.
	MaxTtl int32 `json:"max_ttl"`
	// Password policy to use to generate passwords
	PasswordPolicy string `json:"password_policy"`
	// Timeout, in seconds, for the connection when making requests against the server before returning back an error.
	RequestTimeout int32 `json:"request_timeout"`
	// The desired LDAP schema used when modifying user account passwords.
	Schema string `json:"schema"`
	// Issue a StartTLS command after establishing unencrypted connection (optional)
	Starttls bool `json:"starttls"`
	// Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMaxVersion string `json:"tls_max_version"`
	// Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
	TlsMinVersion string `json:"tls_min_version"`
	// The default password time-to-live.
	Ttl int32 `json:"ttl"`
	// Enables userPrincipalDomain login with [username]@UPNDomain (optional)
	Upndomain string `json:"upndomain"`
	// LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.
	Url string `json:"url"`
	// In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.
	UsePre111GroupCnBehavior bool `json:"use_pre111_group_cn_behavior"`
	// If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.
	UseTokenGroups bool `json:"use_token_groups"`
	// Attribute used for users (default: cn)
	Userattr string `json:"userattr"`
	// LDAP domain to use for users (eg: ou=People,dc=example,dc=org)
	Userdn string `json:"userdn"`
	// Go template for LDAP user search filer (optional) The template can access the following context variables: UserAttr, Username Default: ({{.UserAttr}}={{.Username}})
	Userfilter string `json:"userfilter"`
	// If true, sets the alias name to the username
	UsernameAsAlias bool `json:"username_as_alias"`
}

// NewOpenLDAPWriteConfigRequestWithDefaults instantiates a new OpenLDAPWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenLDAPWriteConfigRequestWithDefaults() *OpenLDAPWriteConfigRequest {
	var this OpenLDAPWriteConfigRequest

	this.AnonymousGroupSearch = false
	this.DenyNullBind = true
	this.Groupattr = "cn"
	this.Groupfilter = "(|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))"
	this.Schema = "openldap"
	this.TlsMaxVersion = "tls12"
	this.TlsMinVersion = "tls12"
	this.Url = "ldap://127.0.0.1"
	this.UseTokenGroups = false
	this.Userattr = "cn"
	this.Userfilter = "({{.UserAttr}}={{.Username}})"
	this.UsernameAsAlias = false

	return &this
}

func (o OpenLDAPWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["anonymous_group_search"] = o.AnonymousGroupSearch
	toSerialize["binddn"] = o.Binddn
	toSerialize["bindpass"] = o.Bindpass
	toSerialize["case_sensitive_names"] = o.CaseSensitiveNames
	toSerialize["certificate"] = o.Certificate
	toSerialize["client_tls_cert"] = o.ClientTlsCert
	toSerialize["client_tls_key"] = o.ClientTlsKey
	toSerialize["deny_null_bind"] = o.DenyNullBind
	toSerialize["discoverdn"] = o.Discoverdn
	toSerialize["groupattr"] = o.Groupattr
	toSerialize["groupdn"] = o.Groupdn
	toSerialize["groupfilter"] = o.Groupfilter
	toSerialize["insecure_tls"] = o.InsecureTls
	toSerialize["length"] = o.Length
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["password_policy"] = o.PasswordPolicy
	toSerialize["request_timeout"] = o.RequestTimeout
	toSerialize["schema"] = o.Schema
	toSerialize["starttls"] = o.Starttls
	toSerialize["tls_max_version"] = o.TlsMaxVersion
	toSerialize["tls_min_version"] = o.TlsMinVersion
	toSerialize["ttl"] = o.Ttl
	toSerialize["upndomain"] = o.Upndomain
	toSerialize["url"] = o.Url
	toSerialize["use_pre111_group_cn_behavior"] = o.UsePre111GroupCnBehavior
	toSerialize["use_token_groups"] = o.UseTokenGroups
	toSerialize["userattr"] = o.Userattr
	toSerialize["userdn"] = o.Userdn
	toSerialize["userfilter"] = o.Userfilter
	toSerialize["username_as_alias"] = o.UsernameAsAlias

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OpenLDAPWriteLibraryRequest struct for OpenLDAPWriteLibraryRequest
type OpenLDAPWriteLibraryRequest struct {
	// Disable the default behavior of requiring that check-ins are performed by the entity that checked them out.
	DisableCheckInEnforcement bool `json:"disable_check_in_enforcement"`
	// In seconds, the max amount of time a check-out's renewals should last. Defaults to 24 hours.
	MaxTtl int32 `json:"max_ttl"`
	// The username/logon name for the service accounts with which this set will be associated.
	ServiceAccountNames []string `json:"service_account_names"`
	// In seconds, the amount of time a check-out should last. Defaults to 24 hours.
	Ttl int32 `json:"ttl"`
}

// NewOpenLDAPWriteLibraryRequestWithDefaults instantiates a new OpenLDAPWriteLibraryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenLDAPWriteLibraryRequestWithDefaults() *OpenLDAPWriteLibraryRequest {
	var this OpenLDAPWriteLibraryRequest

	this.DisableCheckInEnforcement = false
	this.MaxTtl = 86400
	this.Ttl = 86400

	return &this
}

func (o OpenLDAPWriteLibraryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disable_check_in_enforcement"] = o.DisableCheckInEnforcement
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["service_account_names"] = o.ServiceAccountNames
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OpenLDAPWriteRoleRequest struct for OpenLDAPWriteRoleRequest
type OpenLDAPWriteRoleRequest struct {
	// LDIF string used to create new entities within the LDAP system. This LDIF can be templated.
	CreationLdif string `json:"creation_ldif"`
	// Default TTL for dynamic credentials
	DefaultTtl int32 `json:"default_ttl"`
	// LDIF string used to delete entities created within the LDAP system. This LDIF can be templated.
	DeletionLdif string `json:"deletion_ldif"`
	// Max TTL a dynamic credential can be extended to
	MaxTtl int32 `json:"max_ttl"`
	// LDIF string used to rollback changes in the event of a failure to create credentials. This LDIF can be templated.
	RollbackLdif string `json:"rollback_ldif"`
	// The template used to create a username
	UsernameTemplate string `json:"username_template"`
}

// NewOpenLDAPWriteRoleRequestWithDefaults instantiates a new OpenLDAPWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenLDAPWriteRoleRequestWithDefaults() *OpenLDAPWriteRoleRequest {
	var this OpenLDAPWriteRoleRequest

	return &this
}

func (o OpenLDAPWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["creation_ldif"] = o.CreationLdif
	toSerialize["default_ttl"] = o.DefaultTtl
	toSerialize["deletion_ldif"] = o.DeletionLdif
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["rollback_ldif"] = o.RollbackLdif
	toSerialize["username_template"] = o.UsernameTemplate

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// OpenLDAPWriteStaticRoleRequest struct for OpenLDAPWriteStaticRoleRequest
type OpenLDAPWriteStaticRoleRequest struct {
	// The distinguished name of the entry to manage.
	Dn string `json:"dn"`
	// Period for automatic credential rotation of the given entry.
	RotationPeriod int32 `json:"rotation_period"`
	// The username/logon name for the entry with which this role will be associated.
	Username string `json:"username"`
}

// NewOpenLDAPWriteStaticRoleRequestWithDefaults instantiates a new OpenLDAPWriteStaticRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenLDAPWriteStaticRoleRequestWithDefaults() *OpenLDAPWriteStaticRoleRequest {
	var this OpenLDAPWriteStaticRoleRequest

	return &this
}

func (o OpenLDAPWriteStaticRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["dn"] = o.Dn
	toSerialize["rotation_period"] = o.RotationPeriod
	toSerialize["username"] = o.Username

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PersonaIDWriteByIDRequest struct for PersonaIDWriteByIDRequest
type PersonaIDWriteByIDRequest struct {
	// Entity ID to which this persona should be tied to
	EntityId string `json:"entity_id"`
	// Metadata to be associated with the persona. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata"`
	// Mount accessor to which this persona belongs to
	MountAccessor string `json:"mount_accessor"`
	// Name of the persona
	Name string `json:"name"`
}

// NewPersonaIDWriteByIDRequestWithDefaults instantiates a new PersonaIDWriteByIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersonaIDWriteByIDRequestWithDefaults() *PersonaIDWriteByIDRequest {
	var this PersonaIDWriteByIDRequest

	return &this
}

func (o PersonaIDWriteByIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["entity_id"] = o.EntityId
	toSerialize["metadata"] = o.Metadata
	toSerialize["mount_accessor"] = o.MountAccessor
	toSerialize["name"] = o.Name

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PersonaWriteRequest struct for PersonaWriteRequest
type PersonaWriteRequest struct {
	// Entity ID to which this persona belongs to
	EntityId string `json:"entity_id"`
	// ID of the persona
	Id string `json:"id"`
	// Metadata to be associated with the persona. In CLI, this parameter can be repeated multiple times, and it all gets merged together. For example: vault <command> <path> metadata=key1=value1 metadata=key2=value2
	Metadata map[string]interface{} `json:"metadata"`
	// Mount accessor to which this persona belongs to
	MountAccessor string `json:"mount_accessor"`
	// Name of the persona
	Name string `json:"name"`
}

// NewPersonaWriteRequestWithDefaults instantiates a new PersonaWriteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersonaWriteRequestWithDefaults() *PersonaWriteRequest {
	var this PersonaWriteRequest

	return &this
}

func (o PersonaWriteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["entity_id"] = o.EntityId
	toSerialize["id"] = o.Id
	toSerialize["metadata"] = o.Metadata
	toSerialize["mount_accessor"] = o.MountAccessor
	toSerialize["name"] = o.Name

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIBundleWriteRequest struct for PKIBundleWriteRequest
type PKIBundleWriteRequest struct {
	// PEM-format, concatenated unencrypted secret-key (optional) and certificates.
	PemBundle string `json:"pem_bundle"`
}

// NewPKIBundleWriteRequestWithDefaults instantiates a new PKIBundleWriteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIBundleWriteRequestWithDefaults() *PKIBundleWriteRequest {
	var this PKIBundleWriteRequest

	return &this
}

func (o PKIBundleWriteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["pem_bundle"] = o.PemBundle

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIGenerateRootRequest struct for PKIGenerateRootRequest
type PKIGenerateRootRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName string `json:"common_name"`
	// If set, Country will be set to this value.
	Country []string `json:"country"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName string `json:"issuer_name"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits int32 `json:"key_bits"`
	// Provide a name to the generated or existing key, the name must be unique across all keys and not be the reserved value 'default'
	KeyName string `json:"key_name"`
	// Reference to a existing key; either \"default\" for the configured default key, an identifier or the name assigned to the key.
	KeyRef string `json:"key_ref"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType string `json:"key_type"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId string `json:"managed_key_id"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName string `json:"managed_key_name"`
	// The maximum allowable path length
	MaxPathLength int32 `json:"max_path_length"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration int32 `json:"not_before_duration"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou"`
	// Domains for which this certificate is allowed to sign or issue child certificates. If set, all DNS names (subject and alt) on child certs must be exact matches or subsets of the given domains (see https://tools.ietf.org/html/rfc5280#section-4.2.1.10).
	PermittedDnsDomains []string `json:"permitted_dns_domains"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// If set, Province will be set to this value.
	Province []string `json:"province"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
	// Whether or not to use PSS signatures when using a RSA key-type issuer. Defaults to false.
	UsePss bool `json:"use_pss"`
}

// NewPKIGenerateRootRequestWithDefaults instantiates a new PKIGenerateRootRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIGenerateRootRequestWithDefaults() *PKIGenerateRootRequest {
	var this PKIGenerateRootRequest

	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.KeyBits = 0
	this.KeyRef = "default"
	this.KeyType = "rsa"
	this.MaxPathLength = -1
	this.NotBeforeDuration = 30
	this.PrivateKeyFormat = "der"
	this.SignatureBits = 0
	this.UsePss = false

	return &this
}

func (o PKIGenerateRootRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["country"] = o.Country
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["issuer_name"] = o.IssuerName
	toSerialize["key_bits"] = o.KeyBits
	toSerialize["key_name"] = o.KeyName
	toSerialize["key_ref"] = o.KeyRef
	toSerialize["key_type"] = o.KeyType
	toSerialize["locality"] = o.Locality
	toSerialize["managed_key_id"] = o.ManagedKeyId
	toSerialize["managed_key_name"] = o.ManagedKeyName
	toSerialize["max_path_length"] = o.MaxPathLength
	toSerialize["not_after"] = o.NotAfter
	toSerialize["not_before_duration"] = o.NotBeforeDuration
	toSerialize["organization"] = o.Organization
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["ou"] = o.Ou
	toSerialize["permitted_dns_domains"] = o.PermittedDnsDomains
	toSerialize["postal_code"] = o.PostalCode
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["province"] = o.Province
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["street_address"] = o.StreetAddress
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans
	toSerialize["use_pss"] = o.UsePss

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIImportKeysRequest struct for PKIImportKeysRequest
type PKIImportKeysRequest struct {
	// Optional name to be used for this key
	KeyName string `json:"key_name"`
	// PEM-format, unencrypted secret key
	PemBundle string `json:"pem_bundle"`
}

// NewPKIImportKeysRequestWithDefaults instantiates a new PKIImportKeysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIImportKeysRequestWithDefaults() *PKIImportKeysRequest {
	var this PKIImportKeysRequest

	return &this
}

func (o PKIImportKeysRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["key_name"] = o.KeyName
	toSerialize["pem_bundle"] = o.PemBundle

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIIssuerIssueRoleRequest struct for PKIIssuerIssueRoleRequest
type PKIIssuerIssueRoleRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName string `json:"common_name"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// Whether or not to remove self-signed CA certificates in the output of the ca_chain field.
	RemoveRootsFromChain bool `json:"remove_roots_from_chain"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
}

// NewPKIIssuerIssueRoleRequestWithDefaults instantiates a new PKIIssuerIssueRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIIssuerIssueRoleRequestWithDefaults() *PKIIssuerIssueRoleRequest {
	var this PKIIssuerIssueRoleRequest

	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.PrivateKeyFormat = "der"
	this.RemoveRootsFromChain = false

	return &this
}

func (o PKIIssuerIssueRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["not_after"] = o.NotAfter
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["remove_roots_from_chain"] = o.RemoveRootsFromChain
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIIssuerResignCRLsRequest struct for PKIIssuerResignCRLsRequest
type PKIIssuerResignCRLsRequest struct {
	// The sequence number to be written within the CRL Number extension.
	CrlNumber int32 `json:"crl_number"`
	// A list of PEM encoded CRLs to combine, originally signed by the requested issuer.
	Crls []string `json:"crls"`
	// Using a zero or greater value specifies the base CRL revision number to encode within a Delta CRL indicator extension, otherwise the extension will not be added.
	DeltaCrlBaseNumber int32 `json:"delta_crl_base_number"`
	// The format of the combined CRL, can be \"pem\" or \"der\". If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The amount of time the generated CRL should be valid; defaults to 72 hours.
	NextUpdate string `json:"next_update"`
}

// NewPKIIssuerResignCRLsRequestWithDefaults instantiates a new PKIIssuerResignCRLsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIIssuerResignCRLsRequestWithDefaults() *PKIIssuerResignCRLsRequest {
	var this PKIIssuerResignCRLsRequest

	this.DeltaCrlBaseNumber = -1
	this.Format = "pem"
	this.NextUpdate = "72h"

	return &this
}

func (o PKIIssuerResignCRLsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["crl_number"] = o.CrlNumber
	toSerialize["crls"] = o.Crls
	toSerialize["delta_crl_base_number"] = o.DeltaCrlBaseNumber
	toSerialize["format"] = o.Format
	toSerialize["next_update"] = o.NextUpdate

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIIssuerSignIntermediateRequest struct for PKIIssuerSignIntermediateRequest
type PKIIssuerSignIntermediateRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName string `json:"common_name"`
	// If set, Country will be set to this value.
	Country []string `json:"country"`
	// PEM-format CSR to be signed.
	Csr string `json:"csr"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName string `json:"issuer_name"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality"`
	// The maximum allowable path length
	MaxPathLength int32 `json:"max_path_length"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration int32 `json:"not_before_duration"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou"`
	// Domains for which this certificate is allowed to sign or issue child certificates. If set, all DNS names (subject and alt) on child certs must be exact matches or subsets of the given domains (see https://tools.ietf.org/html/rfc5280#section-4.2.1.10).
	PermittedDnsDomains []string `json:"permitted_dns_domains"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// If set, Province will be set to this value.
	Province []string `json:"province"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// Value for the Subject Key Identifier field (RFC 5280 Section 4.2.1.2). This value should ONLY be used when cross-signing to mimic the existing certificate's SKID value; this is necessary to allow certain TLS implementations (such as OpenSSL) which use SKID/AKID matches in chain building to restrict possible valid chains. Specified as a string in hex format. Default is empty, allowing Vault to automatically calculate the SKID according to method one in the above RFC section.
	Skid string `json:"skid"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
	// If true, then: 1) Subject information, including names and alternate names, will be preserved from the CSR rather than using values provided in the other parameters to this path; 2) Any key usages requested in the CSR will be added to the basic set of key usages used for CA certs signed by this path; for instance, the non-repudiation flag; 3) Extensions requested in the CSR will be copied into the issued certificate.
	UseCsrValues bool `json:"use_csr_values"`
	// Whether or not to use PSS signatures when using a RSA key-type issuer. Defaults to false.
	UsePss bool `json:"use_pss"`
}

// NewPKIIssuerSignIntermediateRequestWithDefaults instantiates a new PKIIssuerSignIntermediateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIIssuerSignIntermediateRequestWithDefaults() *PKIIssuerSignIntermediateRequest {
	var this PKIIssuerSignIntermediateRequest

	this.Csr = ""
	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.MaxPathLength = -1
	this.NotBeforeDuration = 30
	this.PrivateKeyFormat = "der"
	this.SignatureBits = 0
	this.Skid = ""
	this.UseCsrValues = false
	this.UsePss = false

	return &this
}

func (o PKIIssuerSignIntermediateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["country"] = o.Country
	toSerialize["csr"] = o.Csr
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["issuer_name"] = o.IssuerName
	toSerialize["locality"] = o.Locality
	toSerialize["max_path_length"] = o.MaxPathLength
	toSerialize["not_after"] = o.NotAfter
	toSerialize["not_before_duration"] = o.NotBeforeDuration
	toSerialize["organization"] = o.Organization
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["ou"] = o.Ou
	toSerialize["permitted_dns_domains"] = o.PermittedDnsDomains
	toSerialize["postal_code"] = o.PostalCode
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["province"] = o.Province
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["skid"] = o.Skid
	toSerialize["street_address"] = o.StreetAddress
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans
	toSerialize["use_csr_values"] = o.UseCsrValues
	toSerialize["use_pss"] = o.UsePss

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIIssuerSignRevocationListRequest struct for PKIIssuerSignRevocationListRequest
type PKIIssuerSignRevocationListRequest struct {
	// The sequence number to be written within the CRL Number extension.
	CrlNumber int32 `json:"crl_number"`
	// Using a zero or greater value specifies the base CRL revision number to encode within a Delta CRL indicator extension, otherwise the extension will not be added.
	DeltaCrlBaseNumber int32 `json:"delta_crl_base_number"`
	// A list of maps containing extensions with keys id (string), critical (bool), value (string)
	Extensions []map[string]interface{} `json:"extensions"`
	// The format of the combined CRL, can be \"pem\" or \"der\". If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The amount of time the generated CRL should be valid; defaults to 72 hours.
	NextUpdate string `json:"next_update"`
	// A list of maps containing the keys serial_number (string), revocation_time (string), and extensions (map with keys id (string), critical (bool), value (string))
	RevokedCerts []map[string]interface{} `json:"revoked_certs"`
}

// NewPKIIssuerSignRevocationListRequestWithDefaults instantiates a new PKIIssuerSignRevocationListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIIssuerSignRevocationListRequestWithDefaults() *PKIIssuerSignRevocationListRequest {
	var this PKIIssuerSignRevocationListRequest

	this.DeltaCrlBaseNumber = -1
	this.Format = "pem"
	this.NextUpdate = "72h"

	return &this
}

func (o PKIIssuerSignRevocationListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["crl_number"] = o.CrlNumber
	toSerialize["delta_crl_base_number"] = o.DeltaCrlBaseNumber
	toSerialize["extensions"] = o.Extensions
	toSerialize["format"] = o.Format
	toSerialize["next_update"] = o.NextUpdate
	toSerialize["revoked_certs"] = o.RevokedCerts

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIIssuerSignRoleRequest struct for PKIIssuerSignRoleRequest
type PKIIssuerSignRoleRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName string `json:"common_name"`
	// PEM-format CSR to be signed.
	Csr string `json:"csr"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// Whether or not to remove self-signed CA certificates in the output of the ca_chain field.
	RemoveRootsFromChain bool `json:"remove_roots_from_chain"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
}

// NewPKIIssuerSignRoleRequestWithDefaults instantiates a new PKIIssuerSignRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIIssuerSignRoleRequestWithDefaults() *PKIIssuerSignRoleRequest {
	var this PKIIssuerSignRoleRequest

	this.Csr = ""
	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.PrivateKeyFormat = "der"
	this.RemoveRootsFromChain = false

	return &this
}

func (o PKIIssuerSignRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["csr"] = o.Csr
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["not_after"] = o.NotAfter
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["remove_roots_from_chain"] = o.RemoveRootsFromChain
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIIssuerSignSelfIssuedRequest struct for PKIIssuerSignSelfIssuedRequest
type PKIIssuerSignSelfIssuedRequest struct {
	// PEM-format self-issued certificate to be signed.
	Certificate string `json:"certificate"`
	// If true, require the public key algorithm of the signer to match that of the self issued certificate.
	RequireMatchingCertificateAlgorithms bool `json:"require_matching_certificate_algorithms"`
}

// NewPKIIssuerSignSelfIssuedRequestWithDefaults instantiates a new PKIIssuerSignSelfIssuedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIIssuerSignSelfIssuedRequestWithDefaults() *PKIIssuerSignSelfIssuedRequest {
	var this PKIIssuerSignSelfIssuedRequest

	this.RequireMatchingCertificateAlgorithms = false

	return &this
}

func (o PKIIssuerSignSelfIssuedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["certificate"] = o.Certificate
	toSerialize["require_matching_certificate_algorithms"] = o.RequireMatchingCertificateAlgorithms

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIIssuerSignVerbatimRequest struct for PKIIssuerSignVerbatimRequest
type PKIIssuerSignVerbatimRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName string `json:"common_name"`
	// PEM-format CSR to be signed. Values will be taken verbatim from the CSR, except for basic constraints.
	Csr string `json:"csr"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// A comma-separated string or list of extended key usages. Valid values can be found at https://golang.org/pkg/crypto/x509/#ExtKeyUsage -- simply drop the \"ExtKeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.
	ExtKeyUsage []string `json:"ext_key_usage"`
	// A comma-separated string or list of extended key usage oids.
	ExtKeyUsageOids []string `json:"ext_key_usage_oids"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// A comma-separated string or list of key usages (not extended key usages). Valid values can be found at https://golang.org/pkg/crypto/x509/#KeyUsage -- simply drop the \"KeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.
	KeyUsage []string `json:"key_usage"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// Whether or not to remove self-signed CA certificates in the output of the ca_chain field.
	RemoveRootsFromChain bool `json:"remove_roots_from_chain"`
	// The desired role with configuration for this request
	Role string `json:"role"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
	// Whether or not to use PSS signatures when using a RSA key-type issuer. Defaults to false.
	UsePss bool `json:"use_pss"`
}

// NewPKIIssuerSignVerbatimRequestWithDefaults instantiates a new PKIIssuerSignVerbatimRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIIssuerSignVerbatimRequestWithDefaults() *PKIIssuerSignVerbatimRequest {
	var this PKIIssuerSignVerbatimRequest

	this.Csr = ""
	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.PrivateKeyFormat = "der"
	this.RemoveRootsFromChain = false
	this.SignatureBits = 0
	this.UsePss = false

	return &this
}

func (o PKIIssuerSignVerbatimRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["csr"] = o.Csr
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["ext_key_usage"] = o.ExtKeyUsage
	toSerialize["ext_key_usage_oids"] = o.ExtKeyUsageOids
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["key_usage"] = o.KeyUsage
	toSerialize["not_after"] = o.NotAfter
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["remove_roots_from_chain"] = o.RemoveRootsFromChain
	toSerialize["role"] = o.Role
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans
	toSerialize["use_pss"] = o.UsePss

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIIssuerSignVerbatimRoleRequest struct for PKIIssuerSignVerbatimRoleRequest
type PKIIssuerSignVerbatimRoleRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName string `json:"common_name"`
	// PEM-format CSR to be signed. Values will be taken verbatim from the CSR, except for basic constraints.
	Csr string `json:"csr"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// A comma-separated string or list of extended key usages. Valid values can be found at https://golang.org/pkg/crypto/x509/#ExtKeyUsage -- simply drop the \"ExtKeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.
	ExtKeyUsage []string `json:"ext_key_usage"`
	// A comma-separated string or list of extended key usage oids.
	ExtKeyUsageOids []string `json:"ext_key_usage_oids"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// A comma-separated string or list of key usages (not extended key usages). Valid values can be found at https://golang.org/pkg/crypto/x509/#KeyUsage -- simply drop the \"KeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.
	KeyUsage []string `json:"key_usage"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// Whether or not to remove self-signed CA certificates in the output of the ca_chain field.
	RemoveRootsFromChain bool `json:"remove_roots_from_chain"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
	// Whether or not to use PSS signatures when using a RSA key-type issuer. Defaults to false.
	UsePss bool `json:"use_pss"`
}

// NewPKIIssuerSignVerbatimRoleRequestWithDefaults instantiates a new PKIIssuerSignVerbatimRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIIssuerSignVerbatimRoleRequestWithDefaults() *PKIIssuerSignVerbatimRoleRequest {
	var this PKIIssuerSignVerbatimRoleRequest

	this.Csr = ""
	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.PrivateKeyFormat = "der"
	this.RemoveRootsFromChain = false
	this.SignatureBits = 0
	this.UsePss = false

	return &this
}

func (o PKIIssuerSignVerbatimRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["csr"] = o.Csr
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["ext_key_usage"] = o.ExtKeyUsage
	toSerialize["ext_key_usage_oids"] = o.ExtKeyUsageOids
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["key_usage"] = o.KeyUsage
	toSerialize["not_after"] = o.NotAfter
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["remove_roots_from_chain"] = o.RemoveRootsFromChain
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans
	toSerialize["use_pss"] = o.UsePss

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIIssuersGenerateIntermediateRequest struct for PKIIssuersGenerateIntermediateRequest
type PKIIssuersGenerateIntermediateRequest struct {
	// Whether to add a Basic Constraints extension with CA: true. Only needed as a workaround in some compatibility scenarios with Active Directory Certificate Services.
	AddBasicConstraints bool `json:"add_basic_constraints"`
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName string `json:"common_name"`
	// If set, Country will be set to this value.
	Country []string `json:"country"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits int32 `json:"key_bits"`
	// Provide a name to the generated or existing key, the name must be unique across all keys and not be the reserved value 'default'
	KeyName string `json:"key_name"`
	// Reference to a existing key; either \"default\" for the configured default key, an identifier or the name assigned to the key.
	KeyRef string `json:"key_ref"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType string `json:"key_type"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId string `json:"managed_key_id"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName string `json:"managed_key_name"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration int32 `json:"not_before_duration"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// If set, Province will be set to this value.
	Province []string `json:"province"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
}

// NewPKIIssuersGenerateIntermediateRequestWithDefaults instantiates a new PKIIssuersGenerateIntermediateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIIssuersGenerateIntermediateRequestWithDefaults() *PKIIssuersGenerateIntermediateRequest {
	var this PKIIssuersGenerateIntermediateRequest

	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.KeyBits = 0
	this.KeyRef = "default"
	this.KeyType = "rsa"
	this.NotBeforeDuration = 30
	this.PrivateKeyFormat = "der"
	this.SignatureBits = 0

	return &this
}

func (o PKIIssuersGenerateIntermediateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["add_basic_constraints"] = o.AddBasicConstraints
	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["country"] = o.Country
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["key_bits"] = o.KeyBits
	toSerialize["key_name"] = o.KeyName
	toSerialize["key_ref"] = o.KeyRef
	toSerialize["key_type"] = o.KeyType
	toSerialize["locality"] = o.Locality
	toSerialize["managed_key_id"] = o.ManagedKeyId
	toSerialize["managed_key_name"] = o.ManagedKeyName
	toSerialize["not_after"] = o.NotAfter
	toSerialize["not_before_duration"] = o.NotBeforeDuration
	toSerialize["organization"] = o.Organization
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["ou"] = o.Ou
	toSerialize["postal_code"] = o.PostalCode
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["province"] = o.Province
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["street_address"] = o.StreetAddress
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIIssuersGenerateRootRequest struct for PKIIssuersGenerateRootRequest
type PKIIssuersGenerateRootRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName string `json:"common_name"`
	// If set, Country will be set to this value.
	Country []string `json:"country"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName string `json:"issuer_name"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits int32 `json:"key_bits"`
	// Provide a name to the generated or existing key, the name must be unique across all keys and not be the reserved value 'default'
	KeyName string `json:"key_name"`
	// Reference to a existing key; either \"default\" for the configured default key, an identifier or the name assigned to the key.
	KeyRef string `json:"key_ref"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType string `json:"key_type"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId string `json:"managed_key_id"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName string `json:"managed_key_name"`
	// The maximum allowable path length
	MaxPathLength int32 `json:"max_path_length"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration int32 `json:"not_before_duration"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou"`
	// Domains for which this certificate is allowed to sign or issue child certificates. If set, all DNS names (subject and alt) on child certs must be exact matches or subsets of the given domains (see https://tools.ietf.org/html/rfc5280#section-4.2.1.10).
	PermittedDnsDomains []string `json:"permitted_dns_domains"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// If set, Province will be set to this value.
	Province []string `json:"province"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
	// Whether or not to use PSS signatures when using a RSA key-type issuer. Defaults to false.
	UsePss bool `json:"use_pss"`
}

// NewPKIIssuersGenerateRootRequestWithDefaults instantiates a new PKIIssuersGenerateRootRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIIssuersGenerateRootRequestWithDefaults() *PKIIssuersGenerateRootRequest {
	var this PKIIssuersGenerateRootRequest

	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.KeyBits = 0
	this.KeyRef = "default"
	this.KeyType = "rsa"
	this.MaxPathLength = -1
	this.NotBeforeDuration = 30
	this.PrivateKeyFormat = "der"
	this.SignatureBits = 0
	this.UsePss = false

	return &this
}

func (o PKIIssuersGenerateRootRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["country"] = o.Country
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["issuer_name"] = o.IssuerName
	toSerialize["key_bits"] = o.KeyBits
	toSerialize["key_name"] = o.KeyName
	toSerialize["key_ref"] = o.KeyRef
	toSerialize["key_type"] = o.KeyType
	toSerialize["locality"] = o.Locality
	toSerialize["managed_key_id"] = o.ManagedKeyId
	toSerialize["managed_key_name"] = o.ManagedKeyName
	toSerialize["max_path_length"] = o.MaxPathLength
	toSerialize["not_after"] = o.NotAfter
	toSerialize["not_before_duration"] = o.NotBeforeDuration
	toSerialize["organization"] = o.Organization
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["ou"] = o.Ou
	toSerialize["permitted_dns_domains"] = o.PermittedDnsDomains
	toSerialize["postal_code"] = o.PostalCode
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["province"] = o.Province
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["street_address"] = o.StreetAddress
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans
	toSerialize["use_pss"] = o.UsePss

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIReplaceRootRequest struct for PKIReplaceRootRequest
type PKIReplaceRootRequest struct {
	// Reference (name or identifier) to the default issuer.
	Default string `json:"default"`
}

// NewPKIReplaceRootRequestWithDefaults instantiates a new PKIReplaceRootRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIReplaceRootRequestWithDefaults() *PKIReplaceRootRequest {
	var this PKIReplaceRootRequest

	this.Default = "next"

	return &this
}

func (o PKIReplaceRootRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["default"] = o.Default

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIRevokeRequest struct for PKIRevokeRequest
type PKIRevokeRequest struct {
	// Certificate to revoke in PEM format; must be signed by an issuer in this mount.
	Certificate string `json:"certificate"`
	// Certificate serial number, in colon- or hyphen-separated octal
	SerialNumber string `json:"serial_number"`
}

// NewPKIRevokeRequestWithDefaults instantiates a new PKIRevokeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIRevokeRequestWithDefaults() *PKIRevokeRequest {
	var this PKIRevokeRequest

	return &this
}

func (o PKIRevokeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["certificate"] = o.Certificate
	toSerialize["serial_number"] = o.SerialNumber

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIRevokeWithKeyRequest struct for PKIRevokeWithKeyRequest
type PKIRevokeWithKeyRequest struct {
	// Certificate to revoke in PEM format; must be signed by an issuer in this mount.
	Certificate string `json:"certificate"`
	// Key to use to verify revocation permission; must be in PEM format.
	PrivateKey string `json:"private_key"`
	// Certificate serial number, in colon- or hyphen-separated octal
	SerialNumber string `json:"serial_number"`
}

// NewPKIRevokeWithKeyRequestWithDefaults instantiates a new PKIRevokeWithKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIRevokeWithKeyRequestWithDefaults() *PKIRevokeWithKeyRequest {
	var this PKIRevokeWithKeyRequest

	return &this
}

func (o PKIRevokeWithKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["certificate"] = o.Certificate
	toSerialize["private_key"] = o.PrivateKey
	toSerialize["serial_number"] = o.SerialNumber

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIRootSignIntermediateRequest struct for PKIRootSignIntermediateRequest
type PKIRootSignIntermediateRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName string `json:"common_name"`
	// If set, Country will be set to this value.
	Country []string `json:"country"`
	// PEM-format CSR to be signed.
	Csr string `json:"csr"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName string `json:"issuer_name"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef string `json:"issuer_ref"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality"`
	// The maximum allowable path length
	MaxPathLength int32 `json:"max_path_length"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration int32 `json:"not_before_duration"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou"`
	// Domains for which this certificate is allowed to sign or issue child certificates. If set, all DNS names (subject and alt) on child certs must be exact matches or subsets of the given domains (see https://tools.ietf.org/html/rfc5280#section-4.2.1.10).
	PermittedDnsDomains []string `json:"permitted_dns_domains"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// If set, Province will be set to this value.
	Province []string `json:"province"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// Value for the Subject Key Identifier field (RFC 5280 Section 4.2.1.2). This value should ONLY be used when cross-signing to mimic the existing certificate's SKID value; this is necessary to allow certain TLS implementations (such as OpenSSL) which use SKID/AKID matches in chain building to restrict possible valid chains. Specified as a string in hex format. Default is empty, allowing Vault to automatically calculate the SKID according to method one in the above RFC section.
	Skid string `json:"skid"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
	// If true, then: 1) Subject information, including names and alternate names, will be preserved from the CSR rather than using values provided in the other parameters to this path; 2) Any key usages requested in the CSR will be added to the basic set of key usages used for CA certs signed by this path; for instance, the non-repudiation flag; 3) Extensions requested in the CSR will be copied into the issued certificate.
	UseCsrValues bool `json:"use_csr_values"`
	// Whether or not to use PSS signatures when using a RSA key-type issuer. Defaults to false.
	UsePss bool `json:"use_pss"`
}

// NewPKIRootSignIntermediateRequestWithDefaults instantiates a new PKIRootSignIntermediateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIRootSignIntermediateRequestWithDefaults() *PKIRootSignIntermediateRequest {
	var this PKIRootSignIntermediateRequest

	this.Csr = ""
	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.IssuerRef = "default"
	this.MaxPathLength = -1
	this.NotBeforeDuration = 30
	this.PrivateKeyFormat = "der"
	this.SignatureBits = 0
	this.Skid = ""
	this.UseCsrValues = false
	this.UsePss = false

	return &this
}

func (o PKIRootSignIntermediateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["country"] = o.Country
	toSerialize["csr"] = o.Csr
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["issuer_name"] = o.IssuerName
	toSerialize["issuer_ref"] = o.IssuerRef
	toSerialize["locality"] = o.Locality
	toSerialize["max_path_length"] = o.MaxPathLength
	toSerialize["not_after"] = o.NotAfter
	toSerialize["not_before_duration"] = o.NotBeforeDuration
	toSerialize["organization"] = o.Organization
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["ou"] = o.Ou
	toSerialize["permitted_dns_domains"] = o.PermittedDnsDomains
	toSerialize["postal_code"] = o.PostalCode
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["province"] = o.Province
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["skid"] = o.Skid
	toSerialize["street_address"] = o.StreetAddress
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans
	toSerialize["use_csr_values"] = o.UseCsrValues
	toSerialize["use_pss"] = o.UsePss

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIRootSignSelfIssuedRequest struct for PKIRootSignSelfIssuedRequest
type PKIRootSignSelfIssuedRequest struct {
	// PEM-format self-issued certificate to be signed.
	Certificate string `json:"certificate"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef string `json:"issuer_ref"`
	// If true, require the public key algorithm of the signer to match that of the self issued certificate.
	RequireMatchingCertificateAlgorithms bool `json:"require_matching_certificate_algorithms"`
}

// NewPKIRootSignSelfIssuedRequestWithDefaults instantiates a new PKIRootSignSelfIssuedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIRootSignSelfIssuedRequestWithDefaults() *PKIRootSignSelfIssuedRequest {
	var this PKIRootSignSelfIssuedRequest

	this.IssuerRef = "default"
	this.RequireMatchingCertificateAlgorithms = false

	return &this
}

func (o PKIRootSignSelfIssuedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["certificate"] = o.Certificate
	toSerialize["issuer_ref"] = o.IssuerRef
	toSerialize["require_matching_certificate_algorithms"] = o.RequireMatchingCertificateAlgorithms

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIRotateRootRequest struct for PKIRotateRootRequest
type PKIRotateRootRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName string `json:"common_name"`
	// If set, Country will be set to this value.
	Country []string `json:"country"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName string `json:"issuer_name"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits int32 `json:"key_bits"`
	// Provide a name to the generated or existing key, the name must be unique across all keys and not be the reserved value 'default'
	KeyName string `json:"key_name"`
	// Reference to a existing key; either \"default\" for the configured default key, an identifier or the name assigned to the key.
	KeyRef string `json:"key_ref"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType string `json:"key_type"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId string `json:"managed_key_id"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName string `json:"managed_key_name"`
	// The maximum allowable path length
	MaxPathLength int32 `json:"max_path_length"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration int32 `json:"not_before_duration"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou"`
	// Domains for which this certificate is allowed to sign or issue child certificates. If set, all DNS names (subject and alt) on child certs must be exact matches or subsets of the given domains (see https://tools.ietf.org/html/rfc5280#section-4.2.1.10).
	PermittedDnsDomains []string `json:"permitted_dns_domains"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// If set, Province will be set to this value.
	Province []string `json:"province"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
	// Whether or not to use PSS signatures when using a RSA key-type issuer. Defaults to false.
	UsePss bool `json:"use_pss"`
}

// NewPKIRotateRootRequestWithDefaults instantiates a new PKIRotateRootRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIRotateRootRequestWithDefaults() *PKIRotateRootRequest {
	var this PKIRotateRootRequest

	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.KeyBits = 0
	this.KeyRef = "default"
	this.KeyType = "rsa"
	this.MaxPathLength = -1
	this.NotBeforeDuration = 30
	this.PrivateKeyFormat = "der"
	this.SignatureBits = 0
	this.UsePss = false

	return &this
}

func (o PKIRotateRootRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["country"] = o.Country
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["issuer_name"] = o.IssuerName
	toSerialize["key_bits"] = o.KeyBits
	toSerialize["key_name"] = o.KeyName
	toSerialize["key_ref"] = o.KeyRef
	toSerialize["key_type"] = o.KeyType
	toSerialize["locality"] = o.Locality
	toSerialize["managed_key_id"] = o.ManagedKeyId
	toSerialize["managed_key_name"] = o.ManagedKeyName
	toSerialize["max_path_length"] = o.MaxPathLength
	toSerialize["not_after"] = o.NotAfter
	toSerialize["not_before_duration"] = o.NotBeforeDuration
	toSerialize["organization"] = o.Organization
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["ou"] = o.Ou
	toSerialize["permitted_dns_domains"] = o.PermittedDnsDomains
	toSerialize["postal_code"] = o.PostalCode
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["province"] = o.Province
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["street_address"] = o.StreetAddress
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans
	toSerialize["use_pss"] = o.UsePss

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKISignRoleRequest struct for PKISignRoleRequest
type PKISignRoleRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName string `json:"common_name"`
	// PEM-format CSR to be signed.
	Csr string `json:"csr"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef string `json:"issuer_ref"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// Whether or not to remove self-signed CA certificates in the output of the ca_chain field.
	RemoveRootsFromChain bool `json:"remove_roots_from_chain"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
}

// NewPKISignRoleRequestWithDefaults instantiates a new PKISignRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKISignRoleRequestWithDefaults() *PKISignRoleRequest {
	var this PKISignRoleRequest

	this.Csr = ""
	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.IssuerRef = "default"
	this.PrivateKeyFormat = "der"
	this.RemoveRootsFromChain = false

	return &this
}

func (o PKISignRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["csr"] = o.Csr
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["issuer_ref"] = o.IssuerRef
	toSerialize["not_after"] = o.NotAfter
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["remove_roots_from_chain"] = o.RemoveRootsFromChain
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKISignVerbatimRequest struct for PKISignVerbatimRequest
type PKISignVerbatimRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName string `json:"common_name"`
	// PEM-format CSR to be signed. Values will be taken verbatim from the CSR, except for basic constraints.
	Csr string `json:"csr"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// A comma-separated string or list of extended key usages. Valid values can be found at https://golang.org/pkg/crypto/x509/#ExtKeyUsage -- simply drop the \"ExtKeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.
	ExtKeyUsage []string `json:"ext_key_usage"`
	// A comma-separated string or list of extended key usage oids.
	ExtKeyUsageOids []string `json:"ext_key_usage_oids"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef string `json:"issuer_ref"`
	// A comma-separated string or list of key usages (not extended key usages). Valid values can be found at https://golang.org/pkg/crypto/x509/#KeyUsage -- simply drop the \"KeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.
	KeyUsage []string `json:"key_usage"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// Whether or not to remove self-signed CA certificates in the output of the ca_chain field.
	RemoveRootsFromChain bool `json:"remove_roots_from_chain"`
	// The desired role with configuration for this request
	Role string `json:"role"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
	// Whether or not to use PSS signatures when using a RSA key-type issuer. Defaults to false.
	UsePss bool `json:"use_pss"`
}

// NewPKISignVerbatimRequestWithDefaults instantiates a new PKISignVerbatimRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKISignVerbatimRequestWithDefaults() *PKISignVerbatimRequest {
	var this PKISignVerbatimRequest

	this.Csr = ""
	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.IssuerRef = "default"
	this.PrivateKeyFormat = "der"
	this.RemoveRootsFromChain = false
	this.SignatureBits = 0
	this.UsePss = false

	return &this
}

func (o PKISignVerbatimRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["csr"] = o.Csr
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["ext_key_usage"] = o.ExtKeyUsage
	toSerialize["ext_key_usage_oids"] = o.ExtKeyUsageOids
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["issuer_ref"] = o.IssuerRef
	toSerialize["key_usage"] = o.KeyUsage
	toSerialize["not_after"] = o.NotAfter
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["remove_roots_from_chain"] = o.RemoveRootsFromChain
	toSerialize["role"] = o.Role
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans
	toSerialize["use_pss"] = o.UsePss

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKISignVerbatimRoleRequest struct for PKISignVerbatimRoleRequest
type PKISignVerbatimRoleRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName string `json:"common_name"`
	// PEM-format CSR to be signed. Values will be taken verbatim from the CSR, except for basic constraints.
	Csr string `json:"csr"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// A comma-separated string or list of extended key usages. Valid values can be found at https://golang.org/pkg/crypto/x509/#ExtKeyUsage -- simply drop the \"ExtKeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.
	ExtKeyUsage []string `json:"ext_key_usage"`
	// A comma-separated string or list of extended key usage oids.
	ExtKeyUsageOids []string `json:"ext_key_usage_oids"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef string `json:"issuer_ref"`
	// A comma-separated string or list of key usages (not extended key usages). Valid values can be found at https://golang.org/pkg/crypto/x509/#KeyUsage -- simply drop the \"KeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list.
	KeyUsage []string `json:"key_usage"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// Whether or not to remove self-signed CA certificates in the output of the ca_chain field.
	RemoveRootsFromChain bool `json:"remove_roots_from_chain"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
	// Whether or not to use PSS signatures when using a RSA key-type issuer. Defaults to false.
	UsePss bool `json:"use_pss"`
}

// NewPKISignVerbatimRoleRequestWithDefaults instantiates a new PKISignVerbatimRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKISignVerbatimRoleRequestWithDefaults() *PKISignVerbatimRoleRequest {
	var this PKISignVerbatimRoleRequest

	this.Csr = ""
	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.IssuerRef = "default"
	this.PrivateKeyFormat = "der"
	this.RemoveRootsFromChain = false
	this.SignatureBits = 0
	this.UsePss = false

	return &this
}

func (o PKISignVerbatimRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["csr"] = o.Csr
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["ext_key_usage"] = o.ExtKeyUsage
	toSerialize["ext_key_usage_oids"] = o.ExtKeyUsageOids
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["issuer_ref"] = o.IssuerRef
	toSerialize["key_usage"] = o.KeyUsage
	toSerialize["not_after"] = o.NotAfter
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["remove_roots_from_chain"] = o.RemoveRootsFromChain
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans
	toSerialize["use_pss"] = o.UsePss

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKITidyRequest struct for PKITidyRequest
type PKITidyRequest struct {
	// The amount of extra time that must have passed beyond issuer's expiration before it is removed from the backend storage. Defaults to 8760 hours (1 year).
	IssuerSafetyBuffer int32 `json:"issuer_safety_buffer"`
	// The amount of time to wait between processing certificates. This allows operators to change the execution profile of tidy to take consume less resources by slowing down how long it takes to run. Note that the entire list of certificates will be stored in memory during the entire tidy operation, but resources to read/process/update existing entries will be spread out over a greater period of time. By default this is zero seconds.
	PauseDuration string `json:"pause_duration"`
	// The amount of extra time that must have passed beyond certificate expiration before it is removed from the backend storage and/or revocation list. Defaults to 72 hours.
	SafetyBuffer int32 `json:"safety_buffer"`
	// Set to true to enable tidying up the certificate store
	TidyCertStore bool `json:"tidy_cert_store"`
	// Set to true to automatically remove expired issuers past the issuer_safety_buffer. No keys will be removed as part of this operation.
	TidyExpiredIssuers bool `json:"tidy_expired_issuers"`
	// Deprecated; synonym for 'tidy_revoked_certs
	TidyRevocationList bool `json:"tidy_revocation_list"`
	// Set to true to validate issuer associations on revocation entries. This helps increase the performance of CRL building and OCSP responses.
	TidyRevokedCertIssuerAssociations bool `json:"tidy_revoked_cert_issuer_associations"`
	// Set to true to expire all revoked and expired certificates, removing them both from the CRL and from storage. The CRL will be rotated if this causes any values to be removed.
	TidyRevokedCerts bool `json:"tidy_revoked_certs"`
}

// NewPKITidyRequestWithDefaults instantiates a new PKITidyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKITidyRequestWithDefaults() *PKITidyRequest {
	var this PKITidyRequest

	this.IssuerSafetyBuffer = 31536000
	this.PauseDuration = "0s"
	this.SafetyBuffer = 259200

	return &this
}

func (o PKITidyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["issuer_safety_buffer"] = o.IssuerSafetyBuffer
	toSerialize["pause_duration"] = o.PauseDuration
	toSerialize["safety_buffer"] = o.SafetyBuffer
	toSerialize["tidy_cert_store"] = o.TidyCertStore
	toSerialize["tidy_expired_issuers"] = o.TidyExpiredIssuers
	toSerialize["tidy_revocation_list"] = o.TidyRevocationList
	toSerialize["tidy_revoked_cert_issuer_associations"] = o.TidyRevokedCertIssuerAssociations
	toSerialize["tidy_revoked_certs"] = o.TidyRevokedCerts

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteAutoTidyConfigRequest struct for PKIWriteAutoTidyConfigRequest
type PKIWriteAutoTidyConfigRequest struct {
	// Set to true to enable automatic tidy operations.
	Enabled bool `json:"enabled"`
	// Interval at which to run an auto-tidy operation. This is the time between tidy invocations (after one finishes to the start of the next). Running a manual tidy will reset this duration.
	IntervalDuration int32 `json:"interval_duration"`
	// The amount of extra time that must have passed beyond issuer's expiration before it is removed from the backend storage. Defaults to 8760 hours (1 year).
	IssuerSafetyBuffer int32 `json:"issuer_safety_buffer"`
	// The amount of time to wait between processing certificates. This allows operators to change the execution profile of tidy to take consume less resources by slowing down how long it takes to run. Note that the entire list of certificates will be stored in memory during the entire tidy operation, but resources to read/process/update existing entries will be spread out over a greater period of time. By default this is zero seconds.
	PauseDuration string `json:"pause_duration"`
	// The amount of extra time that must have passed beyond certificate expiration before it is removed from the backend storage and/or revocation list. Defaults to 72 hours.
	SafetyBuffer int32 `json:"safety_buffer"`
	// Set to true to enable tidying up the certificate store
	TidyCertStore bool `json:"tidy_cert_store"`
	// Set to true to automatically remove expired issuers past the issuer_safety_buffer. No keys will be removed as part of this operation.
	TidyExpiredIssuers bool `json:"tidy_expired_issuers"`
	// Deprecated; synonym for 'tidy_revoked_certs
	TidyRevocationList bool `json:"tidy_revocation_list"`
	// Set to true to validate issuer associations on revocation entries. This helps increase the performance of CRL building and OCSP responses.
	TidyRevokedCertIssuerAssociations bool `json:"tidy_revoked_cert_issuer_associations"`
	// Set to true to expire all revoked and expired certificates, removing them both from the CRL and from storage. The CRL will be rotated if this causes any values to be removed.
	TidyRevokedCerts bool `json:"tidy_revoked_certs"`
}

// NewPKIWriteAutoTidyConfigRequestWithDefaults instantiates a new PKIWriteAutoTidyConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteAutoTidyConfigRequestWithDefaults() *PKIWriteAutoTidyConfigRequest {
	var this PKIWriteAutoTidyConfigRequest

	this.IntervalDuration = 43200
	this.IssuerSafetyBuffer = 31536000
	this.PauseDuration = "0s"
	this.SafetyBuffer = 259200

	return &this
}

func (o PKIWriteAutoTidyConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["enabled"] = o.Enabled
	toSerialize["interval_duration"] = o.IntervalDuration
	toSerialize["issuer_safety_buffer"] = o.IssuerSafetyBuffer
	toSerialize["pause_duration"] = o.PauseDuration
	toSerialize["safety_buffer"] = o.SafetyBuffer
	toSerialize["tidy_cert_store"] = o.TidyCertStore
	toSerialize["tidy_expired_issuers"] = o.TidyExpiredIssuers
	toSerialize["tidy_revocation_list"] = o.TidyRevocationList
	toSerialize["tidy_revoked_cert_issuer_associations"] = o.TidyRevokedCertIssuerAssociations
	toSerialize["tidy_revoked_certs"] = o.TidyRevokedCerts

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteCAConfigRequest struct for PKIWriteCAConfigRequest
type PKIWriteCAConfigRequest struct {
	// PEM-format, concatenated unencrypted secret key and certificate.
	PemBundle string `json:"pem_bundle"`
}

// NewPKIWriteCAConfigRequestWithDefaults instantiates a new PKIWriteCAConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteCAConfigRequestWithDefaults() *PKIWriteCAConfigRequest {
	var this PKIWriteCAConfigRequest

	return &this
}

func (o PKIWriteCAConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["pem_bundle"] = o.PemBundle

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteCertsRequest struct for PKIWriteCertsRequest
type PKIWriteCertsRequest struct {
	// PEM-format, concatenated unencrypted secret-key (optional) and certificates.
	PemBundle string `json:"pem_bundle"`
}

// NewPKIWriteCertsRequestWithDefaults instantiates a new PKIWriteCertsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteCertsRequestWithDefaults() *PKIWriteCertsRequest {
	var this PKIWriteCertsRequest

	return &this
}

func (o PKIWriteCertsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["pem_bundle"] = o.PemBundle

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteClusterConfigRequest struct for PKIWriteClusterConfigRequest
type PKIWriteClusterConfigRequest struct {
	// Canonical URI to this mount on this performance replication cluster's external address. This is for resolving AIA URLs and providing the {{cluster_path}} template parameter but might be used for other purposes in the future. This should only point back to this particular PR replica and should not ever point to another PR cluster. It may point to any node in the PR replica, including standby nodes, and need not always point to the active node. For example: https://pr1.vault.example.com:8200/v1/pki
	Path string `json:"path"`
}

// NewPKIWriteClusterConfigRequestWithDefaults instantiates a new PKIWriteClusterConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteClusterConfigRequestWithDefaults() *PKIWriteClusterConfigRequest {
	var this PKIWriteClusterConfigRequest

	return &this
}

func (o PKIWriteClusterConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["path"] = o.Path

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteCRLConfigRequest struct for PKIWriteCRLConfigRequest
type PKIWriteCRLConfigRequest struct {
	// If set to true, enables automatic rebuilding of the CRL
	AutoRebuild bool `json:"auto_rebuild"`
	// The time before the CRL expires to automatically rebuild it, when enabled. Must be shorter than the CRL expiry. Defaults to 12h.
	AutoRebuildGracePeriod string `json:"auto_rebuild_grace_period"`
	// The time between delta CRL rebuilds if a new revocation has occurred. Must be shorter than the CRL expiry. Defaults to 15m.
	DeltaRebuildInterval string `json:"delta_rebuild_interval"`
	// If set to true, disables generating the CRL entirely.
	Disable bool `json:"disable"`
	// Whether to enable delta CRLs between authoritative CRL rebuilds
	EnableDelta bool `json:"enable_delta"`
	// The amount of time the generated CRL should be valid; defaults to 72 hours
	Expiry string `json:"expiry"`
	// If set to true, ocsp unauthorized responses will be returned.
	OcspDisable bool `json:"ocsp_disable"`
	// The amount of time an OCSP response will be valid (controls the NextUpdate field); defaults to 12 hours
	OcspExpiry string `json:"ocsp_expiry"`
}

// NewPKIWriteCRLConfigRequestWithDefaults instantiates a new PKIWriteCRLConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteCRLConfigRequestWithDefaults() *PKIWriteCRLConfigRequest {
	var this PKIWriteCRLConfigRequest

	this.AutoRebuildGracePeriod = "12h"
	this.DeltaRebuildInterval = "15m"
	this.Expiry = "72h"
	this.OcspExpiry = "1h"

	return &this
}

func (o PKIWriteCRLConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["auto_rebuild"] = o.AutoRebuild
	toSerialize["auto_rebuild_grace_period"] = o.AutoRebuildGracePeriod
	toSerialize["delta_rebuild_interval"] = o.DeltaRebuildInterval
	toSerialize["disable"] = o.Disable
	toSerialize["enable_delta"] = o.EnableDelta
	toSerialize["expiry"] = o.Expiry
	toSerialize["ocsp_disable"] = o.OcspDisable
	toSerialize["ocsp_expiry"] = o.OcspExpiry

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteIntermediateCrossSignRequest struct for PKIWriteIntermediateCrossSignRequest
type PKIWriteIntermediateCrossSignRequest struct {
	// Whether to add a Basic Constraints extension with CA: true. Only needed as a workaround in some compatibility scenarios with Active Directory Certificate Services.
	AddBasicConstraints bool `json:"add_basic_constraints"`
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName string `json:"common_name"`
	// If set, Country will be set to this value.
	Country []string `json:"country"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// Must be \"internal\", \"exported\" or \"kms\". If set to \"exported\", the generated private key will be returned. This is your *only* chance to retrieve the private key!
	Exported string `json:"exported"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits int32 `json:"key_bits"`
	// Provide a name to the generated or existing key, the name must be unique across all keys and not be the reserved value 'default'
	KeyName string `json:"key_name"`
	// Reference to a existing key; either \"default\" for the configured default key, an identifier or the name assigned to the key.
	KeyRef string `json:"key_ref"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType string `json:"key_type"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId string `json:"managed_key_id"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName string `json:"managed_key_name"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration int32 `json:"not_before_duration"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// If set, Province will be set to this value.
	Province []string `json:"province"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
}

// NewPKIWriteIntermediateCrossSignRequestWithDefaults instantiates a new PKIWriteIntermediateCrossSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteIntermediateCrossSignRequestWithDefaults() *PKIWriteIntermediateCrossSignRequest {
	var this PKIWriteIntermediateCrossSignRequest

	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.KeyBits = 0
	this.KeyRef = "default"
	this.KeyType = "rsa"
	this.NotBeforeDuration = 30
	this.PrivateKeyFormat = "der"
	this.SignatureBits = 0

	return &this
}

func (o PKIWriteIntermediateCrossSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["add_basic_constraints"] = o.AddBasicConstraints
	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["country"] = o.Country
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["exported"] = o.Exported
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["key_bits"] = o.KeyBits
	toSerialize["key_name"] = o.KeyName
	toSerialize["key_ref"] = o.KeyRef
	toSerialize["key_type"] = o.KeyType
	toSerialize["locality"] = o.Locality
	toSerialize["managed_key_id"] = o.ManagedKeyId
	toSerialize["managed_key_name"] = o.ManagedKeyName
	toSerialize["not_after"] = o.NotAfter
	toSerialize["not_before_duration"] = o.NotBeforeDuration
	toSerialize["organization"] = o.Organization
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["ou"] = o.Ou
	toSerialize["postal_code"] = o.PostalCode
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["province"] = o.Province
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["street_address"] = o.StreetAddress
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteIntermediateGenerateRequest struct for PKIWriteIntermediateGenerateRequest
type PKIWriteIntermediateGenerateRequest struct {
	// Whether to add a Basic Constraints extension with CA: true. Only needed as a workaround in some compatibility scenarios with Active Directory Certificate Services.
	AddBasicConstraints bool `json:"add_basic_constraints"`
	// The requested Subject Alternative Names, if any, in a comma-delimited list. May contain both DNS names and email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If not specified when signing, the common name will be taken from the CSR; other names must still be specified in alt_names or ip_sans.
	CommonName string `json:"common_name"`
	// If set, Country will be set to this value.
	Country []string `json:"country"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits int32 `json:"key_bits"`
	// Provide a name to the generated or existing key, the name must be unique across all keys and not be the reserved value 'default'
	KeyName string `json:"key_name"`
	// Reference to a existing key; either \"default\" for the configured default key, an identifier or the name assigned to the key.
	KeyRef string `json:"key_ref"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType string `json:"key_type"`
	// If set, Locality will be set to this value.
	Locality []string `json:"locality"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId string `json:"managed_key_id"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName string `json:"managed_key_name"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration int32 `json:"not_before_duration"`
	// If set, O (Organization) will be set to this value.
	Organization []string `json:"organization"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// If set, OU (OrganizationalUnit) will be set to this value.
	Ou []string `json:"ou"`
	// If set, Postal Code will be set to this value.
	PostalCode []string `json:"postal_code"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// If set, Province will be set to this value.
	Province []string `json:"province"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// If set, Street Address will be set to this value.
	StreetAddress []string `json:"street_address"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the mount max TTL. Note: this only has an effect when generating a CA cert or signing a CA cert, not when generating a CSR for an intermediate CA.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
}

// NewPKIWriteIntermediateGenerateRequestWithDefaults instantiates a new PKIWriteIntermediateGenerateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteIntermediateGenerateRequestWithDefaults() *PKIWriteIntermediateGenerateRequest {
	var this PKIWriteIntermediateGenerateRequest

	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.KeyBits = 0
	this.KeyRef = "default"
	this.KeyType = "rsa"
	this.NotBeforeDuration = 30
	this.PrivateKeyFormat = "der"
	this.SignatureBits = 0

	return &this
}

func (o PKIWriteIntermediateGenerateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["add_basic_constraints"] = o.AddBasicConstraints
	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["country"] = o.Country
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["key_bits"] = o.KeyBits
	toSerialize["key_name"] = o.KeyName
	toSerialize["key_ref"] = o.KeyRef
	toSerialize["key_type"] = o.KeyType
	toSerialize["locality"] = o.Locality
	toSerialize["managed_key_id"] = o.ManagedKeyId
	toSerialize["managed_key_name"] = o.ManagedKeyName
	toSerialize["not_after"] = o.NotAfter
	toSerialize["not_before_duration"] = o.NotBeforeDuration
	toSerialize["organization"] = o.Organization
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["ou"] = o.Ou
	toSerialize["postal_code"] = o.PostalCode
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["province"] = o.Province
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["street_address"] = o.StreetAddress
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteIntermediateSetSignedRequest struct for PKIWriteIntermediateSetSignedRequest
type PKIWriteIntermediateSetSignedRequest struct {
	// PEM-format certificate. This must be a CA certificate with a public key matching the previously-generated key from the generation endpoint. Additional parent CAs may be optionally appended to the bundle.
	Certificate string `json:"certificate"`
}

// NewPKIWriteIntermediateSetSignedRequestWithDefaults instantiates a new PKIWriteIntermediateSetSignedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteIntermediateSetSignedRequestWithDefaults() *PKIWriteIntermediateSetSignedRequest {
	var this PKIWriteIntermediateSetSignedRequest

	return &this
}

func (o PKIWriteIntermediateSetSignedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["certificate"] = o.Certificate

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteInternalExportedRequest struct for PKIWriteInternalExportedRequest
type PKIWriteInternalExportedRequest struct {
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits int32 `json:"key_bits"`
	// Optional name to be used for this key
	KeyName string `json:"key_name"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType string `json:"key_type"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId string `json:"managed_key_id"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName string `json:"managed_key_name"`
}

// NewPKIWriteInternalExportedRequestWithDefaults instantiates a new PKIWriteInternalExportedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteInternalExportedRequestWithDefaults() *PKIWriteInternalExportedRequest {
	var this PKIWriteInternalExportedRequest

	this.KeyBits = 0
	this.KeyType = "rsa"

	return &this
}

func (o PKIWriteInternalExportedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["key_bits"] = o.KeyBits
	toSerialize["key_name"] = o.KeyName
	toSerialize["key_type"] = o.KeyType
	toSerialize["managed_key_id"] = o.ManagedKeyId
	toSerialize["managed_key_name"] = o.ManagedKeyName

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteIssueRoleRequest struct for PKIWriteIssueRoleRequest
type PKIWriteIssueRoleRequest struct {
	// The requested Subject Alternative Names, if any, in a comma-delimited list. If email protection is enabled for the role, this may contain email addresses.
	AltNames string `json:"alt_names"`
	// The requested common name; if you want more than one, specify the alternative names in the alt_names map. If email protection is enabled in the role, this may be an email address.
	CommonName string `json:"common_name"`
	// If true, the Common Name will not be included in DNS or Email Subject Alternate Names. Defaults to false (CN is included).
	ExcludeCnFromSans bool `json:"exclude_cn_from_sans"`
	// Format for returned data. Can be \"pem\", \"der\", or \"pem_bundle\". If \"pem_bundle\", any private key and issuing cert will be appended to the certificate pem. If \"der\", the value will be base64 encoded. Defaults to \"pem\".
	Format string `json:"format"`
	// The requested IP SANs, if any, in a comma-delimited list
	IpSans []string `json:"ip_sans"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef string `json:"issuer_ref"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ
	NotAfter string `json:"not_after"`
	// Requested other SANs, in an array with the format <oid>;UTF8:<utf8 string value> for each entry.
	OtherSans []string `json:"other_sans"`
	// Format for the returned private key. Generally the default will be controlled by the \"format\" parameter as either base64-encoded DER or PEM-encoded DER. However, this can be set to \"pkcs8\" to have the returned private key contain base64-encoded pkcs8 or PEM-encoded pkcs8 instead. Defaults to \"der\".
	PrivateKeyFormat string `json:"private_key_format"`
	// Whether or not to remove self-signed CA certificates in the output of the ca_chain field.
	RemoveRootsFromChain bool `json:"remove_roots_from_chain"`
	// The Subject's requested serial number, if any. See RFC 4519 Section 2.31 'serialNumber' for a description of this field. If you want more than one, specify alternative names in the alt_names map using OID 2.5.4.5. This has no impact on the final certificate's Serial Number field.
	SerialNumber string `json:"serial_number"`
	// The requested Time To Live for the certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be larger than the role max TTL.
	Ttl int32 `json:"ttl"`
	// The requested URI SANs, if any, in a comma-delimited list.
	UriSans []string `json:"uri_sans"`
}

// NewPKIWriteIssueRoleRequestWithDefaults instantiates a new PKIWriteIssueRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteIssueRoleRequestWithDefaults() *PKIWriteIssueRoleRequest {
	var this PKIWriteIssueRoleRequest

	this.ExcludeCnFromSans = false
	this.Format = "pem"
	this.IssuerRef = "default"
	this.PrivateKeyFormat = "der"
	this.RemoveRootsFromChain = false

	return &this
}

func (o PKIWriteIssueRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["alt_names"] = o.AltNames
	toSerialize["common_name"] = o.CommonName
	toSerialize["exclude_cn_from_sans"] = o.ExcludeCnFromSans
	toSerialize["format"] = o.Format
	toSerialize["ip_sans"] = o.IpSans
	toSerialize["issuer_ref"] = o.IssuerRef
	toSerialize["not_after"] = o.NotAfter
	toSerialize["other_sans"] = o.OtherSans
	toSerialize["private_key_format"] = o.PrivateKeyFormat
	toSerialize["remove_roots_from_chain"] = o.RemoveRootsFromChain
	toSerialize["serial_number"] = o.SerialNumber
	toSerialize["ttl"] = o.Ttl
	toSerialize["uri_sans"] = o.UriSans

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiWriteIssuerRefDerPemRequest struct for PkiWriteIssuerRefDerPemRequest
type PkiWriteIssuerRefDerPemRequest struct {
	// Comma-separated list of URLs to be used for the CRL distribution points attribute. See also RFC 5280 Section 4.2.1.13.
	CrlDistributionPoints []string `json:"crl_distribution_points"`
	// Whether or not to enabling templating of the above AIA fields. When templating is enabled the special values '{{issuer_id}}' and '{{cluster_path}}' are available, but the addresses are not checked for URL validity until issuance time. This requires /config/cluster's path to be set on all PR Secondary clusters.
	EnableAiaUrlTemplating bool `json:"enable_aia_url_templating"`
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName string `json:"issuer_name"`
	// Comma-separated list of URLs to be used for the issuing certificate attribute. See also RFC 5280 Section 4.2.2.1.
	IssuingCertificates []string `json:"issuing_certificates"`
	// Behavior of leaf's NotAfter fields: \"err\" to error if the computed NotAfter date exceeds that of this issuer; \"truncate\" to silently truncate to that of this issuer; or \"permit\" to allow this issuance to succeed (with NotAfter exceeding that of an issuer). Note that not all values will results in certificates that can be validated through the entire validity period. It is suggested to use \"truncate\" for intermediate CAs and \"permit\" only for root CAs.
	LeafNotAfterBehavior string `json:"leaf_not_after_behavior"`
	// Chain of issuer references to use to build this issuer's computed CAChain field, when non-empty.
	ManualChain []string `json:"manual_chain"`
	// Comma-separated list of URLs to be used for the OCSP servers attribute. See also RFC 5280 Section 4.2.2.1.
	OcspServers []string `json:"ocsp_servers"`
	// Which x509.SignatureAlgorithm name to use for signing CRLs. This parameter allows differentiation between PKCS#1v1.5 and PSS keys and choice of signature hash algorithm. The default (empty string) value is for Go to select the signature algorithm. This can fail if the underlying key does not support the requested signature algorithm, which may not be known at modification time (such as with PKCS#11 managed RSA keys).
	RevocationSignatureAlgorithm string `json:"revocation_signature_algorithm"`
	// Comma-separated list (or string slice) of usages for this issuer; valid values are \"read-only\", \"issuing-certificates\", \"crl-signing\", and \"ocsp-signing\". Multiple values may be specified. Read-only is implicit and always set.
	Usage []string `json:"usage"`
}

// NewPkiWriteIssuerRefDerPemRequestWithDefaults instantiates a new PkiWriteIssuerRefDerPemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiWriteIssuerRefDerPemRequestWithDefaults() *PkiWriteIssuerRefDerPemRequest {
	var this PkiWriteIssuerRefDerPemRequest

	this.EnableAiaUrlTemplating = false
	this.LeafNotAfterBehavior = "err"
	this.RevocationSignatureAlgorithm = ""

	return &this
}

func (o PkiWriteIssuerRefDerPemRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["crl_distribution_points"] = o.CrlDistributionPoints
	toSerialize["enable_aia_url_templating"] = o.EnableAiaUrlTemplating
	toSerialize["issuer_name"] = o.IssuerName
	toSerialize["issuing_certificates"] = o.IssuingCertificates
	toSerialize["leaf_not_after_behavior"] = o.LeafNotAfterBehavior
	toSerialize["manual_chain"] = o.ManualChain
	toSerialize["ocsp_servers"] = o.OcspServers
	toSerialize["revocation_signature_algorithm"] = o.RevocationSignatureAlgorithm
	toSerialize["usage"] = o.Usage

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteIssuersConfigRequest struct for PKIWriteIssuersConfigRequest
type PKIWriteIssuersConfigRequest struct {
	// Reference (name or identifier) to the default issuer.
	Default string `json:"default"`
	// Whether the default issuer should automatically follow the latest generated or imported issuer. Defaults to false.
	DefaultFollowsLatestIssuer bool `json:"default_follows_latest_issuer"`
}

// NewPKIWriteIssuersConfigRequestWithDefaults instantiates a new PKIWriteIssuersConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteIssuersConfigRequestWithDefaults() *PKIWriteIssuersConfigRequest {
	var this PKIWriteIssuersConfigRequest

	this.DefaultFollowsLatestIssuer = false

	return &this
}

func (o PKIWriteIssuersConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["default"] = o.Default
	toSerialize["default_follows_latest_issuer"] = o.DefaultFollowsLatestIssuer

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PkiWriteJsonRequest struct for PkiWriteJsonRequest
type PkiWriteJsonRequest struct {
	// Comma-separated list of URLs to be used for the CRL distribution points attribute. See also RFC 5280 Section 4.2.1.13.
	CrlDistributionPoints []string `json:"crl_distribution_points"`
	// Whether or not to enabling templating of the above AIA fields. When templating is enabled the special values '{{issuer_id}}' and '{{cluster_path}}' are available, but the addresses are not checked for URL validity until issuance time. This requires /config/cluster's path to be set on all PR Secondary clusters.
	EnableAiaUrlTemplating bool `json:"enable_aia_url_templating"`
	// Provide a name to the generated or existing issuer, the name must be unique across all issuers and not be the reserved value 'default'
	IssuerName string `json:"issuer_name"`
	// Reference to a existing issuer; either \"default\" for the configured default issuer, an identifier or the name assigned to the issuer.
	IssuerRef string `json:"issuer_ref"`
	// Comma-separated list of URLs to be used for the issuing certificate attribute. See also RFC 5280 Section 4.2.2.1.
	IssuingCertificates []string `json:"issuing_certificates"`
	// Behavior of leaf's NotAfter fields: \"err\" to error if the computed NotAfter date exceeds that of this issuer; \"truncate\" to silently truncate to that of this issuer; or \"permit\" to allow this issuance to succeed (with NotAfter exceeding that of an issuer). Note that not all values will results in certificates that can be validated through the entire validity period. It is suggested to use \"truncate\" for intermediate CAs and \"permit\" only for root CAs.
	LeafNotAfterBehavior string `json:"leaf_not_after_behavior"`
	// Chain of issuer references to use to build this issuer's computed CAChain field, when non-empty.
	ManualChain []string `json:"manual_chain"`
	// Comma-separated list of URLs to be used for the OCSP servers attribute. See also RFC 5280 Section 4.2.2.1.
	OcspServers []string `json:"ocsp_servers"`
	// Which x509.SignatureAlgorithm name to use for signing CRLs. This parameter allows differentiation between PKCS#1v1.5 and PSS keys and choice of signature hash algorithm. The default (empty string) value is for Go to select the signature algorithm. This can fail if the underlying key does not support the requested signature algorithm, which may not be known at modification time (such as with PKCS#11 managed RSA keys).
	RevocationSignatureAlgorithm string `json:"revocation_signature_algorithm"`
	// Comma-separated list (or string slice) of usages for this issuer; valid values are \"read-only\", \"issuing-certificates\", \"crl-signing\", and \"ocsp-signing\". Multiple values may be specified. Read-only is implicit and always set.
	Usage []string `json:"usage"`
}

// NewPkiWriteJsonRequestWithDefaults instantiates a new PkiWriteJsonRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiWriteJsonRequestWithDefaults() *PkiWriteJsonRequest {
	var this PkiWriteJsonRequest

	this.EnableAiaUrlTemplating = false
	this.IssuerRef = "default"
	this.LeafNotAfterBehavior = "err"
	this.RevocationSignatureAlgorithm = ""

	return &this
}

func (o PkiWriteJsonRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["crl_distribution_points"] = o.CrlDistributionPoints
	toSerialize["enable_aia_url_templating"] = o.EnableAiaUrlTemplating
	toSerialize["issuer_name"] = o.IssuerName
	toSerialize["issuer_ref"] = o.IssuerRef
	toSerialize["issuing_certificates"] = o.IssuingCertificates
	toSerialize["leaf_not_after_behavior"] = o.LeafNotAfterBehavior
	toSerialize["manual_chain"] = o.ManualChain
	toSerialize["ocsp_servers"] = o.OcspServers
	toSerialize["revocation_signature_algorithm"] = o.RevocationSignatureAlgorithm
	toSerialize["usage"] = o.Usage

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteKeyRequest struct for PKIWriteKeyRequest
type PKIWriteKeyRequest struct {
	// Human-readable name for this key.
	KeyName string `json:"key_name"`
}

// NewPKIWriteKeyRequestWithDefaults instantiates a new PKIWriteKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteKeyRequestWithDefaults() *PKIWriteKeyRequest {
	var this PKIWriteKeyRequest

	return &this
}

func (o PKIWriteKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["key_name"] = o.KeyName

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteKeysConfigRequest struct for PKIWriteKeysConfigRequest
type PKIWriteKeysConfigRequest struct {
	// Reference (name or identifier) of the default key.
	Default string `json:"default"`
}

// NewPKIWriteKeysConfigRequestWithDefaults instantiates a new PKIWriteKeysConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteKeysConfigRequestWithDefaults() *PKIWriteKeysConfigRequest {
	var this PKIWriteKeysConfigRequest

	return &this
}

func (o PKIWriteKeysConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["default"] = o.Default

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteKMSRequest struct for PKIWriteKMSRequest
type PKIWriteKMSRequest struct {
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits int32 `json:"key_bits"`
	// Optional name to be used for this key
	KeyName string `json:"key_name"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\" and \"ed25519\" are the only valid values.
	KeyType string `json:"key_type"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_name is required. Ignored for other types.
	ManagedKeyId string `json:"managed_key_id"`
	// The name of the managed key to use when the exported type is kms. When kms type is the key type, this field or managed_key_id is required. Ignored for other types.
	ManagedKeyName string `json:"managed_key_name"`
}

// NewPKIWriteKMSRequestWithDefaults instantiates a new PKIWriteKMSRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteKMSRequestWithDefaults() *PKIWriteKMSRequest {
	var this PKIWriteKMSRequest

	this.KeyBits = 0
	this.KeyType = "rsa"

	return &this
}

func (o PKIWriteKMSRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["key_bits"] = o.KeyBits
	toSerialize["key_name"] = o.KeyName
	toSerialize["key_type"] = o.KeyType
	toSerialize["managed_key_id"] = o.ManagedKeyId
	toSerialize["managed_key_name"] = o.ManagedKeyName

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteRoleRequest struct for PKIWriteRoleRequest
type PKIWriteRoleRequest struct {
	// If set, clients can request certificates for any domain, regardless of allowed_domains restrictions. See the documentation for more information.
	AllowAnyName bool `json:"allow_any_name"`
	// If set, clients can request certificates for the base domains themselves, e.g. \"example.com\" of domains listed in allowed_domains. This is a separate option as in some cases this can be considered a security threat. See the documentation for more information.
	AllowBareDomains bool `json:"allow_bare_domains"`
	// If set, domains specified in allowed_domains can include shell-style glob patterns, e.g. \"ftp*.example.com\". See the documentation for more information.
	AllowGlobDomains bool `json:"allow_glob_domains"`
	// If set, IP Subject Alternative Names are allowed. Any valid IP is accepted and No authorization checking is performed.
	AllowIpSans bool `json:"allow_ip_sans"`
	// Whether to allow \"localhost\" and \"localdomain\" as a valid common name in a request, independent of allowed_domains value.
	AllowLocalhost bool `json:"allow_localhost"`
	// If set, clients can request certificates for subdomains of domains listed in allowed_domains, including wildcard subdomains. See the documentation for more information.
	AllowSubdomains bool `json:"allow_subdomains"`
	// If set, allows certificates with wildcards in the common name to be issued, conforming to RFC 6125's Section 6.4.3; e.g., \"*.example.net\" or \"b*z.example.net\". See the documentation for more information.
	AllowWildcardCertificates bool `json:"allow_wildcard_certificates"`
	// Specifies the domains this role is allowed to issue certificates for. This is used with the allow_bare_domains, allow_subdomains, and allow_glob_domains to determine matches for the common name, DNS-typed SAN entries, and Email-typed SAN entries of certificates. See the documentation for more information. This parameter accepts a comma-separated string or list of domains.
	AllowedDomains []string `json:"allowed_domains"`
	// If set, Allowed domains can be specified using identity template policies. Non-templated domains are also permitted.
	AllowedDomainsTemplate bool `json:"allowed_domains_template"`
	// If set, an array of allowed other names to put in SANs. These values support globbing and must be in the format <oid>;<type>:<value>. Currently only \"utf8\" is a valid type. All values, including globbing values, must use this syntax, with the exception being a single \"*\" which allows any OID and any value (but type must still be utf8).
	AllowedOtherSans []string `json:"allowed_other_sans"`
	// If set, an array of allowed serial numbers to put in Subject. These values support globbing.
	AllowedSerialNumbers []string `json:"allowed_serial_numbers"`
	// If set, an array of allowed URIs for URI Subject Alternative Names. Any valid URI is accepted, these values support globbing.
	AllowedUriSans []string `json:"allowed_uri_sans"`
	// If set, Allowed URI SANs can be specified using identity template policies. Non-templated URI SANs are also permitted.
	AllowedUriSansTemplate bool `json:"allowed_uri_sans_template"`
	// Backend Type
	Backend string `json:"backend"`
	// Mark Basic Constraints valid when issuing non-CA certificates.
	BasicConstraintsValidForNonCa bool `json:"basic_constraints_valid_for_non_ca"`
	// If set, certificates are flagged for client auth use. Defaults to true. See also RFC 5280 Section 4.2.1.12.
	ClientFlag bool `json:"client_flag"`
	// List of allowed validations to run against the Common Name field. Values can include 'email' to validate the CN is a email address, 'hostname' to validate the CN is a valid hostname (potentially including wildcards). When multiple validations are specified, these take OR semantics (either email OR hostname are allowed). The special value 'disabled' allows disabling all CN name validations, allowing for arbitrary non-Hostname, non-Email address CNs.
	CnValidations []string `json:"cn_validations"`
	// If set, certificates are flagged for code signing use. Defaults to false. See also RFC 5280 Section 4.2.1.12.
	CodeSigningFlag bool `json:"code_signing_flag"`
	// If set, Country will be set to this value in certificates issued by this role.
	Country []string `json:"country"`
	// If set, certificates are flagged for email protection use. Defaults to false. See also RFC 5280 Section 4.2.1.12.
	EmailProtectionFlag bool `json:"email_protection_flag"`
	// If set, only valid host names are allowed for CN and DNS SANs, and the host part of email addresses. Defaults to true.
	EnforceHostnames bool `json:"enforce_hostnames"`
	// A comma-separated string or list of extended key usages. Valid values can be found at https://golang.org/pkg/crypto/x509/#ExtKeyUsage -- simply drop the \"ExtKeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list. See also RFC 5280 Section 4.2.1.12.
	ExtKeyUsage []string `json:"ext_key_usage"`
	// A comma-separated string or list of extended key usage oids.
	ExtKeyUsageOids []string `json:"ext_key_usage_oids"`
	// If set, certificates issued/signed against this role will have Vault leases attached to them. Defaults to \"false\". Certificates can be added to the CRL by \"vault revoke <lease_id>\" when certificates are associated with leases. It can also be done using the \"pki/revoke\" endpoint. However, when lease generation is disabled, invoking \"pki/revoke\" would be the only way to add the certificates to the CRL. When large number of certificates are generated with long lifetimes, it is recommended that lease generation be disabled, as large amount of leases adversely affect the startup time of Vault.
	GenerateLease bool `json:"generate_lease"`
	// Reference to the issuer used to sign requests serviced by this role.
	IssuerRef string `json:"issuer_ref"`
	// The number of bits to use. Allowed values are 0 (universal default); with rsa key_type: 2048 (default), 3072, or 4096; with ec key_type: 224, 256 (default), 384, or 521; ignored with ed25519.
	KeyBits int32 `json:"key_bits"`
	// The type of key to use; defaults to RSA. \"rsa\" \"ec\", \"ed25519\" and \"any\" are the only valid values.
	KeyType string `json:"key_type"`
	// A comma-separated string or list of key usages (not extended key usages). Valid values can be found at https://golang.org/pkg/crypto/x509/#KeyUsage -- simply drop the \"KeyUsage\" part of the name. To remove all key usages from being set, set this value to an empty list. See also RFC 5280 Section 4.2.1.3.
	KeyUsage []string `json:"key_usage"`
	// If set, Locality will be set to this value in certificates issued by this role.
	Locality []string `json:"locality"`
	// The maximum allowed lease duration. If not set, defaults to the system maximum lease TTL.
	MaxTtl int32 `json:"max_ttl"`
	// If set, certificates issued/signed against this role will not be stored in the storage backend. This can improve performance when issuing large numbers of certificates. However, certificates issued in this way cannot be enumerated or revoked, so this option is recommended only for certificates that are non-sensitive, or extremely short-lived. This option implies a value of \"false\" for \"generate_lease\".
	NoStore bool `json:"no_store"`
	// Set the not after field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ.
	NotAfter string `json:"not_after"`
	// The duration before now which the certificate needs to be backdated by.
	NotBeforeDuration int32 `json:"not_before_duration"`
	// If set, O (Organization) will be set to this value in certificates issued by this role.
	Organization []string `json:"organization"`
	// If set, OU (OrganizationalUnit) will be set to this value in certificates issued by this role.
	Ou []string `json:"ou"`
	// A comma-separated string or list of policy OIDs, or a JSON list of qualified policy information, which must include an oid, and may include a notice and/or cps url, using the form [{\"oid\"=\"1.3.6.1.4.1.7.8\",\"notice\"=\"I am a user Notice\"}, {\"oid\"=\"1.3.6.1.4.1.44947.1.2.4 \",\"cps\"=\"https://example.com\"}].
	PolicyIdentifiers []string `json:"policy_identifiers"`
	// If set, Postal Code will be set to this value in certificates issued by this role.
	PostalCode []string `json:"postal_code"`
	// If set, Province will be set to this value in certificates issued by this role.
	Province []string `json:"province"`
	// If set to false, makes the 'common_name' field optional while generating a certificate.
	RequireCn bool `json:"require_cn"`
	// If set, certificates are flagged for server auth use. Defaults to true. See also RFC 5280 Section 4.2.1.12.
	ServerFlag bool `json:"server_flag"`
	// The number of bits to use in the signature algorithm; accepts 256 for SHA-2-256, 384 for SHA-2-384, and 512 for SHA-2-512. Defaults to 0 to automatically detect based on key length (SHA-2-256 for RSA keys, and matching the curve size for NIST P-Curves).
	SignatureBits int32 `json:"signature_bits"`
	// If set, Street Address will be set to this value in certificates issued by this role.
	StreetAddress []string `json:"street_address"`
	// The lease duration (validity period of the certificate) if no specific lease duration is requested. The lease duration controls the expiration of certificates issued by this backend. Defaults to the system default value or the value of max_ttl, whichever is shorter.
	Ttl int32 `json:"ttl"`
	// If set, when used with a signing profile, the common name in the CSR will be used. This does *not* include any requested Subject Alternative Names; use use_csr_sans for that. Defaults to true.
	UseCsrCommonName bool `json:"use_csr_common_name"`
	// If set, when used with a signing profile, the SANs in the CSR will be used. This does *not* include the Common Name (cn); use use_csr_common_name for that. Defaults to true.
	UseCsrSans bool `json:"use_csr_sans"`
	// Whether or not to use PSS signatures when using a RSA key-type issuer. Defaults to false.
	UsePss bool `json:"use_pss"`
}

// NewPKIWriteRoleRequestWithDefaults instantiates a new PKIWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteRoleRequestWithDefaults() *PKIWriteRoleRequest {
	var this PKIWriteRoleRequest

	this.AllowIpSans = true
	this.AllowLocalhost = true
	this.AllowWildcardCertificates = true
	this.AllowedDomainsTemplate = false
	this.AllowedUriSansTemplate = false
	this.ClientFlag = true
	this.EnforceHostnames = true
	this.IssuerRef = "default"
	this.KeyBits = 0
	this.KeyType = "rsa"
	this.NotBeforeDuration = 30
	this.RequireCn = true
	this.ServerFlag = true
	this.SignatureBits = 0
	this.UseCsrCommonName = true
	this.UseCsrSans = true
	this.UsePss = false

	return &this
}

func (o PKIWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allow_any_name"] = o.AllowAnyName
	toSerialize["allow_bare_domains"] = o.AllowBareDomains
	toSerialize["allow_glob_domains"] = o.AllowGlobDomains
	toSerialize["allow_ip_sans"] = o.AllowIpSans
	toSerialize["allow_localhost"] = o.AllowLocalhost
	toSerialize["allow_subdomains"] = o.AllowSubdomains
	toSerialize["allow_wildcard_certificates"] = o.AllowWildcardCertificates
	toSerialize["allowed_domains"] = o.AllowedDomains
	toSerialize["allowed_domains_template"] = o.AllowedDomainsTemplate
	toSerialize["allowed_other_sans"] = o.AllowedOtherSans
	toSerialize["allowed_serial_numbers"] = o.AllowedSerialNumbers
	toSerialize["allowed_uri_sans"] = o.AllowedUriSans
	toSerialize["allowed_uri_sans_template"] = o.AllowedUriSansTemplate
	toSerialize["backend"] = o.Backend
	toSerialize["basic_constraints_valid_for_non_ca"] = o.BasicConstraintsValidForNonCa
	toSerialize["client_flag"] = o.ClientFlag
	toSerialize["cn_validations"] = o.CnValidations
	toSerialize["code_signing_flag"] = o.CodeSigningFlag
	toSerialize["country"] = o.Country
	toSerialize["email_protection_flag"] = o.EmailProtectionFlag
	toSerialize["enforce_hostnames"] = o.EnforceHostnames
	toSerialize["ext_key_usage"] = o.ExtKeyUsage
	toSerialize["ext_key_usage_oids"] = o.ExtKeyUsageOids
	toSerialize["generate_lease"] = o.GenerateLease
	toSerialize["issuer_ref"] = o.IssuerRef
	toSerialize["key_bits"] = o.KeyBits
	toSerialize["key_type"] = o.KeyType
	toSerialize["key_usage"] = o.KeyUsage
	toSerialize["locality"] = o.Locality
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["no_store"] = o.NoStore
	toSerialize["not_after"] = o.NotAfter
	toSerialize["not_before_duration"] = o.NotBeforeDuration
	toSerialize["organization"] = o.Organization
	toSerialize["ou"] = o.Ou
	toSerialize["policy_identifiers"] = o.PolicyIdentifiers
	toSerialize["postal_code"] = o.PostalCode
	toSerialize["province"] = o.Province
	toSerialize["require_cn"] = o.RequireCn
	toSerialize["server_flag"] = o.ServerFlag
	toSerialize["signature_bits"] = o.SignatureBits
	toSerialize["street_address"] = o.StreetAddress
	toSerialize["ttl"] = o.Ttl
	toSerialize["use_csr_common_name"] = o.UseCsrCommonName
	toSerialize["use_csr_sans"] = o.UseCsrSans
	toSerialize["use_pss"] = o.UsePss

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// PKIWriteURLConfigRequest struct for PKIWriteURLConfigRequest
type PKIWriteURLConfigRequest struct {
	// Comma-separated list of URLs to be used for the CRL distribution points attribute. See also RFC 5280 Section 4.2.1.13.
	CrlDistributionPoints []string `json:"crl_distribution_points"`
	// Whether or not to enabling templating of the above AIA fields. When templating is enabled the special values '{{issuer_id}}' and '{{cluster_path}}' are available, but the addresses are not checked for URI validity until issuance time. This requires /config/cluster's path to be set on all PR Secondary clusters.
	EnableTemplating bool `json:"enable_templating"`
	// Comma-separated list of URLs to be used for the issuing certificate attribute. See also RFC 5280 Section 4.2.2.1.
	IssuingCertificates []string `json:"issuing_certificates"`
	// Comma-separated list of URLs to be used for the OCSP servers attribute. See also RFC 5280 Section 4.2.2.1.
	OcspServers []string `json:"ocsp_servers"`
}

// NewPKIWriteURLConfigRequestWithDefaults instantiates a new PKIWriteURLConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPKIWriteURLConfigRequestWithDefaults() *PKIWriteURLConfigRequest {
	var this PKIWriteURLConfigRequest

	this.EnableTemplating = false

	return &this
}

func (o PKIWriteURLConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["crl_distribution_points"] = o.CrlDistributionPoints
	toSerialize["enable_templating"] = o.EnableTemplating
	toSerialize["issuing_certificates"] = o.IssuingCertificates
	toSerialize["ocsp_servers"] = o.OcspServers

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RabbitMQWriteConnectionConfigRequest struct for RabbitMQWriteConnectionConfigRequest
type RabbitMQWriteConnectionConfigRequest struct {
	// RabbitMQ Management URI
	ConnectionUri string `json:"connection_uri"`
	// Password of the provided RabbitMQ management user
	Password string `json:"password"`
	// Name of the password policy to use to generate passwords for dynamic credentials.
	PasswordPolicy string `json:"password_policy"`
	// Username of a RabbitMQ management administrator
	Username string `json:"username"`
	// Template describing how dynamic usernames are generated.
	UsernameTemplate string `json:"username_template"`
	// If set, connection_uri is verified by actually connecting to the RabbitMQ management API
	VerifyConnection bool `json:"verify_connection"`
}

// NewRabbitMQWriteConnectionConfigRequestWithDefaults instantiates a new RabbitMQWriteConnectionConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRabbitMQWriteConnectionConfigRequestWithDefaults() *RabbitMQWriteConnectionConfigRequest {
	var this RabbitMQWriteConnectionConfigRequest

	this.VerifyConnection = true

	return &this
}

func (o RabbitMQWriteConnectionConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["connection_uri"] = o.ConnectionUri
	toSerialize["password"] = o.Password
	toSerialize["password_policy"] = o.PasswordPolicy
	toSerialize["username"] = o.Username
	toSerialize["username_template"] = o.UsernameTemplate
	toSerialize["verify_connection"] = o.VerifyConnection

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RabbitMQWriteLeaseConfigRequest struct for RabbitMQWriteLeaseConfigRequest
type RabbitMQWriteLeaseConfigRequest struct {
	// Duration after which the issued credentials should not be allowed to be renewed
	MaxTtl int32 `json:"max_ttl"`
	// Duration before which the issued credentials needs renewal
	Ttl int32 `json:"ttl"`
}

// NewRabbitMQWriteLeaseConfigRequestWithDefaults instantiates a new RabbitMQWriteLeaseConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRabbitMQWriteLeaseConfigRequestWithDefaults() *RabbitMQWriteLeaseConfigRequest {
	var this RabbitMQWriteLeaseConfigRequest

	this.MaxTtl = 0
	this.Ttl = 0

	return &this
}

func (o RabbitMQWriteLeaseConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RabbitMQWriteRoleRequest struct for RabbitMQWriteRoleRequest
type RabbitMQWriteRoleRequest struct {
	// Comma-separated list of tags for this role.
	Tags string `json:"tags"`
	// A nested map of virtual hosts and exchanges to topic permissions.
	VhostTopics string `json:"vhost_topics"`
	// A map of virtual hosts to permissions.
	Vhosts string `json:"vhosts"`
}

// NewRabbitMQWriteRoleRequestWithDefaults instantiates a new RabbitMQWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRabbitMQWriteRoleRequestWithDefaults() *RabbitMQWriteRoleRequest {
	var this RabbitMQWriteRoleRequest

	return &this
}

func (o RabbitMQWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["tags"] = o.Tags
	toSerialize["vhost_topics"] = o.VhostTopics
	toSerialize["vhosts"] = o.Vhosts

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RadiusLoginRequest struct for RadiusLoginRequest
type RadiusLoginRequest struct {
	// Password for this user.
	Password string `json:"password"`
	// Username to be used for login. (URL parameter)
	Urlusername string `json:"urlusername"`
	// Username to be used for login. (POST request body)
	Username string `json:"username"`
}

// NewRadiusLoginRequestWithDefaults instantiates a new RadiusLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadiusLoginRequestWithDefaults() *RadiusLoginRequest {
	var this RadiusLoginRequest

	return &this
}

func (o RadiusLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["password"] = o.Password
	toSerialize["urlusername"] = o.Urlusername
	toSerialize["username"] = o.Username

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RadiusLoginWithUsernameRequest struct for RadiusLoginWithUsernameRequest
type RadiusLoginWithUsernameRequest struct {
	// Password for this user.
	Password string `json:"password"`
	// Username to be used for login. (POST request body)
	Username string `json:"username"`
}

// NewRadiusLoginWithUsernameRequestWithDefaults instantiates a new RadiusLoginWithUsernameRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadiusLoginWithUsernameRequestWithDefaults() *RadiusLoginWithUsernameRequest {
	var this RadiusLoginWithUsernameRequest

	return &this
}

func (o RadiusLoginWithUsernameRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["password"] = o.Password
	toSerialize["username"] = o.Username

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RadiusWriteConfigRequest struct for RadiusWriteConfigRequest
type RadiusWriteConfigRequest struct {
	// Number of seconds before connect times out (default: 10)
	DialTimeout int32 `json:"dial_timeout"`
	// RADIUS server host
	Host string `json:"host"`
	// RADIUS NAS Identifier field (optional)
	NasIdentifier string `json:"nas_identifier"`
	// RADIUS NAS port field (default: 10)
	NasPort int32 `json:"nas_port"`
	// RADIUS server port (default: 1812)
	Port int32 `json:"port"`
	// Number of seconds before response times out (default: 10)
	ReadTimeout int32 `json:"read_timeout"`
	// Secret shared with the RADIUS server
	Secret string `json:"secret"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies. This will apply to all tokens generated by this auth method, in addition to any configured for specific users.
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Comma-separated list of policies to grant upon successful RADIUS authentication of an unregisted user (default: empty)
	UnregisteredUserPolicies string `json:"unregistered_user_policies"`
}

// NewRadiusWriteConfigRequestWithDefaults instantiates a new RadiusWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadiusWriteConfigRequestWithDefaults() *RadiusWriteConfigRequest {
	var this RadiusWriteConfigRequest

	this.DialTimeout = 10
	this.NasIdentifier = ""
	this.NasPort = 10
	this.Port = 1812
	this.ReadTimeout = 10
	this.TokenType = "default-service"
	this.UnregisteredUserPolicies = ""

	return &this
}

func (o RadiusWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["dial_timeout"] = o.DialTimeout
	toSerialize["host"] = o.Host
	toSerialize["nas_identifier"] = o.NasIdentifier
	toSerialize["nas_port"] = o.NasPort
	toSerialize["port"] = o.Port
	toSerialize["read_timeout"] = o.ReadTimeout
	toSerialize["secret"] = o.Secret
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["unregistered_user_policies"] = o.UnregisteredUserPolicies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RadiusWriteUserRequest struct for RadiusWriteUserRequest
type RadiusWriteUserRequest struct {
	// Comma-separated list of policies associated to the user.
	Policies []string `json:"policies"`
}

// NewRadiusWriteUserRequestWithDefaults instantiates a new RadiusWriteUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadiusWriteUserRequestWithDefaults() *RadiusWriteUserRequest {
	var this RadiusWriteUserRequest

	return &this
}

func (o RadiusWriteUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["policies"] = o.Policies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RemountRequest struct for RemountRequest
type RemountRequest struct {
	// The previous mount point.
	From string `json:"from"`
	// The new mount point.
	To string `json:"to"`
}

// NewRemountRequestWithDefaults instantiates a new RemountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemountRequestWithDefaults() *RemountRequest {
	var this RemountRequest

	return &this
}

func (o RemountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["from"] = o.From
	toSerialize["to"] = o.To

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RenewForRequest struct for RenewForRequest
type RenewForRequest struct {
	// The desired increment in seconds to the lease
	Increment int32 `json:"increment"`
	// The lease identifier to renew. This is included with a lease.
	LeaseId string `json:"lease_id"`
}

// NewRenewForRequestWithDefaults instantiates a new RenewForRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenewForRequestWithDefaults() *RenewForRequest {
	var this RenewForRequest

	return &this
}

func (o RenewForRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["increment"] = o.Increment
	toSerialize["lease_id"] = o.LeaseId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RenewRequest struct for RenewRequest
type RenewRequest struct {
	// The desired increment in seconds to the lease
	Increment int32 `json:"increment"`
	// The lease identifier to renew. This is included with a lease.
	LeaseId string `json:"lease_id"`
	// The lease identifier to renew. This is included with a lease.
	UrlLeaseId string `json:"url_lease_id"`
}

// NewRenewRequestWithDefaults instantiates a new RenewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenewRequestWithDefaults() *RenewRequest {
	var this RenewRequest

	return &this
}

func (o RenewRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["increment"] = o.Increment
	toSerialize["lease_id"] = o.LeaseId
	toSerialize["url_lease_id"] = o.UrlLeaseId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RevokeLeaseRequest struct for RevokeLeaseRequest
type RevokeLeaseRequest struct {
	// The lease identifier to renew. This is included with a lease.
	LeaseId string `json:"lease_id"`
	// Whether or not to perform the revocation synchronously
	Sync bool `json:"sync"`
}

// NewRevokeLeaseRequestWithDefaults instantiates a new RevokeLeaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevokeLeaseRequestWithDefaults() *RevokeLeaseRequest {
	var this RevokeLeaseRequest

	this.Sync = true

	return &this
}

func (o RevokeLeaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["lease_id"] = o.LeaseId
	toSerialize["sync"] = o.Sync

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RevokePrefixRequest struct for RevokePrefixRequest
type RevokePrefixRequest struct {
	// Whether or not to perform the revocation synchronously
	Sync bool `json:"sync"`
}

// NewRevokePrefixRequestWithDefaults instantiates a new RevokePrefixRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevokePrefixRequestWithDefaults() *RevokePrefixRequest {
	var this RevokePrefixRequest

	this.Sync = true

	return &this
}

func (o RevokePrefixRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["sync"] = o.Sync

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// RevokeRequest struct for RevokeRequest
type RevokeRequest struct {
	// The lease identifier to renew. This is included with a lease.
	LeaseId string `json:"lease_id"`
	// Whether or not to perform the revocation synchronously
	Sync bool `json:"sync"`
	// The lease identifier to renew. This is included with a lease.
	UrlLeaseId string `json:"url_lease_id"`
}

// NewRevokeRequestWithDefaults instantiates a new RevokeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevokeRequestWithDefaults() *RevokeRequest {
	var this RevokeRequest

	this.Sync = true

	return &this
}

func (o RevokeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["lease_id"] = o.LeaseId
	toSerialize["sync"] = o.Sync
	toSerialize["url_lease_id"] = o.UrlLeaseId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SSHLookupRequest struct for SSHLookupRequest
type SSHLookupRequest struct {
	// [Required] IP address of remote host
	Ip string `json:"ip"`
}

// NewSSHLookupRequestWithDefaults instantiates a new SSHLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSHLookupRequestWithDefaults() *SSHLookupRequest {
	var this SSHLookupRequest

	return &this
}

func (o SSHLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["ip"] = o.Ip

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SSHSignRequest struct for SSHSignRequest
type SSHSignRequest struct {
	// Type of certificate to be created; either \"user\" or \"host\".
	CertType string `json:"cert_type"`
	// Critical options that the certificate should be signed for.
	CriticalOptions map[string]interface{} `json:"critical_options"`
	// Extensions that the certificate should be signed for.
	Extensions map[string]interface{} `json:"extensions"`
	// Key id that the created certificate should have. If not specified, the display name of the token will be used.
	KeyId string `json:"key_id"`
	// SSH public key that should be signed.
	PublicKey string `json:"public_key"`
	// The requested Time To Live for the SSH certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be later than the role max TTL.
	Ttl int32 `json:"ttl"`
	// Valid principals, either usernames or hostnames, that the certificate should be signed for.
	ValidPrincipals string `json:"valid_principals"`
}

// NewSSHSignRequestWithDefaults instantiates a new SSHSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSHSignRequestWithDefaults() *SSHSignRequest {
	var this SSHSignRequest

	this.CertType = "user"

	return &this
}

func (o SSHSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["cert_type"] = o.CertType
	toSerialize["critical_options"] = o.CriticalOptions
	toSerialize["extensions"] = o.Extensions
	toSerialize["key_id"] = o.KeyId
	toSerialize["public_key"] = o.PublicKey
	toSerialize["ttl"] = o.Ttl
	toSerialize["valid_principals"] = o.ValidPrincipals

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SSHVerifyRequest struct for SSHVerifyRequest
type SSHVerifyRequest struct {
	// [Required] One-Time-Key that needs to be validated
	Otp string `json:"otp"`
}

// NewSSHVerifyRequestWithDefaults instantiates a new SSHVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSHVerifyRequestWithDefaults() *SSHVerifyRequest {
	var this SSHVerifyRequest

	return &this
}

func (o SSHVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["otp"] = o.Otp

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SSHWriteCAConfigRequest struct for SSHWriteCAConfigRequest
type SSHWriteCAConfigRequest struct {
	// Generate SSH key pair internally rather than use the private_key and public_key fields.
	GenerateSigningKey bool `json:"generate_signing_key"`
	// Specifies the desired key bits when generating variable-length keys (such as when key_type=\"ssh-rsa\") or which NIST P-curve to use when key_type=\"ec\" (256, 384, or 521).
	KeyBits int32 `json:"key_bits"`
	// Specifies the desired key type when generating; could be a OpenSSH key type identifier (ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, ecdsa-sha2-nistp521, or ssh-ed25519) or an algorithm (rsa, ec, ed25519).
	KeyType string `json:"key_type"`
	// Private half of the SSH key that will be used to sign certificates.
	PrivateKey string `json:"private_key"`
	// Public half of the SSH key that will be used to sign certificates.
	PublicKey string `json:"public_key"`
}

// NewSSHWriteCAConfigRequestWithDefaults instantiates a new SSHWriteCAConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSHWriteCAConfigRequestWithDefaults() *SSHWriteCAConfigRequest {
	var this SSHWriteCAConfigRequest

	this.GenerateSigningKey = true
	this.KeyBits = 0
	this.KeyType = "ssh-rsa"

	return &this
}

func (o SSHWriteCAConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["generate_signing_key"] = o.GenerateSigningKey
	toSerialize["key_bits"] = o.KeyBits
	toSerialize["key_type"] = o.KeyType
	toSerialize["private_key"] = o.PrivateKey
	toSerialize["public_key"] = o.PublicKey

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SSHWriteCredentialsRequest struct for SSHWriteCredentialsRequest
type SSHWriteCredentialsRequest struct {
	// [Required] IP of the remote host
	Ip string `json:"ip"`
	// [Optional] Username in remote host
	Username string `json:"username"`
}

// NewSSHWriteCredentialsRequestWithDefaults instantiates a new SSHWriteCredentialsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSHWriteCredentialsRequestWithDefaults() *SSHWriteCredentialsRequest {
	var this SSHWriteCredentialsRequest

	return &this
}

func (o SSHWriteCredentialsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["ip"] = o.Ip
	toSerialize["username"] = o.Username

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SSHWriteIssueRequest struct for SSHWriteIssueRequest
type SSHWriteIssueRequest struct {
	// Type of certificate to be created; either \"user\" or \"host\".
	CertType string `json:"cert_type"`
	// Critical options that the certificate should be signed for.
	CriticalOptions map[string]interface{} `json:"critical_options"`
	// Extensions that the certificate should be signed for.
	Extensions map[string]interface{} `json:"extensions"`
	// Specifies the number of bits to use for the generated keys.
	KeyBits int32 `json:"key_bits"`
	// Key id that the created certificate should have. If not specified, the display name of the token will be used.
	KeyId string `json:"key_id"`
	// Specifies the desired key type; must be `rsa`, `ed25519` or `ec`
	KeyType string `json:"key_type"`
	// The requested Time To Live for the SSH certificate; sets the expiration date. If not specified the role default, backend default, or system default TTL is used, in that order. Cannot be later than the role max TTL.
	Ttl int32 `json:"ttl"`
	// Valid principals, either usernames or hostnames, that the certificate should be signed for.
	ValidPrincipals string `json:"valid_principals"`
}

// NewSSHWriteIssueRequestWithDefaults instantiates a new SSHWriteIssueRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSHWriteIssueRequestWithDefaults() *SSHWriteIssueRequest {
	var this SSHWriteIssueRequest

	this.CertType = "user"
	this.KeyBits = 0
	this.KeyType = "rsa"

	return &this
}

func (o SSHWriteIssueRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["cert_type"] = o.CertType
	toSerialize["critical_options"] = o.CriticalOptions
	toSerialize["extensions"] = o.Extensions
	toSerialize["key_bits"] = o.KeyBits
	toSerialize["key_id"] = o.KeyId
	toSerialize["key_type"] = o.KeyType
	toSerialize["ttl"] = o.Ttl
	toSerialize["valid_principals"] = o.ValidPrincipals

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SSHWriteKeysRequest struct for SSHWriteKeysRequest
type SSHWriteKeysRequest struct {
	// [Required] SSH private key with super user privileges in host
	Key string `json:"key"`
}

// NewSSHWriteKeysRequestWithDefaults instantiates a new SSHWriteKeysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSHWriteKeysRequestWithDefaults() *SSHWriteKeysRequest {
	var this SSHWriteKeysRequest

	return &this
}

func (o SSHWriteKeysRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["key"] = o.Key

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SSHWriteRoleRequest struct for SSHWriteRoleRequest
type SSHWriteRoleRequest struct {
	// [Required for Dynamic type] [Not applicable for OTP type] [Not applicable for CA type] Admin user at remote host. The shared key being registered should be for this user and should have root privileges. Everytime a dynamic credential is being generated for other users, Vault uses this admin username to login to remote host and install the generated credential for the other user.
	AdminUser string `json:"admin_user"`
	// When supplied, this value specifies a signing algorithm for the key. Possible values: ssh-rsa, rsa-sha2-256, rsa-sha2-512, default, or the empty string.
	AlgorithmSigner string `json:"algorithm_signer"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, host certificates that are requested are allowed to use the base domains listed in \"allowed_domains\", e.g. \"example.com\". This is a separate option as in some cases this can be considered a security threat.
	AllowBareDomains bool `json:"allow_bare_domains"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, certificates are allowed to be signed for use as a 'host'.
	AllowHostCertificates bool `json:"allow_host_certificates"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, host certificates that are requested are allowed to use subdomains of those listed in \"allowed_domains\".
	AllowSubdomains bool `json:"allow_subdomains"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, certificates are allowed to be signed for use as a 'user'.
	AllowUserCertificates bool `json:"allow_user_certificates"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If true, users can override the key ID for a signed certificate with the \"key_id\" field. When false, the key ID will always be the token display name. The key ID is logged by the SSH server and can be useful for auditing.
	AllowUserKeyIds bool `json:"allow_user_key_ids"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] A comma-separated list of critical options that certificates can have when signed. To allow any critical options, set this to an empty string.
	AllowedCriticalOptions string `json:"allowed_critical_options"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If this option is not specified, client can request for a signed certificate for any valid host. If only certain domains are allowed, then this list enforces it.
	AllowedDomains string `json:"allowed_domains"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, Allowed domains can be specified using identity template policies. Non-templated domains are also permitted.
	AllowedDomainsTemplate bool `json:"allowed_domains_template"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] A comma-separated list of extensions that certificates can have when signed. An empty list means that no extension overrides are allowed by an end-user; explicitly specify '*' to allow any extensions to be set.
	AllowedExtensions string `json:"allowed_extensions"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, allows the enforcement of key types and minimum key sizes to be signed.
	AllowedUserKeyLengths map[string]interface{} `json:"allowed_user_key_lengths"`
	// [Optional for all types] [Works differently for CA type] If this option is not specified, or is '*', client can request a credential for any valid user at the remote host, including the admin user. If only certain usernames are to be allowed, then this list enforces it. If this field is set, then credentials can only be created for default_user and usernames present in this list. Setting this option will enable all the users with access to this role to fetch credentials for all other usernames in this list. Use with caution. N.B.: with the CA type, an empty list means that no users are allowed; explicitly specify '*' to allow any user.
	AllowedUsers string `json:"allowed_users"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, Allowed users can be specified using identity template policies. Non-templated users are also permitted.
	AllowedUsersTemplate bool `json:"allowed_users_template"`
	// [Optional for Dynamic type] [Optional for OTP type] [Not applicable for CA type] Comma separated list of CIDR blocks for which the role is applicable for. CIDR blocks can belong to more than one role.
	CidrList string `json:"cidr_list"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] Critical options certificates should have if none are provided when signing. This field takes in key value pairs in JSON format. Note that these are not restricted by \"allowed_critical_options\". Defaults to none.
	DefaultCriticalOptions map[string]interface{} `json:"default_critical_options"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] Extensions certificates should have if none are provided when signing. This field takes in key value pairs in JSON format. Note that these are not restricted by \"allowed_extensions\". Defaults to none.
	DefaultExtensions map[string]interface{} `json:"default_extensions"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, Default extension values can be specified using identity template policies. Non-templated extension values are also permitted.
	DefaultExtensionsTemplate bool `json:"default_extensions_template"`
	// [Required for Dynamic type] [Required for OTP type] [Optional for CA type] Default username for which a credential will be generated. When the endpoint 'creds/' is used without a username, this value will be used as default username.
	DefaultUser string `json:"default_user"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] If set, Default user can be specified using identity template policies. Non-templated users are also permitted.
	DefaultUserTemplate bool `json:"default_user_template"`
	// [Optional for Dynamic type] [Optional for OTP type] [Not applicable for CA type] Comma separated list of CIDR blocks. IP addresses belonging to these blocks are not accepted by the role. This is particularly useful when big CIDR blocks are being used by the role and certain parts of it needs to be kept out.
	ExcludeCidrList string `json:"exclude_cidr_list"`
	// [Optional for Dynamic type] [Not-applicable for OTP type] [Not applicable for CA type] Script used to install and uninstall public keys in the target machine. The inbuilt default install script will be for Linux hosts. For sample script, refer the project documentation website.
	InstallScript string `json:"install_script"`
	// [Required for Dynamic type] [Not applicable for OTP type] [Not applicable for CA type] Name of the registered key in Vault. Before creating the role, use the 'keys/' endpoint to create a named key.
	Key string `json:"key"`
	// [Optional for Dynamic type] [Not applicable for OTP type] [Not applicable for CA type] Length of the RSA dynamic key in bits. It is 1024 by default or it can be 2048.
	KeyBits int32 `json:"key_bits"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] When supplied, this value specifies a custom format for the key id of a signed certificate. The following variables are available for use: '{{token_display_name}}' - The display name of the token used to make the request. '{{role_name}}' - The name of the role signing the request. '{{public_key_hash}}' - A SHA256 checksum of the public key that is being signed.
	KeyIdFormat string `json:"key_id_format"`
	// [Optional for Dynamic type] [Not applicable for OTP type] [Not applicable for CA type] Comma separated option specifications which will be prefixed to RSA key in authorized_keys file. Options should be valid and comply with authorized_keys file format and should not contain spaces.
	KeyOptionSpecs string `json:"key_option_specs"`
	// [Required for all types] Type of key used to login to hosts. It can be either 'otp', 'dynamic' or 'ca'. 'otp' type requires agent to be installed in remote hosts.
	KeyType string `json:"key_type"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] The maximum allowed lease duration
	MaxTtl int32 `json:"max_ttl"`
	// The duration that the SSH certificate should be backdated by at issuance.
	NotBeforeDuration int32 `json:"not_before_duration"`
	// [Optional for Dynamic type] [Optional for OTP type] [Not applicable for CA type] Port number for SSH connection. Default is '22'. Port number does not play any role in creation of OTP. For 'otp' type, this is just a way to inform client about the port number to use. Port number will be returned to client by Vault server along with OTP.
	Port int32 `json:"port"`
	// [Not applicable for Dynamic type] [Not applicable for OTP type] [Optional for CA type] The lease duration if no specific lease duration is requested. The lease duration controls the expiration of certificates issued by this backend. Defaults to the value of max_ttl.
	Ttl int32 `json:"ttl"`
}

// NewSSHWriteRoleRequestWithDefaults instantiates a new SSHWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSHWriteRoleRequestWithDefaults() *SSHWriteRoleRequest {
	var this SSHWriteRoleRequest

	this.AllowHostCertificates = false
	this.AllowUserCertificates = false
	this.AllowedDomainsTemplate = false
	this.AllowedUsersTemplate = false
	this.DefaultExtensionsTemplate = false
	this.DefaultUserTemplate = false
	this.NotBeforeDuration = 30

	return &this
}

func (o SSHWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["admin_user"] = o.AdminUser
	toSerialize["algorithm_signer"] = o.AlgorithmSigner
	toSerialize["allow_bare_domains"] = o.AllowBareDomains
	toSerialize["allow_host_certificates"] = o.AllowHostCertificates
	toSerialize["allow_subdomains"] = o.AllowSubdomains
	toSerialize["allow_user_certificates"] = o.AllowUserCertificates
	toSerialize["allow_user_key_ids"] = o.AllowUserKeyIds
	toSerialize["allowed_critical_options"] = o.AllowedCriticalOptions
	toSerialize["allowed_domains"] = o.AllowedDomains
	toSerialize["allowed_domains_template"] = o.AllowedDomainsTemplate
	toSerialize["allowed_extensions"] = o.AllowedExtensions
	toSerialize["allowed_user_key_lengths"] = o.AllowedUserKeyLengths
	toSerialize["allowed_users"] = o.AllowedUsers
	toSerialize["allowed_users_template"] = o.AllowedUsersTemplate
	toSerialize["cidr_list"] = o.CidrList
	toSerialize["default_critical_options"] = o.DefaultCriticalOptions
	toSerialize["default_extensions"] = o.DefaultExtensions
	toSerialize["default_extensions_template"] = o.DefaultExtensionsTemplate
	toSerialize["default_user"] = o.DefaultUser
	toSerialize["default_user_template"] = o.DefaultUserTemplate
	toSerialize["exclude_cidr_list"] = o.ExcludeCidrList
	toSerialize["install_script"] = o.InstallScript
	toSerialize["key"] = o.Key
	toSerialize["key_bits"] = o.KeyBits
	toSerialize["key_id_format"] = o.KeyIdFormat
	toSerialize["key_option_specs"] = o.KeyOptionSpecs
	toSerialize["key_type"] = o.KeyType
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["not_before_duration"] = o.NotBeforeDuration
	toSerialize["port"] = o.Port
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SSHWriteZeroAddressConfigRequest struct for SSHWriteZeroAddressConfigRequest
type SSHWriteZeroAddressConfigRequest struct {
	// [Required] Comma separated list of role names which allows credentials to be requested for any IP address. CIDR blocks previously registered under these roles will be ignored.
	Roles []string `json:"roles"`
}

// NewSSHWriteZeroAddressConfigRequestWithDefaults instantiates a new SSHWriteZeroAddressConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSHWriteZeroAddressConfigRequestWithDefaults() *SSHWriteZeroAddressConfigRequest {
	var this SSHWriteZeroAddressConfigRequest

	return &this
}

func (o SSHWriteZeroAddressConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["roles"] = o.Roles

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SysWritePluginsCatalogNameRequest struct for SysWritePluginsCatalogNameRequest
type SysWritePluginsCatalogNameRequest struct {
	// The args passed to plugin command.
	Args []string `json:"args"`
	// The command used to start the plugin. The executable defined in this command must exist in vault's plugin directory.
	Command string `json:"command"`
	// The environment variables passed to plugin command. Each entry is of the form \"key=value\".
	Env []string `json:"env"`
	// The SHA256 sum of the executable used in the command field. This should be HEX encoded.
	Sha256 string `json:"sha256"`
	// The type of the plugin, may be auth, secret, or database
	Type string `json:"type"`
	// The semantic version of the plugin to use.
	Version string `json:"version"`
}

// NewSysWritePluginsCatalogNameRequestWithDefaults instantiates a new SysWritePluginsCatalogNameRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSysWritePluginsCatalogNameRequestWithDefaults() *SysWritePluginsCatalogNameRequest {
	var this SysWritePluginsCatalogNameRequest

	return &this
}

func (o SysWritePluginsCatalogNameRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["args"] = o.Args
	toSerialize["command"] = o.Command
	toSerialize["env"] = o.Env
	toSerialize["sha256"] = o.Sha256
	toSerialize["type"] = o.Type
	toSerialize["version"] = o.Version

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// SysWriteToolsRandomUrlbytesRequest struct for SysWriteToolsRandomUrlbytesRequest
type SysWriteToolsRandomUrlbytesRequest struct {
	// The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits).
	Bytes int32 `json:"bytes"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\".
	Format string `json:"format"`
	// Which system to source random data from, ether \"platform\", \"seal\", or \"all\".
	Source string `json:"source"`
}

// NewSysWriteToolsRandomUrlbytesRequestWithDefaults instantiates a new SysWriteToolsRandomUrlbytesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSysWriteToolsRandomUrlbytesRequestWithDefaults() *SysWriteToolsRandomUrlbytesRequest {
	var this SysWriteToolsRandomUrlbytesRequest

	this.Bytes = 32
	this.Format = "base64"
	this.Source = "platform"

	return &this
}

func (o SysWriteToolsRandomUrlbytesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bytes"] = o.Bytes
	toSerialize["format"] = o.Format
	toSerialize["source"] = o.Source

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TerraformWriteConfigRequest struct for TerraformWriteConfigRequest
type TerraformWriteConfigRequest struct {
	// The address to access Terraform Cloud or Enterprise. Default is \"https://app.terraform.io\".
	Address string `json:"address"`
	// The base path for the Terraform Cloud or Enterprise API. Default is \"/api/v2/\".
	BasePath string `json:"base_path"`
	// The token to access Terraform Cloud
	Token string `json:"token"`
}

// NewTerraformWriteConfigRequestWithDefaults instantiates a new TerraformWriteConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerraformWriteConfigRequestWithDefaults() *TerraformWriteConfigRequest {
	var this TerraformWriteConfigRequest

	this.Address = "https://app.terraform.io"
	this.BasePath = "/api/v2/"

	return &this
}

func (o TerraformWriteConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["address"] = o.Address
	toSerialize["base_path"] = o.BasePath
	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TerraformWriteRoleRequest struct for TerraformWriteRoleRequest
type TerraformWriteRoleRequest struct {
	// Maximum time for role. If not set or set to 0, will use system default.
	MaxTtl int32 `json:"max_ttl"`
	// Name of the Terraform Cloud or Enterprise organization
	Organization string `json:"organization"`
	// ID of the Terraform Cloud or Enterprise team under organization (e.g., settings/teams/team-xxxxxxxxxxxxx)
	TeamId string `json:"team_id"`
	// Default lease for generated credentials. If not set or set to 0, will use system default.
	Ttl int32 `json:"ttl"`
	// ID of the Terraform Cloud or Enterprise user (e.g., user-xxxxxxxxxxxxxxxx)
	UserId string `json:"user_id"`
}

// NewTerraformWriteRoleRequestWithDefaults instantiates a new TerraformWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerraformWriteRoleRequestWithDefaults() *TerraformWriteRoleRequest {
	var this TerraformWriteRoleRequest

	return &this
}

func (o TerraformWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["organization"] = o.Organization
	toSerialize["team_id"] = o.TeamId
	toSerialize["ttl"] = o.Ttl
	toSerialize["user_id"] = o.UserId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRenewAccessorRequest struct for TokenRenewAccessorRequest
type TokenRenewAccessorRequest struct {
	// Accessor of the token to renew (request body)
	Accessor string `json:"accessor"`
	// The desired increment in seconds to the token expiration
	Increment int32 `json:"increment"`
}

// NewTokenRenewAccessorRequestWithDefaults instantiates a new TokenRenewAccessorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRenewAccessorRequestWithDefaults() *TokenRenewAccessorRequest {
	var this TokenRenewAccessorRequest

	this.Increment = 0

	return &this
}

func (o TokenRenewAccessorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["accessor"] = o.Accessor
	toSerialize["increment"] = o.Increment

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRenewRequest struct for TokenRenewRequest
type TokenRenewRequest struct {
	// The desired increment in seconds to the token expiration
	Increment int32 `json:"increment"`
	// Token to renew (request body)
	Token string `json:"token"`
}

// NewTokenRenewRequestWithDefaults instantiates a new TokenRenewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRenewRequestWithDefaults() *TokenRenewRequest {
	var this TokenRenewRequest

	this.Increment = 0

	return &this
}

func (o TokenRenewRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["increment"] = o.Increment
	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRenewSelfRequest struct for TokenRenewSelfRequest
type TokenRenewSelfRequest struct {
	// The desired increment in seconds to the token expiration
	Increment int32 `json:"increment"`
	// Token to renew (unused, does not need to be set)
	Token string `json:"token"`
}

// NewTokenRenewSelfRequestWithDefaults instantiates a new TokenRenewSelfRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRenewSelfRequestWithDefaults() *TokenRenewSelfRequest {
	var this TokenRenewSelfRequest

	this.Increment = 0

	return &this
}

func (o TokenRenewSelfRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["increment"] = o.Increment
	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRevokeAccessorRequest struct for TokenRevokeAccessorRequest
type TokenRevokeAccessorRequest struct {
	// Accessor of the token (request body)
	Accessor string `json:"accessor"`
}

// NewTokenRevokeAccessorRequestWithDefaults instantiates a new TokenRevokeAccessorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRevokeAccessorRequestWithDefaults() *TokenRevokeAccessorRequest {
	var this TokenRevokeAccessorRequest

	return &this
}

func (o TokenRevokeAccessorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["accessor"] = o.Accessor

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRevokeOrphanRequest struct for TokenRevokeOrphanRequest
type TokenRevokeOrphanRequest struct {
	// Token to revoke (request body)
	Token string `json:"token"`
}

// NewTokenRevokeOrphanRequestWithDefaults instantiates a new TokenRevokeOrphanRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRevokeOrphanRequestWithDefaults() *TokenRevokeOrphanRequest {
	var this TokenRevokeOrphanRequest

	return &this
}

func (o TokenRevokeOrphanRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenRevokeRequest struct for TokenRevokeRequest
type TokenRevokeRequest struct {
	// Token to revoke (request body)
	Token string `json:"token"`
}

// NewTokenRevokeRequestWithDefaults instantiates a new TokenRevokeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRevokeRequestWithDefaults() *TokenRevokeRequest {
	var this TokenRevokeRequest

	return &this
}

func (o TokenRevokeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenWriteCreateOrphanRequest struct for TokenWriteCreateOrphanRequest
type TokenWriteCreateOrphanRequest struct {
	// Name to associate with this token
	DisplayName string `json:"display_name"`
	// Name of the entity alias to associate with this token
	EntityAlias string `json:"entity_alias"`
	// Explicit Max TTL of this token
	ExplicitMaxTtl string `json:"explicit_max_ttl"`
	// Value for the token
	Id string `json:"id"`
	// Arbitrary key=value metadata to associate with the token
	Metadata map[string]interface{} `json:"metadata"`
	// Do not include default policy for this token
	NoDefaultPolicy bool `json:"no_default_policy"`
	// Create the token with no parent
	NoParent bool `json:"no_parent"`
	// Max number of uses for this token
	NumUses int32 `json:"num_uses"`
	// Renew period
	Period string `json:"period"`
	// List of policies for the token
	Policies []string `json:"policies"`
	// Allow token to be renewed past its initial TTL up to system/mount maximum TTL
	Renewable bool `json:"renewable"`
	// Name of the role
	RoleName string `json:"role_name"`
	// Time to live for this token
	Ttl string `json:"ttl"`
	// Token type
	Type string `json:"type"`
}

// NewTokenWriteCreateOrphanRequestWithDefaults instantiates a new TokenWriteCreateOrphanRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenWriteCreateOrphanRequestWithDefaults() *TokenWriteCreateOrphanRequest {
	var this TokenWriteCreateOrphanRequest

	return &this
}

func (o TokenWriteCreateOrphanRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["display_name"] = o.DisplayName
	toSerialize["entity_alias"] = o.EntityAlias
	toSerialize["explicit_max_ttl"] = o.ExplicitMaxTtl
	toSerialize["id"] = o.Id
	toSerialize["metadata"] = o.Metadata
	toSerialize["no_default_policy"] = o.NoDefaultPolicy
	toSerialize["no_parent"] = o.NoParent
	toSerialize["num_uses"] = o.NumUses
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["renewable"] = o.Renewable
	toSerialize["role_name"] = o.RoleName
	toSerialize["ttl"] = o.Ttl
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenWriteCreateRequest struct for TokenWriteCreateRequest
type TokenWriteCreateRequest struct {
	// Name to associate with this token
	DisplayName string `json:"display_name"`
	// Name of the entity alias to associate with this token
	EntityAlias string `json:"entity_alias"`
	// Explicit Max TTL of this token
	ExplicitMaxTtl string `json:"explicit_max_ttl"`
	// Value for the token
	Id string `json:"id"`
	// Arbitrary key=value metadata to associate with the token
	Metadata map[string]interface{} `json:"metadata"`
	// Do not include default policy for this token
	NoDefaultPolicy bool `json:"no_default_policy"`
	// Create the token with no parent
	NoParent bool `json:"no_parent"`
	// Max number of uses for this token
	NumUses int32 `json:"num_uses"`
	// Renew period
	Period string `json:"period"`
	// List of policies for the token
	Policies []string `json:"policies"`
	// Allow token to be renewed past its initial TTL up to system/mount maximum TTL
	Renewable bool `json:"renewable"`
	// Time to live for this token
	Ttl string `json:"ttl"`
	// Token type
	Type string `json:"type"`
}

// NewTokenWriteCreateRequestWithDefaults instantiates a new TokenWriteCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenWriteCreateRequestWithDefaults() *TokenWriteCreateRequest {
	var this TokenWriteCreateRequest

	return &this
}

func (o TokenWriteCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["display_name"] = o.DisplayName
	toSerialize["entity_alias"] = o.EntityAlias
	toSerialize["explicit_max_ttl"] = o.ExplicitMaxTtl
	toSerialize["id"] = o.Id
	toSerialize["metadata"] = o.Metadata
	toSerialize["no_default_policy"] = o.NoDefaultPolicy
	toSerialize["no_parent"] = o.NoParent
	toSerialize["num_uses"] = o.NumUses
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["renewable"] = o.Renewable
	toSerialize["ttl"] = o.Ttl
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenWriteCreateWithRoleRequest struct for TokenWriteCreateWithRoleRequest
type TokenWriteCreateWithRoleRequest struct {
	// Name to associate with this token
	DisplayName string `json:"display_name"`
	// Name of the entity alias to associate with this token
	EntityAlias string `json:"entity_alias"`
	// Explicit Max TTL of this token
	ExplicitMaxTtl string `json:"explicit_max_ttl"`
	// Value for the token
	Id string `json:"id"`
	// Arbitrary key=value metadata to associate with the token
	Metadata map[string]interface{} `json:"metadata"`
	// Do not include default policy for this token
	NoDefaultPolicy bool `json:"no_default_policy"`
	// Create the token with no parent
	NoParent bool `json:"no_parent"`
	// Max number of uses for this token
	NumUses int32 `json:"num_uses"`
	// Renew period
	Period string `json:"period"`
	// List of policies for the token
	Policies []string `json:"policies"`
	// Allow token to be renewed past its initial TTL up to system/mount maximum TTL
	Renewable bool `json:"renewable"`
	// Time to live for this token
	Ttl string `json:"ttl"`
	// Token type
	Type string `json:"type"`
}

// NewTokenWriteCreateWithRoleRequestWithDefaults instantiates a new TokenWriteCreateWithRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenWriteCreateWithRoleRequestWithDefaults() *TokenWriteCreateWithRoleRequest {
	var this TokenWriteCreateWithRoleRequest

	return &this
}

func (o TokenWriteCreateWithRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["display_name"] = o.DisplayName
	toSerialize["entity_alias"] = o.EntityAlias
	toSerialize["explicit_max_ttl"] = o.ExplicitMaxTtl
	toSerialize["id"] = o.Id
	toSerialize["metadata"] = o.Metadata
	toSerialize["no_default_policy"] = o.NoDefaultPolicy
	toSerialize["no_parent"] = o.NoParent
	toSerialize["num_uses"] = o.NumUses
	toSerialize["period"] = o.Period
	toSerialize["policies"] = o.Policies
	toSerialize["renewable"] = o.Renewable
	toSerialize["ttl"] = o.Ttl
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenWriteLookupAccessorRequest struct for TokenWriteLookupAccessorRequest
type TokenWriteLookupAccessorRequest struct {
	// Accessor of the token to look up (request body)
	Accessor string `json:"accessor"`
}

// NewTokenWriteLookupAccessorRequestWithDefaults instantiates a new TokenWriteLookupAccessorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenWriteLookupAccessorRequestWithDefaults() *TokenWriteLookupAccessorRequest {
	var this TokenWriteLookupAccessorRequest

	return &this
}

func (o TokenWriteLookupAccessorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["accessor"] = o.Accessor

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenWriteLookupRequest struct for TokenWriteLookupRequest
type TokenWriteLookupRequest struct {
	// Token to lookup (POST request body)
	Token string `json:"token"`
}

// NewTokenWriteLookupRequestWithDefaults instantiates a new TokenWriteLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenWriteLookupRequestWithDefaults() *TokenWriteLookupRequest {
	var this TokenWriteLookupRequest

	return &this
}

func (o TokenWriteLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenWriteLookupSelfRequest struct for TokenWriteLookupSelfRequest
type TokenWriteLookupSelfRequest struct {
	// Token to look up (unused, does not need to be set)
	Token string `json:"token"`
}

// NewTokenWriteLookupSelfRequestWithDefaults instantiates a new TokenWriteLookupSelfRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenWriteLookupSelfRequestWithDefaults() *TokenWriteLookupSelfRequest {
	var this TokenWriteLookupSelfRequest

	return &this
}

func (o TokenWriteLookupSelfRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TokenWriteRoleRequest struct for TokenWriteRoleRequest
type TokenWriteRoleRequest struct {
	// String or JSON list of allowed entity aliases. If set, specifies the entity aliases which are allowed to be used during token generation. This field supports globbing.
	AllowedEntityAliases []string `json:"allowed_entity_aliases"`
	// If set, tokens can be created with any subset of the policies in this list, rather than the normal semantics of tokens being a subset of the calling token's policies. The parameter is a comma-delimited string of policy names.
	AllowedPolicies []string `json:"allowed_policies"`
	// If set, tokens can be created with any subset of glob matched policies in this list, rather than the normal semantics of tokens being a subset of the calling token's policies. The parameter is a comma-delimited string of policy name globs.
	AllowedPoliciesGlob []string `json:"allowed_policies_glob"`
	// Use 'token_bound_cidrs' instead.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs"`
	// If set, successful token creation via this role will require that no policies in the given list are requested. The parameter is a comma-delimited string of policy names.
	DisallowedPolicies []string `json:"disallowed_policies"`
	// If set, successful token creation via this role will require that no requested policies glob match any of policies in this list. The parameter is a comma-delimited string of policy name globs.
	DisallowedPoliciesGlob []string `json:"disallowed_policies_glob"`
	// Use 'token_explicit_max_ttl' instead.
	// Deprecated
	ExplicitMaxTtl int32 `json:"explicit_max_ttl"`
	// If true, tokens created via this role will be orphan tokens (have no parent)
	Orphan bool `json:"orphan"`
	// If set, tokens created via this role will contain the given suffix as a part of their path. This can be used to assist use of the 'revoke-prefix' endpoint later on. The given suffix must match the regular expression.\\w[\\w-.]+\\w
	PathSuffix string `json:"path_suffix"`
	// Use 'token_period' instead.
	// Deprecated
	Period int32 `json:"period"`
	// Tokens created via this role will be renewable or not according to this value. Defaults to \"true\".
	Renewable bool `json:"renewable"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
}

// NewTokenWriteRoleRequestWithDefaults instantiates a new TokenWriteRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenWriteRoleRequestWithDefaults() *TokenWriteRoleRequest {
	var this TokenWriteRoleRequest

	this.Renewable = true
	this.TokenType = "default-service"

	return &this
}

func (o TokenWriteRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allowed_entity_aliases"] = o.AllowedEntityAliases
	toSerialize["allowed_policies"] = o.AllowedPolicies
	toSerialize["allowed_policies_glob"] = o.AllowedPoliciesGlob
	toSerialize["bound_cidrs"] = o.BoundCidrs
	toSerialize["disallowed_policies"] = o.DisallowedPolicies
	toSerialize["disallowed_policies_glob"] = o.DisallowedPoliciesGlob
	toSerialize["explicit_max_ttl"] = o.ExplicitMaxTtl
	toSerialize["orphan"] = o.Orphan
	toSerialize["path_suffix"] = o.PathSuffix
	toSerialize["period"] = o.Period
	toSerialize["renewable"] = o.Renewable
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_type"] = o.TokenType

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ToolsGenerateRandomRequest struct for ToolsGenerateRandomRequest
type ToolsGenerateRandomRequest struct {
	// The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits).
	Bytes int32 `json:"bytes"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\".
	Format string `json:"format"`
	// Which system to source random data from, ether \"platform\", \"seal\", or \"all\".
	Source string `json:"source"`
	// The number of bytes to generate (POST URL parameter)
	Urlbytes string `json:"urlbytes"`
}

// NewToolsGenerateRandomRequestWithDefaults instantiates a new ToolsGenerateRandomRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolsGenerateRandomRequestWithDefaults() *ToolsGenerateRandomRequest {
	var this ToolsGenerateRandomRequest

	this.Bytes = 32
	this.Format = "base64"
	this.Source = "platform"

	return &this
}

func (o ToolsGenerateRandomRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bytes"] = o.Bytes
	toSerialize["format"] = o.Format
	toSerialize["source"] = o.Source
	toSerialize["urlbytes"] = o.Urlbytes

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ToolsGenerateRandomSourceBytesRequest struct for ToolsGenerateRandomSourceBytesRequest
type ToolsGenerateRandomSourceBytesRequest struct {
	// The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits).
	Bytes int32 `json:"bytes"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\".
	Format string `json:"format"`
}

// NewToolsGenerateRandomSourceBytesRequestWithDefaults instantiates a new ToolsGenerateRandomSourceBytesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolsGenerateRandomSourceBytesRequestWithDefaults() *ToolsGenerateRandomSourceBytesRequest {
	var this ToolsGenerateRandomSourceBytesRequest

	this.Bytes = 32
	this.Format = "base64"

	return &this
}

func (o ToolsGenerateRandomSourceBytesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bytes"] = o.Bytes
	toSerialize["format"] = o.Format

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ToolsGenerateRandomSourceRequest struct for ToolsGenerateRandomSourceRequest
type ToolsGenerateRandomSourceRequest struct {
	// The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits).
	Bytes int32 `json:"bytes"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\".
	Format string `json:"format"`
	// The number of bytes to generate (POST URL parameter)
	Urlbytes string `json:"urlbytes"`
}

// NewToolsGenerateRandomSourceRequestWithDefaults instantiates a new ToolsGenerateRandomSourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolsGenerateRandomSourceRequestWithDefaults() *ToolsGenerateRandomSourceRequest {
	var this ToolsGenerateRandomSourceRequest

	this.Bytes = 32
	this.Format = "base64"

	return &this
}

func (o ToolsGenerateRandomSourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bytes"] = o.Bytes
	toSerialize["format"] = o.Format
	toSerialize["urlbytes"] = o.Urlbytes

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ToolsHashRequest struct for ToolsHashRequest
type ToolsHashRequest struct {
	// Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\".
	Algorithm string `json:"algorithm"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"hex\".
	Format string `json:"format"`
	// The base64-encoded input data
	Input string `json:"input"`
	// Algorithm to use (POST URL parameter)
	Urlalgorithm string `json:"urlalgorithm"`
}

// NewToolsHashRequestWithDefaults instantiates a new ToolsHashRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolsHashRequestWithDefaults() *ToolsHashRequest {
	var this ToolsHashRequest

	this.Algorithm = "sha2-256"
	this.Format = "hex"

	return &this
}

func (o ToolsHashRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["format"] = o.Format
	toSerialize["input"] = o.Input
	toSerialize["urlalgorithm"] = o.Urlalgorithm

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// ToolsHashWithRequest struct for ToolsHashWithRequest
type ToolsHashWithRequest struct {
	// Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\".
	Algorithm string `json:"algorithm"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"hex\".
	Format string `json:"format"`
	// The base64-encoded input data
	Input string `json:"input"`
}

// NewToolsHashWithRequestWithDefaults instantiates a new ToolsHashWithRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolsHashWithRequestWithDefaults() *ToolsHashWithRequest {
	var this ToolsHashWithRequest

	this.Algorithm = "sha2-256"
	this.Format = "hex"

	return &this
}

func (o ToolsHashWithRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["format"] = o.Format
	toSerialize["input"] = o.Input

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TOTPWriteCodeRequest struct for TOTPWriteCodeRequest
type TOTPWriteCodeRequest struct {
	// TOTP code to be validated.
	Code string `json:"code"`
}

// NewTOTPWriteCodeRequestWithDefaults instantiates a new TOTPWriteCodeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTOTPWriteCodeRequestWithDefaults() *TOTPWriteCodeRequest {
	var this TOTPWriteCodeRequest

	return &this
}

func (o TOTPWriteCodeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["code"] = o.Code

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TOTPWriteKeyRequest struct for TOTPWriteKeyRequest
type TOTPWriteKeyRequest struct {
	// The name of the account associated with the key. Required if generate is true.
	AccountName string `json:"account_name"`
	// The hashing algorithm used to generate the TOTP token. Options include SHA1, SHA256 and SHA512.
	Algorithm string `json:"algorithm"`
	// The number of digits in the generated TOTP token. This value can either be 6 or 8.
	Digits int32 `json:"digits"`
	// Determines if a QR code and url are returned upon generating a key. Only used if generate is true.
	Exported bool `json:"exported"`
	// Determines if a key should be generated by Vault or if a key is being passed from another service.
	Generate bool `json:"generate"`
	// The name of the key's issuing organization. Required if generate is true.
	Issuer string `json:"issuer"`
	// The shared master key used to generate a TOTP token. Only used if generate is false.
	Key string `json:"key"`
	// Determines the size in bytes of the generated key. Only used if generate is true.
	KeySize int32 `json:"key_size"`
	// The length of time used to generate a counter for the TOTP token calculation.
	Period int32 `json:"period"`
	// The pixel size of the generated square QR code. Only used if generate is true and exported is true. If this value is 0, a QR code will not be returned.
	QrSize int32 `json:"qr_size"`
	// The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1. Only used if generate is true.
	Skew int32 `json:"skew"`
	// A TOTP url string containing all of the parameters for key setup. Only used if generate is false.
	Url string `json:"url"`
}

// NewTOTPWriteKeyRequestWithDefaults instantiates a new TOTPWriteKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTOTPWriteKeyRequestWithDefaults() *TOTPWriteKeyRequest {
	var this TOTPWriteKeyRequest

	this.Algorithm = "SHA1"
	this.Digits = 6
	this.Exported = true
	this.Generate = false
	this.KeySize = 20
	this.Period = 30
	this.QrSize = 200
	this.Skew = 1

	return &this
}

func (o TOTPWriteKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["account_name"] = o.AccountName
	toSerialize["algorithm"] = o.Algorithm
	toSerialize["digits"] = o.Digits
	toSerialize["exported"] = o.Exported
	toSerialize["generate"] = o.Generate
	toSerialize["issuer"] = o.Issuer
	toSerialize["key"] = o.Key
	toSerialize["key_size"] = o.KeySize
	toSerialize["period"] = o.Period
	toSerialize["qr_size"] = o.QrSize
	toSerialize["skew"] = o.Skew
	toSerialize["url"] = o.Url

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitDecryptRequest struct for TransitDecryptRequest
type TransitDecryptRequest struct {
	// When using an AEAD cipher mode, such as AES-GCM, this parameter allows passing associated data (AD/AAD) into the encryption function; this data must be passed on subsequent decryption requests but can be transited in plaintext. On successful decryption, both the ciphertext and the associated data are attested not to have been tampered with.
	AssociatedData string `json:"associated_data"`
	// The ciphertext to decrypt, provided as returned by encrypt.
	Ciphertext string `json:"ciphertext"`
	// Base64 encoded context for key derivation. Required if key derivation is enabled.
	Context string `json:"context"`
	// Base64 encoded nonce value used during encryption. Must be provided if convergent encryption is enabled for this key and the key was generated with Vault 0.6.1. Not required for keys created in 0.6.2+.
	Nonce string `json:"nonce"`
	// Ordinarily, if a batch item fails to decrypt due to a bad input, but other batch items succeed, the HTTP response code is 400 (Bad Request). Some applications may want to treat partial failures differently. Providing the parameter returns the given response code integer instead of a 400 in this case. If all values fail HTTP 400 is still returned.
	PartialFailureResponseCode int32 `json:"partial_failure_response_code"`
}

// NewTransitDecryptRequestWithDefaults instantiates a new TransitDecryptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitDecryptRequestWithDefaults() *TransitDecryptRequest {
	var this TransitDecryptRequest

	return &this
}

func (o TransitDecryptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["associated_data"] = o.AssociatedData
	toSerialize["ciphertext"] = o.Ciphertext
	toSerialize["context"] = o.Context
	toSerialize["nonce"] = o.Nonce
	toSerialize["partial_failure_response_code"] = o.PartialFailureResponseCode

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitEncryptRequest struct for TransitEncryptRequest
type TransitEncryptRequest struct {
	// When using an AEAD cipher mode, such as AES-GCM, this parameter allows passing associated data (AD/AAD) into the encryption function; this data must be passed on subsequent decryption requests but can be transited in plaintext. On successful decryption, both the ciphertext and the associated data are attested not to have been tampered with.
	AssociatedData string `json:"associated_data"`
	// Base64 encoded context for key derivation. Required if key derivation is enabled
	Context string `json:"context"`
	// This parameter will only be used when a key is expected to be created. Whether to support convergent encryption. This is only supported when using a key with key derivation enabled and will require all requests to carry both a context and 96-bit (12-byte) nonce. The given nonce will be used in place of a randomly generated nonce. As a result, when the same context and nonce are supplied, the same ciphertext is generated. It is *very important* when using this mode that you ensure that all nonces are unique for a given context. Failing to do so will severely impact the ciphertext's security.
	ConvergentEncryption bool `json:"convergent_encryption"`
	// The version of the key to use for encryption. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion int32 `json:"key_version"`
	// Base64 encoded nonce value. Must be provided if convergent encryption is enabled for this key and the key was generated with Vault 0.6.1. Not required for keys created in 0.6.2+. The value must be exactly 96 bits (12 bytes) long and the user must ensure that for any given context (and thus, any given encryption key) this nonce value is **never reused**.
	Nonce string `json:"nonce"`
	// Ordinarily, if a batch item fails to encrypt due to a bad input, but other batch items succeed, the HTTP response code is 400 (Bad Request). Some applications may want to treat partial failures differently. Providing the parameter returns the given response code integer instead of a 400 in this case. If all values fail HTTP 400 is still returned.
	PartialFailureResponseCode int32 `json:"partial_failure_response_code"`
	// Base64 encoded plaintext value to be encrypted
	Plaintext string `json:"plaintext"`
	// This parameter is required when encryption key is expected to be created. When performing an upsert operation, the type of key to create. Currently, \"aes128-gcm96\" (symmetric) and \"aes256-gcm96\" (symmetric) are the only types supported. Defaults to \"aes256-gcm96\".
	Type string `json:"type"`
}

// NewTransitEncryptRequestWithDefaults instantiates a new TransitEncryptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitEncryptRequestWithDefaults() *TransitEncryptRequest {
	var this TransitEncryptRequest

	this.Type = "aes256-gcm96"

	return &this
}

func (o TransitEncryptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["associated_data"] = o.AssociatedData
	toSerialize["context"] = o.Context
	toSerialize["convergent_encryption"] = o.ConvergentEncryption
	toSerialize["key_version"] = o.KeyVersion
	toSerialize["nonce"] = o.Nonce
	toSerialize["partial_failure_response_code"] = o.PartialFailureResponseCode
	toSerialize["plaintext"] = o.Plaintext
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitGenerateDataKeyRequest struct for TransitGenerateDataKeyRequest
type TransitGenerateDataKeyRequest struct {
	// Number of bits for the key; currently 128, 256, and 512 bits are supported. Defaults to 256.
	Bits int32 `json:"bits"`
	// Context for key derivation. Required for derived keys.
	Context string `json:"context"`
	// The version of the Vault key to use for encryption of the data key. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion int32 `json:"key_version"`
	// Nonce for when convergent encryption v1 is used (only in Vault 0.6.1)
	Nonce string `json:"nonce"`
}

// NewTransitGenerateDataKeyRequestWithDefaults instantiates a new TransitGenerateDataKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitGenerateDataKeyRequestWithDefaults() *TransitGenerateDataKeyRequest {
	var this TransitGenerateDataKeyRequest

	this.Bits = 256

	return &this
}

func (o TransitGenerateDataKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bits"] = o.Bits
	toSerialize["context"] = o.Context
	toSerialize["key_version"] = o.KeyVersion
	toSerialize["nonce"] = o.Nonce

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitGenerateHMACRequest struct for TransitGenerateHMACRequest
type TransitGenerateHMACRequest struct {
	// Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 Defaults to \"sha2-256\".
	Algorithm string `json:"algorithm"`
	// The base64-encoded input data
	Input string `json:"input"`
	// The version of the key to use for generating the HMAC. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion int32 `json:"key_version"`
	// Algorithm to use (POST URL parameter)
	Urlalgorithm string `json:"urlalgorithm"`
}

// NewTransitGenerateHMACRequestWithDefaults instantiates a new TransitGenerateHMACRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitGenerateHMACRequestWithDefaults() *TransitGenerateHMACRequest {
	var this TransitGenerateHMACRequest

	this.Algorithm = "sha2-256"

	return &this
}

func (o TransitGenerateHMACRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["input"] = o.Input
	toSerialize["key_version"] = o.KeyVersion
	toSerialize["urlalgorithm"] = o.Urlalgorithm

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitGenerateHMACWithAlgorithmRequest struct for TransitGenerateHMACWithAlgorithmRequest
type TransitGenerateHMACWithAlgorithmRequest struct {
	// Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 Defaults to \"sha2-256\".
	Algorithm string `json:"algorithm"`
	// The base64-encoded input data
	Input string `json:"input"`
	// The version of the key to use for generating the HMAC. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion int32 `json:"key_version"`
}

// NewTransitGenerateHMACWithAlgorithmRequestWithDefaults instantiates a new TransitGenerateHMACWithAlgorithmRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitGenerateHMACWithAlgorithmRequestWithDefaults() *TransitGenerateHMACWithAlgorithmRequest {
	var this TransitGenerateHMACWithAlgorithmRequest

	this.Algorithm = "sha2-256"

	return &this
}

func (o TransitGenerateHMACWithAlgorithmRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["input"] = o.Input
	toSerialize["key_version"] = o.KeyVersion

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitGenerateRandomRequest struct for TransitGenerateRandomRequest
type TransitGenerateRandomRequest struct {
	// The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits).
	Bytes int32 `json:"bytes"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\".
	Format string `json:"format"`
	// Which system to source random data from, ether \"platform\", \"seal\", or \"all\".
	Source string `json:"source"`
	// The number of bytes to generate (POST URL parameter)
	Urlbytes string `json:"urlbytes"`
}

// NewTransitGenerateRandomRequestWithDefaults instantiates a new TransitGenerateRandomRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitGenerateRandomRequestWithDefaults() *TransitGenerateRandomRequest {
	var this TransitGenerateRandomRequest

	this.Bytes = 32
	this.Format = "base64"
	this.Source = "platform"

	return &this
}

func (o TransitGenerateRandomRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bytes"] = o.Bytes
	toSerialize["format"] = o.Format
	toSerialize["source"] = o.Source
	toSerialize["urlbytes"] = o.Urlbytes

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitGenerateRandomSourceBytesRequest struct for TransitGenerateRandomSourceBytesRequest
type TransitGenerateRandomSourceBytesRequest struct {
	// The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits).
	Bytes int32 `json:"bytes"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\".
	Format string `json:"format"`
}

// NewTransitGenerateRandomSourceBytesRequestWithDefaults instantiates a new TransitGenerateRandomSourceBytesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitGenerateRandomSourceBytesRequestWithDefaults() *TransitGenerateRandomSourceBytesRequest {
	var this TransitGenerateRandomSourceBytesRequest

	this.Bytes = 32
	this.Format = "base64"

	return &this
}

func (o TransitGenerateRandomSourceBytesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bytes"] = o.Bytes
	toSerialize["format"] = o.Format

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitGenerateRandomSourceRequest struct for TransitGenerateRandomSourceRequest
type TransitGenerateRandomSourceRequest struct {
	// The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits).
	Bytes int32 `json:"bytes"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\".
	Format string `json:"format"`
	// The number of bytes to generate (POST URL parameter)
	Urlbytes string `json:"urlbytes"`
}

// NewTransitGenerateRandomSourceRequestWithDefaults instantiates a new TransitGenerateRandomSourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitGenerateRandomSourceRequestWithDefaults() *TransitGenerateRandomSourceRequest {
	var this TransitGenerateRandomSourceRequest

	this.Bytes = 32
	this.Format = "base64"

	return &this
}

func (o TransitGenerateRandomSourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bytes"] = o.Bytes
	toSerialize["format"] = o.Format
	toSerialize["urlbytes"] = o.Urlbytes

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitHashRequest struct for TransitHashRequest
type TransitHashRequest struct {
	// Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 Defaults to \"sha2-256\".
	Algorithm string `json:"algorithm"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"hex\".
	Format string `json:"format"`
	// The base64-encoded input data
	Input string `json:"input"`
	// Algorithm to use (POST URL parameter)
	Urlalgorithm string `json:"urlalgorithm"`
}

// NewTransitHashRequestWithDefaults instantiates a new TransitHashRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitHashRequestWithDefaults() *TransitHashRequest {
	var this TransitHashRequest

	this.Algorithm = "sha2-256"
	this.Format = "hex"

	return &this
}

func (o TransitHashRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["format"] = o.Format
	toSerialize["input"] = o.Input
	toSerialize["urlalgorithm"] = o.Urlalgorithm

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitHashWithAlgorithmRequest struct for TransitHashWithAlgorithmRequest
type TransitHashWithAlgorithmRequest struct {
	// Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 Defaults to \"sha2-256\".
	Algorithm string `json:"algorithm"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"hex\".
	Format string `json:"format"`
	// The base64-encoded input data
	Input string `json:"input"`
}

// NewTransitHashWithAlgorithmRequestWithDefaults instantiates a new TransitHashWithAlgorithmRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitHashWithAlgorithmRequestWithDefaults() *TransitHashWithAlgorithmRequest {
	var this TransitHashWithAlgorithmRequest

	this.Algorithm = "sha2-256"
	this.Format = "hex"

	return &this
}

func (o TransitHashWithAlgorithmRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["format"] = o.Format
	toSerialize["input"] = o.Input

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitImportKeyRequest struct for TransitImportKeyRequest
type TransitImportKeyRequest struct {
	// Enables taking a backup of the named key in plaintext format. Once set, this cannot be disabled.
	AllowPlaintextBackup bool `json:"allow_plaintext_backup"`
	// True if the imported key may be rotated within Vault; false otherwise.
	AllowRotation bool `json:"allow_rotation"`
	// Amount of time the key should live before being automatically rotated. A value of 0 (default) disables automatic rotation for the key.
	AutoRotatePeriod int32 `json:"auto_rotate_period"`
	// The base64-encoded ciphertext of the keys. The AES key should be encrypted using OAEP with the wrapping key and then concatenated with the import key, wrapped by the AES key.
	Ciphertext string `json:"ciphertext"`
	// Base64 encoded context for key derivation. When reading a key with key derivation enabled, if the key type supports public keys, this will return the public key for the given context.
	Context string `json:"context"`
	// Enables key derivation mode. This allows for per-transaction unique keys for encryption operations.
	Derived bool `json:"derived"`
	// Enables keys to be exportable. This allows for all the valid keys in the key ring to be exported.
	Exportable bool `json:"exportable"`
	// The hash function used as a random oracle in the OAEP wrapping of the user-generated, ephemeral AES key. Can be one of \"SHA1\", \"SHA224\", \"SHA256\" (default), \"SHA384\", or \"SHA512\"
	HashFunction string `json:"hash_function"`
	// The type of key being imported. Currently, \"aes128-gcm96\" (symmetric), \"aes256-gcm96\" (symmetric), \"ecdsa-p256\" (asymmetric), \"ecdsa-p384\" (asymmetric), \"ecdsa-p521\" (asymmetric), \"ed25519\" (asymmetric), \"rsa-2048\" (asymmetric), \"rsa-3072\" (asymmetric), \"rsa-4096\" (asymmetric) are supported. Defaults to \"aes256-gcm96\".
	Type string `json:"type"`
}

// NewTransitImportKeyRequestWithDefaults instantiates a new TransitImportKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitImportKeyRequestWithDefaults() *TransitImportKeyRequest {
	var this TransitImportKeyRequest

	this.AutoRotatePeriod = 0
	this.HashFunction = "SHA256"
	this.Type = "aes256-gcm96"

	return &this
}

func (o TransitImportKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allow_plaintext_backup"] = o.AllowPlaintextBackup
	toSerialize["allow_rotation"] = o.AllowRotation
	toSerialize["auto_rotate_period"] = o.AutoRotatePeriod
	toSerialize["ciphertext"] = o.Ciphertext
	toSerialize["context"] = o.Context
	toSerialize["derived"] = o.Derived
	toSerialize["exportable"] = o.Exportable
	toSerialize["hash_function"] = o.HashFunction
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitImportKeyVersionRequest struct for TransitImportKeyVersionRequest
type TransitImportKeyVersionRequest struct {
	// The base64-encoded ciphertext of the keys. The AES key should be encrypted using OAEP with the wrapping key and then concatenated with the import key, wrapped by the AES key.
	Ciphertext string `json:"ciphertext"`
	// The hash function used as a random oracle in the OAEP wrapping of the user-generated, ephemeral AES key. Can be one of \"SHA1\", \"SHA224\", \"SHA256\" (default), \"SHA384\", or \"SHA512\"
	HashFunction string `json:"hash_function"`
}

// NewTransitImportKeyVersionRequestWithDefaults instantiates a new TransitImportKeyVersionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitImportKeyVersionRequestWithDefaults() *TransitImportKeyVersionRequest {
	var this TransitImportKeyVersionRequest

	this.HashFunction = "SHA256"

	return &this
}

func (o TransitImportKeyVersionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["ciphertext"] = o.Ciphertext
	toSerialize["hash_function"] = o.HashFunction

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitRestoreKeyRequest struct for TransitRestoreKeyRequest
type TransitRestoreKeyRequest struct {
	// Backed up key data to be restored. This should be the output from the 'backup/' endpoint.
	Backup string `json:"backup"`
	// If set and a key by the given name exists, force the restore operation and override the key.
	Force bool `json:"force"`
}

// NewTransitRestoreKeyRequestWithDefaults instantiates a new TransitRestoreKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitRestoreKeyRequestWithDefaults() *TransitRestoreKeyRequest {
	var this TransitRestoreKeyRequest

	this.Force = false

	return &this
}

func (o TransitRestoreKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["backup"] = o.Backup
	toSerialize["force"] = o.Force

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitRestoreRequest struct for TransitRestoreRequest
type TransitRestoreRequest struct {
	// Backed up key data to be restored. This should be the output from the 'backup/' endpoint.
	Backup string `json:"backup"`
	// If set and a key by the given name exists, force the restore operation and override the key.
	Force bool `json:"force"`
	// If set, this will be the name of the restored key.
	Name string `json:"name"`
}

// NewTransitRestoreRequestWithDefaults instantiates a new TransitRestoreRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitRestoreRequestWithDefaults() *TransitRestoreRequest {
	var this TransitRestoreRequest

	this.Force = false

	return &this
}

func (o TransitRestoreRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["backup"] = o.Backup
	toSerialize["force"] = o.Force
	toSerialize["name"] = o.Name

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitRewrapRequest struct for TransitRewrapRequest
type TransitRewrapRequest struct {
	// Ciphertext value to rewrap
	Ciphertext string `json:"ciphertext"`
	// Base64 encoded context for key derivation. Required for derived keys.
	Context string `json:"context"`
	// The version of the key to use for encryption. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion int32 `json:"key_version"`
	// Nonce for when convergent encryption is used
	Nonce string `json:"nonce"`
}

// NewTransitRewrapRequestWithDefaults instantiates a new TransitRewrapRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitRewrapRequestWithDefaults() *TransitRewrapRequest {
	var this TransitRewrapRequest

	return &this
}

func (o TransitRewrapRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["ciphertext"] = o.Ciphertext
	toSerialize["context"] = o.Context
	toSerialize["key_version"] = o.KeyVersion
	toSerialize["nonce"] = o.Nonce

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitSignRequest struct for TransitSignRequest
type TransitSignRequest struct {
	// Deprecated: use \"hash_algorithm\" instead.
	Algorithm string `json:"algorithm"`
	// Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys.
	Context string `json:"context"`
	// Hash algorithm to use (POST body parameter). Valid values are: * sha1 * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 * none Defaults to \"sha2-256\". Not valid for all key types, including ed25519. Using none requires setting prehashed=true and signature_algorithm=pkcs1v15, yielding a PKCSv1_5_NoOID instead of the usual PKCSv1_5_DERnull signature.
	HashAlgorithm string `json:"hash_algorithm"`
	// The base64-encoded input data
	Input string `json:"input"`
	// The version of the key to use for signing. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion int32 `json:"key_version"`
	// The method by which to marshal the signature. The default is 'asn1' which is used by openssl and X.509. It can also be set to 'jws' which is used for JWT signatures; setting it to this will also cause the encoding of the signature to be url-safe base64 instead of using standard base64 encoding. Currently only valid for ECDSA P-256 key types\".
	MarshalingAlgorithm string `json:"marshaling_algorithm"`
	// Set to 'true' when the input is already hashed. If the key type is 'rsa-2048', 'rsa-3072' or 'rsa-4096', then the algorithm used to hash the input should be indicated by the 'algorithm' parameter.
	Prehashed bool `json:"prehashed"`
	// The salt length used to sign. Currently only applies to the RSA PSS signature scheme. Options are 'auto' (the default used by Golang, causing the salt to be as large as possible when signing), 'hash' (causes the salt length to equal the length of the hash used in the signature), or an integer between the minimum and the maximum permissible salt lengths for the given RSA key size. Defaults to 'auto'.
	SaltLength string `json:"salt_length"`
	// The signature algorithm to use for signing. Currently only applies to RSA key types. Options are 'pss' or 'pkcs1v15'. Defaults to 'pss'
	SignatureAlgorithm string `json:"signature_algorithm"`
	// Hash algorithm to use (POST URL parameter)
	Urlalgorithm string `json:"urlalgorithm"`
}

// NewTransitSignRequestWithDefaults instantiates a new TransitSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitSignRequestWithDefaults() *TransitSignRequest {
	var this TransitSignRequest

	this.Algorithm = "sha2-256"
	this.HashAlgorithm = "sha2-256"
	this.MarshalingAlgorithm = "asn1"
	this.SaltLength = "auto"

	return &this
}

func (o TransitSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["context"] = o.Context
	toSerialize["hash_algorithm"] = o.HashAlgorithm
	toSerialize["input"] = o.Input
	toSerialize["key_version"] = o.KeyVersion
	toSerialize["marshaling_algorithm"] = o.MarshalingAlgorithm
	toSerialize["prehashed"] = o.Prehashed
	toSerialize["salt_length"] = o.SaltLength
	toSerialize["signature_algorithm"] = o.SignatureAlgorithm
	toSerialize["urlalgorithm"] = o.Urlalgorithm

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitSignWithAlgorithmRequest struct for TransitSignWithAlgorithmRequest
type TransitSignWithAlgorithmRequest struct {
	// Deprecated: use \"hash_algorithm\" instead.
	Algorithm string `json:"algorithm"`
	// Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys.
	Context string `json:"context"`
	// Hash algorithm to use (POST body parameter). Valid values are: * sha1 * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 * none Defaults to \"sha2-256\". Not valid for all key types, including ed25519. Using none requires setting prehashed=true and signature_algorithm=pkcs1v15, yielding a PKCSv1_5_NoOID instead of the usual PKCSv1_5_DERnull signature.
	HashAlgorithm string `json:"hash_algorithm"`
	// The base64-encoded input data
	Input string `json:"input"`
	// The version of the key to use for signing. Must be 0 (for latest) or a value greater than or equal to the min_encryption_version configured on the key.
	KeyVersion int32 `json:"key_version"`
	// The method by which to marshal the signature. The default is 'asn1' which is used by openssl and X.509. It can also be set to 'jws' which is used for JWT signatures; setting it to this will also cause the encoding of the signature to be url-safe base64 instead of using standard base64 encoding. Currently only valid for ECDSA P-256 key types\".
	MarshalingAlgorithm string `json:"marshaling_algorithm"`
	// Set to 'true' when the input is already hashed. If the key type is 'rsa-2048', 'rsa-3072' or 'rsa-4096', then the algorithm used to hash the input should be indicated by the 'algorithm' parameter.
	Prehashed bool `json:"prehashed"`
	// The salt length used to sign. Currently only applies to the RSA PSS signature scheme. Options are 'auto' (the default used by Golang, causing the salt to be as large as possible when signing), 'hash' (causes the salt length to equal the length of the hash used in the signature), or an integer between the minimum and the maximum permissible salt lengths for the given RSA key size. Defaults to 'auto'.
	SaltLength string `json:"salt_length"`
	// The signature algorithm to use for signing. Currently only applies to RSA key types. Options are 'pss' or 'pkcs1v15'. Defaults to 'pss'
	SignatureAlgorithm string `json:"signature_algorithm"`
}

// NewTransitSignWithAlgorithmRequestWithDefaults instantiates a new TransitSignWithAlgorithmRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitSignWithAlgorithmRequestWithDefaults() *TransitSignWithAlgorithmRequest {
	var this TransitSignWithAlgorithmRequest

	this.Algorithm = "sha2-256"
	this.HashAlgorithm = "sha2-256"
	this.MarshalingAlgorithm = "asn1"
	this.SaltLength = "auto"

	return &this
}

func (o TransitSignWithAlgorithmRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["context"] = o.Context
	toSerialize["hash_algorithm"] = o.HashAlgorithm
	toSerialize["input"] = o.Input
	toSerialize["key_version"] = o.KeyVersion
	toSerialize["marshaling_algorithm"] = o.MarshalingAlgorithm
	toSerialize["prehashed"] = o.Prehashed
	toSerialize["salt_length"] = o.SaltLength
	toSerialize["signature_algorithm"] = o.SignatureAlgorithm

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitTrimKeyRequest struct for TransitTrimKeyRequest
type TransitTrimKeyRequest struct {
	// The minimum available version for the key ring. All versions before this version will be permanently deleted. This value can at most be equal to the lesser of 'min_decryption_version' and 'min_encryption_version'. This is not allowed to be set when either 'min_encryption_version' or 'min_decryption_version' is set to zero.
	MinAvailableVersion int32 `json:"min_available_version"`
}

// NewTransitTrimKeyRequestWithDefaults instantiates a new TransitTrimKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitTrimKeyRequestWithDefaults() *TransitTrimKeyRequest {
	var this TransitTrimKeyRequest

	return &this
}

func (o TransitTrimKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["min_available_version"] = o.MinAvailableVersion

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitVerifyRequest struct for TransitVerifyRequest
type TransitVerifyRequest struct {
	// Deprecated: use \"hash_algorithm\" instead.
	Algorithm string `json:"algorithm"`
	// Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys.
	Context string `json:"context"`
	// Hash algorithm to use (POST body parameter). Valid values are: * sha1 * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 * none Defaults to \"sha2-256\". Not valid for all key types. See note about none on signing path.
	HashAlgorithm string `json:"hash_algorithm"`
	// The HMAC, including vault header/key version
	Hmac string `json:"hmac"`
	// The base64-encoded input data to verify
	Input string `json:"input"`
	// The method by which to unmarshal the signature when verifying. The default is 'asn1' which is used by openssl and X.509; can also be set to 'jws' which is used for JWT signatures in which case the signature is also expected to be url-safe base64 encoding instead of standard base64 encoding. Currently only valid for ECDSA P-256 key types\".
	MarshalingAlgorithm string `json:"marshaling_algorithm"`
	// Set to 'true' when the input is already hashed. If the key type is 'rsa-2048', 'rsa-3072' or 'rsa-4096', then the algorithm used to hash the input should be indicated by the 'algorithm' parameter.
	Prehashed bool `json:"prehashed"`
	// The salt length used to sign. Currently only applies to the RSA PSS signature scheme. Options are 'auto' (the default used by Golang, causing the salt to be as large as possible when signing), 'hash' (causes the salt length to equal the length of the hash used in the signature), or an integer between the minimum and the maximum permissible salt lengths for the given RSA key size. Defaults to 'auto'.
	SaltLength string `json:"salt_length"`
	// The signature, including vault header/key version
	Signature string `json:"signature"`
	// The signature algorithm to use for signature verification. Currently only applies to RSA key types. Options are 'pss' or 'pkcs1v15'. Defaults to 'pss'
	SignatureAlgorithm string `json:"signature_algorithm"`
	// Hash algorithm to use (POST URL parameter)
	Urlalgorithm string `json:"urlalgorithm"`
}

// NewTransitVerifyRequestWithDefaults instantiates a new TransitVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitVerifyRequestWithDefaults() *TransitVerifyRequest {
	var this TransitVerifyRequest

	this.Algorithm = "sha2-256"
	this.HashAlgorithm = "sha2-256"
	this.MarshalingAlgorithm = "asn1"
	this.SaltLength = "auto"

	return &this
}

func (o TransitVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["context"] = o.Context
	toSerialize["hash_algorithm"] = o.HashAlgorithm
	toSerialize["hmac"] = o.Hmac
	toSerialize["input"] = o.Input
	toSerialize["marshaling_algorithm"] = o.MarshalingAlgorithm
	toSerialize["prehashed"] = o.Prehashed
	toSerialize["salt_length"] = o.SaltLength
	toSerialize["signature"] = o.Signature
	toSerialize["signature_algorithm"] = o.SignatureAlgorithm
	toSerialize["urlalgorithm"] = o.Urlalgorithm

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitVerifyWithAlgorithmRequest struct for TransitVerifyWithAlgorithmRequest
type TransitVerifyWithAlgorithmRequest struct {
	// Deprecated: use \"hash_algorithm\" instead.
	Algorithm string `json:"algorithm"`
	// Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys.
	Context string `json:"context"`
	// Hash algorithm to use (POST body parameter). Valid values are: * sha1 * sha2-224 * sha2-256 * sha2-384 * sha2-512 * sha3-224 * sha3-256 * sha3-384 * sha3-512 * none Defaults to \"sha2-256\". Not valid for all key types. See note about none on signing path.
	HashAlgorithm string `json:"hash_algorithm"`
	// The HMAC, including vault header/key version
	Hmac string `json:"hmac"`
	// The base64-encoded input data to verify
	Input string `json:"input"`
	// The method by which to unmarshal the signature when verifying. The default is 'asn1' which is used by openssl and X.509; can also be set to 'jws' which is used for JWT signatures in which case the signature is also expected to be url-safe base64 encoding instead of standard base64 encoding. Currently only valid for ECDSA P-256 key types\".
	MarshalingAlgorithm string `json:"marshaling_algorithm"`
	// Set to 'true' when the input is already hashed. If the key type is 'rsa-2048', 'rsa-3072' or 'rsa-4096', then the algorithm used to hash the input should be indicated by the 'algorithm' parameter.
	Prehashed bool `json:"prehashed"`
	// The salt length used to sign. Currently only applies to the RSA PSS signature scheme. Options are 'auto' (the default used by Golang, causing the salt to be as large as possible when signing), 'hash' (causes the salt length to equal the length of the hash used in the signature), or an integer between the minimum and the maximum permissible salt lengths for the given RSA key size. Defaults to 'auto'.
	SaltLength string `json:"salt_length"`
	// The signature, including vault header/key version
	Signature string `json:"signature"`
	// The signature algorithm to use for signature verification. Currently only applies to RSA key types. Options are 'pss' or 'pkcs1v15'. Defaults to 'pss'
	SignatureAlgorithm string `json:"signature_algorithm"`
}

// NewTransitVerifyWithAlgorithmRequestWithDefaults instantiates a new TransitVerifyWithAlgorithmRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitVerifyWithAlgorithmRequestWithDefaults() *TransitVerifyWithAlgorithmRequest {
	var this TransitVerifyWithAlgorithmRequest

	this.Algorithm = "sha2-256"
	this.HashAlgorithm = "sha2-256"
	this.MarshalingAlgorithm = "asn1"
	this.SaltLength = "auto"

	return &this
}

func (o TransitVerifyWithAlgorithmRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["algorithm"] = o.Algorithm
	toSerialize["context"] = o.Context
	toSerialize["hash_algorithm"] = o.HashAlgorithm
	toSerialize["hmac"] = o.Hmac
	toSerialize["input"] = o.Input
	toSerialize["marshaling_algorithm"] = o.MarshalingAlgorithm
	toSerialize["prehashed"] = o.Prehashed
	toSerialize["salt_length"] = o.SaltLength
	toSerialize["signature"] = o.Signature
	toSerialize["signature_algorithm"] = o.SignatureAlgorithm

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitWriteCacheConfigRequest struct for TransitWriteCacheConfigRequest
type TransitWriteCacheConfigRequest struct {
	// Size of cache, use 0 for an unlimited cache size, defaults to 0
	Size int32 `json:"size"`
}

// NewTransitWriteCacheConfigRequestWithDefaults instantiates a new TransitWriteCacheConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitWriteCacheConfigRequestWithDefaults() *TransitWriteCacheConfigRequest {
	var this TransitWriteCacheConfigRequest

	this.Size = 0

	return &this
}

func (o TransitWriteCacheConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["size"] = o.Size

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitWriteConfigKeysRequest struct for TransitWriteConfigKeysRequest
type TransitWriteConfigKeysRequest struct {
	// Whether to allow automatic upserting (creation) of keys on the encrypt endpoint.
	DisableUpsert bool `json:"disable_upsert"`
}

// NewTransitWriteConfigKeysRequestWithDefaults instantiates a new TransitWriteConfigKeysRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitWriteConfigKeysRequestWithDefaults() *TransitWriteConfigKeysRequest {
	var this TransitWriteConfigKeysRequest

	return &this
}

func (o TransitWriteConfigKeysRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["disable_upsert"] = o.DisableUpsert

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitWriteKeyConfigRequest struct for TransitWriteKeyConfigRequest
type TransitWriteKeyConfigRequest struct {
	// Enables taking a backup of the named key in plaintext format. Once set, this cannot be disabled.
	AllowPlaintextBackup bool `json:"allow_plaintext_backup"`
	// Amount of time the key should live before being automatically rotated. A value of 0 disables automatic rotation for the key.
	AutoRotatePeriod int32 `json:"auto_rotate_period"`
	// Whether to allow deletion of the key
	DeletionAllowed bool `json:"deletion_allowed"`
	// Enables export of the key. Once set, this cannot be disabled.
	Exportable bool `json:"exportable"`
	// If set, the minimum version of the key allowed to be decrypted. For signing keys, the minimum version allowed to be used for verification.
	MinDecryptionVersion int32 `json:"min_decryption_version"`
	// If set, the minimum version of the key allowed to be used for encryption; or for signing keys, to be used for signing. If set to zero, only the latest version of the key is allowed.
	MinEncryptionVersion int32 `json:"min_encryption_version"`
}

// NewTransitWriteKeyConfigRequestWithDefaults instantiates a new TransitWriteKeyConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitWriteKeyConfigRequestWithDefaults() *TransitWriteKeyConfigRequest {
	var this TransitWriteKeyConfigRequest

	return &this
}

func (o TransitWriteKeyConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allow_plaintext_backup"] = o.AllowPlaintextBackup
	toSerialize["auto_rotate_period"] = o.AutoRotatePeriod
	toSerialize["deletion_allowed"] = o.DeletionAllowed
	toSerialize["exportable"] = o.Exportable
	toSerialize["min_decryption_version"] = o.MinDecryptionVersion
	toSerialize["min_encryption_version"] = o.MinEncryptionVersion

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitWriteKeyRequest struct for TransitWriteKeyRequest
type TransitWriteKeyRequest struct {
	// Enables taking a backup of the named key in plaintext format. Once set, this cannot be disabled.
	AllowPlaintextBackup bool `json:"allow_plaintext_backup"`
	// Amount of time the key should live before being automatically rotated. A value of 0 (default) disables automatic rotation for the key.
	AutoRotatePeriod int32 `json:"auto_rotate_period"`
	// Base64 encoded context for key derivation. When reading a key with key derivation enabled, if the key type supports public keys, this will return the public key for the given context.
	Context string `json:"context"`
	// Whether to support convergent encryption. This is only supported when using a key with key derivation enabled and will require all requests to carry both a context and 96-bit (12-byte) nonce. The given nonce will be used in place of a randomly generated nonce. As a result, when the same context and nonce are supplied, the same ciphertext is generated. It is *very important* when using this mode that you ensure that all nonces are unique for a given context. Failing to do so will severely impact the ciphertext's security.
	ConvergentEncryption bool `json:"convergent_encryption"`
	// Enables key derivation mode. This allows for per-transaction unique keys for encryption operations.
	Derived bool `json:"derived"`
	// Enables keys to be exportable. This allows for all the valid keys in the key ring to be exported.
	Exportable bool `json:"exportable"`
	// The key size in bytes for the algorithm. Only applies to HMAC and must be no fewer than 32 bytes and no more than 512
	KeySize int32 `json:"key_size"`
	// The type of key to create. Currently, \"aes128-gcm96\" (symmetric), \"aes256-gcm96\" (symmetric), \"ecdsa-p256\" (asymmetric), \"ecdsa-p384\" (asymmetric), \"ecdsa-p521\" (asymmetric), \"ed25519\" (asymmetric), \"rsa-2048\" (asymmetric), \"rsa-3072\" (asymmetric), \"rsa-4096\" (asymmetric) are supported. Defaults to \"aes256-gcm96\".
	Type string `json:"type"`
}

// NewTransitWriteKeyRequestWithDefaults instantiates a new TransitWriteKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitWriteKeyRequestWithDefaults() *TransitWriteKeyRequest {
	var this TransitWriteKeyRequest

	this.AutoRotatePeriod = 0
	this.KeySize = 0
	this.Type = "aes256-gcm96"

	return &this
}

func (o TransitWriteKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allow_plaintext_backup"] = o.AllowPlaintextBackup
	toSerialize["auto_rotate_period"] = o.AutoRotatePeriod
	toSerialize["context"] = o.Context
	toSerialize["convergent_encryption"] = o.ConvergentEncryption
	toSerialize["derived"] = o.Derived
	toSerialize["exportable"] = o.Exportable
	toSerialize["key_size"] = o.KeySize
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// TransitWriteRandomUrlbytesRequest struct for TransitWriteRandomUrlbytesRequest
type TransitWriteRandomUrlbytesRequest struct {
	// The number of bytes to generate (POST body parameter). Defaults to 32 (256 bits).
	Bytes int32 `json:"bytes"`
	// Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"base64\".
	Format string `json:"format"`
	// Which system to source random data from, ether \"platform\", \"seal\", or \"all\".
	Source string `json:"source"`
}

// NewTransitWriteRandomUrlbytesRequestWithDefaults instantiates a new TransitWriteRandomUrlbytesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitWriteRandomUrlbytesRequestWithDefaults() *TransitWriteRandomUrlbytesRequest {
	var this TransitWriteRandomUrlbytesRequest

	this.Bytes = 32
	this.Format = "base64"
	this.Source = "platform"

	return &this
}

func (o TransitWriteRandomUrlbytesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bytes"] = o.Bytes
	toSerialize["format"] = o.Format
	toSerialize["source"] = o.Source

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// UnsealRequest struct for UnsealRequest
type UnsealRequest struct {
	// Specifies a single unseal key share. This is required unless reset is true.
	Key string `json:"key"`
	// Specifies if previously-provided unseal keys are discarded and the unseal process is reset.
	Reset bool `json:"reset"`
}

// NewUnsealRequestWithDefaults instantiates a new UnsealRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnsealRequestWithDefaults() *UnsealRequest {
	var this UnsealRequest

	return &this
}

func (o UnsealRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["key"] = o.Key
	toSerialize["reset"] = o.Reset

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// UserpassLoginRequest struct for UserpassLoginRequest
type UserpassLoginRequest struct {
	// Password for this user.
	Password string `json:"password"`
}

// NewUserpassLoginRequestWithDefaults instantiates a new UserpassLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserpassLoginRequestWithDefaults() *UserpassLoginRequest {
	var this UserpassLoginRequest

	return &this
}

func (o UserpassLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["password"] = o.Password

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// UserpassWriteUserPasswordRequest struct for UserpassWriteUserPasswordRequest
type UserpassWriteUserPasswordRequest struct {
	// Password for this user.
	Password string `json:"password"`
}

// NewUserpassWriteUserPasswordRequestWithDefaults instantiates a new UserpassWriteUserPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserpassWriteUserPasswordRequestWithDefaults() *UserpassWriteUserPasswordRequest {
	var this UserpassWriteUserPasswordRequest

	return &this
}

func (o UserpassWriteUserPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["password"] = o.Password

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// UserpassWriteUserPoliciesRequest struct for UserpassWriteUserPoliciesRequest
type UserpassWriteUserPoliciesRequest struct {
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
}

// NewUserpassWriteUserPoliciesRequestWithDefaults instantiates a new UserpassWriteUserPoliciesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserpassWriteUserPoliciesRequestWithDefaults() *UserpassWriteUserPoliciesRequest {
	var this UserpassWriteUserPoliciesRequest

	return &this
}

func (o UserpassWriteUserPoliciesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["policies"] = o.Policies
	toSerialize["token_policies"] = o.TokenPolicies

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// UserpassWriteUserRequest struct for UserpassWriteUserRequest
type UserpassWriteUserRequest struct {
	// Use \"token_bound_cidrs\" instead. If this and \"token_bound_cidrs\" are both specified, only \"token_bound_cidrs\" will be used.
	// Deprecated
	BoundCidrs []string `json:"bound_cidrs"`
	// Use \"token_max_ttl\" instead. If this and \"token_max_ttl\" are both specified, only \"token_max_ttl\" will be used.
	// Deprecated
	MaxTtl int32 `json:"max_ttl"`
	// Password for this user.
	Password string `json:"password"`
	// Use \"token_policies\" instead. If this and \"token_policies\" are both specified, only \"token_policies\" will be used.
	// Deprecated
	Policies []string `json:"policies"`
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs"`
	// If set, tokens created via this role carry an explicit maximum TTL. During renewal, the current maximum TTL values of the role and the mount are not checked for changes, and any updates to these values will have no effect on the token being renewed.
	TokenExplicitMaxTtl int32 `json:"token_explicit_max_ttl"`
	// The maximum lifetime of the generated token
	TokenMaxTtl int32 `json:"token_max_ttl"`
	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy bool `json:"token_no_default_policy"`
	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses int32 `json:"token_num_uses"`
	// If set, tokens created via this role will have no max lifetime; instead, their renewal period will be fixed to this value. This takes an integer number of seconds, or a string duration (e.g. \"24h\").
	TokenPeriod int32 `json:"token_period"`
	// Comma-separated list of policies
	TokenPolicies []string `json:"token_policies"`
	// The initial ttl of the token to generate
	TokenTtl int32 `json:"token_ttl"`
	// The type of token to generate, service or batch
	TokenType string `json:"token_type"`
	// Use \"token_ttl\" instead. If this and \"token_ttl\" are both specified, only \"token_ttl\" will be used.
	// Deprecated
	Ttl int32 `json:"ttl"`
}

// NewUserpassWriteUserRequestWithDefaults instantiates a new UserpassWriteUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserpassWriteUserRequestWithDefaults() *UserpassWriteUserRequest {
	var this UserpassWriteUserRequest

	this.TokenType = "default-service"

	return &this
}

func (o UserpassWriteUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["bound_cidrs"] = o.BoundCidrs
	toSerialize["max_ttl"] = o.MaxTtl
	toSerialize["password"] = o.Password
	toSerialize["policies"] = o.Policies
	toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	toSerialize["token_explicit_max_ttl"] = o.TokenExplicitMaxTtl
	toSerialize["token_max_ttl"] = o.TokenMaxTtl
	toSerialize["token_no_default_policy"] = o.TokenNoDefaultPolicy
	toSerialize["token_num_uses"] = o.TokenNumUses
	toSerialize["token_period"] = o.TokenPeriod
	toSerialize["token_policies"] = o.TokenPolicies
	toSerialize["token_ttl"] = o.TokenTtl
	toSerialize["token_type"] = o.TokenType
	toSerialize["ttl"] = o.Ttl

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WrappingRewrapRequest struct for WrappingRewrapRequest
type WrappingRewrapRequest struct {
	Token string `json:"token"`
}

// NewWrappingRewrapRequestWithDefaults instantiates a new WrappingRewrapRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWrappingRewrapRequestWithDefaults() *WrappingRewrapRequest {
	var this WrappingRewrapRequest

	return &this
}

func (o WrappingRewrapRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WrappingUnwrapRequest struct for WrappingUnwrapRequest
type WrappingUnwrapRequest struct {
	Token string `json:"token"`
}

// NewWrappingUnwrapRequestWithDefaults instantiates a new WrappingUnwrapRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWrappingUnwrapRequestWithDefaults() *WrappingUnwrapRequest {
	var this WrappingUnwrapRequest

	return &this
}

func (o WrappingUnwrapRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WrappingWriteLookupRequest struct for WrappingWriteLookupRequest
type WrappingWriteLookupRequest struct {
	Token string `json:"token"`
}

// NewWrappingWriteLookupRequestWithDefaults instantiates a new WrappingWriteLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWrappingWriteLookupRequestWithDefaults() *WrappingWriteLookupRequest {
	var this WrappingWriteLookupRequest

	return &this
}

func (o WrappingWriteLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteAuditDeviceRequest struct for WriteAuditDeviceRequest
type WriteAuditDeviceRequest struct {
	// User-friendly description for this audit backend.
	Description string `json:"description"`
	// Mark the mount as a local mount, which is not replicated and is unaffected by replication.
	Local bool `json:"local"`
	// Configuration options for the audit backend.
	Options map[string]interface{} `json:"options"`
	// The type of the backend. Example: \"mysql\"
	Type string `json:"type"`
}

// NewWriteAuditDeviceRequestWithDefaults instantiates a new WriteAuditDeviceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteAuditDeviceRequestWithDefaults() *WriteAuditDeviceRequest {
	var this WriteAuditDeviceRequest

	this.Local = false

	return &this
}

func (o WriteAuditDeviceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["description"] = o.Description
	toSerialize["local"] = o.Local
	toSerialize["options"] = o.Options
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteAuthMethodRequest struct for WriteAuthMethodRequest
type WriteAuthMethodRequest struct {
	// Configuration for this mount, such as plugin_name.
	Config map[string]interface{} `json:"config"`
	// User-friendly description for this credential backend.
	Description string `json:"description"`
	// Whether to give the mount access to Vault's external entropy.
	ExternalEntropyAccess bool `json:"external_entropy_access"`
	// Mark the mount as a local mount, which is not replicated and is unaffected by replication.
	Local bool `json:"local"`
	// The options to pass into the backend. Should be a json object with string keys and values.
	Options map[string]interface{} `json:"options"`
	// Name of the auth plugin to use based from the name in the plugin catalog.
	PluginName string `json:"plugin_name"`
	// The semantic version of the plugin to use.
	PluginVersion string `json:"plugin_version"`
	// Whether to turn on seal wrapping for the mount.
	SealWrap bool `json:"seal_wrap"`
	// The type of the backend. Example: \"userpass\"
	Type string `json:"type"`
}

// NewWriteAuthMethodRequestWithDefaults instantiates a new WriteAuthMethodRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteAuthMethodRequestWithDefaults() *WriteAuthMethodRequest {
	var this WriteAuthMethodRequest

	this.ExternalEntropyAccess = false
	this.Local = false
	this.SealWrap = false

	return &this
}

func (o WriteAuthMethodRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["config"] = o.Config
	toSerialize["description"] = o.Description
	toSerialize["external_entropy_access"] = o.ExternalEntropyAccess
	toSerialize["local"] = o.Local
	toSerialize["options"] = o.Options
	toSerialize["plugin_name"] = o.PluginName
	toSerialize["plugin_version"] = o.PluginVersion
	toSerialize["seal_wrap"] = o.SealWrap
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteAuthMethodTuneRequest struct for WriteAuthMethodTuneRequest
type WriteAuthMethodTuneRequest struct {
	// A list of headers to whitelist and allow a plugin to set on responses.
	AllowedResponseHeaders []string `json:"allowed_response_headers"`
	// The list of keys in the request data object that will not be HMAC'ed by audit devices.
	AuditNonHmacRequestKeys []string `json:"audit_non_hmac_request_keys"`
	// The list of keys in the response data object that will not be HMAC'ed by audit devices.
	AuditNonHmacResponseKeys []string `json:"audit_non_hmac_response_keys"`
	// The default lease TTL for this mount.
	DefaultLeaseTtl string `json:"default_lease_ttl"`
	// User-friendly description for this credential backend.
	Description string `json:"description"`
	// Determines the visibility of the mount in the UI-specific listing endpoint. Accepted value are 'unauth' and 'hidden', with the empty default ('') behaving like 'hidden'.
	ListingVisibility string `json:"listing_visibility"`
	// The max lease TTL for this mount.
	MaxLeaseTtl string `json:"max_lease_ttl"`
	// The options to pass into the backend. Should be a json object with string keys and values.
	Options map[string]interface{} `json:"options"`
	// A list of headers to whitelist and pass from the request to the plugin.
	PassthroughRequestHeaders []string `json:"passthrough_request_headers"`
	// The semantic version of the plugin to use.
	PluginVersion string `json:"plugin_version"`
	// The type of token to issue (service or batch).
	TokenType string `json:"token_type"`
	// The user lockout configuration to pass into the backend. Should be a json object with string keys and values.
	UserLockoutConfig map[string]interface{} `json:"user_lockout_config"`
}

// NewWriteAuthMethodTuneRequestWithDefaults instantiates a new WriteAuthMethodTuneRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteAuthMethodTuneRequestWithDefaults() *WriteAuthMethodTuneRequest {
	var this WriteAuthMethodTuneRequest

	return &this
}

func (o WriteAuthMethodTuneRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allowed_response_headers"] = o.AllowedResponseHeaders
	toSerialize["audit_non_hmac_request_keys"] = o.AuditNonHmacRequestKeys
	toSerialize["audit_non_hmac_response_keys"] = o.AuditNonHmacResponseKeys
	toSerialize["default_lease_ttl"] = o.DefaultLeaseTtl
	toSerialize["description"] = o.Description
	toSerialize["listing_visibility"] = o.ListingVisibility
	toSerialize["max_lease_ttl"] = o.MaxLeaseTtl
	toSerialize["options"] = o.Options
	toSerialize["passthrough_request_headers"] = o.PassthroughRequestHeaders
	toSerialize["plugin_version"] = o.PluginVersion
	toSerialize["token_type"] = o.TokenType
	toSerialize["user_lockout_config"] = o.UserLockoutConfig

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteCapabilitiesAccessorRequest struct for WriteCapabilitiesAccessorRequest
type WriteCapabilitiesAccessorRequest struct {
	// Accessor of the token for which capabilities are being queried.
	Accessor string `json:"accessor"`
	// Use 'paths' instead.
	// Deprecated
	Path []string `json:"path"`
	// Paths on which capabilities are being queried.
	Paths []string `json:"paths"`
}

// NewWriteCapabilitiesAccessorRequestWithDefaults instantiates a new WriteCapabilitiesAccessorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteCapabilitiesAccessorRequestWithDefaults() *WriteCapabilitiesAccessorRequest {
	var this WriteCapabilitiesAccessorRequest

	return &this
}

func (o WriteCapabilitiesAccessorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["accessor"] = o.Accessor
	toSerialize["path"] = o.Path
	toSerialize["paths"] = o.Paths

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteCapabilitiesRequest struct for WriteCapabilitiesRequest
type WriteCapabilitiesRequest struct {
	// Use 'paths' instead.
	// Deprecated
	Path []string `json:"path"`
	// Paths on which capabilities are being queried.
	Paths []string `json:"paths"`
	// Token for which capabilities are being queried.
	Token string `json:"token"`
}

// NewWriteCapabilitiesRequestWithDefaults instantiates a new WriteCapabilitiesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteCapabilitiesRequestWithDefaults() *WriteCapabilitiesRequest {
	var this WriteCapabilitiesRequest

	return &this
}

func (o WriteCapabilitiesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["path"] = o.Path
	toSerialize["paths"] = o.Paths
	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteCapabilitiesSelfRequest struct for WriteCapabilitiesSelfRequest
type WriteCapabilitiesSelfRequest struct {
	// Use 'paths' instead.
	// Deprecated
	Path []string `json:"path"`
	// Paths on which capabilities are being queried.
	Paths []string `json:"paths"`
	// Token for which capabilities are being queried.
	Token string `json:"token"`
}

// NewWriteCapabilitiesSelfRequestWithDefaults instantiates a new WriteCapabilitiesSelfRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteCapabilitiesSelfRequestWithDefaults() *WriteCapabilitiesSelfRequest {
	var this WriteCapabilitiesSelfRequest

	return &this
}

func (o WriteCapabilitiesSelfRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["path"] = o.Path
	toSerialize["paths"] = o.Paths
	toSerialize["token"] = o.Token

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteConfigAuditingRequestHeaderRequest struct for WriteConfigAuditingRequestHeaderRequest
type WriteConfigAuditingRequestHeaderRequest struct {
	Hmac bool `json:"hmac"`
}

// NewWriteConfigAuditingRequestHeaderRequestWithDefaults instantiates a new WriteConfigAuditingRequestHeaderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteConfigAuditingRequestHeaderRequestWithDefaults() *WriteConfigAuditingRequestHeaderRequest {
	var this WriteConfigAuditingRequestHeaderRequest

	return &this
}

func (o WriteConfigAuditingRequestHeaderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["hmac"] = o.Hmac

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteConfigCORSRequest struct for WriteConfigCORSRequest
type WriteConfigCORSRequest struct {
	// A comma-separated string or array of strings indicating headers that are allowed on cross-origin requests.
	AllowedHeaders []string `json:"allowed_headers"`
	// A comma-separated string or array of strings indicating origins that may make cross-origin requests.
	AllowedOrigins []string `json:"allowed_origins"`
	// Enables or disables CORS headers on requests.
	Enable bool `json:"enable"`
}

// NewWriteConfigCORSRequestWithDefaults instantiates a new WriteConfigCORSRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteConfigCORSRequestWithDefaults() *WriteConfigCORSRequest {
	var this WriteConfigCORSRequest

	return &this
}

func (o WriteConfigCORSRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allowed_headers"] = o.AllowedHeaders
	toSerialize["allowed_origins"] = o.AllowedOrigins
	toSerialize["enable"] = o.Enable

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteConfigUIHeaderRequest struct for WriteConfigUIHeaderRequest
type WriteConfigUIHeaderRequest struct {
	// Returns multiple values if true
	Multivalue bool `json:"multivalue"`
	// The values to set the header.
	Values []string `json:"values"`
}

// NewWriteConfigUIHeaderRequestWithDefaults instantiates a new WriteConfigUIHeaderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteConfigUIHeaderRequestWithDefaults() *WriteConfigUIHeaderRequest {
	var this WriteConfigUIHeaderRequest

	return &this
}

func (o WriteConfigUIHeaderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["multivalue"] = o.Multivalue
	toSerialize["values"] = o.Values

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteGenerateRootAttemptRequest struct for WriteGenerateRootAttemptRequest
type WriteGenerateRootAttemptRequest struct {
	// Specifies a base64-encoded PGP public key.
	PgpKey string `json:"pgp_key"`
}

// NewWriteGenerateRootAttemptRequestWithDefaults instantiates a new WriteGenerateRootAttemptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteGenerateRootAttemptRequestWithDefaults() *WriteGenerateRootAttemptRequest {
	var this WriteGenerateRootAttemptRequest

	return &this
}

func (o WriteGenerateRootAttemptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["pgp_key"] = o.PgpKey

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteGenerateRootRequest struct for WriteGenerateRootRequest
type WriteGenerateRootRequest struct {
	// Specifies a base64-encoded PGP public key.
	PgpKey string `json:"pgp_key"`
}

// NewWriteGenerateRootRequestWithDefaults instantiates a new WriteGenerateRootRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteGenerateRootRequestWithDefaults() *WriteGenerateRootRequest {
	var this WriteGenerateRootRequest

	return &this
}

func (o WriteGenerateRootRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["pgp_key"] = o.PgpKey

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteGenerateRootUpdateRequest struct for WriteGenerateRootUpdateRequest
type WriteGenerateRootUpdateRequest struct {
	// Specifies a single unseal key share.
	Key string `json:"key"`
	// Specifies the nonce of the attempt.
	Nonce string `json:"nonce"`
}

// NewWriteGenerateRootUpdateRequestWithDefaults instantiates a new WriteGenerateRootUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteGenerateRootUpdateRequestWithDefaults() *WriteGenerateRootUpdateRequest {
	var this WriteGenerateRootUpdateRequest

	return &this
}

func (o WriteGenerateRootUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["key"] = o.Key
	toSerialize["nonce"] = o.Nonce

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteInitRequest struct for WriteInitRequest
type WriteInitRequest struct {
	// Specifies an array of PGP public keys used to encrypt the output unseal keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as `secret_shares`.
	PgpKeys []string `json:"pgp_keys"`
	// Specifies an array of PGP public keys used to encrypt the output recovery keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as `recovery_shares`.
	RecoveryPgpKeys []string `json:"recovery_pgp_keys"`
	// Specifies the number of shares to split the recovery key into.
	RecoveryShares int32 `json:"recovery_shares"`
	// Specifies the number of shares required to reconstruct the recovery key. This must be less than or equal to `recovery_shares`.
	RecoveryThreshold int32 `json:"recovery_threshold"`
	// Specifies a PGP public key used to encrypt the initial root token. The key must be base64-encoded from its original binary representation.
	RootTokenPgpKey string `json:"root_token_pgp_key"`
	// Specifies the number of shares to split the unseal key into.
	SecretShares int32 `json:"secret_shares"`
	// Specifies the number of shares required to reconstruct the unseal key. This must be less than or equal secret_shares. If using Vault HSM with auto-unsealing, this value must be the same as `secret_shares`.
	SecretThreshold int32 `json:"secret_threshold"`
	// Specifies the number of shares that should be encrypted by the HSM and stored for auto-unsealing. Currently must be the same as `secret_shares`.
	StoredShares int32 `json:"stored_shares"`
}

// NewWriteInitRequestWithDefaults instantiates a new WriteInitRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteInitRequestWithDefaults() *WriteInitRequest {
	var this WriteInitRequest

	return &this
}

func (o WriteInitRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["pgp_keys"] = o.PgpKeys
	toSerialize["recovery_pgp_keys"] = o.RecoveryPgpKeys
	toSerialize["recovery_shares"] = o.RecoveryShares
	toSerialize["recovery_threshold"] = o.RecoveryThreshold
	toSerialize["root_token_pgp_key"] = o.RootTokenPgpKey
	toSerialize["secret_shares"] = o.SecretShares
	toSerialize["secret_threshold"] = o.SecretThreshold
	toSerialize["stored_shares"] = o.StoredShares

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteInternalCountersConfigRequest struct for WriteInternalCountersConfigRequest
type WriteInternalCountersConfigRequest struct {
	// Number of months to report if no start date specified.
	DefaultReportMonths int32 `json:"default_report_months"`
	// Enable or disable collection of client count: enable, disable, or default.
	Enabled string `json:"enabled"`
	// Number of months of client data to retain. Setting to 0 will clear all existing data.
	RetentionMonths int32 `json:"retention_months"`
}

// NewWriteInternalCountersConfigRequestWithDefaults instantiates a new WriteInternalCountersConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteInternalCountersConfigRequestWithDefaults() *WriteInternalCountersConfigRequest {
	var this WriteInternalCountersConfigRequest

	this.DefaultReportMonths = 12
	this.Enabled = "default"
	this.RetentionMonths = 24

	return &this
}

func (o WriteInternalCountersConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["default_report_months"] = o.DefaultReportMonths
	toSerialize["enabled"] = o.Enabled
	toSerialize["retention_months"] = o.RetentionMonths

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteInternalSpecsOpenAPIRequest struct for WriteInternalSpecsOpenAPIRequest
type WriteInternalSpecsOpenAPIRequest struct {
	// Context string appended to every operationId
	Context string `json:"context"`
}

// NewWriteInternalSpecsOpenAPIRequestWithDefaults instantiates a new WriteInternalSpecsOpenAPIRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteInternalSpecsOpenAPIRequestWithDefaults() *WriteInternalSpecsOpenAPIRequest {
	var this WriteInternalSpecsOpenAPIRequest

	return &this
}

func (o WriteInternalSpecsOpenAPIRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["context"] = o.Context

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteLeasesLookupRequest struct for WriteLeasesLookupRequest
type WriteLeasesLookupRequest struct {
	// The lease identifier to renew. This is included with a lease.
	LeaseId string `json:"lease_id"`
}

// NewWriteLeasesLookupRequestWithDefaults instantiates a new WriteLeasesLookupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteLeasesLookupRequestWithDefaults() *WriteLeasesLookupRequest {
	var this WriteLeasesLookupRequest

	return &this
}

func (o WriteLeasesLookupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["lease_id"] = o.LeaseId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteLeasesRenew2Request struct for WriteLeasesRenew2Request
type WriteLeasesRenew2Request struct {
	// The desired increment in seconds to the lease
	Increment int32 `json:"increment"`
	// The lease identifier to renew. This is included with a lease.
	LeaseId string `json:"lease_id"`
}

// NewWriteLeasesRenew2RequestWithDefaults instantiates a new WriteLeasesRenew2Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteLeasesRenew2RequestWithDefaults() *WriteLeasesRenew2Request {
	var this WriteLeasesRenew2Request

	return &this
}

func (o WriteLeasesRenew2Request) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["increment"] = o.Increment
	toSerialize["lease_id"] = o.LeaseId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteLeasesRenewRequest struct for WriteLeasesRenewRequest
type WriteLeasesRenewRequest struct {
	// The desired increment in seconds to the lease
	Increment int32 `json:"increment"`
	// The lease identifier to renew. This is included with a lease.
	LeaseId string `json:"lease_id"`
	// The lease identifier to renew. This is included with a lease.
	UrlLeaseId string `json:"url_lease_id"`
}

// NewWriteLeasesRenewRequestWithDefaults instantiates a new WriteLeasesRenewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteLeasesRenewRequestWithDefaults() *WriteLeasesRenewRequest {
	var this WriteLeasesRenewRequest

	return &this
}

func (o WriteLeasesRenewRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["increment"] = o.Increment
	toSerialize["lease_id"] = o.LeaseId
	toSerialize["url_lease_id"] = o.UrlLeaseId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteLeasesRevoke2Request struct for WriteLeasesRevoke2Request
type WriteLeasesRevoke2Request struct {
	// The lease identifier to renew. This is included with a lease.
	LeaseId string `json:"lease_id"`
	// Whether or not to perform the revocation synchronously
	Sync bool `json:"sync"`
}

// NewWriteLeasesRevoke2RequestWithDefaults instantiates a new WriteLeasesRevoke2Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteLeasesRevoke2RequestWithDefaults() *WriteLeasesRevoke2Request {
	var this WriteLeasesRevoke2Request

	this.Sync = true

	return &this
}

func (o WriteLeasesRevoke2Request) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["lease_id"] = o.LeaseId
	toSerialize["sync"] = o.Sync

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteLeasesRevokePrefixRequest struct for WriteLeasesRevokePrefixRequest
type WriteLeasesRevokePrefixRequest struct {
	// Whether or not to perform the revocation synchronously
	Sync bool `json:"sync"`
}

// NewWriteLeasesRevokePrefixRequestWithDefaults instantiates a new WriteLeasesRevokePrefixRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteLeasesRevokePrefixRequestWithDefaults() *WriteLeasesRevokePrefixRequest {
	var this WriteLeasesRevokePrefixRequest

	this.Sync = true

	return &this
}

func (o WriteLeasesRevokePrefixRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["sync"] = o.Sync

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteLeasesRevokeRequest struct for WriteLeasesRevokeRequest
type WriteLeasesRevokeRequest struct {
	// The lease identifier to renew. This is included with a lease.
	LeaseId string `json:"lease_id"`
	// Whether or not to perform the revocation synchronously
	Sync bool `json:"sync"`
	// The lease identifier to renew. This is included with a lease.
	UrlLeaseId string `json:"url_lease_id"`
}

// NewWriteLeasesRevokeRequestWithDefaults instantiates a new WriteLeasesRevokeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteLeasesRevokeRequestWithDefaults() *WriteLeasesRevokeRequest {
	var this WriteLeasesRevokeRequest

	this.Sync = true

	return &this
}

func (o WriteLeasesRevokeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["lease_id"] = o.LeaseId
	toSerialize["sync"] = o.Sync
	toSerialize["url_lease_id"] = o.UrlLeaseId

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteLoggerRequest struct for WriteLoggerRequest
type WriteLoggerRequest struct {
	// Log verbosity level. Supported values (in order of detail) are \"trace\", \"debug\", \"info\", \"warn\", and \"error\".
	Level string `json:"level"`
}

// NewWriteLoggerRequestWithDefaults instantiates a new WriteLoggerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteLoggerRequestWithDefaults() *WriteLoggerRequest {
	var this WriteLoggerRequest

	return &this
}

func (o WriteLoggerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["level"] = o.Level

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteLoggersRequest struct for WriteLoggersRequest
type WriteLoggersRequest struct {
	// Log verbosity level. Supported values (in order of detail) are \"trace\", \"debug\", \"info\", \"warn\", and \"error\".
	Level string `json:"level"`
}

// NewWriteLoggersRequestWithDefaults instantiates a new WriteLoggersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteLoggersRequestWithDefaults() *WriteLoggersRequest {
	var this WriteLoggersRequest

	return &this
}

func (o WriteLoggersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["level"] = o.Level

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteMountRequest struct for WriteMountRequest
type WriteMountRequest struct {
	// Configuration for this mount, such as default_lease_ttl and max_lease_ttl.
	Config map[string]interface{} `json:"config"`
	// User-friendly description for this mount.
	Description string `json:"description"`
	// Whether to give the mount access to Vault's external entropy.
	ExternalEntropyAccess bool `json:"external_entropy_access"`
	// Mark the mount as a local mount, which is not replicated and is unaffected by replication.
	Local bool `json:"local"`
	// The options to pass into the backend. Should be a json object with string keys and values.
	Options map[string]interface{} `json:"options"`
	// Name of the plugin to mount based from the name registered in the plugin catalog.
	PluginName string `json:"plugin_name"`
	// The semantic version of the plugin to use.
	PluginVersion string `json:"plugin_version"`
	// Whether to turn on seal wrapping for the mount.
	SealWrap bool `json:"seal_wrap"`
	// The type of the backend. Example: \"passthrough\"
	Type string `json:"type"`
}

// NewWriteMountRequestWithDefaults instantiates a new WriteMountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteMountRequestWithDefaults() *WriteMountRequest {
	var this WriteMountRequest

	this.ExternalEntropyAccess = false
	this.Local = false
	this.SealWrap = false

	return &this
}

func (o WriteMountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["config"] = o.Config
	toSerialize["description"] = o.Description
	toSerialize["external_entropy_access"] = o.ExternalEntropyAccess
	toSerialize["local"] = o.Local
	toSerialize["options"] = o.Options
	toSerialize["plugin_name"] = o.PluginName
	toSerialize["plugin_version"] = o.PluginVersion
	toSerialize["seal_wrap"] = o.SealWrap
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteMountsConfigRequest struct for WriteMountsConfigRequest
type WriteMountsConfigRequest struct {
	AllowedManagedKeys []string `json:"allowed_managed_keys"`
	// A list of headers to whitelist and allow a plugin to set on responses.
	AllowedResponseHeaders []string `json:"allowed_response_headers"`
	// The list of keys in the request data object that will not be HMAC'ed by audit devices.
	AuditNonHmacRequestKeys []string `json:"audit_non_hmac_request_keys"`
	// The list of keys in the response data object that will not be HMAC'ed by audit devices.
	AuditNonHmacResponseKeys []string `json:"audit_non_hmac_response_keys"`
	// The default lease TTL for this mount.
	DefaultLeaseTtl string `json:"default_lease_ttl"`
	// User-friendly description for this credential backend.
	Description string `json:"description"`
	// Determines the visibility of the mount in the UI-specific listing endpoint. Accepted value are 'unauth' and 'hidden', with the empty default ('') behaving like 'hidden'.
	ListingVisibility string `json:"listing_visibility"`
	// The max lease TTL for this mount.
	MaxLeaseTtl string `json:"max_lease_ttl"`
	// The options to pass into the backend. Should be a json object with string keys and values.
	Options map[string]interface{} `json:"options"`
	// A list of headers to whitelist and pass from the request to the plugin.
	PassthroughRequestHeaders []string `json:"passthrough_request_headers"`
	// The semantic version of the plugin to use.
	PluginVersion string `json:"plugin_version"`
	// The type of token to issue (service or batch).
	TokenType string `json:"token_type"`
	// The user lockout configuration to pass into the backend. Should be a json object with string keys and values.
	UserLockoutConfig map[string]interface{} `json:"user_lockout_config"`
}

// NewWriteMountsConfigRequestWithDefaults instantiates a new WriteMountsConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteMountsConfigRequestWithDefaults() *WriteMountsConfigRequest {
	var this WriteMountsConfigRequest

	return &this
}

func (o WriteMountsConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["allowed_managed_keys"] = o.AllowedManagedKeys
	toSerialize["allowed_response_headers"] = o.AllowedResponseHeaders
	toSerialize["audit_non_hmac_request_keys"] = o.AuditNonHmacRequestKeys
	toSerialize["audit_non_hmac_response_keys"] = o.AuditNonHmacResponseKeys
	toSerialize["default_lease_ttl"] = o.DefaultLeaseTtl
	toSerialize["description"] = o.Description
	toSerialize["listing_visibility"] = o.ListingVisibility
	toSerialize["max_lease_ttl"] = o.MaxLeaseTtl
	toSerialize["options"] = o.Options
	toSerialize["passthrough_request_headers"] = o.PassthroughRequestHeaders
	toSerialize["plugin_version"] = o.PluginVersion
	toSerialize["token_type"] = o.TokenType
	toSerialize["user_lockout_config"] = o.UserLockoutConfig

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WritePluginsCatalogByTypeByNameRequest struct for WritePluginsCatalogByTypeByNameRequest
type WritePluginsCatalogByTypeByNameRequest struct {
	// The args passed to plugin command.
	Args []string `json:"args"`
	// The command used to start the plugin. The executable defined in this command must exist in vault's plugin directory.
	Command string `json:"command"`
	// The environment variables passed to plugin command. Each entry is of the form \"key=value\".
	Env []string `json:"env"`
	// The SHA256 sum of the executable used in the command field. This should be HEX encoded.
	Sha256 string `json:"sha256"`
	// The semantic version of the plugin to use.
	Version string `json:"version"`
}

// NewWritePluginsCatalogByTypeByNameRequestWithDefaults instantiates a new WritePluginsCatalogByTypeByNameRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritePluginsCatalogByTypeByNameRequestWithDefaults() *WritePluginsCatalogByTypeByNameRequest {
	var this WritePluginsCatalogByTypeByNameRequest

	return &this
}

func (o WritePluginsCatalogByTypeByNameRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["args"] = o.Args
	toSerialize["command"] = o.Command
	toSerialize["env"] = o.Env
	toSerialize["sha256"] = o.Sha256
	toSerialize["version"] = o.Version

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WritePluginsReloadBackendRequest struct for WritePluginsReloadBackendRequest
type WritePluginsReloadBackendRequest struct {
	// The mount paths of the plugin backends to reload.
	Mounts []string `json:"mounts"`
	// The name of the plugin to reload, as registered in the plugin catalog.
	Plugin string `json:"plugin"`
	Scope  string `json:"scope"`
}

// NewWritePluginsReloadBackendRequestWithDefaults instantiates a new WritePluginsReloadBackendRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritePluginsReloadBackendRequestWithDefaults() *WritePluginsReloadBackendRequest {
	var this WritePluginsReloadBackendRequest

	return &this
}

func (o WritePluginsReloadBackendRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["mounts"] = o.Mounts
	toSerialize["plugin"] = o.Plugin
	toSerialize["scope"] = o.Scope

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WritePoliciesACLRequest struct for WritePoliciesACLRequest
type WritePoliciesACLRequest struct {
	// The rules of the policy.
	Policy string `json:"policy"`
}

// NewWritePoliciesACLRequestWithDefaults instantiates a new WritePoliciesACLRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritePoliciesACLRequestWithDefaults() *WritePoliciesACLRequest {
	var this WritePoliciesACLRequest

	return &this
}

func (o WritePoliciesACLRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["policy"] = o.Policy

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WritePoliciesPasswordRequest struct for WritePoliciesPasswordRequest
type WritePoliciesPasswordRequest struct {
	// The password policy
	Policy string `json:"policy"`
}

// NewWritePoliciesPasswordRequestWithDefaults instantiates a new WritePoliciesPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritePoliciesPasswordRequestWithDefaults() *WritePoliciesPasswordRequest {
	var this WritePoliciesPasswordRequest

	return &this
}

func (o WritePoliciesPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["policy"] = o.Policy

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WritePolicyRequest struct for WritePolicyRequest
type WritePolicyRequest struct {
	// The rules of the policy.
	Policy string `json:"policy"`
	// The rules of the policy.
	// Deprecated
	Rules string `json:"rules"`
}

// NewWritePolicyRequestWithDefaults instantiates a new WritePolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritePolicyRequestWithDefaults() *WritePolicyRequest {
	var this WritePolicyRequest

	return &this
}

func (o WritePolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["policy"] = o.Policy
	toSerialize["rules"] = o.Rules

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteQuotasConfigRequest struct for WriteQuotasConfigRequest
type WriteQuotasConfigRequest struct {
	// If set, starts audit logging of requests that get rejected due to rate limit quota rule violations.
	EnableRateLimitAuditLogging bool `json:"enable_rate_limit_audit_logging"`
	// If set, additional rate limit quota HTTP headers will be added to responses.
	EnableRateLimitResponseHeaders bool `json:"enable_rate_limit_response_headers"`
	// Specifies the list of exempt paths from all rate limit quotas. If empty no paths will be exempt.
	RateLimitExemptPaths []string `json:"rate_limit_exempt_paths"`
}

// NewWriteQuotasConfigRequestWithDefaults instantiates a new WriteQuotasConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteQuotasConfigRequestWithDefaults() *WriteQuotasConfigRequest {
	var this WriteQuotasConfigRequest

	return &this
}

func (o WriteQuotasConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["enable_rate_limit_audit_logging"] = o.EnableRateLimitAuditLogging
	toSerialize["enable_rate_limit_response_headers"] = o.EnableRateLimitResponseHeaders
	toSerialize["rate_limit_exempt_paths"] = o.RateLimitExemptPaths

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteQuotasRateLimitRequest struct for WriteQuotasRateLimitRequest
type WriteQuotasRateLimitRequest struct {
	// If set, when a client reaches a rate limit threshold, the client will be prohibited from any further requests until after the 'block_interval' has elapsed.
	BlockInterval int32 `json:"block_interval"`
	// The duration to enforce rate limiting for (default '1s').
	Interval int32 `json:"interval"`
	// Path of the mount or namespace to apply the quota. A blank path configures a global quota. For example namespace1/ adds a quota to a full namespace, namespace1/auth/userpass adds a quota to userpass in namespace1.
	Path string `json:"path"`
	// The maximum number of requests in a given interval to be allowed by the quota rule. The 'rate' must be positive.
	Rate float32 `json:"rate"`
	// Login role to apply this quota to. Note that when set, path must be configured to a valid auth method with a concept of roles.
	Role string `json:"role"`
	// Type of the quota rule.
	Type string `json:"type"`
}

// NewWriteQuotasRateLimitRequestWithDefaults instantiates a new WriteQuotasRateLimitRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteQuotasRateLimitRequestWithDefaults() *WriteQuotasRateLimitRequest {
	var this WriteQuotasRateLimitRequest

	return &this
}

func (o WriteQuotasRateLimitRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["block_interval"] = o.BlockInterval
	toSerialize["interval"] = o.Interval
	toSerialize["path"] = o.Path
	toSerialize["rate"] = o.Rate
	toSerialize["role"] = o.Role
	toSerialize["type"] = o.Type

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteRawPathRequest struct for WriteRawPathRequest
type WriteRawPathRequest struct {
	Compressed      bool   `json:"compressed"`
	CompressionType string `json:"compression_type"`
	Encoding        string `json:"encoding"`
	Value           string `json:"value"`
}

// NewWriteRawPathRequestWithDefaults instantiates a new WriteRawPathRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteRawPathRequestWithDefaults() *WriteRawPathRequest {
	var this WriteRawPathRequest

	return &this
}

func (o WriteRawPathRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["compressed"] = o.Compressed
	toSerialize["compression_type"] = o.CompressionType
	toSerialize["encoding"] = o.Encoding
	toSerialize["value"] = o.Value

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteRawRequest struct for WriteRawRequest
type WriteRawRequest struct {
	Compressed      bool   `json:"compressed"`
	CompressionType string `json:"compression_type"`
	Encoding        string `json:"encoding"`
	Path            string `json:"path"`
	Value           string `json:"value"`
}

// NewWriteRawRequestWithDefaults instantiates a new WriteRawRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteRawRequestWithDefaults() *WriteRawRequest {
	var this WriteRawRequest

	return &this
}

func (o WriteRawRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["compressed"] = o.Compressed
	toSerialize["compression_type"] = o.CompressionType
	toSerialize["encoding"] = o.Encoding
	toSerialize["path"] = o.Path
	toSerialize["value"] = o.Value

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteRekeyInitRequest struct for WriteRekeyInitRequest
type WriteRekeyInitRequest struct {
	// Specifies if using PGP-encrypted keys, whether Vault should also store a plaintext backup of the PGP-encrypted keys.
	Backup bool `json:"backup"`
	// Specifies an array of PGP public keys used to encrypt the output unseal keys. Ordering is preserved. The keys must be base64-encoded from their original binary representation. The size of this array must be the same as secret_shares.
	PgpKeys []string `json:"pgp_keys"`
	// Turns on verification functionality
	RequireVerification bool `json:"require_verification"`
	// Specifies the number of shares to split the unseal key into.
	SecretShares int32 `json:"secret_shares"`
	// Specifies the number of shares required to reconstruct the unseal key. This must be less than or equal secret_shares. If using Vault HSM with auto-unsealing, this value must be the same as secret_shares.
	SecretThreshold int32 `json:"secret_threshold"`
}

// NewWriteRekeyInitRequestWithDefaults instantiates a new WriteRekeyInitRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteRekeyInitRequestWithDefaults() *WriteRekeyInitRequest {
	var this WriteRekeyInitRequest

	return &this
}

func (o WriteRekeyInitRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["backup"] = o.Backup
	toSerialize["pgp_keys"] = o.PgpKeys
	toSerialize["require_verification"] = o.RequireVerification
	toSerialize["secret_shares"] = o.SecretShares
	toSerialize["secret_threshold"] = o.SecretThreshold

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteRekeyUpdateRequest struct for WriteRekeyUpdateRequest
type WriteRekeyUpdateRequest struct {
	// Specifies a single unseal key share.
	Key string `json:"key"`
	// Specifies the nonce of the rekey attempt.
	Nonce string `json:"nonce"`
}

// NewWriteRekeyUpdateRequestWithDefaults instantiates a new WriteRekeyUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteRekeyUpdateRequestWithDefaults() *WriteRekeyUpdateRequest {
	var this WriteRekeyUpdateRequest

	return &this
}

func (o WriteRekeyUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["key"] = o.Key
	toSerialize["nonce"] = o.Nonce

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteRekeyVerifyRequest struct for WriteRekeyVerifyRequest
type WriteRekeyVerifyRequest struct {
	// Specifies a single unseal share key from the new set of shares.
	Key string `json:"key"`
	// Specifies the nonce of the rekey verification operation.
	Nonce string `json:"nonce"`
}

// NewWriteRekeyVerifyRequestWithDefaults instantiates a new WriteRekeyVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteRekeyVerifyRequestWithDefaults() *WriteRekeyVerifyRequest {
	var this WriteRekeyVerifyRequest

	return &this
}

func (o WriteRekeyVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["key"] = o.Key
	toSerialize["nonce"] = o.Nonce

	return json.Marshal(toSerialize)
}

/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

// WriteRotateConfigRequest struct for WriteRotateConfigRequest
type WriteRotateConfigRequest struct {
	// Whether automatic rotation is enabled.
	Enabled bool `json:"enabled"`
	// How long after installation of an active key term that the key will be automatically rotated.
	Interval int32 `json:"interval"`
	// The number of encryption operations performed before the barrier key is automatically rotated.
	MaxOperations int64 `json:"max_operations"`
}

// NewWriteRotateConfigRequestWithDefaults instantiates a new WriteRotateConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteRotateConfigRequestWithDefaults() *WriteRotateConfigRequest {
	var this WriteRotateConfigRequest

	return &this
}

func (o WriteRotateConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := make(map[string]interface{})

	toSerialize["enabled"] = o.Enabled
	toSerialize["interval"] = o.Interval
	toSerialize["max_operations"] = o.MaxOperations

	return json.Marshal(toSerialize)
}
