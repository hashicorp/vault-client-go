/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// NomadConfigAccessRequest struct for NomadConfigAccessRequest
type NomadConfigAccessRequest struct {
	// Nomad server address
	Address *string `json:"address,omitempty"`
	// CA certificate to use when verifying Nomad server certificate, must be x509 PEM encoded.
	CaCert *string `json:"ca_cert,omitempty"`
	// Client certificate used for Nomad's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_key.
	ClientCert *string `json:"client_cert,omitempty"`
	// Client key used for Nomad's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_cert.
	ClientKey *string `json:"client_key,omitempty"`
	// Max length for name of generated Nomad tokens
	MaxTokenNameLength *int32 `json:"max_token_name_length,omitempty"`
	// Token for API calls
	Token *string `json:"token,omitempty"`
}

// NewNomadConfigAccessRequest instantiates a new NomadConfigAccessRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNomadConfigAccessRequest() *NomadConfigAccessRequest {
	this := NomadConfigAccessRequest{}
	return &this
}

// NewNomadConfigAccessRequestWithDefaults instantiates a new NomadConfigAccessRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNomadConfigAccessRequestWithDefaults() *NomadConfigAccessRequest {
	this := NomadConfigAccessRequest{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *NomadConfigAccessRequest) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigAccessRequest) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *NomadConfigAccessRequest) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *NomadConfigAccessRequest) SetAddress(v string) {
	o.Address = &v
}

// GetCaCert returns the CaCert field value if set, zero value otherwise.
func (o *NomadConfigAccessRequest) GetCaCert() string {
	if o == nil || o.CaCert == nil {
		var ret string
		return ret
	}
	return *o.CaCert
}

// GetCaCertOk returns a tuple with the CaCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigAccessRequest) GetCaCertOk() (*string, bool) {
	if o == nil || o.CaCert == nil {
		return nil, false
	}
	return o.CaCert, true
}

// HasCaCert returns a boolean if a field has been set.
func (o *NomadConfigAccessRequest) HasCaCert() bool {
	if o != nil && o.CaCert != nil {
		return true
	}

	return false
}

// SetCaCert gets a reference to the given string and assigns it to the CaCert field.
func (o *NomadConfigAccessRequest) SetCaCert(v string) {
	o.CaCert = &v
}

// GetClientCert returns the ClientCert field value if set, zero value otherwise.
func (o *NomadConfigAccessRequest) GetClientCert() string {
	if o == nil || o.ClientCert == nil {
		var ret string
		return ret
	}
	return *o.ClientCert
}

// GetClientCertOk returns a tuple with the ClientCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigAccessRequest) GetClientCertOk() (*string, bool) {
	if o == nil || o.ClientCert == nil {
		return nil, false
	}
	return o.ClientCert, true
}

// HasClientCert returns a boolean if a field has been set.
func (o *NomadConfigAccessRequest) HasClientCert() bool {
	if o != nil && o.ClientCert != nil {
		return true
	}

	return false
}

// SetClientCert gets a reference to the given string and assigns it to the ClientCert field.
func (o *NomadConfigAccessRequest) SetClientCert(v string) {
	o.ClientCert = &v
}

// GetClientKey returns the ClientKey field value if set, zero value otherwise.
func (o *NomadConfigAccessRequest) GetClientKey() string {
	if o == nil || o.ClientKey == nil {
		var ret string
		return ret
	}
	return *o.ClientKey
}

// GetClientKeyOk returns a tuple with the ClientKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigAccessRequest) GetClientKeyOk() (*string, bool) {
	if o == nil || o.ClientKey == nil {
		return nil, false
	}
	return o.ClientKey, true
}

// HasClientKey returns a boolean if a field has been set.
func (o *NomadConfigAccessRequest) HasClientKey() bool {
	if o != nil && o.ClientKey != nil {
		return true
	}

	return false
}

// SetClientKey gets a reference to the given string and assigns it to the ClientKey field.
func (o *NomadConfigAccessRequest) SetClientKey(v string) {
	o.ClientKey = &v
}

// GetMaxTokenNameLength returns the MaxTokenNameLength field value if set, zero value otherwise.
func (o *NomadConfigAccessRequest) GetMaxTokenNameLength() int32 {
	if o == nil || o.MaxTokenNameLength == nil {
		var ret int32
		return ret
	}
	return *o.MaxTokenNameLength
}

// GetMaxTokenNameLengthOk returns a tuple with the MaxTokenNameLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigAccessRequest) GetMaxTokenNameLengthOk() (*int32, bool) {
	if o == nil || o.MaxTokenNameLength == nil {
		return nil, false
	}
	return o.MaxTokenNameLength, true
}

// HasMaxTokenNameLength returns a boolean if a field has been set.
func (o *NomadConfigAccessRequest) HasMaxTokenNameLength() bool {
	if o != nil && o.MaxTokenNameLength != nil {
		return true
	}

	return false
}

// SetMaxTokenNameLength gets a reference to the given int32 and assigns it to the MaxTokenNameLength field.
func (o *NomadConfigAccessRequest) SetMaxTokenNameLength(v int32) {
	o.MaxTokenNameLength = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *NomadConfigAccessRequest) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NomadConfigAccessRequest) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *NomadConfigAccessRequest) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *NomadConfigAccessRequest) SetToken(v string) {
	o.Token = &v
}

func (o NomadConfigAccessRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.CaCert != nil {
		toSerialize["ca_cert"] = o.CaCert
	}
	if o.ClientCert != nil {
		toSerialize["client_cert"] = o.ClientCert
	}
	if o.ClientKey != nil {
		toSerialize["client_key"] = o.ClientKey
	}
	if o.MaxTokenNameLength != nil {
		toSerialize["max_token_name_length"] = o.MaxTokenNameLength
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableNomadConfigAccessRequest struct {
	value *NomadConfigAccessRequest
	isSet bool
}

func (v NullableNomadConfigAccessRequest) Get() *NomadConfigAccessRequest {
	return v.value
}

func (v *NullableNomadConfigAccessRequest) Set(val *NomadConfigAccessRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNomadConfigAccessRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNomadConfigAccessRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNomadConfigAccessRequest(val *NomadConfigAccessRequest) *NullableNomadConfigAccessRequest {
	return &NullableNomadConfigAccessRequest{value: val, isSet: true}
}

func (v NullableNomadConfigAccessRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNomadConfigAccessRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


