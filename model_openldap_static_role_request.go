/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// OpenldapStaticRoleRequest struct for OpenldapStaticRoleRequest
type OpenldapStaticRoleRequest struct {
	// The distinguished name of the entry to manage.
	Dn *string `json:"dn,omitempty"`
	// Period for automatic credential rotation of the given entry.
	RotationPeriod *int32 `json:"rotation_period,omitempty"`
	// The time-to-live for the password.
	Ttl *int32 `json:"ttl,omitempty"`
	// The username/logon name for the entry with which this role will be associated.
	Username *string `json:"username,omitempty"`
}

// NewOpenldapStaticRoleRequest instantiates a new OpenldapStaticRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenldapStaticRoleRequest() *OpenldapStaticRoleRequest {
	this := OpenldapStaticRoleRequest{}
	return &this
}

// NewOpenldapStaticRoleRequestWithDefaults instantiates a new OpenldapStaticRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenldapStaticRoleRequestWithDefaults() *OpenldapStaticRoleRequest {
	this := OpenldapStaticRoleRequest{}
	return &this
}

// GetDn returns the Dn field value if set, zero value otherwise.
func (o *OpenldapStaticRoleRequest) GetDn() string {
	if o == nil || o.Dn == nil {
		var ret string
		return ret
	}
	return *o.Dn
}

// GetDnOk returns a tuple with the Dn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapStaticRoleRequest) GetDnOk() (*string, bool) {
	if o == nil || o.Dn == nil {
		return nil, false
	}
	return o.Dn, true
}

// HasDn returns a boolean if a field has been set.
func (o *OpenldapStaticRoleRequest) HasDn() bool {
	if o != nil && o.Dn != nil {
		return true
	}

	return false
}

// SetDn gets a reference to the given string and assigns it to the Dn field.
func (o *OpenldapStaticRoleRequest) SetDn(v string) {
	o.Dn = &v
}

// GetRotationPeriod returns the RotationPeriod field value if set, zero value otherwise.
func (o *OpenldapStaticRoleRequest) GetRotationPeriod() int32 {
	if o == nil || o.RotationPeriod == nil {
		var ret int32
		return ret
	}
	return *o.RotationPeriod
}

// GetRotationPeriodOk returns a tuple with the RotationPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapStaticRoleRequest) GetRotationPeriodOk() (*int32, bool) {
	if o == nil || o.RotationPeriod == nil {
		return nil, false
	}
	return o.RotationPeriod, true
}

// HasRotationPeriod returns a boolean if a field has been set.
func (o *OpenldapStaticRoleRequest) HasRotationPeriod() bool {
	if o != nil && o.RotationPeriod != nil {
		return true
	}

	return false
}

// SetRotationPeriod gets a reference to the given int32 and assigns it to the RotationPeriod field.
func (o *OpenldapStaticRoleRequest) SetRotationPeriod(v int32) {
	o.RotationPeriod = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *OpenldapStaticRoleRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapStaticRoleRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *OpenldapStaticRoleRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *OpenldapStaticRoleRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *OpenldapStaticRoleRequest) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenldapStaticRoleRequest) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *OpenldapStaticRoleRequest) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *OpenldapStaticRoleRequest) SetUsername(v string) {
	o.Username = &v
}

func (o OpenldapStaticRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Dn != nil {
		toSerialize["dn"] = o.Dn
	}
	if o.RotationPeriod != nil {
		toSerialize["rotation_period"] = o.RotationPeriod
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableOpenldapStaticRoleRequest struct {
	value *OpenldapStaticRoleRequest
	isSet bool
}

func (v NullableOpenldapStaticRoleRequest) Get() *OpenldapStaticRoleRequest {
	return v.value
}

func (v *NullableOpenldapStaticRoleRequest) Set(val *OpenldapStaticRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenldapStaticRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenldapStaticRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenldapStaticRoleRequest(val *OpenldapStaticRoleRequest) *NullableOpenldapStaticRoleRequest {
	return &NullableOpenldapStaticRoleRequest{value: val, isSet: true}
}

func (v NullableOpenldapStaticRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenldapStaticRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


