/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"crypto/tls"
	"net/http"
	"time"

	"github.com/hashicorp/go-cleanhttp"

	"golang.org/x/net/http2"
)

// Configuration is used to configure the creation of the client
type Configuration struct {
	// Address specifies the Vault server URL in the form of scheme://host:port
	// Default: https://127.0.0.1:8200
	Address string

	// HTTPClient is the HTTP client to use for all API requests.
	// DefaultConfiguration() sets reasonable defaults for the HTTPClient and
	// its associated http.Transport. If you must modify Vault's defaults, it
	// is suggested that you start with that client and modify it as needed
	// rather than starting with an empty client or http.DefaultClient.
	HTTPClient *http.Client

	// Timeout is the global request timeout. Specifying this value is the
	// equivalent of using context.WithTimeout(timeout) for every API request.
	// Default: 60 seconds
	Timeout time.Duration
}

// DefaultConfiguration returns the default configuration for the client. It is
// safe to modify the return value of this function.
func DefaultConfiguration() (*Configuration, error) {
	client := cleanhttp.DefaultPooledClient()

	transport := client.Transport.(*http.Transport)
	transport.TLSHandshakeTimeout = 10 * time.Second
	transport.TLSClientConfig = &tls.Config{
		MinVersion: tls.VersionTLS12,
	}

	if err := http2.ConfigureTransport(transport); err != nil {
		return nil, err
	}

	return &Configuration{
		Address:    "https://127.0.0.1:8200",
		HTTPClient: client,
		Timeout:    60 * time.Second,
	}, nil
}
