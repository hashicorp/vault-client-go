/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// GcpkmsDecryptRequest struct for GcpkmsDecryptRequest
type GcpkmsDecryptRequest struct {
	// Optional data that was specified during encryption of this payload.
	AdditionalAuthenticatedData *string `json:"additional_authenticated_data,omitempty"`
	// Ciphertext to decrypt as previously returned from an encrypt operation. This must be base64-encoded ciphertext as previously returned from an encrypt operation.
	Ciphertext *string `json:"ciphertext,omitempty"`
	// Integer version of the crypto key version to use for decryption. This is required for asymmetric keys. For symmetric keys, Cloud KMS will choose the correct version automatically.
	KeyVersion *int32 `json:"key_version,omitempty"`
}

// NewGcpkmsDecryptRequest instantiates a new GcpkmsDecryptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpkmsDecryptRequest() *GcpkmsDecryptRequest {
	this := GcpkmsDecryptRequest{}
	return &this
}

// NewGcpkmsDecryptRequestWithDefaults instantiates a new GcpkmsDecryptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpkmsDecryptRequestWithDefaults() *GcpkmsDecryptRequest {
	this := GcpkmsDecryptRequest{}
	return &this
}

// GetAdditionalAuthenticatedData returns the AdditionalAuthenticatedData field value if set, zero value otherwise.
func (o *GcpkmsDecryptRequest) GetAdditionalAuthenticatedData() string {
	if o == nil || o.AdditionalAuthenticatedData == nil {
		var ret string
		return ret
	}
	return *o.AdditionalAuthenticatedData
}

// GetAdditionalAuthenticatedDataOk returns a tuple with the AdditionalAuthenticatedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsDecryptRequest) GetAdditionalAuthenticatedDataOk() (*string, bool) {
	if o == nil || o.AdditionalAuthenticatedData == nil {
		return nil, false
	}
	return o.AdditionalAuthenticatedData, true
}

// HasAdditionalAuthenticatedData returns a boolean if a field has been set.
func (o *GcpkmsDecryptRequest) HasAdditionalAuthenticatedData() bool {
	if o != nil && o.AdditionalAuthenticatedData != nil {
		return true
	}

	return false
}

// SetAdditionalAuthenticatedData gets a reference to the given string and assigns it to the AdditionalAuthenticatedData field.
func (o *GcpkmsDecryptRequest) SetAdditionalAuthenticatedData(v string) {
	o.AdditionalAuthenticatedData = &v
}

// GetCiphertext returns the Ciphertext field value if set, zero value otherwise.
func (o *GcpkmsDecryptRequest) GetCiphertext() string {
	if o == nil || o.Ciphertext == nil {
		var ret string
		return ret
	}
	return *o.Ciphertext
}

// GetCiphertextOk returns a tuple with the Ciphertext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsDecryptRequest) GetCiphertextOk() (*string, bool) {
	if o == nil || o.Ciphertext == nil {
		return nil, false
	}
	return o.Ciphertext, true
}

// HasCiphertext returns a boolean if a field has been set.
func (o *GcpkmsDecryptRequest) HasCiphertext() bool {
	if o != nil && o.Ciphertext != nil {
		return true
	}

	return false
}

// SetCiphertext gets a reference to the given string and assigns it to the Ciphertext field.
func (o *GcpkmsDecryptRequest) SetCiphertext(v string) {
	o.Ciphertext = &v
}

// GetKeyVersion returns the KeyVersion field value if set, zero value otherwise.
func (o *GcpkmsDecryptRequest) GetKeyVersion() int32 {
	if o == nil || o.KeyVersion == nil {
		var ret int32
		return ret
	}
	return *o.KeyVersion
}

// GetKeyVersionOk returns a tuple with the KeyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpkmsDecryptRequest) GetKeyVersionOk() (*int32, bool) {
	if o == nil || o.KeyVersion == nil {
		return nil, false
	}
	return o.KeyVersion, true
}

// HasKeyVersion returns a boolean if a field has been set.
func (o *GcpkmsDecryptRequest) HasKeyVersion() bool {
	if o != nil && o.KeyVersion != nil {
		return true
	}

	return false
}

// SetKeyVersion gets a reference to the given int32 and assigns it to the KeyVersion field.
func (o *GcpkmsDecryptRequest) SetKeyVersion(v int32) {
	o.KeyVersion = &v
}

func (o GcpkmsDecryptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalAuthenticatedData != nil {
		toSerialize["additional_authenticated_data"] = o.AdditionalAuthenticatedData
	}
	if o.Ciphertext != nil {
		toSerialize["ciphertext"] = o.Ciphertext
	}
	if o.KeyVersion != nil {
		toSerialize["key_version"] = o.KeyVersion
	}
	return json.Marshal(toSerialize)
}

type NullableGcpkmsDecryptRequest struct {
	value *GcpkmsDecryptRequest
	isSet bool
}

func (v NullableGcpkmsDecryptRequest) Get() *GcpkmsDecryptRequest {
	return v.value
}

func (v *NullableGcpkmsDecryptRequest) Set(val *GcpkmsDecryptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpkmsDecryptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpkmsDecryptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpkmsDecryptRequest(val *GcpkmsDecryptRequest) *NullableGcpkmsDecryptRequest {
	return &NullableGcpkmsDecryptRequest{value: val, isSet: true}
}

func (v NullableGcpkmsDecryptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpkmsDecryptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


