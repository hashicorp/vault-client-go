/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// IdentityOidcKeyRequest struct for IdentityOidcKeyRequest
type IdentityOidcKeyRequest struct {
	// Signing algorithm to use. This will default to RS256.
	Algorithm *string `json:"algorithm,omitempty"`
	// Comma separated string or array of role client ids allowed to use this key for signing. If empty no roles are allowed. If \"*\" all roles are allowed.
	AllowedClientIds []string `json:"allowed_client_ids,omitempty"`
	// How often to generate a new keypair.
	RotationPeriod *int32 `json:"rotation_period,omitempty"`
	// Controls how long the public portion of a key will be available for verification after being rotated.
	VerificationTtl *int32 `json:"verification_ttl,omitempty"`
}

// NewIdentityOidcKeyRequest instantiates a new IdentityOidcKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcKeyRequest() *IdentityOidcKeyRequest {
	this := IdentityOidcKeyRequest{}
	var algorithm string = "RS256"
	this.Algorithm = &algorithm
	return &this
}

// NewIdentityOidcKeyRequestWithDefaults instantiates a new IdentityOidcKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcKeyRequestWithDefaults() *IdentityOidcKeyRequest {
	this := IdentityOidcKeyRequest{}
	var algorithm string = "RS256"
	this.Algorithm = &algorithm
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *IdentityOidcKeyRequest) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcKeyRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *IdentityOidcKeyRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *IdentityOidcKeyRequest) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetAllowedClientIds returns the AllowedClientIds field value if set, zero value otherwise.
func (o *IdentityOidcKeyRequest) GetAllowedClientIds() []string {
	if o == nil || o.AllowedClientIds == nil {
		var ret []string
		return ret
	}
	return o.AllowedClientIds
}

// GetAllowedClientIdsOk returns a tuple with the AllowedClientIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcKeyRequest) GetAllowedClientIdsOk() ([]string, bool) {
	if o == nil || o.AllowedClientIds == nil {
		return nil, false
	}
	return o.AllowedClientIds, true
}

// HasAllowedClientIds returns a boolean if a field has been set.
func (o *IdentityOidcKeyRequest) HasAllowedClientIds() bool {
	if o != nil && o.AllowedClientIds != nil {
		return true
	}

	return false
}

// SetAllowedClientIds gets a reference to the given []string and assigns it to the AllowedClientIds field.
func (o *IdentityOidcKeyRequest) SetAllowedClientIds(v []string) {
	o.AllowedClientIds = v
}

// GetRotationPeriod returns the RotationPeriod field value if set, zero value otherwise.
func (o *IdentityOidcKeyRequest) GetRotationPeriod() int32 {
	if o == nil || o.RotationPeriod == nil {
		var ret int32
		return ret
	}
	return *o.RotationPeriod
}

// GetRotationPeriodOk returns a tuple with the RotationPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcKeyRequest) GetRotationPeriodOk() (*int32, bool) {
	if o == nil || o.RotationPeriod == nil {
		return nil, false
	}
	return o.RotationPeriod, true
}

// HasRotationPeriod returns a boolean if a field has been set.
func (o *IdentityOidcKeyRequest) HasRotationPeriod() bool {
	if o != nil && o.RotationPeriod != nil {
		return true
	}

	return false
}

// SetRotationPeriod gets a reference to the given int32 and assigns it to the RotationPeriod field.
func (o *IdentityOidcKeyRequest) SetRotationPeriod(v int32) {
	o.RotationPeriod = &v
}

// GetVerificationTtl returns the VerificationTtl field value if set, zero value otherwise.
func (o *IdentityOidcKeyRequest) GetVerificationTtl() int32 {
	if o == nil || o.VerificationTtl == nil {
		var ret int32
		return ret
	}
	return *o.VerificationTtl
}

// GetVerificationTtlOk returns a tuple with the VerificationTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcKeyRequest) GetVerificationTtlOk() (*int32, bool) {
	if o == nil || o.VerificationTtl == nil {
		return nil, false
	}
	return o.VerificationTtl, true
}

// HasVerificationTtl returns a boolean if a field has been set.
func (o *IdentityOidcKeyRequest) HasVerificationTtl() bool {
	if o != nil && o.VerificationTtl != nil {
		return true
	}

	return false
}

// SetVerificationTtl gets a reference to the given int32 and assigns it to the VerificationTtl field.
func (o *IdentityOidcKeyRequest) SetVerificationTtl(v int32) {
	o.VerificationTtl = &v
}

func (o IdentityOidcKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.AllowedClientIds != nil {
		toSerialize["allowed_client_ids"] = o.AllowedClientIds
	}
	if o.RotationPeriod != nil {
		toSerialize["rotation_period"] = o.RotationPeriod
	}
	if o.VerificationTtl != nil {
		toSerialize["verification_ttl"] = o.VerificationTtl
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcKeyRequest struct {
	value *IdentityOidcKeyRequest
	isSet bool
}

func (v NullableIdentityOidcKeyRequest) Get() *IdentityOidcKeyRequest {
	return v.value
}

func (v *NullableIdentityOidcKeyRequest) Set(val *IdentityOidcKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcKeyRequest(val *IdentityOidcKeyRequest) *NullableIdentityOidcKeyRequest {
	return &NullableIdentityOidcKeyRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


