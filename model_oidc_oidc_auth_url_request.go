/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// OidcOidcAuthUrlRequest struct for OidcOidcAuthUrlRequest
type OidcOidcAuthUrlRequest struct {
	// Optional client-provided nonce that must match during callback, if present.
	ClientNonce *string `json:"client_nonce,omitempty"`
	// The OAuth redirect_uri to use in the authorization URL.
	RedirectUri *string `json:"redirect_uri,omitempty"`
	// The role to issue an OIDC authorization URL against.
	Role *string `json:"role,omitempty"`
}

// NewOidcOidcAuthUrlRequest instantiates a new OidcOidcAuthUrlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcOidcAuthUrlRequest() *OidcOidcAuthUrlRequest {
	this := OidcOidcAuthUrlRequest{}
	return &this
}

// NewOidcOidcAuthUrlRequestWithDefaults instantiates a new OidcOidcAuthUrlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcOidcAuthUrlRequestWithDefaults() *OidcOidcAuthUrlRequest {
	this := OidcOidcAuthUrlRequest{}
	return &this
}

// GetClientNonce returns the ClientNonce field value if set, zero value otherwise.
func (o *OidcOidcAuthUrlRequest) GetClientNonce() string {
	if o == nil || o.ClientNonce == nil {
		var ret string
		return ret
	}
	return *o.ClientNonce
}

// GetClientNonceOk returns a tuple with the ClientNonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcOidcAuthUrlRequest) GetClientNonceOk() (*string, bool) {
	if o == nil || o.ClientNonce == nil {
		return nil, false
	}
	return o.ClientNonce, true
}

// HasClientNonce returns a boolean if a field has been set.
func (o *OidcOidcAuthUrlRequest) HasClientNonce() bool {
	if o != nil && o.ClientNonce != nil {
		return true
	}

	return false
}

// SetClientNonce gets a reference to the given string and assigns it to the ClientNonce field.
func (o *OidcOidcAuthUrlRequest) SetClientNonce(v string) {
	o.ClientNonce = &v
}

// GetRedirectUri returns the RedirectUri field value if set, zero value otherwise.
func (o *OidcOidcAuthUrlRequest) GetRedirectUri() string {
	if o == nil || o.RedirectUri == nil {
		var ret string
		return ret
	}
	return *o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcOidcAuthUrlRequest) GetRedirectUriOk() (*string, bool) {
	if o == nil || o.RedirectUri == nil {
		return nil, false
	}
	return o.RedirectUri, true
}

// HasRedirectUri returns a boolean if a field has been set.
func (o *OidcOidcAuthUrlRequest) HasRedirectUri() bool {
	if o != nil && o.RedirectUri != nil {
		return true
	}

	return false
}

// SetRedirectUri gets a reference to the given string and assigns it to the RedirectUri field.
func (o *OidcOidcAuthUrlRequest) SetRedirectUri(v string) {
	o.RedirectUri = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *OidcOidcAuthUrlRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcOidcAuthUrlRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *OidcOidcAuthUrlRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *OidcOidcAuthUrlRequest) SetRole(v string) {
	o.Role = &v
}

func (o OidcOidcAuthUrlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientNonce != nil {
		toSerialize["client_nonce"] = o.ClientNonce
	}
	if o.RedirectUri != nil {
		toSerialize["redirect_uri"] = o.RedirectUri
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableOidcOidcAuthUrlRequest struct {
	value *OidcOidcAuthUrlRequest
	isSet bool
}

func (v NullableOidcOidcAuthUrlRequest) Get() *OidcOidcAuthUrlRequest {
	return v.value
}

func (v *NullableOidcOidcAuthUrlRequest) Set(val *OidcOidcAuthUrlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcOidcAuthUrlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcOidcAuthUrlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcOidcAuthUrlRequest(val *OidcOidcAuthUrlRequest) *NullableOidcOidcAuthUrlRequest {
	return &NullableOidcOidcAuthUrlRequest{value: val, isSet: true}
}

func (v NullableOidcOidcAuthUrlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcOidcAuthUrlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


