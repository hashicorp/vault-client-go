/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// CfConfigRequest struct for CfConfigRequest
type CfConfigRequest struct {
	// CF’s API address.
	CfApiAddr *string `json:"cf_api_addr,omitempty"`
	// The PEM-format certificates that are presented for mutual TLS with the CloudFoundry API. If not set, mutual TLS is not used
	CfApiMutualTlsCertificate *string `json:"cf_api_mutual_tls_certificate,omitempty"`
	// The PEM-format private key that are used for mutual TLS with the CloudFoundry API. If not set, mutual TLS is not used
	CfApiMutualTlsKey *string `json:"cf_api_mutual_tls_key,omitempty"`
	// The PEM-format CA certificates that are acceptable for the CF API to present.
	CfApiTrustedCertificates []string `json:"cf_api_trusted_certificates,omitempty"`
	// The client id for CF’s API.
	CfClientId *string `json:"cf_client_id,omitempty"`
	// The client secret for CF’s API.
	CfClientSecret *string `json:"cf_client_secret,omitempty"`
	// The password for CF’s API.
	CfPassword *string `json:"cf_password,omitempty"`
	// The username for CF’s API.
	CfUsername *string `json:"cf_username,omitempty"`
	// The PEM-format CA certificates that are required to have issued the instance certificates presented for logging in.
	IdentityCaCertificates []string `json:"identity_ca_certificates,omitempty"`
	// Duration in seconds for the maximum acceptable length in the future a \"signing_time\" can be. Useful for clock drift. Set low to reduce the opportunity for replay attacks.
	LoginMaxSecondsNotAfter *int32 `json:"login_max_seconds_not_after,omitempty"`
	// Duration in seconds for the maximum acceptable age of a \"signing_time\". Useful for clock drift. Set low to reduce the opportunity for replay attacks.
	LoginMaxSecondsNotBefore *int32 `json:"login_max_seconds_not_before,omitempty"`
	// Deprecated. Please use \"cf_api_addr\".
	// Deprecated
	PcfApiAddr *string `json:"pcf_api_addr,omitempty"`
	// Deprecated. Please use \"cf_api_trusted_certificates\".
	// Deprecated
	PcfApiTrustedCertificates []string `json:"pcf_api_trusted_certificates,omitempty"`
	// Deprecated. Please use \"cf_password\".
	// Deprecated
	PcfPassword *string `json:"pcf_password,omitempty"`
	// Deprecated. Please use \"cf_username\".
	// Deprecated
	PcfUsername *string `json:"pcf_username,omitempty"`
}

// NewCfConfigRequest instantiates a new CfConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCfConfigRequest() *CfConfigRequest {
	this := CfConfigRequest{}
	var loginMaxSecondsNotAfter int32 = 60
	this.LoginMaxSecondsNotAfter = &loginMaxSecondsNotAfter
	var loginMaxSecondsNotBefore int32 = 300
	this.LoginMaxSecondsNotBefore = &loginMaxSecondsNotBefore
	return &this
}

// NewCfConfigRequestWithDefaults instantiates a new CfConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCfConfigRequestWithDefaults() *CfConfigRequest {
	this := CfConfigRequest{}
	var loginMaxSecondsNotAfter int32 = 60
	this.LoginMaxSecondsNotAfter = &loginMaxSecondsNotAfter
	var loginMaxSecondsNotBefore int32 = 300
	this.LoginMaxSecondsNotBefore = &loginMaxSecondsNotBefore
	return &this
}

// GetCfApiAddr returns the CfApiAddr field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfApiAddr() string {
	if o == nil || o.CfApiAddr == nil {
		var ret string
		return ret
	}
	return *o.CfApiAddr
}

// GetCfApiAddrOk returns a tuple with the CfApiAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfApiAddrOk() (*string, bool) {
	if o == nil || o.CfApiAddr == nil {
		return nil, false
	}
	return o.CfApiAddr, true
}

// HasCfApiAddr returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfApiAddr() bool {
	if o != nil && o.CfApiAddr != nil {
		return true
	}

	return false
}

// SetCfApiAddr gets a reference to the given string and assigns it to the CfApiAddr field.
func (o *CfConfigRequest) SetCfApiAddr(v string) {
	o.CfApiAddr = &v
}

// GetCfApiMutualTlsCertificate returns the CfApiMutualTlsCertificate field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfApiMutualTlsCertificate() string {
	if o == nil || o.CfApiMutualTlsCertificate == nil {
		var ret string
		return ret
	}
	return *o.CfApiMutualTlsCertificate
}

// GetCfApiMutualTlsCertificateOk returns a tuple with the CfApiMutualTlsCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfApiMutualTlsCertificateOk() (*string, bool) {
	if o == nil || o.CfApiMutualTlsCertificate == nil {
		return nil, false
	}
	return o.CfApiMutualTlsCertificate, true
}

// HasCfApiMutualTlsCertificate returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfApiMutualTlsCertificate() bool {
	if o != nil && o.CfApiMutualTlsCertificate != nil {
		return true
	}

	return false
}

// SetCfApiMutualTlsCertificate gets a reference to the given string and assigns it to the CfApiMutualTlsCertificate field.
func (o *CfConfigRequest) SetCfApiMutualTlsCertificate(v string) {
	o.CfApiMutualTlsCertificate = &v
}

// GetCfApiMutualTlsKey returns the CfApiMutualTlsKey field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfApiMutualTlsKey() string {
	if o == nil || o.CfApiMutualTlsKey == nil {
		var ret string
		return ret
	}
	return *o.CfApiMutualTlsKey
}

// GetCfApiMutualTlsKeyOk returns a tuple with the CfApiMutualTlsKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfApiMutualTlsKeyOk() (*string, bool) {
	if o == nil || o.CfApiMutualTlsKey == nil {
		return nil, false
	}
	return o.CfApiMutualTlsKey, true
}

// HasCfApiMutualTlsKey returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfApiMutualTlsKey() bool {
	if o != nil && o.CfApiMutualTlsKey != nil {
		return true
	}

	return false
}

// SetCfApiMutualTlsKey gets a reference to the given string and assigns it to the CfApiMutualTlsKey field.
func (o *CfConfigRequest) SetCfApiMutualTlsKey(v string) {
	o.CfApiMutualTlsKey = &v
}

// GetCfApiTrustedCertificates returns the CfApiTrustedCertificates field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfApiTrustedCertificates() []string {
	if o == nil || o.CfApiTrustedCertificates == nil {
		var ret []string
		return ret
	}
	return o.CfApiTrustedCertificates
}

// GetCfApiTrustedCertificatesOk returns a tuple with the CfApiTrustedCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfApiTrustedCertificatesOk() ([]string, bool) {
	if o == nil || o.CfApiTrustedCertificates == nil {
		return nil, false
	}
	return o.CfApiTrustedCertificates, true
}

// HasCfApiTrustedCertificates returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfApiTrustedCertificates() bool {
	if o != nil && o.CfApiTrustedCertificates != nil {
		return true
	}

	return false
}

// SetCfApiTrustedCertificates gets a reference to the given []string and assigns it to the CfApiTrustedCertificates field.
func (o *CfConfigRequest) SetCfApiTrustedCertificates(v []string) {
	o.CfApiTrustedCertificates = v
}

// GetCfClientId returns the CfClientId field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfClientId() string {
	if o == nil || o.CfClientId == nil {
		var ret string
		return ret
	}
	return *o.CfClientId
}

// GetCfClientIdOk returns a tuple with the CfClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfClientIdOk() (*string, bool) {
	if o == nil || o.CfClientId == nil {
		return nil, false
	}
	return o.CfClientId, true
}

// HasCfClientId returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfClientId() bool {
	if o != nil && o.CfClientId != nil {
		return true
	}

	return false
}

// SetCfClientId gets a reference to the given string and assigns it to the CfClientId field.
func (o *CfConfigRequest) SetCfClientId(v string) {
	o.CfClientId = &v
}

// GetCfClientSecret returns the CfClientSecret field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfClientSecret() string {
	if o == nil || o.CfClientSecret == nil {
		var ret string
		return ret
	}
	return *o.CfClientSecret
}

// GetCfClientSecretOk returns a tuple with the CfClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfClientSecretOk() (*string, bool) {
	if o == nil || o.CfClientSecret == nil {
		return nil, false
	}
	return o.CfClientSecret, true
}

// HasCfClientSecret returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfClientSecret() bool {
	if o != nil && o.CfClientSecret != nil {
		return true
	}

	return false
}

// SetCfClientSecret gets a reference to the given string and assigns it to the CfClientSecret field.
func (o *CfConfigRequest) SetCfClientSecret(v string) {
	o.CfClientSecret = &v
}

// GetCfPassword returns the CfPassword field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfPassword() string {
	if o == nil || o.CfPassword == nil {
		var ret string
		return ret
	}
	return *o.CfPassword
}

// GetCfPasswordOk returns a tuple with the CfPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfPasswordOk() (*string, bool) {
	if o == nil || o.CfPassword == nil {
		return nil, false
	}
	return o.CfPassword, true
}

// HasCfPassword returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfPassword() bool {
	if o != nil && o.CfPassword != nil {
		return true
	}

	return false
}

// SetCfPassword gets a reference to the given string and assigns it to the CfPassword field.
func (o *CfConfigRequest) SetCfPassword(v string) {
	o.CfPassword = &v
}

// GetCfUsername returns the CfUsername field value if set, zero value otherwise.
func (o *CfConfigRequest) GetCfUsername() string {
	if o == nil || o.CfUsername == nil {
		var ret string
		return ret
	}
	return *o.CfUsername
}

// GetCfUsernameOk returns a tuple with the CfUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetCfUsernameOk() (*string, bool) {
	if o == nil || o.CfUsername == nil {
		return nil, false
	}
	return o.CfUsername, true
}

// HasCfUsername returns a boolean if a field has been set.
func (o *CfConfigRequest) HasCfUsername() bool {
	if o != nil && o.CfUsername != nil {
		return true
	}

	return false
}

// SetCfUsername gets a reference to the given string and assigns it to the CfUsername field.
func (o *CfConfigRequest) SetCfUsername(v string) {
	o.CfUsername = &v
}

// GetIdentityCaCertificates returns the IdentityCaCertificates field value if set, zero value otherwise.
func (o *CfConfigRequest) GetIdentityCaCertificates() []string {
	if o == nil || o.IdentityCaCertificates == nil {
		var ret []string
		return ret
	}
	return o.IdentityCaCertificates
}

// GetIdentityCaCertificatesOk returns a tuple with the IdentityCaCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetIdentityCaCertificatesOk() ([]string, bool) {
	if o == nil || o.IdentityCaCertificates == nil {
		return nil, false
	}
	return o.IdentityCaCertificates, true
}

// HasIdentityCaCertificates returns a boolean if a field has been set.
func (o *CfConfigRequest) HasIdentityCaCertificates() bool {
	if o != nil && o.IdentityCaCertificates != nil {
		return true
	}

	return false
}

// SetIdentityCaCertificates gets a reference to the given []string and assigns it to the IdentityCaCertificates field.
func (o *CfConfigRequest) SetIdentityCaCertificates(v []string) {
	o.IdentityCaCertificates = v
}

// GetLoginMaxSecondsNotAfter returns the LoginMaxSecondsNotAfter field value if set, zero value otherwise.
func (o *CfConfigRequest) GetLoginMaxSecondsNotAfter() int32 {
	if o == nil || o.LoginMaxSecondsNotAfter == nil {
		var ret int32
		return ret
	}
	return *o.LoginMaxSecondsNotAfter
}

// GetLoginMaxSecondsNotAfterOk returns a tuple with the LoginMaxSecondsNotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetLoginMaxSecondsNotAfterOk() (*int32, bool) {
	if o == nil || o.LoginMaxSecondsNotAfter == nil {
		return nil, false
	}
	return o.LoginMaxSecondsNotAfter, true
}

// HasLoginMaxSecondsNotAfter returns a boolean if a field has been set.
func (o *CfConfigRequest) HasLoginMaxSecondsNotAfter() bool {
	if o != nil && o.LoginMaxSecondsNotAfter != nil {
		return true
	}

	return false
}

// SetLoginMaxSecondsNotAfter gets a reference to the given int32 and assigns it to the LoginMaxSecondsNotAfter field.
func (o *CfConfigRequest) SetLoginMaxSecondsNotAfter(v int32) {
	o.LoginMaxSecondsNotAfter = &v
}

// GetLoginMaxSecondsNotBefore returns the LoginMaxSecondsNotBefore field value if set, zero value otherwise.
func (o *CfConfigRequest) GetLoginMaxSecondsNotBefore() int32 {
	if o == nil || o.LoginMaxSecondsNotBefore == nil {
		var ret int32
		return ret
	}
	return *o.LoginMaxSecondsNotBefore
}

// GetLoginMaxSecondsNotBeforeOk returns a tuple with the LoginMaxSecondsNotBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfConfigRequest) GetLoginMaxSecondsNotBeforeOk() (*int32, bool) {
	if o == nil || o.LoginMaxSecondsNotBefore == nil {
		return nil, false
	}
	return o.LoginMaxSecondsNotBefore, true
}

// HasLoginMaxSecondsNotBefore returns a boolean if a field has been set.
func (o *CfConfigRequest) HasLoginMaxSecondsNotBefore() bool {
	if o != nil && o.LoginMaxSecondsNotBefore != nil {
		return true
	}

	return false
}

// SetLoginMaxSecondsNotBefore gets a reference to the given int32 and assigns it to the LoginMaxSecondsNotBefore field.
func (o *CfConfigRequest) SetLoginMaxSecondsNotBefore(v int32) {
	o.LoginMaxSecondsNotBefore = &v
}

// GetPcfApiAddr returns the PcfApiAddr field value if set, zero value otherwise.
// Deprecated
func (o *CfConfigRequest) GetPcfApiAddr() string {
	if o == nil || o.PcfApiAddr == nil {
		var ret string
		return ret
	}
	return *o.PcfApiAddr
}

// GetPcfApiAddrOk returns a tuple with the PcfApiAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfConfigRequest) GetPcfApiAddrOk() (*string, bool) {
	if o == nil || o.PcfApiAddr == nil {
		return nil, false
	}
	return o.PcfApiAddr, true
}

// HasPcfApiAddr returns a boolean if a field has been set.
func (o *CfConfigRequest) HasPcfApiAddr() bool {
	if o != nil && o.PcfApiAddr != nil {
		return true
	}

	return false
}

// SetPcfApiAddr gets a reference to the given string and assigns it to the PcfApiAddr field.
// Deprecated
func (o *CfConfigRequest) SetPcfApiAddr(v string) {
	o.PcfApiAddr = &v
}

// GetPcfApiTrustedCertificates returns the PcfApiTrustedCertificates field value if set, zero value otherwise.
// Deprecated
func (o *CfConfigRequest) GetPcfApiTrustedCertificates() []string {
	if o == nil || o.PcfApiTrustedCertificates == nil {
		var ret []string
		return ret
	}
	return o.PcfApiTrustedCertificates
}

// GetPcfApiTrustedCertificatesOk returns a tuple with the PcfApiTrustedCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfConfigRequest) GetPcfApiTrustedCertificatesOk() ([]string, bool) {
	if o == nil || o.PcfApiTrustedCertificates == nil {
		return nil, false
	}
	return o.PcfApiTrustedCertificates, true
}

// HasPcfApiTrustedCertificates returns a boolean if a field has been set.
func (o *CfConfigRequest) HasPcfApiTrustedCertificates() bool {
	if o != nil && o.PcfApiTrustedCertificates != nil {
		return true
	}

	return false
}

// SetPcfApiTrustedCertificates gets a reference to the given []string and assigns it to the PcfApiTrustedCertificates field.
// Deprecated
func (o *CfConfigRequest) SetPcfApiTrustedCertificates(v []string) {
	o.PcfApiTrustedCertificates = v
}

// GetPcfPassword returns the PcfPassword field value if set, zero value otherwise.
// Deprecated
func (o *CfConfigRequest) GetPcfPassword() string {
	if o == nil || o.PcfPassword == nil {
		var ret string
		return ret
	}
	return *o.PcfPassword
}

// GetPcfPasswordOk returns a tuple with the PcfPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfConfigRequest) GetPcfPasswordOk() (*string, bool) {
	if o == nil || o.PcfPassword == nil {
		return nil, false
	}
	return o.PcfPassword, true
}

// HasPcfPassword returns a boolean if a field has been set.
func (o *CfConfigRequest) HasPcfPassword() bool {
	if o != nil && o.PcfPassword != nil {
		return true
	}

	return false
}

// SetPcfPassword gets a reference to the given string and assigns it to the PcfPassword field.
// Deprecated
func (o *CfConfigRequest) SetPcfPassword(v string) {
	o.PcfPassword = &v
}

// GetPcfUsername returns the PcfUsername field value if set, zero value otherwise.
// Deprecated
func (o *CfConfigRequest) GetPcfUsername() string {
	if o == nil || o.PcfUsername == nil {
		var ret string
		return ret
	}
	return *o.PcfUsername
}

// GetPcfUsernameOk returns a tuple with the PcfUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CfConfigRequest) GetPcfUsernameOk() (*string, bool) {
	if o == nil || o.PcfUsername == nil {
		return nil, false
	}
	return o.PcfUsername, true
}

// HasPcfUsername returns a boolean if a field has been set.
func (o *CfConfigRequest) HasPcfUsername() bool {
	if o != nil && o.PcfUsername != nil {
		return true
	}

	return false
}

// SetPcfUsername gets a reference to the given string and assigns it to the PcfUsername field.
// Deprecated
func (o *CfConfigRequest) SetPcfUsername(v string) {
	o.PcfUsername = &v
}

func (o CfConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CfApiAddr != nil {
		toSerialize["cf_api_addr"] = o.CfApiAddr
	}
	if o.CfApiMutualTlsCertificate != nil {
		toSerialize["cf_api_mutual_tls_certificate"] = o.CfApiMutualTlsCertificate
	}
	if o.CfApiMutualTlsKey != nil {
		toSerialize["cf_api_mutual_tls_key"] = o.CfApiMutualTlsKey
	}
	if o.CfApiTrustedCertificates != nil {
		toSerialize["cf_api_trusted_certificates"] = o.CfApiTrustedCertificates
	}
	if o.CfClientId != nil {
		toSerialize["cf_client_id"] = o.CfClientId
	}
	if o.CfClientSecret != nil {
		toSerialize["cf_client_secret"] = o.CfClientSecret
	}
	if o.CfPassword != nil {
		toSerialize["cf_password"] = o.CfPassword
	}
	if o.CfUsername != nil {
		toSerialize["cf_username"] = o.CfUsername
	}
	if o.IdentityCaCertificates != nil {
		toSerialize["identity_ca_certificates"] = o.IdentityCaCertificates
	}
	if o.LoginMaxSecondsNotAfter != nil {
		toSerialize["login_max_seconds_not_after"] = o.LoginMaxSecondsNotAfter
	}
	if o.LoginMaxSecondsNotBefore != nil {
		toSerialize["login_max_seconds_not_before"] = o.LoginMaxSecondsNotBefore
	}
	if o.PcfApiAddr != nil {
		toSerialize["pcf_api_addr"] = o.PcfApiAddr
	}
	if o.PcfApiTrustedCertificates != nil {
		toSerialize["pcf_api_trusted_certificates"] = o.PcfApiTrustedCertificates
	}
	if o.PcfPassword != nil {
		toSerialize["pcf_password"] = o.PcfPassword
	}
	if o.PcfUsername != nil {
		toSerialize["pcf_username"] = o.PcfUsername
	}
	return json.Marshal(toSerialize)
}

type NullableCfConfigRequest struct {
	value *CfConfigRequest
	isSet bool
}

func (v NullableCfConfigRequest) Get() *CfConfigRequest {
	return v.value
}

func (v *NullableCfConfigRequest) Set(val *CfConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCfConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCfConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCfConfigRequest(val *CfConfigRequest) *NullableCfConfigRequest {
	return &NullableCfConfigRequest{value: val, isSet: true}
}

func (v NullableCfConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCfConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


