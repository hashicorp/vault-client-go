/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// JwtConfigRequest struct for JwtConfigRequest
type JwtConfigRequest struct {
	// The value against which to match the 'iss' claim in a JWT. Optional.
	BoundIssuer *string `json:"bound_issuer,omitempty"`
	// The default role to use if none is provided during login. If not set, a role is required during login.
	DefaultRole *string `json:"default_role,omitempty"`
	// The CA certificate or chain of certificates, in PEM format, to use to validate connections to the JWKS URL. If not set, system certificates are used.
	JwksCaPem *string `json:"jwks_ca_pem,omitempty"`
	// JWKS URL to use to authenticate signatures. Cannot be used with \"oidc_discovery_url\" or \"jwt_validation_pubkeys\".
	JwksUrl *string `json:"jwks_url,omitempty"`
	// A list of supported signing algorithms. Defaults to RS256.
	JwtSupportedAlgs []string `json:"jwt_supported_algs,omitempty"`
	// A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used with \"jwks_url\" or \"oidc_discovery_url\".
	JwtValidationPubkeys []string `json:"jwt_validation_pubkeys,omitempty"`
	// Pass namespace in the OIDC state parameter instead of as a separate query parameter. With this setting, the allowed redirect URL(s) in Vault and on the provider side should not contain a namespace query parameter. This means only one redirect URL entry needs to be maintained on the provider side for all vault namespaces that will be authenticating against it. Defaults to true for new configs.
	NamespaceInState *bool `json:"namespace_in_state,omitempty"`
	// The OAuth Client ID configured with your OIDC provider.
	OidcClientId *string `json:"oidc_client_id,omitempty"`
	// The OAuth Client Secret configured with your OIDC provider.
	OidcClientSecret *string `json:"oidc_client_secret,omitempty"`
	// The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used.
	OidcDiscoveryCaPem *string `json:"oidc_discovery_ca_pem,omitempty"`
	// OIDC Discovery URL, without any .well-known component (base path). Cannot be used with \"jwks_url\" or \"jwt_validation_pubkeys\".
	OidcDiscoveryUrl *string `json:"oidc_discovery_url,omitempty"`
	// The response mode to be used in the OAuth2 request. Allowed values are 'query' and 'form_post'.
	OidcResponseMode *string `json:"oidc_response_mode,omitempty"`
	// The response types to request. Allowed values are 'code' and 'id_token'. Defaults to 'code'.
	OidcResponseTypes []string `json:"oidc_response_types,omitempty"`
	// Provider-specific configuration. Optional.
	ProviderConfig map[string]interface{} `json:"provider_config,omitempty"`
}

// NewJwtConfigRequest instantiates a new JwtConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJwtConfigRequest() *JwtConfigRequest {
	this := JwtConfigRequest{}
	return &this
}

// NewJwtConfigRequestWithDefaults instantiates a new JwtConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJwtConfigRequestWithDefaults() *JwtConfigRequest {
	this := JwtConfigRequest{}
	return &this
}

// GetBoundIssuer returns the BoundIssuer field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetBoundIssuer() string {
	if o == nil || o.BoundIssuer == nil {
		var ret string
		return ret
	}
	return *o.BoundIssuer
}

// GetBoundIssuerOk returns a tuple with the BoundIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetBoundIssuerOk() (*string, bool) {
	if o == nil || o.BoundIssuer == nil {
		return nil, false
	}
	return o.BoundIssuer, true
}

// HasBoundIssuer returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasBoundIssuer() bool {
	if o != nil && o.BoundIssuer != nil {
		return true
	}

	return false
}

// SetBoundIssuer gets a reference to the given string and assigns it to the BoundIssuer field.
func (o *JwtConfigRequest) SetBoundIssuer(v string) {
	o.BoundIssuer = &v
}

// GetDefaultRole returns the DefaultRole field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetDefaultRole() string {
	if o == nil || o.DefaultRole == nil {
		var ret string
		return ret
	}
	return *o.DefaultRole
}

// GetDefaultRoleOk returns a tuple with the DefaultRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetDefaultRoleOk() (*string, bool) {
	if o == nil || o.DefaultRole == nil {
		return nil, false
	}
	return o.DefaultRole, true
}

// HasDefaultRole returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasDefaultRole() bool {
	if o != nil && o.DefaultRole != nil {
		return true
	}

	return false
}

// SetDefaultRole gets a reference to the given string and assigns it to the DefaultRole field.
func (o *JwtConfigRequest) SetDefaultRole(v string) {
	o.DefaultRole = &v
}

// GetJwksCaPem returns the JwksCaPem field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetJwksCaPem() string {
	if o == nil || o.JwksCaPem == nil {
		var ret string
		return ret
	}
	return *o.JwksCaPem
}

// GetJwksCaPemOk returns a tuple with the JwksCaPem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetJwksCaPemOk() (*string, bool) {
	if o == nil || o.JwksCaPem == nil {
		return nil, false
	}
	return o.JwksCaPem, true
}

// HasJwksCaPem returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasJwksCaPem() bool {
	if o != nil && o.JwksCaPem != nil {
		return true
	}

	return false
}

// SetJwksCaPem gets a reference to the given string and assigns it to the JwksCaPem field.
func (o *JwtConfigRequest) SetJwksCaPem(v string) {
	o.JwksCaPem = &v
}

// GetJwksUrl returns the JwksUrl field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetJwksUrl() string {
	if o == nil || o.JwksUrl == nil {
		var ret string
		return ret
	}
	return *o.JwksUrl
}

// GetJwksUrlOk returns a tuple with the JwksUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetJwksUrlOk() (*string, bool) {
	if o == nil || o.JwksUrl == nil {
		return nil, false
	}
	return o.JwksUrl, true
}

// HasJwksUrl returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasJwksUrl() bool {
	if o != nil && o.JwksUrl != nil {
		return true
	}

	return false
}

// SetJwksUrl gets a reference to the given string and assigns it to the JwksUrl field.
func (o *JwtConfigRequest) SetJwksUrl(v string) {
	o.JwksUrl = &v
}

// GetJwtSupportedAlgs returns the JwtSupportedAlgs field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetJwtSupportedAlgs() []string {
	if o == nil || o.JwtSupportedAlgs == nil {
		var ret []string
		return ret
	}
	return o.JwtSupportedAlgs
}

// GetJwtSupportedAlgsOk returns a tuple with the JwtSupportedAlgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetJwtSupportedAlgsOk() ([]string, bool) {
	if o == nil || o.JwtSupportedAlgs == nil {
		return nil, false
	}
	return o.JwtSupportedAlgs, true
}

// HasJwtSupportedAlgs returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasJwtSupportedAlgs() bool {
	if o != nil && o.JwtSupportedAlgs != nil {
		return true
	}

	return false
}

// SetJwtSupportedAlgs gets a reference to the given []string and assigns it to the JwtSupportedAlgs field.
func (o *JwtConfigRequest) SetJwtSupportedAlgs(v []string) {
	o.JwtSupportedAlgs = v
}

// GetJwtValidationPubkeys returns the JwtValidationPubkeys field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetJwtValidationPubkeys() []string {
	if o == nil || o.JwtValidationPubkeys == nil {
		var ret []string
		return ret
	}
	return o.JwtValidationPubkeys
}

// GetJwtValidationPubkeysOk returns a tuple with the JwtValidationPubkeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetJwtValidationPubkeysOk() ([]string, bool) {
	if o == nil || o.JwtValidationPubkeys == nil {
		return nil, false
	}
	return o.JwtValidationPubkeys, true
}

// HasJwtValidationPubkeys returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasJwtValidationPubkeys() bool {
	if o != nil && o.JwtValidationPubkeys != nil {
		return true
	}

	return false
}

// SetJwtValidationPubkeys gets a reference to the given []string and assigns it to the JwtValidationPubkeys field.
func (o *JwtConfigRequest) SetJwtValidationPubkeys(v []string) {
	o.JwtValidationPubkeys = v
}

// GetNamespaceInState returns the NamespaceInState field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetNamespaceInState() bool {
	if o == nil || o.NamespaceInState == nil {
		var ret bool
		return ret
	}
	return *o.NamespaceInState
}

// GetNamespaceInStateOk returns a tuple with the NamespaceInState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetNamespaceInStateOk() (*bool, bool) {
	if o == nil || o.NamespaceInState == nil {
		return nil, false
	}
	return o.NamespaceInState, true
}

// HasNamespaceInState returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasNamespaceInState() bool {
	if o != nil && o.NamespaceInState != nil {
		return true
	}

	return false
}

// SetNamespaceInState gets a reference to the given bool and assigns it to the NamespaceInState field.
func (o *JwtConfigRequest) SetNamespaceInState(v bool) {
	o.NamespaceInState = &v
}

// GetOidcClientId returns the OidcClientId field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetOidcClientId() string {
	if o == nil || o.OidcClientId == nil {
		var ret string
		return ret
	}
	return *o.OidcClientId
}

// GetOidcClientIdOk returns a tuple with the OidcClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetOidcClientIdOk() (*string, bool) {
	if o == nil || o.OidcClientId == nil {
		return nil, false
	}
	return o.OidcClientId, true
}

// HasOidcClientId returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasOidcClientId() bool {
	if o != nil && o.OidcClientId != nil {
		return true
	}

	return false
}

// SetOidcClientId gets a reference to the given string and assigns it to the OidcClientId field.
func (o *JwtConfigRequest) SetOidcClientId(v string) {
	o.OidcClientId = &v
}

// GetOidcClientSecret returns the OidcClientSecret field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetOidcClientSecret() string {
	if o == nil || o.OidcClientSecret == nil {
		var ret string
		return ret
	}
	return *o.OidcClientSecret
}

// GetOidcClientSecretOk returns a tuple with the OidcClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetOidcClientSecretOk() (*string, bool) {
	if o == nil || o.OidcClientSecret == nil {
		return nil, false
	}
	return o.OidcClientSecret, true
}

// HasOidcClientSecret returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasOidcClientSecret() bool {
	if o != nil && o.OidcClientSecret != nil {
		return true
	}

	return false
}

// SetOidcClientSecret gets a reference to the given string and assigns it to the OidcClientSecret field.
func (o *JwtConfigRequest) SetOidcClientSecret(v string) {
	o.OidcClientSecret = &v
}

// GetOidcDiscoveryCaPem returns the OidcDiscoveryCaPem field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetOidcDiscoveryCaPem() string {
	if o == nil || o.OidcDiscoveryCaPem == nil {
		var ret string
		return ret
	}
	return *o.OidcDiscoveryCaPem
}

// GetOidcDiscoveryCaPemOk returns a tuple with the OidcDiscoveryCaPem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetOidcDiscoveryCaPemOk() (*string, bool) {
	if o == nil || o.OidcDiscoveryCaPem == nil {
		return nil, false
	}
	return o.OidcDiscoveryCaPem, true
}

// HasOidcDiscoveryCaPem returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasOidcDiscoveryCaPem() bool {
	if o != nil && o.OidcDiscoveryCaPem != nil {
		return true
	}

	return false
}

// SetOidcDiscoveryCaPem gets a reference to the given string and assigns it to the OidcDiscoveryCaPem field.
func (o *JwtConfigRequest) SetOidcDiscoveryCaPem(v string) {
	o.OidcDiscoveryCaPem = &v
}

// GetOidcDiscoveryUrl returns the OidcDiscoveryUrl field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetOidcDiscoveryUrl() string {
	if o == nil || o.OidcDiscoveryUrl == nil {
		var ret string
		return ret
	}
	return *o.OidcDiscoveryUrl
}

// GetOidcDiscoveryUrlOk returns a tuple with the OidcDiscoveryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetOidcDiscoveryUrlOk() (*string, bool) {
	if o == nil || o.OidcDiscoveryUrl == nil {
		return nil, false
	}
	return o.OidcDiscoveryUrl, true
}

// HasOidcDiscoveryUrl returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasOidcDiscoveryUrl() bool {
	if o != nil && o.OidcDiscoveryUrl != nil {
		return true
	}

	return false
}

// SetOidcDiscoveryUrl gets a reference to the given string and assigns it to the OidcDiscoveryUrl field.
func (o *JwtConfigRequest) SetOidcDiscoveryUrl(v string) {
	o.OidcDiscoveryUrl = &v
}

// GetOidcResponseMode returns the OidcResponseMode field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetOidcResponseMode() string {
	if o == nil || o.OidcResponseMode == nil {
		var ret string
		return ret
	}
	return *o.OidcResponseMode
}

// GetOidcResponseModeOk returns a tuple with the OidcResponseMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetOidcResponseModeOk() (*string, bool) {
	if o == nil || o.OidcResponseMode == nil {
		return nil, false
	}
	return o.OidcResponseMode, true
}

// HasOidcResponseMode returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasOidcResponseMode() bool {
	if o != nil && o.OidcResponseMode != nil {
		return true
	}

	return false
}

// SetOidcResponseMode gets a reference to the given string and assigns it to the OidcResponseMode field.
func (o *JwtConfigRequest) SetOidcResponseMode(v string) {
	o.OidcResponseMode = &v
}

// GetOidcResponseTypes returns the OidcResponseTypes field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetOidcResponseTypes() []string {
	if o == nil || o.OidcResponseTypes == nil {
		var ret []string
		return ret
	}
	return o.OidcResponseTypes
}

// GetOidcResponseTypesOk returns a tuple with the OidcResponseTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetOidcResponseTypesOk() ([]string, bool) {
	if o == nil || o.OidcResponseTypes == nil {
		return nil, false
	}
	return o.OidcResponseTypes, true
}

// HasOidcResponseTypes returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasOidcResponseTypes() bool {
	if o != nil && o.OidcResponseTypes != nil {
		return true
	}

	return false
}

// SetOidcResponseTypes gets a reference to the given []string and assigns it to the OidcResponseTypes field.
func (o *JwtConfigRequest) SetOidcResponseTypes(v []string) {
	o.OidcResponseTypes = v
}

// GetProviderConfig returns the ProviderConfig field value if set, zero value otherwise.
func (o *JwtConfigRequest) GetProviderConfig() map[string]interface{} {
	if o == nil || o.ProviderConfig == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ProviderConfig
}

// GetProviderConfigOk returns a tuple with the ProviderConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JwtConfigRequest) GetProviderConfigOk() (map[string]interface{}, bool) {
	if o == nil || o.ProviderConfig == nil {
		return nil, false
	}
	return o.ProviderConfig, true
}

// HasProviderConfig returns a boolean if a field has been set.
func (o *JwtConfigRequest) HasProviderConfig() bool {
	if o != nil && o.ProviderConfig != nil {
		return true
	}

	return false
}

// SetProviderConfig gets a reference to the given map[string]interface{} and assigns it to the ProviderConfig field.
func (o *JwtConfigRequest) SetProviderConfig(v map[string]interface{}) {
	o.ProviderConfig = v
}

func (o JwtConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BoundIssuer != nil {
		toSerialize["bound_issuer"] = o.BoundIssuer
	}
	if o.DefaultRole != nil {
		toSerialize["default_role"] = o.DefaultRole
	}
	if o.JwksCaPem != nil {
		toSerialize["jwks_ca_pem"] = o.JwksCaPem
	}
	if o.JwksUrl != nil {
		toSerialize["jwks_url"] = o.JwksUrl
	}
	if o.JwtSupportedAlgs != nil {
		toSerialize["jwt_supported_algs"] = o.JwtSupportedAlgs
	}
	if o.JwtValidationPubkeys != nil {
		toSerialize["jwt_validation_pubkeys"] = o.JwtValidationPubkeys
	}
	if o.NamespaceInState != nil {
		toSerialize["namespace_in_state"] = o.NamespaceInState
	}
	if o.OidcClientId != nil {
		toSerialize["oidc_client_id"] = o.OidcClientId
	}
	if o.OidcClientSecret != nil {
		toSerialize["oidc_client_secret"] = o.OidcClientSecret
	}
	if o.OidcDiscoveryCaPem != nil {
		toSerialize["oidc_discovery_ca_pem"] = o.OidcDiscoveryCaPem
	}
	if o.OidcDiscoveryUrl != nil {
		toSerialize["oidc_discovery_url"] = o.OidcDiscoveryUrl
	}
	if o.OidcResponseMode != nil {
		toSerialize["oidc_response_mode"] = o.OidcResponseMode
	}
	if o.OidcResponseTypes != nil {
		toSerialize["oidc_response_types"] = o.OidcResponseTypes
	}
	if o.ProviderConfig != nil {
		toSerialize["provider_config"] = o.ProviderConfig
	}
	return json.Marshal(toSerialize)
}

type NullableJwtConfigRequest struct {
	value *JwtConfigRequest
	isSet bool
}

func (v NullableJwtConfigRequest) Get() *JwtConfigRequest {
	return v.value
}

func (v *NullableJwtConfigRequest) Set(val *JwtConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJwtConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJwtConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJwtConfigRequest(val *JwtConfigRequest) *NullableJwtConfigRequest {
	return &NullableJwtConfigRequest{value: val, isSet: true}
}

func (v NullableJwtConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJwtConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


