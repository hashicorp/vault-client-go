/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// IdentityOidcClientRequest struct for IdentityOidcClientRequest
type IdentityOidcClientRequest struct {
	// The time-to-live for access tokens obtained by the client.
	AccessTokenTtl *int32 `json:"access_token_ttl,omitempty"`
	// Comma separated string or array of assignment resources.
	Assignments []string `json:"assignments,omitempty"`
	// The client type based on its ability to maintain confidentiality of credentials. The following client types are supported: 'confidential', 'public'. Defaults to 'confidential'.
	ClientType *string `json:"client_type,omitempty"`
	// The time-to-live for ID tokens obtained by the client.
	IdTokenTtl *int32 `json:"id_token_ttl,omitempty"`
	// A reference to a named key resource. Cannot be modified after creation. Defaults to the 'default' key.
	Key *string `json:"key,omitempty"`
	// Comma separated string or array of redirect URIs used by the client. One of these values must exactly match the redirect_uri parameter value used in each authentication request.
	RedirectUris []string `json:"redirect_uris,omitempty"`
}

// NewIdentityOidcClientRequest instantiates a new IdentityOidcClientRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOidcClientRequest() *IdentityOidcClientRequest {
	this := IdentityOidcClientRequest{}
	var clientType string = "confidential"
	this.ClientType = &clientType
	var key string = "default"
	this.Key = &key
	return &this
}

// NewIdentityOidcClientRequestWithDefaults instantiates a new IdentityOidcClientRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOidcClientRequestWithDefaults() *IdentityOidcClientRequest {
	this := IdentityOidcClientRequest{}
	var clientType string = "confidential"
	this.ClientType = &clientType
	var key string = "default"
	this.Key = &key
	return &this
}

// GetAccessTokenTtl returns the AccessTokenTtl field value if set, zero value otherwise.
func (o *IdentityOidcClientRequest) GetAccessTokenTtl() int32 {
	if o == nil || o.AccessTokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.AccessTokenTtl
}

// GetAccessTokenTtlOk returns a tuple with the AccessTokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcClientRequest) GetAccessTokenTtlOk() (*int32, bool) {
	if o == nil || o.AccessTokenTtl == nil {
		return nil, false
	}
	return o.AccessTokenTtl, true
}

// HasAccessTokenTtl returns a boolean if a field has been set.
func (o *IdentityOidcClientRequest) HasAccessTokenTtl() bool {
	if o != nil && o.AccessTokenTtl != nil {
		return true
	}

	return false
}

// SetAccessTokenTtl gets a reference to the given int32 and assigns it to the AccessTokenTtl field.
func (o *IdentityOidcClientRequest) SetAccessTokenTtl(v int32) {
	o.AccessTokenTtl = &v
}

// GetAssignments returns the Assignments field value if set, zero value otherwise.
func (o *IdentityOidcClientRequest) GetAssignments() []string {
	if o == nil || o.Assignments == nil {
		var ret []string
		return ret
	}
	return o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcClientRequest) GetAssignmentsOk() ([]string, bool) {
	if o == nil || o.Assignments == nil {
		return nil, false
	}
	return o.Assignments, true
}

// HasAssignments returns a boolean if a field has been set.
func (o *IdentityOidcClientRequest) HasAssignments() bool {
	if o != nil && o.Assignments != nil {
		return true
	}

	return false
}

// SetAssignments gets a reference to the given []string and assigns it to the Assignments field.
func (o *IdentityOidcClientRequest) SetAssignments(v []string) {
	o.Assignments = v
}

// GetClientType returns the ClientType field value if set, zero value otherwise.
func (o *IdentityOidcClientRequest) GetClientType() string {
	if o == nil || o.ClientType == nil {
		var ret string
		return ret
	}
	return *o.ClientType
}

// GetClientTypeOk returns a tuple with the ClientType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcClientRequest) GetClientTypeOk() (*string, bool) {
	if o == nil || o.ClientType == nil {
		return nil, false
	}
	return o.ClientType, true
}

// HasClientType returns a boolean if a field has been set.
func (o *IdentityOidcClientRequest) HasClientType() bool {
	if o != nil && o.ClientType != nil {
		return true
	}

	return false
}

// SetClientType gets a reference to the given string and assigns it to the ClientType field.
func (o *IdentityOidcClientRequest) SetClientType(v string) {
	o.ClientType = &v
}

// GetIdTokenTtl returns the IdTokenTtl field value if set, zero value otherwise.
func (o *IdentityOidcClientRequest) GetIdTokenTtl() int32 {
	if o == nil || o.IdTokenTtl == nil {
		var ret int32
		return ret
	}
	return *o.IdTokenTtl
}

// GetIdTokenTtlOk returns a tuple with the IdTokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcClientRequest) GetIdTokenTtlOk() (*int32, bool) {
	if o == nil || o.IdTokenTtl == nil {
		return nil, false
	}
	return o.IdTokenTtl, true
}

// HasIdTokenTtl returns a boolean if a field has been set.
func (o *IdentityOidcClientRequest) HasIdTokenTtl() bool {
	if o != nil && o.IdTokenTtl != nil {
		return true
	}

	return false
}

// SetIdTokenTtl gets a reference to the given int32 and assigns it to the IdTokenTtl field.
func (o *IdentityOidcClientRequest) SetIdTokenTtl(v int32) {
	o.IdTokenTtl = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *IdentityOidcClientRequest) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcClientRequest) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *IdentityOidcClientRequest) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *IdentityOidcClientRequest) SetKey(v string) {
	o.Key = &v
}

// GetRedirectUris returns the RedirectUris field value if set, zero value otherwise.
func (o *IdentityOidcClientRequest) GetRedirectUris() []string {
	if o == nil || o.RedirectUris == nil {
		var ret []string
		return ret
	}
	return o.RedirectUris
}

// GetRedirectUrisOk returns a tuple with the RedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOidcClientRequest) GetRedirectUrisOk() ([]string, bool) {
	if o == nil || o.RedirectUris == nil {
		return nil, false
	}
	return o.RedirectUris, true
}

// HasRedirectUris returns a boolean if a field has been set.
func (o *IdentityOidcClientRequest) HasRedirectUris() bool {
	if o != nil && o.RedirectUris != nil {
		return true
	}

	return false
}

// SetRedirectUris gets a reference to the given []string and assigns it to the RedirectUris field.
func (o *IdentityOidcClientRequest) SetRedirectUris(v []string) {
	o.RedirectUris = v
}

func (o IdentityOidcClientRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessTokenTtl != nil {
		toSerialize["access_token_ttl"] = o.AccessTokenTtl
	}
	if o.Assignments != nil {
		toSerialize["assignments"] = o.Assignments
	}
	if o.ClientType != nil {
		toSerialize["client_type"] = o.ClientType
	}
	if o.IdTokenTtl != nil {
		toSerialize["id_token_ttl"] = o.IdTokenTtl
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.RedirectUris != nil {
		toSerialize["redirect_uris"] = o.RedirectUris
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityOidcClientRequest struct {
	value *IdentityOidcClientRequest
	isSet bool
}

func (v NullableIdentityOidcClientRequest) Get() *IdentityOidcClientRequest {
	return v.value
}

func (v *NullableIdentityOidcClientRequest) Set(val *IdentityOidcClientRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOidcClientRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOidcClientRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOidcClientRequest(val *IdentityOidcClientRequest) *NullableIdentityOidcClientRequest {
	return &NullableIdentityOidcClientRequest{value: val, isSet: true}
}

func (v NullableIdentityOidcClientRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOidcClientRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


