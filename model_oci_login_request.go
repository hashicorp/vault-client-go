/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// OciLoginRequest struct for OciLoginRequest
type OciLoginRequest struct {
	// The signed headers of the client
	RequestHeaders *string `json:"request_headers,omitempty"`
}

// NewOciLoginRequest instantiates a new OciLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOciLoginRequest() *OciLoginRequest {
	this := OciLoginRequest{}
	return &this
}

// NewOciLoginRequestWithDefaults instantiates a new OciLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOciLoginRequestWithDefaults() *OciLoginRequest {
	this := OciLoginRequest{}
	return &this
}

// GetRequestHeaders returns the RequestHeaders field value if set, zero value otherwise.
func (o *OciLoginRequest) GetRequestHeaders() string {
	if o == nil || o.RequestHeaders == nil {
		var ret string
		return ret
	}
	return *o.RequestHeaders
}

// GetRequestHeadersOk returns a tuple with the RequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OciLoginRequest) GetRequestHeadersOk() (*string, bool) {
	if o == nil || o.RequestHeaders == nil {
		return nil, false
	}
	return o.RequestHeaders, true
}

// HasRequestHeaders returns a boolean if a field has been set.
func (o *OciLoginRequest) HasRequestHeaders() bool {
	if o != nil && o.RequestHeaders != nil {
		return true
	}

	return false
}

// SetRequestHeaders gets a reference to the given string and assigns it to the RequestHeaders field.
func (o *OciLoginRequest) SetRequestHeaders(v string) {
	o.RequestHeaders = &v
}

func (o OciLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RequestHeaders != nil {
		toSerialize["request_headers"] = o.RequestHeaders
	}
	return json.Marshal(toSerialize)
}

type NullableOciLoginRequest struct {
	value *OciLoginRequest
	isSet bool
}

func (v NullableOciLoginRequest) Get() *OciLoginRequest {
	return v.value
}

func (v *NullableOciLoginRequest) Set(val *OciLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOciLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOciLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOciLoginRequest(val *OciLoginRequest) *NullableOciLoginRequest {
	return &NullableOciLoginRequest{value: val, isSet: true}
}

func (v NullableOciLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOciLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


