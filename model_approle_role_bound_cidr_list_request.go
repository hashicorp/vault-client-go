/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// ApproleRoleBoundCidrListRequest struct for ApproleRoleBoundCidrListRequest
type ApproleRoleBoundCidrListRequest struct {
	// Deprecated: Please use \"secret_id_bound_cidrs\" instead. Comma separated string or list of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation.
	BoundCidrList []string `json:"bound_cidr_list,omitempty"`
}

// NewApproleRoleBoundCidrListRequest instantiates a new ApproleRoleBoundCidrListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleBoundCidrListRequest() *ApproleRoleBoundCidrListRequest {
	this := ApproleRoleBoundCidrListRequest{}
	return &this
}

// NewApproleRoleBoundCidrListRequestWithDefaults instantiates a new ApproleRoleBoundCidrListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleBoundCidrListRequestWithDefaults() *ApproleRoleBoundCidrListRequest {
	this := ApproleRoleBoundCidrListRequest{}
	return &this
}

// GetBoundCidrList returns the BoundCidrList field value if set, zero value otherwise.
func (o *ApproleRoleBoundCidrListRequest) GetBoundCidrList() []string {
	if o == nil || o.BoundCidrList == nil {
		var ret []string
		return ret
	}
	return o.BoundCidrList
}

// GetBoundCidrListOk returns a tuple with the BoundCidrList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleBoundCidrListRequest) GetBoundCidrListOk() ([]string, bool) {
	if o == nil || o.BoundCidrList == nil {
		return nil, false
	}
	return o.BoundCidrList, true
}

// HasBoundCidrList returns a boolean if a field has been set.
func (o *ApproleRoleBoundCidrListRequest) HasBoundCidrList() bool {
	if o != nil && o.BoundCidrList != nil {
		return true
	}

	return false
}

// SetBoundCidrList gets a reference to the given []string and assigns it to the BoundCidrList field.
func (o *ApproleRoleBoundCidrListRequest) SetBoundCidrList(v []string) {
	o.BoundCidrList = v
}

func (o ApproleRoleBoundCidrListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BoundCidrList != nil {
		toSerialize["bound_cidr_list"] = o.BoundCidrList
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleBoundCidrListRequest struct {
	value *ApproleRoleBoundCidrListRequest
	isSet bool
}

func (v NullableApproleRoleBoundCidrListRequest) Get() *ApproleRoleBoundCidrListRequest {
	return v.value
}

func (v *NullableApproleRoleBoundCidrListRequest) Set(val *ApproleRoleBoundCidrListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleBoundCidrListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleBoundCidrListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleBoundCidrListRequest(val *ApproleRoleBoundCidrListRequest) *NullableApproleRoleBoundCidrListRequest {
	return &NullableApproleRoleBoundCidrListRequest{value: val, isSet: true}
}

func (v NullableApproleRoleBoundCidrListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleBoundCidrListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


