{{#each models}}{{#with model}}# {{classname}}

{{#unless isEnum}}
## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------{{#with vendorExtensions.x-is-one-of-interface}}
**{{classname}}Interface** | **interface { {{#with discriminator}}{{propertyGetter}}() {{propertyType}}{{/with}} }** | An interface that can hold any of the proper implementing types |
{{/with}}{{#unless vendorExtensions.x-is-one-of-interface}}
{{#each vars}}**{{name}}** | {{#unless required}}Pointer to {{/unless}}{{#if isContainer}}{{#if isArray}}{{#with items}}{{#unless isPrimitiveType}}{{#unless isFile}}[{{/unless}}{{/unless}}**[]{{dataType}}**{{#unless isPrimitiveType}}{{#unless isFile}}]({{dataType}}.md){{/unless}}{{/unless}}{{/with}}{{/if}}{{#if isMap}}{{#with items}}{{#unless isPrimitiveType}}{{#unless isFile}}[{{/unless}}{{/unless}}**map[string]{{dataType}}**{{#unless isPrimitiveType}}{{#unless isFile}}]({{#unless baseType}}{{dataType}}{{/unless}}{{baseType}}.md){{/unless}}{{/unless}}{{/with}}{{/if}}{{/if}}{{#unless isContainer}}{{#unless isPrimitiveType}}{{#unless isFile}}{{#unless isDateTime}}[{{/unless}}{{/unless}}{{/unless}}**{{dataType}}**{{#unless isPrimitiveType}}{{#unless isFile}}{{#unless isDateTime}}]({{#unless baseType}}{{dataType}}{{/unless}}{{baseType}}.md){{/unless}}{{/unless}}{{/unless}}{{/unless}} | {{#if description}}{{description}}{{/if}} | {{#unless required}}[optional] {{/unless}}{{#if isReadOnly}}[readonly] {{/if}}{{#with defaultValue}}[default to {{{.}}}]{{/with}}
{{/each}}
{{/unless}}
{{/unless}}
{{#if isEnum}}
## Enum

{{#each allowableValues}}{{#each enumVars}}
* `{{name}}` (value: `{{{value}}}`)
{{/each}}{{/each}}
{{/if}}

[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)

{{/with}}{{/each}}
