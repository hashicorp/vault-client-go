/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// SystemAuthRequest struct for SystemAuthRequest
type SystemAuthRequest struct {
	// Configuration for this mount, such as plugin_name.
	Config map[string]interface{} `json:"config,omitempty"`
	// User-friendly description for this credential backend.
	Description *string `json:"description,omitempty"`
	// Whether to give the mount access to Vault's external entropy.
	ExternalEntropyAccess *bool `json:"external_entropy_access,omitempty"`
	// Mark the mount as a local mount, which is not replicated and is unaffected by replication.
	Local *bool `json:"local,omitempty"`
	// The options to pass into the backend. Should be a json object with string keys and values.
	Options map[string]interface{} `json:"options,omitempty"`
	// Name of the auth plugin to use based from the name in the plugin catalog.
	PluginName *string `json:"plugin_name,omitempty"`
	// Whether to turn on seal wrapping for the mount.
	SealWrap *bool `json:"seal_wrap,omitempty"`
	// The type of the backend. Example: \"userpass\"
	Type *string `json:"type,omitempty"`
}

// NewSystemAuthRequest instantiates a new SystemAuthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemAuthRequest() *SystemAuthRequest {
	this := SystemAuthRequest{}
	var externalEntropyAccess bool = false
	this.ExternalEntropyAccess = &externalEntropyAccess
	var local bool = false
	this.Local = &local
	var sealWrap bool = false
	this.SealWrap = &sealWrap
	return &this
}

// NewSystemAuthRequestWithDefaults instantiates a new SystemAuthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemAuthRequestWithDefaults() *SystemAuthRequest {
	this := SystemAuthRequest{}
	var externalEntropyAccess bool = false
	this.ExternalEntropyAccess = &externalEntropyAccess
	var local bool = false
	this.Local = &local
	var sealWrap bool = false
	this.SealWrap = &sealWrap
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *SystemAuthRequest) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SystemAuthRequest) SetDescription(v string) {
	o.Description = &v
}

// GetExternalEntropyAccess returns the ExternalEntropyAccess field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetExternalEntropyAccess() bool {
	if o == nil || o.ExternalEntropyAccess == nil {
		var ret bool
		return ret
	}
	return *o.ExternalEntropyAccess
}

// GetExternalEntropyAccessOk returns a tuple with the ExternalEntropyAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetExternalEntropyAccessOk() (*bool, bool) {
	if o == nil || o.ExternalEntropyAccess == nil {
		return nil, false
	}
	return o.ExternalEntropyAccess, true
}

// HasExternalEntropyAccess returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasExternalEntropyAccess() bool {
	if o != nil && o.ExternalEntropyAccess != nil {
		return true
	}

	return false
}

// SetExternalEntropyAccess gets a reference to the given bool and assigns it to the ExternalEntropyAccess field.
func (o *SystemAuthRequest) SetExternalEntropyAccess(v bool) {
	o.ExternalEntropyAccess = &v
}

// GetLocal returns the Local field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetLocal() bool {
	if o == nil || o.Local == nil {
		var ret bool
		return ret
	}
	return *o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetLocalOk() (*bool, bool) {
	if o == nil || o.Local == nil {
		return nil, false
	}
	return o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasLocal() bool {
	if o != nil && o.Local != nil {
		return true
	}

	return false
}

// SetLocal gets a reference to the given bool and assigns it to the Local field.
func (o *SystemAuthRequest) SetLocal(v bool) {
	o.Local = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetOptions() map[string]interface{} {
	if o == nil || o.Options == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetOptionsOk() (map[string]interface{}, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given map[string]interface{} and assigns it to the Options field.
func (o *SystemAuthRequest) SetOptions(v map[string]interface{}) {
	o.Options = v
}

// GetPluginName returns the PluginName field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetPluginName() string {
	if o == nil || o.PluginName == nil {
		var ret string
		return ret
	}
	return *o.PluginName
}

// GetPluginNameOk returns a tuple with the PluginName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetPluginNameOk() (*string, bool) {
	if o == nil || o.PluginName == nil {
		return nil, false
	}
	return o.PluginName, true
}

// HasPluginName returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasPluginName() bool {
	if o != nil && o.PluginName != nil {
		return true
	}

	return false
}

// SetPluginName gets a reference to the given string and assigns it to the PluginName field.
func (o *SystemAuthRequest) SetPluginName(v string) {
	o.PluginName = &v
}

// GetSealWrap returns the SealWrap field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetSealWrap() bool {
	if o == nil || o.SealWrap == nil {
		var ret bool
		return ret
	}
	return *o.SealWrap
}

// GetSealWrapOk returns a tuple with the SealWrap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetSealWrapOk() (*bool, bool) {
	if o == nil || o.SealWrap == nil {
		return nil, false
	}
	return o.SealWrap, true
}

// HasSealWrap returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasSealWrap() bool {
	if o != nil && o.SealWrap != nil {
		return true
	}

	return false
}

// SetSealWrap gets a reference to the given bool and assigns it to the SealWrap field.
func (o *SystemAuthRequest) SetSealWrap(v bool) {
	o.SealWrap = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SystemAuthRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemAuthRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SystemAuthRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SystemAuthRequest) SetType(v string) {
	o.Type = &v
}

func (o SystemAuthRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ExternalEntropyAccess != nil {
		toSerialize["external_entropy_access"] = o.ExternalEntropyAccess
	}
	if o.Local != nil {
		toSerialize["local"] = o.Local
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.PluginName != nil {
		toSerialize["plugin_name"] = o.PluginName
	}
	if o.SealWrap != nil {
		toSerialize["seal_wrap"] = o.SealWrap
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableSystemAuthRequest struct {
	value *SystemAuthRequest
	isSet bool
}

func (v NullableSystemAuthRequest) Get() *SystemAuthRequest {
	return v.value
}

func (v *NullableSystemAuthRequest) Set(val *SystemAuthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemAuthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemAuthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemAuthRequest(val *SystemAuthRequest) *NullableSystemAuthRequest {
	return &NullableSystemAuthRequest{value: val, isSet: true}
}

func (v NullableSystemAuthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemAuthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


