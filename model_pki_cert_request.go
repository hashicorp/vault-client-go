/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// PkiCertRequest struct for PkiCertRequest
type PkiCertRequest struct {
	// PEM-format, concatenated unencrypted secret-key (optional) and certificates.
	PemBundle *string `json:"pem_bundle,omitempty"`
}

// NewPkiCertRequest instantiates a new PkiCertRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkiCertRequest() *PkiCertRequest {
	this := PkiCertRequest{}
	return &this
}

// NewPkiCertRequestWithDefaults instantiates a new PkiCertRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkiCertRequestWithDefaults() *PkiCertRequest {
	this := PkiCertRequest{}
	return &this
}

// GetPemBundle returns the PemBundle field value if set, zero value otherwise.
func (o *PkiCertRequest) GetPemBundle() string {
	if o == nil || o.PemBundle == nil {
		var ret string
		return ret
	}
	return *o.PemBundle
}

// GetPemBundleOk returns a tuple with the PemBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkiCertRequest) GetPemBundleOk() (*string, bool) {
	if o == nil || o.PemBundle == nil {
		return nil, false
	}
	return o.PemBundle, true
}

// HasPemBundle returns a boolean if a field has been set.
func (o *PkiCertRequest) HasPemBundle() bool {
	if o != nil && o.PemBundle != nil {
		return true
	}

	return false
}

// SetPemBundle gets a reference to the given string and assigns it to the PemBundle field.
func (o *PkiCertRequest) SetPemBundle(v string) {
	o.PemBundle = &v
}

func (o PkiCertRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PemBundle != nil {
		toSerialize["pem_bundle"] = o.PemBundle
	}
	return json.Marshal(toSerialize)
}

type NullablePkiCertRequest struct {
	value *PkiCertRequest
	isSet bool
}

func (v NullablePkiCertRequest) Get() *PkiCertRequest {
	return v.value
}

func (v *NullablePkiCertRequest) Set(val *PkiCertRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePkiCertRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePkiCertRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkiCertRequest(val *PkiCertRequest) *NullablePkiCertRequest {
	return &NullablePkiCertRequest{value: val, isSet: true}
}

func (v NullablePkiCertRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkiCertRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


