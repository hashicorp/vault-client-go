/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// IdentityGroupAliasRequest struct for IdentityGroupAliasRequest
type IdentityGroupAliasRequest struct {
	// ID of the group to which this is an alias.
	CanonicalId *string `json:"canonical_id,omitempty"`
	// ID of the group alias.
	Id *string `json:"id,omitempty"`
	// Mount accessor to which this alias belongs to.
	MountAccessor *string `json:"mount_accessor,omitempty"`
	// Alias of the group.
	Name *string `json:"name,omitempty"`
}

// NewIdentityGroupAliasRequest instantiates a new IdentityGroupAliasRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityGroupAliasRequest() *IdentityGroupAliasRequest {
	this := IdentityGroupAliasRequest{}
	return &this
}

// NewIdentityGroupAliasRequestWithDefaults instantiates a new IdentityGroupAliasRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityGroupAliasRequestWithDefaults() *IdentityGroupAliasRequest {
	this := IdentityGroupAliasRequest{}
	return &this
}

// GetCanonicalId returns the CanonicalId field value if set, zero value otherwise.
func (o *IdentityGroupAliasRequest) GetCanonicalId() string {
	if o == nil || o.CanonicalId == nil {
		var ret string
		return ret
	}
	return *o.CanonicalId
}

// GetCanonicalIdOk returns a tuple with the CanonicalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupAliasRequest) GetCanonicalIdOk() (*string, bool) {
	if o == nil || o.CanonicalId == nil {
		return nil, false
	}
	return o.CanonicalId, true
}

// HasCanonicalId returns a boolean if a field has been set.
func (o *IdentityGroupAliasRequest) HasCanonicalId() bool {
	if o != nil && o.CanonicalId != nil {
		return true
	}

	return false
}

// SetCanonicalId gets a reference to the given string and assigns it to the CanonicalId field.
func (o *IdentityGroupAliasRequest) SetCanonicalId(v string) {
	o.CanonicalId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityGroupAliasRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupAliasRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityGroupAliasRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityGroupAliasRequest) SetId(v string) {
	o.Id = &v
}

// GetMountAccessor returns the MountAccessor field value if set, zero value otherwise.
func (o *IdentityGroupAliasRequest) GetMountAccessor() string {
	if o == nil || o.MountAccessor == nil {
		var ret string
		return ret
	}
	return *o.MountAccessor
}

// GetMountAccessorOk returns a tuple with the MountAccessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupAliasRequest) GetMountAccessorOk() (*string, bool) {
	if o == nil || o.MountAccessor == nil {
		return nil, false
	}
	return o.MountAccessor, true
}

// HasMountAccessor returns a boolean if a field has been set.
func (o *IdentityGroupAliasRequest) HasMountAccessor() bool {
	if o != nil && o.MountAccessor != nil {
		return true
	}

	return false
}

// SetMountAccessor gets a reference to the given string and assigns it to the MountAccessor field.
func (o *IdentityGroupAliasRequest) SetMountAccessor(v string) {
	o.MountAccessor = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityGroupAliasRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGroupAliasRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityGroupAliasRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityGroupAliasRequest) SetName(v string) {
	o.Name = &v
}

func (o IdentityGroupAliasRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanonicalId != nil {
		toSerialize["canonical_id"] = o.CanonicalId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MountAccessor != nil {
		toSerialize["mount_accessor"] = o.MountAccessor
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityGroupAliasRequest struct {
	value *IdentityGroupAliasRequest
	isSet bool
}

func (v NullableIdentityGroupAliasRequest) Get() *IdentityGroupAliasRequest {
	return v.value
}

func (v *NullableIdentityGroupAliasRequest) Set(val *IdentityGroupAliasRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityGroupAliasRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityGroupAliasRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityGroupAliasRequest(val *IdentityGroupAliasRequest) *NullableIdentityGroupAliasRequest {
	return &NullableIdentityGroupAliasRequest{value: val, isSet: true}
}

func (v NullableIdentityGroupAliasRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityGroupAliasRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


