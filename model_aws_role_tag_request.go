/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// AwsRoleTagRequest struct for AwsRoleTagRequest
type AwsRoleTagRequest struct {
	// If set, allows migration of the underlying instance where the client resides. This keys off of pendingTime in the metadata document, so essentially, this disables the client nonce check whenever the instance is migrated to a new host and pendingTime is newer than the previously-remembered time. Use with caution.
	AllowInstanceMigration *bool `json:"allow_instance_migration,omitempty"`
	// If set, only allows a single token to be granted per instance ID. In order to perform a fresh login, the entry in access list for the instance ID needs to be cleared using the 'auth/aws-ec2/identity-accesslist/<instance_id>' endpoint.
	DisallowReauthentication *bool `json:"disallow_reauthentication,omitempty"`
	// Instance ID for which this tag is intended for. If set, the created tag can only be used by the instance with the given ID.
	InstanceId *string `json:"instance_id,omitempty"`
	// If set, specifies the maximum allowed token lifetime.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// Policies to be associated with the tag. If set, must be a subset of the role's policies. If set, but set to an empty value, only the 'default' policy will be given to issued tokens.
	Policies []string `json:"policies,omitempty"`
}

// NewAwsRoleTagRequest instantiates a new AwsRoleTagRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsRoleTagRequest() *AwsRoleTagRequest {
	this := AwsRoleTagRequest{}
	var allowInstanceMigration bool = false
	this.AllowInstanceMigration = &allowInstanceMigration
	var disallowReauthentication bool = false
	this.DisallowReauthentication = &disallowReauthentication
	var maxTtl int32 = 0
	this.MaxTtl = &maxTtl
	return &this
}

// NewAwsRoleTagRequestWithDefaults instantiates a new AwsRoleTagRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsRoleTagRequestWithDefaults() *AwsRoleTagRequest {
	this := AwsRoleTagRequest{}
	var allowInstanceMigration bool = false
	this.AllowInstanceMigration = &allowInstanceMigration
	var disallowReauthentication bool = false
	this.DisallowReauthentication = &disallowReauthentication
	var maxTtl int32 = 0
	this.MaxTtl = &maxTtl
	return &this
}

// GetAllowInstanceMigration returns the AllowInstanceMigration field value if set, zero value otherwise.
func (o *AwsRoleTagRequest) GetAllowInstanceMigration() bool {
	if o == nil || o.AllowInstanceMigration == nil {
		var ret bool
		return ret
	}
	return *o.AllowInstanceMigration
}

// GetAllowInstanceMigrationOk returns a tuple with the AllowInstanceMigration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleTagRequest) GetAllowInstanceMigrationOk() (*bool, bool) {
	if o == nil || o.AllowInstanceMigration == nil {
		return nil, false
	}
	return o.AllowInstanceMigration, true
}

// HasAllowInstanceMigration returns a boolean if a field has been set.
func (o *AwsRoleTagRequest) HasAllowInstanceMigration() bool {
	if o != nil && o.AllowInstanceMigration != nil {
		return true
	}

	return false
}

// SetAllowInstanceMigration gets a reference to the given bool and assigns it to the AllowInstanceMigration field.
func (o *AwsRoleTagRequest) SetAllowInstanceMigration(v bool) {
	o.AllowInstanceMigration = &v
}

// GetDisallowReauthentication returns the DisallowReauthentication field value if set, zero value otherwise.
func (o *AwsRoleTagRequest) GetDisallowReauthentication() bool {
	if o == nil || o.DisallowReauthentication == nil {
		var ret bool
		return ret
	}
	return *o.DisallowReauthentication
}

// GetDisallowReauthenticationOk returns a tuple with the DisallowReauthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleTagRequest) GetDisallowReauthenticationOk() (*bool, bool) {
	if o == nil || o.DisallowReauthentication == nil {
		return nil, false
	}
	return o.DisallowReauthentication, true
}

// HasDisallowReauthentication returns a boolean if a field has been set.
func (o *AwsRoleTagRequest) HasDisallowReauthentication() bool {
	if o != nil && o.DisallowReauthentication != nil {
		return true
	}

	return false
}

// SetDisallowReauthentication gets a reference to the given bool and assigns it to the DisallowReauthentication field.
func (o *AwsRoleTagRequest) SetDisallowReauthentication(v bool) {
	o.DisallowReauthentication = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *AwsRoleTagRequest) GetInstanceId() string {
	if o == nil || o.InstanceId == nil {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleTagRequest) GetInstanceIdOk() (*string, bool) {
	if o == nil || o.InstanceId == nil {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *AwsRoleTagRequest) HasInstanceId() bool {
	if o != nil && o.InstanceId != nil {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *AwsRoleTagRequest) SetInstanceId(v string) {
	o.InstanceId = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *AwsRoleTagRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleTagRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *AwsRoleTagRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *AwsRoleTagRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *AwsRoleTagRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsRoleTagRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *AwsRoleTagRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *AwsRoleTagRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o AwsRoleTagRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowInstanceMigration != nil {
		toSerialize["allow_instance_migration"] = o.AllowInstanceMigration
	}
	if o.DisallowReauthentication != nil {
		toSerialize["disallow_reauthentication"] = o.DisallowReauthentication
	}
	if o.InstanceId != nil {
		toSerialize["instance_id"] = o.InstanceId
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableAwsRoleTagRequest struct {
	value *AwsRoleTagRequest
	isSet bool
}

func (v NullableAwsRoleTagRequest) Get() *AwsRoleTagRequest {
	return v.value
}

func (v *NullableAwsRoleTagRequest) Set(val *AwsRoleTagRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsRoleTagRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsRoleTagRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsRoleTagRequest(val *AwsRoleTagRequest) *NullableAwsRoleTagRequest {
	return &NullableAwsRoleTagRequest{value: val, isSet: true}
}

func (v NullableAwsRoleTagRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsRoleTagRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


