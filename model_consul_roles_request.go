/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// ConsulRolesRequest struct for ConsulRolesRequest
type ConsulRolesRequest struct {
	// Indicates which namespace that the token will be created within. Defaults to 'default'. Available in Consul 1.7 and above.
	ConsulNamespace *string `json:"consul_namespace,omitempty"`
	// List of policies to attach to the token. Either \"consul_policies\" or \"consul_roles\" are required for Consul 1.5 and above, or just \"consul_policies\" if using Consul 1.4.
	ConsulPolicies []string `json:"consul_policies,omitempty"`
	// List of Consul roles to attach to the token. Either \"policies\" or \"consul_roles\" are required for Consul 1.5 and above.
	ConsulRoles []string `json:"consul_roles,omitempty"`
	// Use \"ttl\" instead.
	// Deprecated
	Lease *int32 `json:"lease,omitempty"`
	// Indicates that the token should not be replicated globally and instead be local to the current datacenter. Available in Consul 1.4 and above.
	Local *bool `json:"local,omitempty"`
	// Max TTL for the Consul token created from the role.
	MaxTtl *int32 `json:"max_ttl,omitempty"`
	// List of Node Identities to attach to the token. Available in Consul 1.8.1 or above.
	NodeIdentities []string `json:"node_identities,omitempty"`
	// Indicates which admin partition that the token will be created within. Defaults to 'default'. Available in Consul 1.11 and above.
	Partition *string `json:"partition,omitempty"`
	// Use \"consul_policies\" instead.
	// Deprecated
	Policies []string `json:"policies,omitempty"`
	// Policy document, base64 encoded. Required for 'client' tokens. Required for Consul pre-1.4.
	// Deprecated
	Policy *string `json:"policy,omitempty"`
	// List of Service Identities to attach to the token, separated by semicolons. Available in Consul 1.5 or above.
	ServiceIdentities []string `json:"service_identities,omitempty"`
	// Which type of token to create: 'client' or 'management'. If a 'management' token, the \"policy\", \"policies\", and \"consul_roles\" parameters are not required. Defaults to 'client'.
	// Deprecated
	TokenType *string `json:"token_type,omitempty"`
	// TTL for the Consul token created from the role.
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewConsulRolesRequest instantiates a new ConsulRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsulRolesRequest() *ConsulRolesRequest {
	this := ConsulRolesRequest{}
	var tokenType string = "client"
	this.TokenType = &tokenType
	return &this
}

// NewConsulRolesRequestWithDefaults instantiates a new ConsulRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsulRolesRequestWithDefaults() *ConsulRolesRequest {
	this := ConsulRolesRequest{}
	var tokenType string = "client"
	this.TokenType = &tokenType
	return &this
}

// GetConsulNamespace returns the ConsulNamespace field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetConsulNamespace() string {
	if o == nil || o.ConsulNamespace == nil {
		var ret string
		return ret
	}
	return *o.ConsulNamespace
}

// GetConsulNamespaceOk returns a tuple with the ConsulNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetConsulNamespaceOk() (*string, bool) {
	if o == nil || o.ConsulNamespace == nil {
		return nil, false
	}
	return o.ConsulNamespace, true
}

// HasConsulNamespace returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasConsulNamespace() bool {
	if o != nil && o.ConsulNamespace != nil {
		return true
	}

	return false
}

// SetConsulNamespace gets a reference to the given string and assigns it to the ConsulNamespace field.
func (o *ConsulRolesRequest) SetConsulNamespace(v string) {
	o.ConsulNamespace = &v
}

// GetConsulPolicies returns the ConsulPolicies field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetConsulPolicies() []string {
	if o == nil || o.ConsulPolicies == nil {
		var ret []string
		return ret
	}
	return o.ConsulPolicies
}

// GetConsulPoliciesOk returns a tuple with the ConsulPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetConsulPoliciesOk() ([]string, bool) {
	if o == nil || o.ConsulPolicies == nil {
		return nil, false
	}
	return o.ConsulPolicies, true
}

// HasConsulPolicies returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasConsulPolicies() bool {
	if o != nil && o.ConsulPolicies != nil {
		return true
	}

	return false
}

// SetConsulPolicies gets a reference to the given []string and assigns it to the ConsulPolicies field.
func (o *ConsulRolesRequest) SetConsulPolicies(v []string) {
	o.ConsulPolicies = v
}

// GetConsulRoles returns the ConsulRoles field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetConsulRoles() []string {
	if o == nil || o.ConsulRoles == nil {
		var ret []string
		return ret
	}
	return o.ConsulRoles
}

// GetConsulRolesOk returns a tuple with the ConsulRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetConsulRolesOk() ([]string, bool) {
	if o == nil || o.ConsulRoles == nil {
		return nil, false
	}
	return o.ConsulRoles, true
}

// HasConsulRoles returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasConsulRoles() bool {
	if o != nil && o.ConsulRoles != nil {
		return true
	}

	return false
}

// SetConsulRoles gets a reference to the given []string and assigns it to the ConsulRoles field.
func (o *ConsulRolesRequest) SetConsulRoles(v []string) {
	o.ConsulRoles = v
}

// GetLease returns the Lease field value if set, zero value otherwise.
// Deprecated
func (o *ConsulRolesRequest) GetLease() int32 {
	if o == nil || o.Lease == nil {
		var ret int32
		return ret
	}
	return *o.Lease
}

// GetLeaseOk returns a tuple with the Lease field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ConsulRolesRequest) GetLeaseOk() (*int32, bool) {
	if o == nil || o.Lease == nil {
		return nil, false
	}
	return o.Lease, true
}

// HasLease returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasLease() bool {
	if o != nil && o.Lease != nil {
		return true
	}

	return false
}

// SetLease gets a reference to the given int32 and assigns it to the Lease field.
// Deprecated
func (o *ConsulRolesRequest) SetLease(v int32) {
	o.Lease = &v
}

// GetLocal returns the Local field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetLocal() bool {
	if o == nil || o.Local == nil {
		var ret bool
		return ret
	}
	return *o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetLocalOk() (*bool, bool) {
	if o == nil || o.Local == nil {
		return nil, false
	}
	return o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasLocal() bool {
	if o != nil && o.Local != nil {
		return true
	}

	return false
}

// SetLocal gets a reference to the given bool and assigns it to the Local field.
func (o *ConsulRolesRequest) SetLocal(v bool) {
	o.Local = &v
}

// GetMaxTtl returns the MaxTtl field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetMaxTtl() int32 {
	if o == nil || o.MaxTtl == nil {
		var ret int32
		return ret
	}
	return *o.MaxTtl
}

// GetMaxTtlOk returns a tuple with the MaxTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetMaxTtlOk() (*int32, bool) {
	if o == nil || o.MaxTtl == nil {
		return nil, false
	}
	return o.MaxTtl, true
}

// HasMaxTtl returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasMaxTtl() bool {
	if o != nil && o.MaxTtl != nil {
		return true
	}

	return false
}

// SetMaxTtl gets a reference to the given int32 and assigns it to the MaxTtl field.
func (o *ConsulRolesRequest) SetMaxTtl(v int32) {
	o.MaxTtl = &v
}

// GetNodeIdentities returns the NodeIdentities field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetNodeIdentities() []string {
	if o == nil || o.NodeIdentities == nil {
		var ret []string
		return ret
	}
	return o.NodeIdentities
}

// GetNodeIdentitiesOk returns a tuple with the NodeIdentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetNodeIdentitiesOk() ([]string, bool) {
	if o == nil || o.NodeIdentities == nil {
		return nil, false
	}
	return o.NodeIdentities, true
}

// HasNodeIdentities returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasNodeIdentities() bool {
	if o != nil && o.NodeIdentities != nil {
		return true
	}

	return false
}

// SetNodeIdentities gets a reference to the given []string and assigns it to the NodeIdentities field.
func (o *ConsulRolesRequest) SetNodeIdentities(v []string) {
	o.NodeIdentities = v
}

// GetPartition returns the Partition field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetPartition() string {
	if o == nil || o.Partition == nil {
		var ret string
		return ret
	}
	return *o.Partition
}

// GetPartitionOk returns a tuple with the Partition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetPartitionOk() (*string, bool) {
	if o == nil || o.Partition == nil {
		return nil, false
	}
	return o.Partition, true
}

// HasPartition returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasPartition() bool {
	if o != nil && o.Partition != nil {
		return true
	}

	return false
}

// SetPartition gets a reference to the given string and assigns it to the Partition field.
func (o *ConsulRolesRequest) SetPartition(v string) {
	o.Partition = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
// Deprecated
func (o *ConsulRolesRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ConsulRolesRequest) GetPoliciesOk() ([]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
// Deprecated
func (o *ConsulRolesRequest) SetPolicies(v []string) {
	o.Policies = v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
// Deprecated
func (o *ConsulRolesRequest) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ConsulRolesRequest) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
// Deprecated
func (o *ConsulRolesRequest) SetPolicy(v string) {
	o.Policy = &v
}

// GetServiceIdentities returns the ServiceIdentities field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetServiceIdentities() []string {
	if o == nil || o.ServiceIdentities == nil {
		var ret []string
		return ret
	}
	return o.ServiceIdentities
}

// GetServiceIdentitiesOk returns a tuple with the ServiceIdentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetServiceIdentitiesOk() ([]string, bool) {
	if o == nil || o.ServiceIdentities == nil {
		return nil, false
	}
	return o.ServiceIdentities, true
}

// HasServiceIdentities returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasServiceIdentities() bool {
	if o != nil && o.ServiceIdentities != nil {
		return true
	}

	return false
}

// SetServiceIdentities gets a reference to the given []string and assigns it to the ServiceIdentities field.
func (o *ConsulRolesRequest) SetServiceIdentities(v []string) {
	o.ServiceIdentities = v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
// Deprecated
func (o *ConsulRolesRequest) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ConsulRolesRequest) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
// Deprecated
func (o *ConsulRolesRequest) SetTokenType(v string) {
	o.TokenType = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *ConsulRolesRequest) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsulRolesRequest) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *ConsulRolesRequest) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *ConsulRolesRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o ConsulRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConsulNamespace != nil {
		toSerialize["consul_namespace"] = o.ConsulNamespace
	}
	if o.ConsulPolicies != nil {
		toSerialize["consul_policies"] = o.ConsulPolicies
	}
	if o.ConsulRoles != nil {
		toSerialize["consul_roles"] = o.ConsulRoles
	}
	if o.Lease != nil {
		toSerialize["lease"] = o.Lease
	}
	if o.Local != nil {
		toSerialize["local"] = o.Local
	}
	if o.MaxTtl != nil {
		toSerialize["max_ttl"] = o.MaxTtl
	}
	if o.NodeIdentities != nil {
		toSerialize["node_identities"] = o.NodeIdentities
	}
	if o.Partition != nil {
		toSerialize["partition"] = o.Partition
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	if o.ServiceIdentities != nil {
		toSerialize["service_identities"] = o.ServiceIdentities
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableConsulRolesRequest struct {
	value *ConsulRolesRequest
	isSet bool
}

func (v NullableConsulRolesRequest) Get() *ConsulRolesRequest {
	return v.value
}

func (v *NullableConsulRolesRequest) Set(val *ConsulRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConsulRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConsulRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsulRolesRequest(val *ConsulRolesRequest) *NullableConsulRolesRequest {
	return &NullableConsulRolesRequest{value: val, isSet: true}
}

func (v NullableConsulRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsulRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


