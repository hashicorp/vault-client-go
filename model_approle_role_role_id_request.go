/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// ApproleRoleRoleIdRequest struct for ApproleRoleRoleIdRequest
type ApproleRoleRoleIdRequest struct {
	// Identifier of the role. Defaults to a UUID.
	RoleId *string `json:"role_id,omitempty"`
}

// NewApproleRoleRoleIdRequest instantiates a new ApproleRoleRoleIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleRoleIdRequest() *ApproleRoleRoleIdRequest {
	this := ApproleRoleRoleIdRequest{}
	return &this
}

// NewApproleRoleRoleIdRequestWithDefaults instantiates a new ApproleRoleRoleIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleRoleIdRequestWithDefaults() *ApproleRoleRoleIdRequest {
	this := ApproleRoleRoleIdRequest{}
	return &this
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *ApproleRoleRoleIdRequest) GetRoleId() string {
	if o == nil || o.RoleId == nil {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleRoleIdRequest) GetRoleIdOk() (*string, bool) {
	if o == nil || o.RoleId == nil {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *ApproleRoleRoleIdRequest) HasRoleId() bool {
	if o != nil && o.RoleId != nil {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *ApproleRoleRoleIdRequest) SetRoleId(v string) {
	o.RoleId = &v
}

func (o ApproleRoleRoleIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RoleId != nil {
		toSerialize["role_id"] = o.RoleId
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleRoleIdRequest struct {
	value *ApproleRoleRoleIdRequest
	isSet bool
}

func (v NullableApproleRoleRoleIdRequest) Get() *ApproleRoleRoleIdRequest {
	return v.value
}

func (v *NullableApproleRoleRoleIdRequest) Set(val *ApproleRoleRoleIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleRoleIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleRoleIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleRoleIdRequest(val *ApproleRoleRoleIdRequest) *NullableApproleRoleRoleIdRequest {
	return &NullableApproleRoleRoleIdRequest{value: val, isSet: true}
}

func (v NullableApproleRoleRoleIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleRoleIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


