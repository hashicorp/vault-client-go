/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// ApproleRoleTokenBoundCidrsRequest struct for ApproleRoleTokenBoundCidrsRequest
type ApproleRoleTokenBoundCidrsRequest struct {
	// Comma separated string or JSON list of CIDR blocks. If set, specifies the blocks of IP addresses which are allowed to use the generated token.
	TokenBoundCidrs []string `json:"token_bound_cidrs,omitempty"`
}

// NewApproleRoleTokenBoundCidrsRequest instantiates a new ApproleRoleTokenBoundCidrsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproleRoleTokenBoundCidrsRequest() *ApproleRoleTokenBoundCidrsRequest {
	this := ApproleRoleTokenBoundCidrsRequest{}
	return &this
}

// NewApproleRoleTokenBoundCidrsRequestWithDefaults instantiates a new ApproleRoleTokenBoundCidrsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproleRoleTokenBoundCidrsRequestWithDefaults() *ApproleRoleTokenBoundCidrsRequest {
	this := ApproleRoleTokenBoundCidrsRequest{}
	return &this
}

// GetTokenBoundCidrs returns the TokenBoundCidrs field value if set, zero value otherwise.
func (o *ApproleRoleTokenBoundCidrsRequest) GetTokenBoundCidrs() []string {
	if o == nil || o.TokenBoundCidrs == nil {
		var ret []string
		return ret
	}
	return o.TokenBoundCidrs
}

// GetTokenBoundCidrsOk returns a tuple with the TokenBoundCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproleRoleTokenBoundCidrsRequest) GetTokenBoundCidrsOk() ([]string, bool) {
	if o == nil || o.TokenBoundCidrs == nil {
		return nil, false
	}
	return o.TokenBoundCidrs, true
}

// HasTokenBoundCidrs returns a boolean if a field has been set.
func (o *ApproleRoleTokenBoundCidrsRequest) HasTokenBoundCidrs() bool {
	if o != nil && o.TokenBoundCidrs != nil {
		return true
	}

	return false
}

// SetTokenBoundCidrs gets a reference to the given []string and assigns it to the TokenBoundCidrs field.
func (o *ApproleRoleTokenBoundCidrsRequest) SetTokenBoundCidrs(v []string) {
	o.TokenBoundCidrs = v
}

func (o ApproleRoleTokenBoundCidrsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TokenBoundCidrs != nil {
		toSerialize["token_bound_cidrs"] = o.TokenBoundCidrs
	}
	return json.Marshal(toSerialize)
}

type NullableApproleRoleTokenBoundCidrsRequest struct {
	value *ApproleRoleTokenBoundCidrsRequest
	isSet bool
}

func (v NullableApproleRoleTokenBoundCidrsRequest) Get() *ApproleRoleTokenBoundCidrsRequest {
	return v.value
}

func (v *NullableApproleRoleTokenBoundCidrsRequest) Set(val *ApproleRoleTokenBoundCidrsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApproleRoleTokenBoundCidrsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApproleRoleTokenBoundCidrsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproleRoleTokenBoundCidrsRequest(val *ApproleRoleTokenBoundCidrsRequest) *NullableApproleRoleTokenBoundCidrsRequest {
	return &NullableApproleRoleTokenBoundCidrsRequest{value: val, isSet: true}
}

func (v NullableApproleRoleTokenBoundCidrsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproleRoleTokenBoundCidrsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


