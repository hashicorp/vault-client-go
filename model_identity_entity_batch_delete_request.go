/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// IdentityEntityBatchDeleteRequest struct for IdentityEntityBatchDeleteRequest
type IdentityEntityBatchDeleteRequest struct {
	// Entity IDs to delete
	EntityIds []string `json:"entity_ids,omitempty"`
}

// NewIdentityEntityBatchDeleteRequest instantiates a new IdentityEntityBatchDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEntityBatchDeleteRequest() *IdentityEntityBatchDeleteRequest {
	this := IdentityEntityBatchDeleteRequest{}
	return &this
}

// NewIdentityEntityBatchDeleteRequestWithDefaults instantiates a new IdentityEntityBatchDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEntityBatchDeleteRequestWithDefaults() *IdentityEntityBatchDeleteRequest {
	this := IdentityEntityBatchDeleteRequest{}
	return &this
}

// GetEntityIds returns the EntityIds field value if set, zero value otherwise.
func (o *IdentityEntityBatchDeleteRequest) GetEntityIds() []string {
	if o == nil || o.EntityIds == nil {
		var ret []string
		return ret
	}
	return o.EntityIds
}

// GetEntityIdsOk returns a tuple with the EntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEntityBatchDeleteRequest) GetEntityIdsOk() ([]string, bool) {
	if o == nil || o.EntityIds == nil {
		return nil, false
	}
	return o.EntityIds, true
}

// HasEntityIds returns a boolean if a field has been set.
func (o *IdentityEntityBatchDeleteRequest) HasEntityIds() bool {
	if o != nil && o.EntityIds != nil {
		return true
	}

	return false
}

// SetEntityIds gets a reference to the given []string and assigns it to the EntityIds field.
func (o *IdentityEntityBatchDeleteRequest) SetEntityIds(v []string) {
	o.EntityIds = v
}

func (o IdentityEntityBatchDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntityIds != nil {
		toSerialize["entity_ids"] = o.EntityIds
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityEntityBatchDeleteRequest struct {
	value *IdentityEntityBatchDeleteRequest
	isSet bool
}

func (v NullableIdentityEntityBatchDeleteRequest) Get() *IdentityEntityBatchDeleteRequest {
	return v.value
}

func (v *NullableIdentityEntityBatchDeleteRequest) Set(val *IdentityEntityBatchDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEntityBatchDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEntityBatchDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEntityBatchDeleteRequest(val *IdentityEntityBatchDeleteRequest) *NullableIdentityEntityBatchDeleteRequest {
	return &NullableIdentityEntityBatchDeleteRequest{value: val, isSet: true}
}

func (v NullableIdentityEntityBatchDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEntityBatchDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


