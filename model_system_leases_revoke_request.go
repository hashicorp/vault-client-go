/*
HashiCorp Vault API

HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

API version: 1.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vault

import (
	"encoding/json"
)

// SystemLeasesRevokeRequest struct for SystemLeasesRevokeRequest
type SystemLeasesRevokeRequest struct {
	// The lease identifier to renew. This is included with a lease.
	LeaseId *string `json:"lease_id,omitempty"`
	// Whether or not to perform the revocation synchronously
	Sync *bool `json:"sync,omitempty"`
	// The lease identifier to renew. This is included with a lease.
	UrlLeaseId *string `json:"url_lease_id,omitempty"`
}

// NewSystemLeasesRevokeRequest instantiates a new SystemLeasesRevokeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemLeasesRevokeRequest() *SystemLeasesRevokeRequest {
	this := SystemLeasesRevokeRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// NewSystemLeasesRevokeRequestWithDefaults instantiates a new SystemLeasesRevokeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemLeasesRevokeRequestWithDefaults() *SystemLeasesRevokeRequest {
	this := SystemLeasesRevokeRequest{}
	var sync bool = true
	this.Sync = &sync
	return &this
}

// GetLeaseId returns the LeaseId field value if set, zero value otherwise.
func (o *SystemLeasesRevokeRequest) GetLeaseId() string {
	if o == nil || o.LeaseId == nil {
		var ret string
		return ret
	}
	return *o.LeaseId
}

// GetLeaseIdOk returns a tuple with the LeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRevokeRequest) GetLeaseIdOk() (*string, bool) {
	if o == nil || o.LeaseId == nil {
		return nil, false
	}
	return o.LeaseId, true
}

// HasLeaseId returns a boolean if a field has been set.
func (o *SystemLeasesRevokeRequest) HasLeaseId() bool {
	if o != nil && o.LeaseId != nil {
		return true
	}

	return false
}

// SetLeaseId gets a reference to the given string and assigns it to the LeaseId field.
func (o *SystemLeasesRevokeRequest) SetLeaseId(v string) {
	o.LeaseId = &v
}

// GetSync returns the Sync field value if set, zero value otherwise.
func (o *SystemLeasesRevokeRequest) GetSync() bool {
	if o == nil || o.Sync == nil {
		var ret bool
		return ret
	}
	return *o.Sync
}

// GetSyncOk returns a tuple with the Sync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRevokeRequest) GetSyncOk() (*bool, bool) {
	if o == nil || o.Sync == nil {
		return nil, false
	}
	return o.Sync, true
}

// HasSync returns a boolean if a field has been set.
func (o *SystemLeasesRevokeRequest) HasSync() bool {
	if o != nil && o.Sync != nil {
		return true
	}

	return false
}

// SetSync gets a reference to the given bool and assigns it to the Sync field.
func (o *SystemLeasesRevokeRequest) SetSync(v bool) {
	o.Sync = &v
}

// GetUrlLeaseId returns the UrlLeaseId field value if set, zero value otherwise.
func (o *SystemLeasesRevokeRequest) GetUrlLeaseId() string {
	if o == nil || o.UrlLeaseId == nil {
		var ret string
		return ret
	}
	return *o.UrlLeaseId
}

// GetUrlLeaseIdOk returns a tuple with the UrlLeaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemLeasesRevokeRequest) GetUrlLeaseIdOk() (*string, bool) {
	if o == nil || o.UrlLeaseId == nil {
		return nil, false
	}
	return o.UrlLeaseId, true
}

// HasUrlLeaseId returns a boolean if a field has been set.
func (o *SystemLeasesRevokeRequest) HasUrlLeaseId() bool {
	if o != nil && o.UrlLeaseId != nil {
		return true
	}

	return false
}

// SetUrlLeaseId gets a reference to the given string and assigns it to the UrlLeaseId field.
func (o *SystemLeasesRevokeRequest) SetUrlLeaseId(v string) {
	o.UrlLeaseId = &v
}

func (o SystemLeasesRevokeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LeaseId != nil {
		toSerialize["lease_id"] = o.LeaseId
	}
	if o.Sync != nil {
		toSerialize["sync"] = o.Sync
	}
	if o.UrlLeaseId != nil {
		toSerialize["url_lease_id"] = o.UrlLeaseId
	}
	return json.Marshal(toSerialize)
}

type NullableSystemLeasesRevokeRequest struct {
	value *SystemLeasesRevokeRequest
	isSet bool
}

func (v NullableSystemLeasesRevokeRequest) Get() *SystemLeasesRevokeRequest {
	return v.value
}

func (v *NullableSystemLeasesRevokeRequest) Set(val *SystemLeasesRevokeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemLeasesRevokeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemLeasesRevokeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemLeasesRevokeRequest(val *SystemLeasesRevokeRequest) *NullableSystemLeasesRevokeRequest {
	return &NullableSystemLeasesRevokeRequest{value: val, isSet: true}
}

func (v NullableSystemLeasesRevokeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemLeasesRevokeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


